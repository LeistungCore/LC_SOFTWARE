

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 12 17:49:33 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,space=0,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    22                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    23                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    26                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=2
    27                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,space=0,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Generated 11/01/2024 GMT
    36                           ; 
    37                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F15224 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0008                     bsr             equ	8
    70     0005                     fsr0h           equ	5
    71     0004                     fsr0l           equ	4
    72     0007                     fsr1h           equ	7
    73     0006                     fsr1l           equ	6
    74     0000                     indf            equ	0
    75     0000                     indf0           equ	0
    76     0001                     indf1           equ	1
    77     000B                     intcon          equ	11
    78     0002                     pc              equ	2
    79     0002                     pcl             equ	2
    80     000A                     pclath          equ	10
    81     0003                     status          equ	3
    82     0009                     wreg            equ	9
    83     0000                     INDF0           equ	0	;# 
    84     0001                     INDF1           equ	1	;# 
    85     0002                     PCL             equ	2	;# 
    86     0003                     STATUS          equ	3	;# 
    87     0004                     FSR0L           equ	4	;# 
    88     0005                     FSR0H           equ	5	;# 
    89     0006                     FSR1L           equ	6	;# 
    90     0007                     FSR1H           equ	7	;# 
    91     0008                     BSR             equ	8	;# 
    92     0009                     WREG            equ	9	;# 
    93     000A                     PCLATH          equ	10	;# 
    94     000B                     INTCON          equ	11	;# 
    95     000C                     PORTA           equ	12	;# 
    96     000E                     PORTC           equ	14	;# 
    97     0012                     TRISA           equ	18	;# 
    98     0014                     TRISC           equ	20	;# 
    99     0018                     LATA            equ	24	;# 
   100     001A                     LATC            equ	26	;# 
   101     009A                     CPCON           equ	154	;# 
   102     009B                     ADRES           equ	155	;# 
   103     009B                     ADRESL          equ	155	;# 
   104     009C                     ADRESH          equ	156	;# 
   105     009D                     ADCON0          equ	157	;# 
   106     009E                     ADCON1          equ	158	;# 
   107     009F                     ADACT           equ	159	;# 
   108     010E                     RC0I2C          equ	270	;# 
   109     010F                     RC1I2C          equ	271	;# 
   110     0119                     RC1REG          equ	281	;# 
   111     011A                     TX1REG          equ	282	;# 
   112     011B                     SP1BRG          equ	283	;# 
   113     011B                     SP1BRGL         equ	283	;# 
   114     011C                     SP1BRGH         equ	284	;# 
   115     011D                     RC1STA          equ	285	;# 
   116     011E                     TX1STA          equ	286	;# 
   117     011F                     BAUD1CON        equ	287	;# 
   118     018C                     SSP1BUF         equ	396	;# 
   119     018D                     SSP1ADD         equ	397	;# 
   120     018E                     SSP1MSK         equ	398	;# 
   121     018F                     SSP1STAT        equ	399	;# 
   122     0190                     SSP1CON1        equ	400	;# 
   123     0191                     SSP1CON2        equ	401	;# 
   124     0192                     SSP1CON3        equ	402	;# 
   125     020C                     TMR1            equ	524	;# 
   126     020C                     TMR1L           equ	524	;# 
   127     020D                     TMR1H           equ	525	;# 
   128     020E                     T1CON           equ	526	;# 
   129     020E                     TMR1CON         equ	526	;# 
   130     020F                     T1GCON          equ	527	;# 
   131     020F                     TMR1GCON        equ	527	;# 
   132     0210                     T1GATE          equ	528	;# 
   133     0210                     TMR1GATE        equ	528	;# 
   134     0211                     T1CLK           equ	529	;# 
   135     0211                     TMR1CLK         equ	529	;# 
   136     0211                     PR1             equ	529	;# 
   137     028C                     T2TMR           equ	652	;# 
   138     028C                     TMR2            equ	652	;# 
   139     028D                     T2PR            equ	653	;# 
   140     028D                     PR2             equ	653	;# 
   141     028E                     T2CON           equ	654	;# 
   142     028F                     T2HLT           equ	655	;# 
   143     0290                     T2CLKCON        equ	656	;# 
   144     0291                     T2RST           equ	657	;# 
   145     030C                     CCPR1           equ	780	;# 
   146     030C                     CCPR1L          equ	780	;# 
   147     030D                     CCPR1H          equ	781	;# 
   148     030E                     CCP1CON         equ	782	;# 
   149     030F                     CCP1CAP         equ	783	;# 
   150     0310                     CCPR2           equ	784	;# 
   151     0310                     CCPR2L          equ	784	;# 
   152     0311                     CCPR2H          equ	785	;# 
   153     0312                     CCP2CON         equ	786	;# 
   154     0313                     CCP2CAP         equ	787	;# 
   155     0314                     PWM3DC          equ	788	;# 
   156     0314                     PWM3DCL         equ	788	;# 
   157     0315                     PWM3DCH         equ	789	;# 
   158     0316                     PWM3CON         equ	790	;# 
   159     0318                     PWM4DC          equ	792	;# 
   160     0318                     PWM4DCL         equ	792	;# 
   161     0319                     PWM4DCH         equ	793	;# 
   162     031A                     PWM4CON         equ	794	;# 
   163     059C                     TMR0L           equ	1436	;# 
   164     059C                     TMR0            equ	1436	;# 
   165     059D                     TMR0H           equ	1437	;# 
   166     059D                     PR0             equ	1437	;# 
   167     059E                     T0CON0          equ	1438	;# 
   168     059F                     T0CON1          equ	1439	;# 
   169     070C                     PIR0            equ	1804	;# 
   170     070D                     PIR1            equ	1805	;# 
   171     070E                     PIR2            equ	1806	;# 
   172     0716                     PIE0            equ	1814	;# 
   173     0717                     PIE1            equ	1815	;# 
   174     0718                     PIE2            equ	1816	;# 
   175     080C                     WDTCON          equ	2060	;# 
   176     0811                     BORCON          equ	2065	;# 
   177     0813                     PCON0           equ	2067	;# 
   178     0814                     PCON1           equ	2068	;# 
   179     081A                     NVMADR          equ	2074	;# 
   180     081A                     NVMADRL         equ	2074	;# 
   181     081B                     NVMADRH         equ	2075	;# 
   182     081C                     NVMDAT          equ	2076	;# 
   183     081C                     NVMDATL         equ	2076	;# 
   184     081D                     NVMDATH         equ	2077	;# 
   185     081E                     NVMCON1         equ	2078	;# 
   186     081F                     NVMCON2         equ	2079	;# 
   187     088E                     OSCCON          equ	2190	;# 
   188     0890                     OSCSTAT         equ	2192	;# 
   189     0891                     OSCEN           equ	2193	;# 
   190     0892                     OSCTUNE         equ	2194	;# 
   191     0893                     OSCFRQ          equ	2195	;# 
   192     090C                     FVRCON          equ	2316	;# 
   193     1E8F                     PPSLOCK         equ	7823	;# 
   194     1E90                     INTPPS          equ	7824	;# 
   195     1E91                     T0CKIPPS        equ	7825	;# 
   196     1E92                     T1CKIPPS        equ	7826	;# 
   197     1E93                     T1GPPS          equ	7827	;# 
   198     1E9C                     T2INPPS         equ	7836	;# 
   199     1EA1                     CCP1PPS         equ	7841	;# 
   200     1EA2                     CCP2PPS         equ	7842	;# 
   201     1EC3                     ADACTPPS        equ	7875	;# 
   202     1EC5                     SSP1CLKPPS      equ	7877	;# 
   203     1EC6                     SSP1DATPPS      equ	7878	;# 
   204     1EC7                     SSP1SSPPS       equ	7879	;# 
   205     1ECB                     RX1PPS          equ	7883	;# 
   206     1ECB                     RX1DTPPS        equ	7883	;# 
   207     1ECB                     RXPPS           equ	7883	;# 
   208     1ECC                     CK1PPS          equ	7884	;# 
   209     1ECC                     TX1CKPPS        equ	7884	;# 
   210     1ECC                     CKPPS           equ	7884	;# 
   211     1F10                     RA0PPS          equ	7952	;# 
   212     1F11                     RA1PPS          equ	7953	;# 
   213     1F12                     RA2PPS          equ	7954	;# 
   214     1F14                     RA4PPS          equ	7956	;# 
   215     1F15                     RA5PPS          equ	7957	;# 
   216     1F20                     RC0PPS          equ	7968	;# 
   217     1F21                     RC1PPS          equ	7969	;# 
   218     1F22                     RC2PPS          equ	7970	;# 
   219     1F23                     RC3PPS          equ	7971	;# 
   220     1F24                     RC4PPS          equ	7972	;# 
   221     1F25                     RC5PPS          equ	7973	;# 
   222     1F38                     ANSELA          equ	7992	;# 
   223     1F39                     WPUA            equ	7993	;# 
   224     1F3A                     ODCONA          equ	7994	;# 
   225     1F3B                     SLRCONA         equ	7995	;# 
   226     1F3C                     INLVLA          equ	7996	;# 
   227     1F3D                     IOCAP           equ	7997	;# 
   228     1F3E                     IOCAN           equ	7998	;# 
   229     1F3F                     IOCAF           equ	7999	;# 
   230     1F4E                     ANSELC          equ	8014	;# 
   231     1F4F                     WPUC            equ	8015	;# 
   232     1F50                     ODCONC          equ	8016	;# 
   233     1F51                     SLRCONC         equ	8017	;# 
   234     1F52                     INLVLC          equ	8018	;# 
   235     1F53                     IOCCP           equ	8019	;# 
   236     1F54                     IOCCN           equ	8020	;# 
   237     1F55                     IOCCF           equ	8021	;# 
   238     1FE4                     STATUS_SHAD     equ	8164	;# 
   239     1FE5                     WREG_SHAD       equ	8165	;# 
   240     1FE6                     BSR_SHAD        equ	8166	;# 
   241     1FE7                     PCLATH_SHAD     equ	8167	;# 
   242     1FE8                     FSR0_SHAD       equ	8168	;# 
   243     1FE8                     FSR0L_SHAD      equ	8168	;# 
   244     1FE9                     FSR0H_SHAD      equ	8169	;# 
   245     1FEA                     FSR1L_SHAD      equ	8170	;# 
   246     1FEB                     FSR1H_SHAD      equ	8171	;# 
   247     1FED                     STKPTR          equ	8173	;# 
   248     1FEE                     TOSL            equ	8174	;# 
   249     1FEF                     TOSH            equ	8175	;# 
   250                           
   251                           	psect	idataBANK0
   252     05B2                     __pidataBANK0:
   253                           
   254                           ;initializer for _max_adc
   255     05B2  3484               	retlw	132
   256     05B3  3403               	retlw	3
   257                           
   258                           ;initializer for _SecondcycleDelay
   259     05B4  34F2               	retlw	242
   260     05B5  3400               	retlw	0
   261                           
   262                           	psect	stringtext1
   263     0100                     __pstringtext1:
   264     0100                     _ARR:
   265     0100  3400               	retlw	0
   266     0101  3400               	retlw	0
   267     0102  3400               	retlw	0
   268     0103  3400               	retlw	0
   269     0104  3400               	retlw	0
   270     0105  3400               	retlw	0
   271     0106  3400               	retlw	0
   272     0107  3400               	retlw	0
   273     0108  3400               	retlw	0
   274     0109  3400               	retlw	0
   275     010A  3400               	retlw	0
   276     010B  3400               	retlw	0
   277     010C  3400               	retlw	0
   278     010D  3400               	retlw	0
   279     010E  3400               	retlw	0
   280     010F  3400               	retlw	0
   281     0110  3400               	retlw	0
   282     0111  3400               	retlw	0
   283     0112  3400               	retlw	0
   284     0113  3400               	retlw	0
   285     0114  3400               	retlw	0
   286     0115  3400               	retlw	0
   287     0116  3400               	retlw	0
   288     0117  3400               	retlw	0
   289     0118  3400               	retlw	0
   290     0119  3400               	retlw	0
   291     011A  3400               	retlw	0
   292     011B  3400               	retlw	0
   293     011C  3400               	retlw	0
   294     011D  3400               	retlw	0
   295     011E  3400               	retlw	0
   296     011F  3400               	retlw	0
   297     0120  3400               	retlw	0
   298     0121  3400               	retlw	0
   299     0122  3400               	retlw	0
   300     0123  3400               	retlw	0
   301     0124  3400               	retlw	0
   302     0125  3400               	retlw	0
   303     0126  3400               	retlw	0
   304     0127  3400               	retlw	0
   305     0128  3400               	retlw	0
   306     0129  3400               	retlw	0
   307     012A  3400               	retlw	0
   308     012B  3400               	retlw	0
   309     012C  3400               	retlw	0
   310     012D  3400               	retlw	0
   311     012E  3400               	retlw	0
   312     012F  3400               	retlw	0
   313     0130  3400               	retlw	0
   314     0131  3400               	retlw	0
   315     0132  3400               	retlw	0
   316     0133  3400               	retlw	0
   317     0134  3400               	retlw	0
   318     0135  3400               	retlw	0
   319     0136  3400               	retlw	0
   320     0137  3400               	retlw	0
   321     0138  3400               	retlw	0
   322     0139  3400               	retlw	0
   323     013A  3400               	retlw	0
   324     013B  3400               	retlw	0
   325     013C  3400               	retlw	0
   326     013D  3400               	retlw	0
   327     013E  3400               	retlw	0
   328     013F  3400               	retlw	0
   329     0140  3400               	retlw	0
   330     0141  3400               	retlw	0
   331     0142  3400               	retlw	0
   332     0143  3400               	retlw	0
   333     0144  3400               	retlw	0
   334     0145  3400               	retlw	0
   335     0146  3400               	retlw	0
   336     0147  3400               	retlw	0
   337     0148  3400               	retlw	0
   338     0149  3400               	retlw	0
   339     014A  3400               	retlw	0
   340     014B  3400               	retlw	0
   341     014C  3400               	retlw	0
   342     014D  3400               	retlw	0
   343     014E  3400               	retlw	0
   344     014F  3400               	retlw	0
   345     0150  3400               	retlw	0
   346     0151  3400               	retlw	0
   347     0152  3400               	retlw	0
   348     0153  3400               	retlw	0
   349     0154  3400               	retlw	0
   350     0155  3400               	retlw	0
   351     0156  3400               	retlw	0
   352     0157  3400               	retlw	0
   353     0158  3400               	retlw	0
   354     0159  3400               	retlw	0
   355     015A  3400               	retlw	0
   356     015B  3400               	retlw	0
   357     015C  3400               	retlw	0
   358     015D  3400               	retlw	0
   359     015E  3400               	retlw	0
   360     015F  3400               	retlw	0
   361     0160  3400               	retlw	0
   362     0161  3400               	retlw	0
   363     0162  3400               	retlw	0
   364     0163  3400               	retlw	0
   365     0164  3400               	retlw	0
   366     0165  3400               	retlw	0
   367     0166  3400               	retlw	0
   368     0167  3400               	retlw	0
   369     0168  3400               	retlw	0
   370     0169  3400               	retlw	0
   371     016A  3400               	retlw	0
   372     016B  3400               	retlw	0
   373     016C  3400               	retlw	0
   374     016D  3400               	retlw	0
   375     016E  3400               	retlw	0
   376     016F  3400               	retlw	0
   377     0170  3400               	retlw	0
   378     0171  3400               	retlw	0
   379     0172  3400               	retlw	0
   380     0173  3400               	retlw	0
   381     0174  3400               	retlw	0
   382     0175  3400               	retlw	0
   383     0176  3400               	retlw	0
   384     0177  3400               	retlw	0
   385     0178  3400               	retlw	0
   386     0179  3400               	retlw	0
   387     017A  3400               	retlw	0
   388     017B  3400               	retlw	0
   389     017C  3400               	retlw	0
   390     017D  3400               	retlw	0
   391     017E  3400               	retlw	0
   392     017F  3400               	retlw	0
   393     0180  3400               	retlw	0
   394     0181  3400               	retlw	0
   395     0182  3400               	retlw	0
   396     0183  3400               	retlw	0
   397     0184  3400               	retlw	0
   398     0185  3400               	retlw	0
   399     0186  3400               	retlw	0
   400     0187  3400               	retlw	0
   401     0188  3400               	retlw	0
   402     0189  3400               	retlw	0
   403     018A  3400               	retlw	0
   404     018B  3400               	retlw	0
   405     018C  3400               	retlw	0
   406     018D  3400               	retlw	0
   407     018E  3400               	retlw	0
   408     018F  3400               	retlw	0
   409     0190  3400               	retlw	0
   410     0191  3400               	retlw	0
   411     0192  3400               	retlw	0
   412     0193  3400               	retlw	0
   413     0194  3400               	retlw	0
   414     0195  3400               	retlw	0
   415     0196  3400               	retlw	0
   416     0197  3400               	retlw	0
   417     0198  3400               	retlw	0
   418     0199  3400               	retlw	0
   419     019A  3400               	retlw	0
   420     019B  3400               	retlw	0
   421     019C  3400               	retlw	0
   422     019D  3400               	retlw	0
   423     019E  3400               	retlw	0
   424     019F  3400               	retlw	0
   425     01A0  3400               	retlw	0
   426     01A1  3400               	retlw	0
   427     01A2  3400               	retlw	0
   428     01A3  3400               	retlw	0
   429     01A4  3400               	retlw	0
   430     01A5  3400               	retlw	0
   431     01A6  3400               	retlw	0
   432     01A7  3400               	retlw	0
   433     01A8  3400               	retlw	0
   434     01A9  3400               	retlw	0
   435     01AA  3400               	retlw	0
   436     01AB  3400               	retlw	0
   437     01AC  3400               	retlw	0
   438     01AD  3400               	retlw	0
   439     01AE  3400               	retlw	0
   440     01AF  3400               	retlw	0
   441     01B0  3400               	retlw	0
   442     01B1  3400               	retlw	0
   443     01B2  3400               	retlw	0
   444     01B3  3400               	retlw	0
   445     01B4  3400               	retlw	0
   446     01B5  3400               	retlw	0
   447     01B6  3400               	retlw	0
   448     01B7  3400               	retlw	0
   449     01B8  3400               	retlw	0
   450     01B9  3400               	retlw	0
   451     01BA  3400               	retlw	0
   452     01BB  3400               	retlw	0
   453     01BC  3400               	retlw	0
   454     01BD  3400               	retlw	0
   455     01BE  3400               	retlw	0
   456     01BF  3400               	retlw	0
   457     01C0  3400               	retlw	0
   458     01C1  3400               	retlw	0
   459     01C2  3400               	retlw	0
   460     01C3  3400               	retlw	0
   461     01C4  3400               	retlw	0
   462     01C5  3400               	retlw	0
   463     01C6  3400               	retlw	0
   464     01C7  3400               	retlw	0
   465     01C8  3400               	retlw	0
   466     01C9  3400               	retlw	0
   467     01CA  3400               	retlw	0
   468     01CB  3400               	retlw	0
   469     01CC  3400               	retlw	0
   470     01CD  3400               	retlw	0
   471     01CE  3400               	retlw	0
   472     01CF  3400               	retlw	0
   473     01D0  3400               	retlw	0
   474     01D1  3400               	retlw	0
   475     01D2  3400               	retlw	0
   476     01D3  3400               	retlw	0
   477     01D4  3400               	retlw	0
   478     01D5  3400               	retlw	0
   479     01D6  3400               	retlw	0
   480     01D7  3400               	retlw	0
   481     01D8  3400               	retlw	0
   482     01D9  3400               	retlw	0
   483     01DA  3400               	retlw	0
   484     01DB  3400               	retlw	0
   485     01DC  3400               	retlw	0
   486     01DD  3400               	retlw	0
   487     01DE  3400               	retlw	0
   488     01DF  3400               	retlw	0
   489     01E0  3400               	retlw	0
   490     01E1  3400               	retlw	0
   491     01E2  3400               	retlw	0
   492     01E3  3400               	retlw	0
   493     01E4  3400               	retlw	0
   494     01E5  3400               	retlw	0
   495     01E6  3400               	retlw	0
   496     01E7  3400               	retlw	0
   497     01E8  3400               	retlw	0
   498     01E9  3400               	retlw	0
   499     01EA  3400               	retlw	0
   500     01EB  3400               	retlw	0
   501     01EC  3400               	retlw	0
   502     01ED  3400               	retlw	0
   503     01EE  3400               	retlw	0
   504     01EF  3400               	retlw	0
   505     01F0  3400               	retlw	0
   506     01F1  3400               	retlw	0
   507     01F2  3400               	retlw	0
   508     01F3  3400               	retlw	0
   509     01F4  3400               	retlw	0
   510     01F5  3400               	retlw	0
   511     01F6  3400               	retlw	0
   512     01F7  3400               	retlw	0
   513     01F8  3400               	retlw	0
   514     01F9  3400               	retlw	0
   515     01FA  3400               	retlw	0
   516     01FB  3400               	retlw	0
   517     01FC  3400               	retlw	0
   518     01FD  3400               	retlw	0
   519     01FE  3400               	retlw	0
   520     01FF  3400               	retlw	0
   521     0200  3400               	retlw	0
   522     0201  3400               	retlw	0
   523     0202  3400               	retlw	0
   524     0203  3400               	retlw	0
   525     0204  3400               	retlw	0
   526     0205  3400               	retlw	0
   527     0206  3400               	retlw	0
   528     0207  3400               	retlw	0
   529     0208  3400               	retlw	0
   530     0209  3400               	retlw	0
   531     020A  3400               	retlw	0
   532     020B  3400               	retlw	0
   533     020C  3400               	retlw	0
   534     020D  3400               	retlw	0
   535     020E  3400               	retlw	0
   536     020F  3400               	retlw	0
   537     0210  3400               	retlw	0
   538     0211  3400               	retlw	0
   539     0212  3400               	retlw	0
   540     0213  3400               	retlw	0
   541     0214  3400               	retlw	0
   542     0215  3400               	retlw	0
   543     0216  3400               	retlw	0
   544     0217  3400               	retlw	0
   545     0218  3400               	retlw	0
   546     0219  3400               	retlw	0
   547     021A  3400               	retlw	0
   548     021B  3400               	retlw	0
   549     021C  3400               	retlw	0
   550     021D  3400               	retlw	0
   551     021E  3400               	retlw	0
   552     021F  3400               	retlw	0
   553     0220  3400               	retlw	0
   554     0221  3400               	retlw	0
   555     0222  3400               	retlw	0
   556     0223  3400               	retlw	0
   557     0224  3400               	retlw	0
   558     0225  3400               	retlw	0
   559     0226  3400               	retlw	0
   560     0227  3400               	retlw	0
   561     0228  3400               	retlw	0
   562     0229  3400               	retlw	0
   563     022A  3400               	retlw	0
   564     022B  3400               	retlw	0
   565     022C  3400               	retlw	0
   566     022D  3400               	retlw	0
   567     022E  3400               	retlw	0
   568     022F  3400               	retlw	0
   569     0230  3400               	retlw	0
   570     0231  3400               	retlw	0
   571     0232  3400               	retlw	0
   572     0233  3400               	retlw	0
   573     0234  3400               	retlw	0
   574     0235  3400               	retlw	0
   575     0236  3400               	retlw	0
   576     0237  3400               	retlw	0
   577     0238  3400               	retlw	0
   578     0239  3400               	retlw	0
   579     023A  3400               	retlw	0
   580     023B  3400               	retlw	0
   581     023C  3400               	retlw	0
   582     023D  3400               	retlw	0
   583     023E  3400               	retlw	0
   584     023F  3400               	retlw	0
   585     0240  3400               	retlw	0
   586     0241  3400               	retlw	0
   587     0242  3400               	retlw	0
   588     0243  3400               	retlw	0
   589     0244  3400               	retlw	0
   590     0245  3400               	retlw	0
   591     0246  3400               	retlw	0
   592     0247  3400               	retlw	0
   593     0248  3400               	retlw	0
   594     0249  3400               	retlw	0
   595     024A                     __end_of_ARR:
   596                           
   597                           	psect	nvBANK0
   598     0064                     __pnvBANK0:
   599     0064                     _timer_value:
   600     0064                     	ds	1
   601     000B                     _INTCONbits     set	11
   602     0014                     _TRISCbits      set	20
   603     0018                     _LATAbits       set	24
   604     0012                     _TRISAbits      set	18
   605     009E                     _ADCON1         set	158
   606     009D                     _ADCON0         set	157
   607     009B                     _ADRESL         set	155
   608     009C                     _ADRESH         set	156
   609     009D                     _ADCON0bits     set	157
   610     0119                     _RC1REG         set	281
   611     011A                     _TX1REG         set	282
   612     011C                     _SP1BRGH        set	284
   613     011B                     _SP1BRGL        set	283
   614     011E                     _TX1STA         set	286
   615     011D                     _RC1STA         set	285
   616     011F                     _BAUD1CON       set	287
   617     059C                     _TMR0L          set	1436
   618     059D                     _TMR0H          set	1437
   619     059F                     _T0CON1bits     set	1439
   620     059E                     _T0CON0bits     set	1438
   621     0716                     _PIE0bits       set	1814
   622     070C                     _PIR0bits       set	1804
   623     070D                     _PIR1bits       set	1805
   624     0717                     _PIE1bits       set	1815
   625     088E                     _OSCCON         set	2190
   626     1ECB                     _RX1PPS         set	7883
   627     1F38                     _ANSELAbits     set	7992
   628     1F55                     _IOCCFbits      set	8021
   629     1F54                     _IOCCNbits      set	8020
   630     1F53                     _IOCCPbits      set	8019
   631     1F4E                     _ANSELCbits     set	8014
   632     1F4E                     _ANSELC         set	8014
   633     1F38                     _ANSELA         set	7992
   634     1F23                     _RC3PPS         set	7971
   635                           
   636                           	psect	stringtext2
   637     0591                     __pstringtext2:
   638     0591                     STR_1:
   639     0591  3456               	retlw	86	;'V'
   640     0592  343A               	retlw	58	;':'
   641     0593  3425               	retlw	37	;'%'
   642     0594  3475               	retlw	117	;'u'
   643     0595  3420               	retlw	32	;' '
   644     0596  3443               	retlw	67	;'C'
   645     0597  343A               	retlw	58	;':'
   646     0598  3425               	retlw	37	;'%'
   647     0599  3475               	retlw	117	;'u'
   648     059A  3420               	retlw	32	;' '
   649     059B  3454               	retlw	84	;'T'
   650     059C  343A               	retlw	58	;':'
   651     059D  3425               	retlw	37	;'%'
   652     059E  3475               	retlw	117	;'u'
   653     059F  340D               	retlw	13
   654     05A0  340A               	retlw	10
   655     05A1  3400               	retlw	0
   656                           
   657                           	psect	stringtext3
   658     0000                     __pstringtext3:
   659                           
   660                           	psect	cinit
   661     00D2                     start_initialization:	
   662                           ; #config settings
   663                           
   664     00D2                     __initialization:
   665                           
   666                           ; Initialize objects allocated to BANK0
   667     00D2  3185  25B2  3180   	fcall	__pidataBANK0	;fetch initializer
   668     00D5  00E0               	movwf	__pdataBANK0& (0+127)
   669     00D6  3185  25B3  3180   	fcall	__pidataBANK0+1	;fetch initializer
   670     00D9  00E1               	movwf	(__pdataBANK0+1)& (0+127)
   671     00DA  3185  25B4  3180   	fcall	__pidataBANK0+2	;fetch initializer
   672     00DD  00E2               	movwf	(__pdataBANK0+2)& (0+127)
   673     00DE  3185  25B5  3180   	fcall	__pidataBANK0+3	;fetch initializer
   674     00E1  00E3               	movwf	(__pdataBANK0+3)& (0+127)
   675                           
   676                           ; Clear objects allocated to COMMON
   677     00E2  01FA               	clrf	__pbssCOMMON& (0+127)
   678     00E3  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   679                           
   680                           ; Clear objects allocated to BANK0
   681     00E4  3044               	movlw	low __pbssBANK0
   682     00E5  0084               	movwf	4
   683     00E6  3000               	movlw	high __pbssBANK0
   684     00E7  0085               	movwf	5
   685     00E8  301C               	movlw	28
   686     00E9  3185  25AC  3180   	fcall	clear_ram0
   687                           
   688                           ; Clear objects allocated to BANK1
   689     00EC  30A0               	movlw	low __pbssBANK1
   690     00ED  0084               	movwf	4
   691     00EE  3000               	movlw	high __pbssBANK1
   692     00EF  0085               	movwf	5
   693     00F0  3020               	movlw	32
   694     00F1  3185  25AC  3180   	fcall	clear_ram0
   695                           
   696                           ; Clear objects allocated to BANK2
   697     00F4  3020               	movlw	low __pbssBANK2
   698     00F5  0084               	movwf	4
   699     00F6  3001               	movlw	high __pbssBANK2
   700     00F7  0085               	movwf	5
   701     00F8  3040               	movlw	64
   702     00F9  3185  25AC  3180   	fcall	clear_ram0
   703     00FC                     end_of_initialization:	
   704                           ;End of C runtime variable initialization code
   705                           
   706     00FC                     __end_of__initialization:
   707     00FC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   708     00FD  0140               	movlb	0
   709     00FE  3183  2BB8         	ljmp	_main	;jump to C main() function
   710                           
   711                           	psect	bssCOMMON
   712     007A                     __pbssCOMMON:
   713     007A                     _adc_channel_index:
   714     007A                     	ds	1
   715     007B                     _edge:
   716     007B                     	ds	1
   717                           
   718                           	psect	bssBANK0
   719     0044                     __pbssBANK0:
   720     0044                     _rx_buffer:
   721     0044                     	ds	6
   722     004A                     _width:
   723     004A                     	ds	2
   724     004C                     _prec:
   725     004C                     	ds	2
   726     004E                     _adc_val:
   727     004E                     	ds	2
   728     0050                     _timer_counter:
   729     0050                     	ds	2
   730     0052                     _temperature_val:
   731     0052                     	ds	2
   732     0054                     _current_val:
   733     0054                     	ds	2
   734     0056                     _voltage_val:
   735     0056                     	ds	2
   736     0058                     _flags:
   737     0058                     	ds	1
   738     0059                     _Trip:
   739     0059                     	ds	1
   740     005A                     _cnt:
   741     005A                     	ds	1
   742     005B                     _rcv_FREQUENCY:
   743     005B                     	ds	1
   744     005C                     _byte:
   745     005C                     	ds	1
   746     005D                     _rcv_current_value:
   747     005D                     	ds	1
   748     005E                     _temperature_flag:
   749     005E                     	ds	1
   750     005F                     _count:
   751     005F                     	ds	1
   752                           
   753                           	psect	dataBANK0
   754     0060                     __pdataBANK0:
   755     0060                     _max_adc:
   756     0060                     	ds	2
   757     0062                     _SecondcycleDelay:
   758     0062                     	ds	2
   759                           
   760                           	psect	bssBANK1
   761     00A0                     __pbssBANK1:
   762     00A0                     _dbuf:
   763     00A0                     	ds	32
   764                           
   765                           	psect	bssBANK2
   766     0120                     __pbssBANK2:
   767     0120                     _buffer:
   768     0120                     	ds	64
   769                           
   770                           	psect	clrtext
   771     05AC                     clear_ram0:	
   772                           ;	Called with FSR0 containing the base address, and
   773                           ;	WREG with the size to clear
   774                           
   775     05AC  0064               	clrwdt	;clear the watchdog before getting into this loop
   776     05AD                     clrloop0:
   777     05AD  0180               	clrf	0	;clear RAM location pointed to by FSR
   778     05AE  3101               	addfsr 0,1
   779     05AF  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   780     05B0  2DAD               	goto	clrloop0	;have we reached the end yet?
   781     05B1  3400               	retlw	0	;all done for this memory range, return
   782                           
   783                           	psect	cstackBANK1
   784     00C0                     __pcstackBANK1:
   785     00C0                     sprintf@ap:
   786                           
   787                           ; 1 bytes @ 0x0
   788     00C0                     	ds	1
   789     00C1                     sprintf@f:
   790                           
   791                           ; 11 bytes @ 0x1
   792     00C1                     	ds	11
   793                           
   794                           	psect	cstackCOMMON
   795     0070                     __pcstackCOMMON:
   796     0070                     ?_putch:
   797     0070                     ?_UART_Init:	
   798                           ; 1 bytes @ 0x0
   799                           
   800     0070                     ?_EUSART1_Write:	
   801                           ; 1 bytes @ 0x0
   802                           
   803     0070                     ?_get_TMR0L_from_voltage:	
   804                           ; 1 bytes @ 0x0
   805                           
   806     0070                     ?_main:	
   807                           ; 1 bytes @ 0x0
   808                           
   809     0070                     ?_ISR:	
   810                           ; 1 bytes @ 0x0
   811                           
   812     0070                     putch@c:	
   813                           ; 1 bytes @ 0x0
   814                           
   815     0070                     ISR@adc_result:	
   816                           ; 1 bytes @ 0x0
   817                           
   818     0070                     ??_ISR:	
   819                           ; 2 bytes @ 0x0
   820                           
   821                           
   822                           ; 1 bytes @ 0x0
   823     0070                     	ds	2
   824     0072                     ?_fputc:
   825     0072                     ?___lwdiv:	
   826                           ; 2 bytes @ 0x2
   827                           
   828     0072                     ?___lwmod:	
   829                           ; 2 bytes @ 0x2
   830                           
   831     0072                     EUSART1_Write@txData:	
   832                           ; 2 bytes @ 0x2
   833                           
   834     0072                     get_TMR0L_from_voltage@voltage:	
   835                           ; 1 bytes @ 0x2
   836                           
   837     0072                     ___lwdiv@divisor:	
   838                           ; 1 bytes @ 0x2
   839                           
   840     0072                     ___lwmod@divisor:	
   841                           ; 2 bytes @ 0x2
   842                           
   843     0072                     fputc@c:	
   844                           ; 2 bytes @ 0x2
   845                           
   846     0072                     ??_putch:	
   847                           ; 2 bytes @ 0x2
   848                           
   849     0072                     ??_UART_Init:	
   850                           ; 1 bytes @ 0x2
   851                           
   852     0072                     ??_EUSART1_Write:	
   853                           ; 1 bytes @ 0x2
   854                           
   855     0072                     ??_get_TMR0L_from_voltage:	
   856                           ; 1 bytes @ 0x2
   857                           
   858                           
   859                           ; 1 bytes @ 0x2
   860     0072                     	ds	1
   861     0073                     ?_UART_Write_Text:
   862     0073                     UART_Write_Text@text:	
   863                           ; 1 bytes @ 0x3
   864                           
   865                           
   866                           ; 1 bytes @ 0x3
   867     0073                     	ds	1
   868     0074                     ___lwdiv@dividend:
   869     0074                     ___lwmod@dividend:	
   870                           ; 2 bytes @ 0x4
   871                           
   872     0074                     fputc@fp:	
   873                           ; 2 bytes @ 0x4
   874                           
   875     0074                     ??_UART_Write_Text:	
   876                           ; 2 bytes @ 0x4
   877                           
   878                           
   879                           ; 1 bytes @ 0x4
   880     0074                     	ds	2
   881     0076                     ___lwdiv@counter:
   882     0076                     ___lwmod@counter:	
   883                           ; 1 bytes @ 0x6
   884                           
   885     0076                     ??___lwdiv:	
   886                           ; 1 bytes @ 0x6
   887                           
   888     0076                     ??___lwmod:	
   889                           ; 1 bytes @ 0x6
   890                           
   891                           
   892                           ; 1 bytes @ 0x6
   893     0076                     	ds	1
   894     0077                     ___lwdiv@quotient:
   895                           
   896                           ; 2 bytes @ 0x7
   897     0077                     	ds	2
   898     0079                     ??_vfprintf:
   899                           
   900                           ; 1 bytes @ 0x9
   901     0079                     	ds	1
   902     007A                     ??_sprintf:
   903     007A                     ??_main:	
   904                           ; 1 bytes @ 0xA
   905                           
   906                           
   907                           	psect	cstackBANK0
   908     0020                     __pcstackBANK0:	
   909                           ; 1 bytes @ 0xA
   910                           
   911     0020                     ??_fputc:
   912                           
   913                           ; 1 bytes @ 0x0
   914     0020                     	ds	5
   915     0025                     ?_vfpfcnvrt:
   916     0025                     vfpfcnvrt@fp:	
   917                           ; 1 bytes @ 0x5
   918                           
   919                           
   920                           ; 2 bytes @ 0x5
   921     0025                     	ds	2
   922     0027                     vfpfcnvrt@fmt:
   923                           
   924                           ; 1 bytes @ 0x7
   925     0027                     	ds	1
   926     0028                     vfpfcnvrt@ap:
   927                           
   928                           ; 1 bytes @ 0x8
   929     0028                     	ds	1
   930     0029                     ??_vfpfcnvrt:
   931                           
   932                           ; 1 bytes @ 0x9
   933     0029                     	ds	4
   934     002D                     vfpfcnvrt@cp:
   935                           
   936                           ; 2 bytes @ 0xD
   937     002D                     	ds	2
   938     002F                     vfpfcnvrt@convarg:
   939                           
   940                           ; 4 bytes @ 0xF
   941     002F                     	ds	4
   942     0033                     vfpfcnvrt@c:
   943                           
   944                           ; 1 bytes @ 0x13
   945     0033                     	ds	1
   946     0034                     ?_vfprintf:
   947     0034                     vfprintf@fp:	
   948                           ; 2 bytes @ 0x14
   949                           
   950                           
   951                           ; 2 bytes @ 0x14
   952     0034                     	ds	2
   953     0036                     vfprintf@fmt:
   954                           
   955                           ; 2 bytes @ 0x16
   956     0036                     	ds	2
   957     0038                     vfprintf@ap:
   958                           
   959                           ; 1 bytes @ 0x18
   960     0038                     	ds	1
   961     0039                     vfprintf@cfmt:
   962                           
   963                           ; 2 bytes @ 0x19
   964     0039                     	ds	2
   965     003B                     ?_sprintf:
   966     003B                     sprintf@s:	
   967                           ; 2 bytes @ 0x1B
   968                           
   969                           
   970                           ; 1 bytes @ 0x1B
   971     003B                     	ds	1
   972     003C                     sprintf@fmt:
   973                           
   974                           ; 2 bytes @ 0x1C
   975     003C                     	ds	8
   976                           
   977                           	psect	maintext
   978     03B8                     __pmaintext:	
   979 ;;
   980 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   981 ;;
   982 ;; *************** function _main *****************
   983 ;; Defined at:
   984 ;;		line 256 in file "vtg_main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : B3F/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   998 ;;      Params:         0       0       0       0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels required when called: 6
  1004 ;; This function calls:
  1005 ;;		_UART_Init
  1006 ;;		_UART_Write_Text
  1007 ;;		_get_TMR0L_from_voltage
  1008 ;;		_sprintf
  1009 ;; This function is called by:
  1010 ;;		Startup code after reset
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014     03B8                     _main:	
  1015                           ;psect for function _main
  1016                           
  1017     03B8                     l2025:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1020                           
  1021                           
  1022                           ;vtg_main.c: 258:     OSCCON = 0x70;
  1023     03B8  3070               	movlw	112
  1024     03B9  0151               	movlb	17	; select bank17
  1025     03BA  008E               	movwf	14	;volatile
  1026                           
  1027                           ;vtg_main.c: 261:     TRISAbits.TRISA5 = 0;
  1028     03BB  0140               	movlb	0	; select bank0
  1029     03BC  1292               	bcf	18,5	;volatile
  1030                           
  1031                           ;vtg_main.c: 262:     LATAbits.LATA5 = 1;
  1032     03BD  1698               	bsf	24,5	;volatile
  1033                           
  1034                           ;vtg_main.c: 264:     TRISCbits.TRISC0 = 1;
  1035     03BE  1414               	bsf	20,0	;volatile
  1036                           
  1037                           ;vtg_main.c: 267:     TRISCbits.TRISC4 = 1;
  1038     03BF  1614               	bsf	20,4	;volatile
  1039                           
  1040                           ;vtg_main.c: 268:     TRISCbits.TRISC3 = 0;
  1041     03C0  1194               	bcf	20,3	;volatile
  1042     03C1                     l2027:
  1043                           
  1044                           ;vtg_main.c: 270:     edge = 0;
  1045     03C1  01FB               	clrf	_edge	;volatile
  1046                           
  1047                           ;vtg_main.c: 271:     count = 0;
  1048     03C2  01DF               	clrf	_count	;volatile
  1049     03C3                     l2029:
  1050                           
  1051                           ;vtg_main.c: 274:     IOCCPbits.IOCCP0 = 1;
  1052     03C3  017E               	movlb	62	; select bank62
  1053     03C4  1453               	bsf	83,0	;volatile
  1054     03C5                     l2031:
  1055                           
  1056                           ;vtg_main.c: 275:     IOCCNbits.IOCCN0 = 1;
  1057     03C5  1454               	bsf	84,0	;volatile
  1058     03C6                     l2033:
  1059                           
  1060                           ;vtg_main.c: 276:     IOCCFbits.IOCCF0 = 0;
  1061     03C6  1055               	bcf	85,0	;volatile
  1062     03C7                     l2035:
  1063                           
  1064                           ;vtg_main.c: 278:     PIR0bits.IOCIF = 0;
  1065     03C7  014E               	movlb	14	; select bank14
  1066     03C8  120C               	bcf	12,4	;volatile
  1067     03C9                     l2037:
  1068                           
  1069                           ;vtg_main.c: 279:     PIE0bits.IOCIE = 1;
  1070     03C9  1616               	bsf	22,4	;volatile
  1071     03CA                     l2039:
  1072                           
  1073                           ;vtg_main.c: 281:     INTCONbits.PEIE = 1;
  1074     03CA  170B               	bsf	11,6	;volatile
  1075     03CB                     l2041:
  1076                           
  1077                           ;vtg_main.c: 282:     INTCONbits.GIE = 1;
  1078     03CB  178B               	bsf	11,7	;volatile
  1079     03CC                     l2043:
  1080                           
  1081                           ;vtg_main.c: 283:     INTCONbits.INTEDG = 0;
  1082     03CC  100B               	bcf	11,0	;volatile
  1083     03CD                     l2045:
  1084                           
  1085                           ;vtg_main.c: 286:     TRISCbits.TRISC2 = 1;
  1086     03CD  0140               	movlb	0	; select bank0
  1087     03CE  1514               	bsf	20,2	;volatile
  1088     03CF                     l2047:
  1089                           
  1090                           ;vtg_main.c: 287:     TRISAbits.TRISA2 = 1;
  1091     03CF  1512               	bsf	18,2	;volatile
  1092     03D0                     l2049:
  1093                           
  1094                           ;vtg_main.c: 288:     TRISAbits.TRISA4 = 1;
  1095     03D0  1612               	bsf	18,4	;volatile
  1096     03D1                     l2051:
  1097                           
  1098                           ;vtg_main.c: 294:     TRISCbits.TRISC2 = 1;
  1099     03D1  1514               	bsf	20,2	;volatile
  1100     03D2                     l2053:
  1101                           
  1102                           ;vtg_main.c: 295:     ANSELCbits.ANSC2 = 1;
  1103     03D2  017E               	movlb	62	; select bank62
  1104     03D3  154E               	bsf	78,2	;volatile
  1105     03D4                     l2055:
  1106                           
  1107                           ;vtg_main.c: 296:     TRISAbits.TRISA2 = 1;
  1108     03D4  0140               	movlb	0	; select bank0
  1109     03D5  1512               	bsf	18,2	;volatile
  1110     03D6                     l2057:
  1111                           
  1112                           ;vtg_main.c: 297:     ANSELAbits.ANSA2 = 1;
  1113     03D6  017E               	movlb	62	; select bank62
  1114     03D7  1538               	bsf	56,2	;volatile
  1115     03D8                     l2059:
  1116                           
  1117                           ;vtg_main.c: 298:     TRISAbits.TRISA4 = 1;
  1118     03D8  0140               	movlb	0	; select bank0
  1119     03D9  1612               	bsf	18,4	;volatile
  1120     03DA                     l2061:
  1121                           
  1122                           ;vtg_main.c: 299:     ANSELAbits.ANSA4 = 1;
  1123     03DA  017E               	movlb	62	; select bank62
  1124     03DB  1638               	bsf	56,4	;volatile
  1125     03DC                     l2063:
  1126                           
  1127                           ;vtg_main.c: 300:     TRISCbits.TRISC5 = 1;
  1128     03DC  0140               	movlb	0	; select bank0
  1129     03DD  1694               	bsf	20,5	;volatile
  1130     03DE                     l2065:
  1131                           
  1132                           ;vtg_main.c: 301:     ANSELCbits.ANSC5 = 1;
  1133     03DE  017E               	movlb	62	; select bank62
  1134     03DF  16CE               	bsf	78,5	;volatile
  1135     03E0                     l2067:
  1136                           
  1137                           ;vtg_main.c: 306:      ADCON0 = 0b01010100;
  1138     03E0  3054               	movlw	84
  1139     03E1  0141               	movlb	1	; select bank1
  1140     03E2  009D               	movwf	29	;volatile
  1141     03E3                     l2069:
  1142                           
  1143                           ;vtg_main.c: 309:     ADCON1 = 0b11100000;
  1144     03E3  30E0               	movlw	224
  1145     03E4  009E               	movwf	30	;volatile
  1146     03E5                     l2071:
  1147                           
  1148                           ;vtg_main.c: 310:     PIR1bits.ADIF = 0;
  1149     03E5  014E               	movlb	14	; select bank14
  1150     03E6  100D               	bcf	13,0	;volatile
  1151     03E7                     l2073:
  1152                           
  1153                           ;vtg_main.c: 311:     PIE1bits.ADIE = 1;
  1154     03E7  1417               	bsf	23,0	;volatile
  1155     03E8                     l2075:
  1156                           
  1157                           ;vtg_main.c: 312:     ADCON0bits.ON = 1;
  1158     03E8  0141               	movlb	1	; select bank1
  1159     03E9  141D               	bsf	29,0	;volatile
  1160     03EA                     l2077:
  1161                           
  1162                           ;vtg_main.c: 313:     ADCON0bits.GO = 1;
  1163     03EA  149D               	bsf	29,1	;volatile
  1164     03EB                     l2079:
  1165                           
  1166                           ;vtg_main.c: 316:     T0CON0bits.MD16 = 0;
  1167     03EB  014B               	movlb	11	; select bank11
  1168     03EC  121E               	bcf	30,4	;volatile
  1169     03ED                     l2081:
  1170                           
  1171                           ;vtg_main.c: 317:     T0CON0bits.OUTPS = 0x00;
  1172     03ED  30F0               	movlw	-16
  1173     03EE  059E               	andwf	30,f	;volatile
  1174     03EF                     l2083:
  1175                           
  1176                           ;vtg_main.c: 318:     T0CON1bits.ASYNC = 0;
  1177     03EF  121F               	bcf	31,4	;volatile
  1178     03F0                     l2085:
  1179                           
  1180                           ;vtg_main.c: 319:     T0CON1bits.CS = 0b010;
  1181     03F0  081F               	movf	31,w	;volatile
  1182     03F1  391F               	andlw	-225
  1183     03F2  3840               	iorlw	64
  1184     03F3  009F               	movwf	31	;volatile
  1185     03F4                     l2087:
  1186                           
  1187                           ;vtg_main.c: 320:     T0CON1bits.CKPS = 0x04;
  1188     03F4  081F               	movf	31,w	;volatile
  1189     03F5  39F0               	andlw	-16
  1190     03F6  3804               	iorlw	4
  1191     03F7  009F               	movwf	31	;volatile
  1192     03F8                     l2089:
  1193                           
  1194                           ;vtg_main.c: 321:     TMR0H = 0;
  1195     03F8  019D               	clrf	29	;volatile
  1196     03F9                     l2091:
  1197                           
  1198                           ;vtg_main.c: 322:     TMR0L = 0;
  1199     03F9  019C               	clrf	28	;volatile
  1200     03FA                     l2093:
  1201                           
  1202                           ;vtg_main.c: 323:     PIR0bits.TMR0IF = 0;
  1203     03FA  014E               	movlb	14	; select bank14
  1204     03FB  128C               	bcf	12,5	;volatile
  1205     03FC                     l2095:
  1206                           
  1207                           ;vtg_main.c: 324:     PIE0bits.TMR0IE = 1;
  1208     03FC  1696               	bsf	22,5	;volatile
  1209     03FD                     l2097:
  1210                           
  1211                           ;vtg_main.c: 325:     T0CON0bits.EN = 1;
  1212     03FD  014B               	movlb	11	; select bank11
  1213     03FE  179E               	bsf	30,7	;volatile
  1214     03FF                     l2099:
  1215                           
  1216                           ;vtg_main.c: 326:     UART_Init();
  1217     03FF  3185  2562  3183   	fcall	_UART_Init
  1218     0402                     l2101:
  1219                           
  1220                           ;vtg_main.c: 330:         timer_value = get_TMR0L_from_voltage(rcv_current_value);
  1221     0402  0140               	movlb	0	; select bank0
  1222     0403  085D               	movf	_rcv_current_value,w
  1223     0404  3183  2314  3183   	fcall	_get_TMR0L_from_voltage
  1224     0407  0140               	movlb	0	; select bank0
  1225     0408  00E4               	movwf	_timer_value
  1226     0409                     l2103:
  1227                           
  1228                           ;vtg_main.c: 332:         if (timer_counter >= 3) {
  1229     0409  3000               	movlw	0
  1230     040A  0251               	subwf	_timer_counter+1,w	;volatile
  1231     040B  3003               	movlw	3
  1232     040C  1903               	skipnz
  1233     040D  0250               	subwf	_timer_counter,w	;volatile
  1234     040E  1C03               	skipc
  1235     040F  2C11               	goto	u1511
  1236     0410  2C12               	goto	u1510
  1237     0411                     u1511:
  1238     0411  2C3D               	goto	l2123
  1239     0412                     u1510:
  1240     0412                     l2105:
  1241                           
  1242                           ;vtg_main.c: 333:             timer_counter = 0;
  1243     0412  01D0               	clrf	_timer_counter	;volatile
  1244     0413  01D1               	clrf	_timer_counter+1	;volatile
  1245                           
  1246                           ;vtg_main.c: 336:             switch (adc_channel_index) {
  1247     0414  2C27               	goto	l2115
  1248     0415                     l2107:
  1249                           
  1250                           ;vtg_main.c: 338:                     ADCON0bits.CHS = 0b010010;
  1251     0415  0141               	movlb	1	; select bank1
  1252     0416  081D               	movf	29,w	;volatile
  1253     0417  3903               	andlw	-253
  1254     0418  3848               	iorlw	72
  1255     0419  009D               	movwf	29	;volatile
  1256                           
  1257                           ;vtg_main.c: 339:                     break;
  1258     041A  2C32               	goto	l186
  1259     041B                     l2109:
  1260                           
  1261                           ;vtg_main.c: 342:                     ADCON0bits.CHS = 0b000010;
  1262     041B  0141               	movlb	1	; select bank1
  1263     041C  081D               	movf	29,w	;volatile
  1264     041D  3903               	andlw	-253
  1265     041E  3808               	iorlw	8
  1266     041F  009D               	movwf	29	;volatile
  1267                           
  1268                           ;vtg_main.c: 343:                     break;
  1269     0420  2C32               	goto	l186
  1270     0421                     l2111:
  1271                           
  1272                           ;vtg_main.c: 346:                     ADCON0bits.CHS = 0b000100;
  1273     0421  0141               	movlb	1	; select bank1
  1274     0422  081D               	movf	29,w	;volatile
  1275     0423  3903               	andlw	-253
  1276     0424  3810               	iorlw	16
  1277     0425  009D               	movwf	29	;volatile
  1278                           
  1279                           ;vtg_main.c: 347:                     break;
  1280     0426  2C32               	goto	l186
  1281     0427                     l2115:
  1282     0427  087A               	movf	_adc_channel_index,w	;volatile
  1283                           
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 3, Range of values is 0 to 2
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte           10     6 (average)
  1289                           ; direct_byte           12     6 (fixed)
  1290                           ; jumptable            260     6 (fixed)
  1291                           ;	Chosen strategy is simple_byte
  1292     0428  3A00               	xorlw	0	; case 0
  1293     0429  1903               	skipnz
  1294     042A  2C15               	goto	l2107
  1295     042B  3A01               	xorlw	1	; case 1
  1296     042C  1903               	skipnz
  1297     042D  2C1B               	goto	l2109
  1298     042E  3A03               	xorlw	3	; case 2
  1299     042F  1903               	skipnz
  1300     0430  2C21               	goto	l2111
  1301     0431  2C32               	goto	l186
  1302     0432                     l186:
  1303                           
  1304                           ;vtg_main.c: 351:             ADCON0bits.GO = 1;
  1305     0432  0141               	movlb	1	; select bank1
  1306     0433  149D               	bsf	29,1	;volatile
  1307     0434                     l2117:
  1308                           
  1309                           ;vtg_main.c: 354:             adc_channel_index++;
  1310     0434  3001               	movlw	1
  1311     0435  07FA               	addwf	_adc_channel_index,f	;volatile
  1312     0436                     l2119:
  1313                           
  1314                           ;vtg_main.c: 355:             if (adc_channel_index > 2) {
  1315     0436  3003               	movlw	3
  1316     0437  027A               	subwf	_adc_channel_index,w	;volatile
  1317     0438  1C03               	skipc
  1318     0439  2C3B               	goto	u1521
  1319     043A  2C3C               	goto	u1520
  1320     043B                     u1521:
  1321     043B  2C3D               	goto	l2123
  1322     043C                     u1520:
  1323     043C                     l2121:
  1324                           
  1325                           ;vtg_main.c: 356:                 adc_channel_index = 0;
  1326     043C  01FA               	clrf	_adc_channel_index	;volatile
  1327     043D                     l2123:
  1328                           
  1329                           ;vtg_main.c: 366:         sprintf(buffer, "V:%u C:%u T:%u\r\n", voltage_val, current_val
      +                          , temperature_val);
  1330     043D  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  1331     043E  0140               	movlb	0	; select bank0
  1332     043F  00BB               	movwf	sprintf@s
  1333     0440  3091               	movlw	low (STR_1| (0+32768))
  1334     0441  00BC               	movwf	sprintf@fmt
  1335     0442  3085               	movlw	high (STR_1| (0+32768))
  1336     0443  00BD               	movwf	sprintf@fmt+1
  1337     0444  0857               	movf	_voltage_val+1,w	;volatile
  1338     0445  00BF               	movwf	?_sprintf+4
  1339     0446  0856               	movf	_voltage_val,w	;volatile
  1340     0447  00BE               	movwf	?_sprintf+3
  1341     0448  0855               	movf	_current_val+1,w	;volatile
  1342     0449  00C1               	movwf	?_sprintf+6
  1343     044A  0854               	movf	_current_val,w	;volatile
  1344     044B  00C0               	movwf	?_sprintf+5
  1345     044C  0853               	movf	_temperature_val+1,w	;volatile
  1346     044D  00C3               	movwf	?_sprintf+8
  1347     044E  0852               	movf	_temperature_val,w	;volatile
  1348     044F  00C2               	movwf	?_sprintf+7
  1349     0450  3185  2520  3183   	fcall	_sprintf
  1350     0453                     l2125:
  1351                           
  1352                           ;vtg_main.c: 367:         UART_Write_Text(buffer);
  1353     0453  3020               	movlw	(low (_buffer| (0+256)))& (0+255)
  1354     0454  00F3               	movwf	UART_Write_Text@text
  1355     0455  3185  257C  3183   	fcall	_UART_Write_Text
  1356     0458  2C02               	goto	l2101
  1357     0459  3180  28D0         	ljmp	start
  1358     045B                     __end_of_main:
  1359                           
  1360                           	psect	text1
  1361     0520                     __ptext1:	
  1362 ;; *************** function _sprintf *****************
  1363 ;; Defined at:
  1364 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  s               1   27[BANK0 ] PTR unsigned char 
  1367 ;;		 -> buffer(64), 
  1368 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  1369 ;;		 -> STR_1(17), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  f              11    1[BANK1 ] struct _IO_FILE
  1372 ;;  ret             2    0        int 
  1373 ;;  ap              1    0[BANK1 ] PTR void [1]
  1374 ;;		 -> ?_sprintf(2), 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  2   27[BANK0 ] int 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1384 ;;      Params:         0       9       0       0       0       0       0       0
  1385 ;;      Locals:         0       0      12       0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0
  1387 ;;      Totals:         0       9      12       0       0       0       0       0
  1388 ;;Total ram usage:       21 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 5
  1391 ;; This function calls:
  1392 ;;		_vfprintf
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398     0520                     _sprintf:	
  1399                           ;psect for function _sprintf
  1400                           
  1401     0520                     l2013:	
  1402                           ;incstack = 0
  1403                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1404                           
  1405     0520  303E               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  1406     0521  0141               	movlb	1	; select bank1
  1407     0522  00C0               	movwf	sprintf@ap^(0+128)
  1408     0523  0140               	movlb	0	; select bank0
  1409     0524  083B               	movf	sprintf@s,w
  1410     0525  0141               	movlb	1	; select bank1
  1411     0526  00C1               	movwf	sprintf@f^(0+128)
  1412     0527  3001               	movlw	1
  1413     0528  00C2               	movwf	(sprintf@f+1)^(0+128)
  1414     0529                     l2015:
  1415     0529  01C3               	clrf	(sprintf@f^(0+128)+2)
  1416     052A  01C4               	clrf	((sprintf@f+1)^(0+128)+2)
  1417     052B                     l2017:
  1418     052B  01CA               	clrf	(sprintf@f^(0+128)+9)
  1419     052C  01CB               	clrf	((sprintf@f+1)^(0+128)+9)
  1420     052D                     l2019:
  1421     052D  30C1               	movlw	low sprintf@f
  1422     052E  0140               	movlb	0	; select bank0
  1423     052F  00B4               	movwf	vfprintf@fp
  1424     0530  3000               	movlw	high sprintf@f
  1425     0531  00B5               	movwf	vfprintf@fp+1
  1426     0532  083D               	movf	sprintf@fmt+1,w
  1427     0533  00B7               	movwf	vfprintf@fmt+1
  1428     0534  083C               	movf	sprintf@fmt,w
  1429     0535  00B6               	movwf	vfprintf@fmt
  1430     0536  30C0               	movlw	(low (sprintf@ap| 0))& (0+255)
  1431     0537  00B8               	movwf	vfprintf@ap
  1432     0538  3185  2544  3185   	fcall	_vfprintf
  1433     053B                     l2021:
  1434     053B  0140               	movlb	0	; select bank0
  1435     053C  083B               	movf	sprintf@s,w
  1436     053D  0141               	movlb	1	; select bank1
  1437     053E  0743               	addwf	(sprintf@f^(0+128)+2),w
  1438     053F  0086               	movwf	6
  1439     0540  3001               	movlw	1	; select bank2/3
  1440     0541  0087               	movwf	7
  1441     0542  0181               	clrf	1
  1442     0543                     l752:
  1443     0543  0008               	return
  1444     0544                     __end_of_sprintf:
  1445                           
  1446                           	psect	text2
  1447     0544                     __ptext2:	
  1448 ;; *************** function _vfprintf *****************
  1449 ;; Defined at:
  1450 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  fp              2   20[BANK0 ] PTR struct _IO_FILE
  1453 ;;		 -> sprintf@f(11), 
  1454 ;;  fmt             2   22[BANK0 ] PTR const unsigned char 
  1455 ;;		 -> STR_1(17), 
  1456 ;;  ap              1   24[BANK0 ] PTR PTR void 
  1457 ;;		 -> sprintf@ap(1), 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  cfmt            2   25[BANK0 ] PTR unsigned char 
  1460 ;;		 -> STR_1(17), 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2   20[BANK0 ] int 
  1463 ;; Registers used:
  1464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1470 ;;      Params:         0       5       0       0       0       0       0       0
  1471 ;;      Locals:         0       2       0       0       0       0       0       0
  1472 ;;      Temps:          1       0       0       0       0       0       0       0
  1473 ;;      Totals:         1       7       0       0       0       0       0       0
  1474 ;;Total ram usage:        8 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 4
  1477 ;; This function calls:
  1478 ;;		_vfpfcnvrt
  1479 ;; This function is called by:
  1480 ;;		_sprintf
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484     0544                     _vfprintf:	
  1485                           ;psect for function _vfprintf
  1486                           
  1487     0544                     l2003:	
  1488                           ;incstack = 0
  1489                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1490                           
  1491                           
  1492                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1493     0544  0140               	movlb	0	; select bank0
  1494     0545  0837               	movf	vfprintf@fmt+1,w
  1495     0546  00BA               	movwf	vfprintf@cfmt+1
  1496     0547  0836               	movf	vfprintf@fmt,w
  1497     0548  00B9               	movwf	vfprintf@cfmt
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1500     0549  2D55               	goto	l2007
  1501     054A                     l2005:
  1502                           
  1503                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1504     054A  0835               	movf	vfprintf@fp+1,w
  1505     054B  00A6               	movwf	vfpfcnvrt@fp+1
  1506     054C  0834               	movf	vfprintf@fp,w
  1507     054D  00A5               	movwf	vfpfcnvrt@fp
  1508     054E  3039               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1509     054F  00A7               	movwf	vfpfcnvrt@fmt
  1510     0550  0838               	movf	vfprintf@ap,w
  1511     0551  00A8               	movwf	vfpfcnvrt@ap
  1512     0552  3182  224A  3185   	fcall	_vfpfcnvrt
  1513     0555                     l2007:
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1516     0555  0140               	movlb	0	; select bank0
  1517     0556  0839               	movf	vfprintf@cfmt,w
  1518     0557  0084               	movwf	4
  1519     0558  083A               	movf	vfprintf@cfmt+1,w
  1520     0559  0085               	movwf	5
  1521     055A  0012               	moviw fsr0++
  1522     055B  1D03               	btfss	3,2
  1523     055C  2D5E               	goto	u1501
  1524     055D  2D5F               	goto	u1500
  1525     055E                     u1501:
  1526     055E  2D4A               	goto	l2005
  1527     055F                     u1500:
  1528     055F                     l2009:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1531     055F  01B4               	clrf	?_vfprintf
  1532     0560  01B5               	clrf	?_vfprintf+1
  1533     0561                     l796:
  1534     0561  0008               	return
  1535     0562                     __end_of_vfprintf:
  1536                           
  1537                           	psect	text3
  1538     024A                     __ptext3:	
  1539 ;; *************** function _vfpfcnvrt *****************
  1540 ;; Defined at:
  1541 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  fp              2    5[BANK0 ] PTR struct _IO_FILE
  1544 ;;		 -> sprintf@f(11), 
  1545 ;;  fmt             1    7[BANK0 ] PTR PTR unsigned char 
  1546 ;;		 -> vfprintf@cfmt(2), 
  1547 ;;  ap              1    8[BANK0 ] PTR PTR void 
  1548 ;;		 -> sprintf@ap(1), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  convarg         4   15[BANK0 ] struct .
  1551 ;;  cp              2   13[BANK0 ] PTR unsigned char 
  1552 ;;		 -> STR_1(17), 
  1553 ;;  c               1   19[BANK0 ] unsigned char 
  1554 ;;  done            1    0        _Bool 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1564 ;;      Params:         0       4       0       0       0       0       0       0
  1565 ;;      Locals:         0       7       0       0       0       0       0       0
  1566 ;;      Temps:          0       4       0       0       0       0       0       0
  1567 ;;      Totals:         0      15       0       0       0       0       0       0
  1568 ;;Total ram usage:       15 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 3
  1571 ;; This function calls:
  1572 ;;		___lwdiv
  1573 ;;		___lwmod
  1574 ;;		_fputc
  1575 ;; This function is called by:
  1576 ;;		_vfprintf
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580     024A                     _vfpfcnvrt:	
  1581                           ;psect for function _vfpfcnvrt
  1582                           
  1583     024A                     l1959:	
  1584                           ;incstack = 0
  1585                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1586                           
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1589     024A  0140               	movlb	0	; select bank0
  1590     024B  0827               	movf	vfpfcnvrt@fmt,w
  1591     024C  0086               	movwf	6
  1592     024D  0187               	clrf	7
  1593     024E  3F40               	moviw [0]fsr1
  1594     024F  00A9               	movwf	??_vfpfcnvrt
  1595     0250  3F41               	moviw [1]fsr1
  1596     0251  00AA               	movwf	??_vfpfcnvrt+1
  1597     0252  0829               	movf	??_vfpfcnvrt,w
  1598     0253  0084               	movwf	4
  1599     0254  082A               	movf	??_vfpfcnvrt+1,w
  1600     0255  0085               	movwf	5
  1601     0256  0012               	moviw fsr0++
  1602     0257  3A25               	xorlw	37
  1603     0258  1D03               	btfss	3,2
  1604     0259  2A5B               	goto	u1451
  1605     025A  2A5C               	goto	u1450
  1606     025B                     u1451:
  1607     025B  2AF9               	goto	l1997
  1608     025C                     u1450:
  1609     025C                     l1961:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1612     025C  0827               	movf	vfpfcnvrt@fmt,w
  1613     025D  0086               	movwf	6
  1614     025E  0187               	clrf	7
  1615     025F  3001               	movlw	1
  1616     0260  0781               	addwf	1,f
  1617     0261  3141               	addfsr 1,1
  1618     0262  1803               	skipnc
  1619     0263  0A81               	incf	1,f
  1620     0264                     l1963:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1623     0264  01CA               	clrf	_width
  1624     0265  01CB               	clrf	_width+1
  1625     0266  3000               	movlw	0
  1626     0267  00D8               	movwf	_flags
  1627     0268                     l1965:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1630     0268  30FF               	movlw	255
  1631     0269  00CC               	movwf	_prec
  1632     026A  30FF               	movlw	255
  1633     026B  00CD               	movwf	_prec+1
  1634     026C                     l1967:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1637     026C  0827               	movf	vfpfcnvrt@fmt,w
  1638     026D  0086               	movwf	6
  1639     026E  0187               	clrf	7
  1640     026F  3F40               	moviw [0]fsr1
  1641     0270  00AD               	movwf	vfpfcnvrt@cp
  1642     0271  3F41               	moviw [1]fsr1
  1643     0272  00AE               	movwf	vfpfcnvrt@cp+1
  1644     0273                     l1969:
  1645     0273  082D               	movf	vfpfcnvrt@cp,w
  1646     0274  0084               	movwf	4
  1647     0275  082E               	movf	vfpfcnvrt@cp+1,w
  1648     0276  0085               	movwf	5
  1649     0277  0012               	moviw fsr0++
  1650     0278  3A75               	xorlw	117
  1651     0279  1D03               	btfss	3,2
  1652     027A  2A7C               	goto	u1461
  1653     027B  2A7D               	goto	u1460
  1654     027C                     u1461:
  1655     027C  2AEF               	goto	l1993
  1656     027D                     u1460:
  1657     027D                     l1971:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1660     027D  0828               	movf	vfpfcnvrt@ap,w
  1661     027E  0086               	movwf	6
  1662     027F  0187               	clrf	7
  1663     0280  0801               	movf	1,w
  1664     0281  0084               	movwf	4
  1665     0282  0185               	clrf	5
  1666     0283  3002               	movlw	2
  1667     0284  0781               	addwf	1,f
  1668     0285  3F00               	moviw [0]fsr0
  1669     0286  00AF               	movwf	vfpfcnvrt@convarg
  1670     0287  3F01               	moviw [1]fsr0
  1671     0288  00B0               	movwf	vfpfcnvrt@convarg+1
  1672     0289                     l1973:
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1675     0289  082D               	movf	vfpfcnvrt@cp,w
  1676     028A  3E01               	addlw	1
  1677     028B  00A9               	movwf	??_vfpfcnvrt
  1678     028C  3000               	movlw	0
  1679     028D  3D2E               	addwfc	vfpfcnvrt@cp+1,w
  1680     028E  00AA               	movwf	??_vfpfcnvrt+1
  1681     028F  0827               	movf	vfpfcnvrt@fmt,w
  1682     0290  0086               	movwf	6
  1683     0291  0187               	clrf	7
  1684     0292  0829               	movf	??_vfpfcnvrt,w
  1685     0293  3FC0               	movwi [0]fsr1
  1686     0294  082A               	movf	??_vfpfcnvrt+1,w
  1687     0295  3FC1               	movwi [1]fsr1
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  1690     0296  2AE6               	goto	l1991
  1691     0297                     l781:	
  1692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
  1693                           
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
  1696     0297  3020               	movlw	32
  1697     0298  00B3               	movwf	vfpfcnvrt@c
  1698     0299                     l1975:
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
  1701     0299  3001               	movlw	1
  1702     029A  02B3               	subwf	vfpfcnvrt@c,f
  1703     029B  0833               	movf	vfpfcnvrt@c,w
  1704     029C  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1705     029D  0086               	movwf	6
  1706     029E  0187               	clrf	7
  1707     029F  300A               	movlw	10
  1708     02A0  00F2               	movwf	___lwmod@divisor
  1709     02A1  3000               	movlw	0
  1710     02A2  00F3               	movwf	___lwmod@divisor+1
  1711     02A3  0830               	movf	vfpfcnvrt@convarg+1,w
  1712     02A4  00F5               	movwf	___lwmod@dividend+1
  1713     02A5  082F               	movf	vfpfcnvrt@convarg,w
  1714     02A6  00F4               	movwf	___lwmod@dividend
  1715     02A7  3184  24EE  3182   	fcall	___lwmod
  1716     02AA  0872               	movf	?___lwmod,w
  1717     02AB  3E30               	addlw	48
  1718     02AC  0081               	movwf	1
  1719     02AD                     l1977:
  1720                           
  1721                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
  1722     02AD  300A               	movlw	10
  1723     02AE  00F2               	movwf	___lwdiv@divisor
  1724     02AF  3000               	movlw	0
  1725     02B0  00F3               	movwf	___lwdiv@divisor+1
  1726     02B1  0140               	movlb	0	; select bank0
  1727     02B2  0830               	movf	vfpfcnvrt@convarg+1,w
  1728     02B3  00F5               	movwf	___lwdiv@dividend+1
  1729     02B4  082F               	movf	vfpfcnvrt@convarg,w
  1730     02B5  00F4               	movwf	___lwdiv@dividend
  1731     02B6  3184  24B4  3182   	fcall	___lwdiv
  1732     02B9  0873               	movf	?___lwdiv+1,w
  1733     02BA  0140               	movlb	0	; select bank0
  1734     02BB  00B0               	movwf	vfpfcnvrt@convarg+1
  1735     02BC  0872               	movf	?___lwdiv,w
  1736     02BD  00AF               	movwf	vfpfcnvrt@convarg
  1737     02BE                     l1979:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
  1740     02BE  082F               	movf	vfpfcnvrt@convarg,w
  1741     02BF  0430               	iorwf	vfpfcnvrt@convarg+1,w
  1742     02C0  1903               	btfsc	3,2
  1743     02C1  2AC3               	goto	u1471
  1744     02C2  2AC4               	goto	u1470
  1745     02C3                     u1471:
  1746     02C3  2ADF               	goto	l1987
  1747     02C4                     u1470:
  1748     02C4                     l1981:
  1749     02C4  0833               	movf	vfpfcnvrt@c,w
  1750     02C5  1D03               	btfss	3,2
  1751     02C6  2AC8               	goto	u1481
  1752     02C7  2AC9               	goto	u1480
  1753     02C8                     u1481:
  1754     02C8  2A99               	goto	l1975
  1755     02C9                     u1480:
  1756     02C9  2ADF               	goto	l1987
  1757     02CA                     l1983:
  1758                           
  1759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
  1760     02CA  0833               	movf	vfpfcnvrt@c,w
  1761     02CB  3EA0               	addlw	(low (_dbuf| 0))& (0+255)
  1762     02CC  0086               	movwf	6
  1763     02CD  0187               	clrf	7
  1764     02CE  0801               	movf	1,w
  1765     02CF  00A9               	movwf	??_vfpfcnvrt
  1766     02D0  01AA               	clrf	??_vfpfcnvrt+1
  1767     02D1  0829               	movf	??_vfpfcnvrt,w
  1768     02D2  00F2               	movwf	fputc@c
  1769     02D3  082A               	movf	??_vfpfcnvrt+1,w
  1770     02D4  00F3               	movwf	fputc@c+1
  1771     02D5  0826               	movf	vfpfcnvrt@fp+1,w
  1772     02D6  00F5               	movwf	fputc@fp+1
  1773     02D7  0825               	movf	vfpfcnvrt@fp,w
  1774     02D8  00F4               	movwf	fputc@fp
  1775     02D9  3184  245B  3182   	fcall	_fputc
  1776     02DC                     l1985:
  1777     02DC  3001               	movlw	1
  1778     02DD  0140               	movlb	0	; select bank0
  1779     02DE  07B3               	addwf	vfpfcnvrt@c,f
  1780     02DF                     l1987:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
  1783     02DF  3020               	movlw	32
  1784     02E0  0633               	xorwf	vfpfcnvrt@c,w
  1785     02E1  1D03               	btfss	3,2
  1786     02E2  2AE4               	goto	u1491
  1787     02E3  2AE5               	goto	u1490
  1788     02E4                     u1491:
  1789     02E4  2ACA               	goto	l1983
  1790     02E5                     u1490:
  1791     02E5  2B13               	goto	l789
  1792     02E6                     l1991:
  1793     02E6  082D               	movf	vfpfcnvrt@cp,w
  1794     02E7  0084               	movwf	4
  1795     02E8  082E               	movf	vfpfcnvrt@cp+1,w
  1796     02E9  0085               	movwf	5
  1797     02EA  0800               	movf	0,w	;code access
  1798                           
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 1, Range of values is 117 to 117
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte            4     3 (average)
  1804                           ; direct_byte           11     9 (fixed)
  1805                           ; jumptable            263     9 (fixed)
  1806                           ;	Chosen strategy is simple_byte
  1807     02EB  3A75               	xorlw	117	; case 117
  1808     02EC  1903               	skipnz
  1809     02ED  2A97               	goto	l781
  1810     02EE  2AEF               	goto	l1993
  1811     02EF                     l1993:
  1812                           
  1813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1814     02EF  0140               	movlb	0	; select bank0
  1815     02F0  0827               	movf	vfpfcnvrt@fmt,w
  1816     02F1  0086               	movwf	6
  1817     02F2  0187               	clrf	7
  1818     02F3  3001               	movlw	1
  1819     02F4  0781               	addwf	1,f
  1820     02F5  3141               	addfsr 1,1
  1821     02F6  1803               	skipnc
  1822     02F7  0A81               	incf	1,f
  1823     02F8  2B13               	goto	l789
  1824     02F9                     l1997:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1827     02F9  0827               	movf	vfpfcnvrt@fmt,w
  1828     02FA  0086               	movwf	6
  1829     02FB  0187               	clrf	7
  1830     02FC  3F40               	moviw [0]fsr1
  1831     02FD  00A9               	movwf	??_vfpfcnvrt
  1832     02FE  3F41               	moviw [1]fsr1
  1833     02FF  00AA               	movwf	??_vfpfcnvrt+1
  1834     0300  0829               	movf	??_vfpfcnvrt,w
  1835     0301  0084               	movwf	4
  1836     0302  082A               	movf	??_vfpfcnvrt+1,w
  1837     0303  0085               	movwf	5
  1838     0304  0800               	movf	0,w	;code access
  1839     0305  00AB               	movwf	??_vfpfcnvrt+2
  1840     0306  01AC               	clrf	??_vfpfcnvrt+3
  1841     0307  082B               	movf	??_vfpfcnvrt+2,w
  1842     0308  00F2               	movwf	fputc@c
  1843     0309  082C               	movf	??_vfpfcnvrt+3,w
  1844     030A  00F3               	movwf	fputc@c+1
  1845     030B  0826               	movf	vfpfcnvrt@fp+1,w
  1846     030C  00F5               	movwf	fputc@fp+1
  1847     030D  0825               	movf	vfpfcnvrt@fp,w
  1848     030E  00F4               	movwf	fputc@fp
  1849     030F  3184  245B  3182   	fcall	_fputc
  1850     0312  2AEF               	goto	l1993
  1851     0313                     l789:
  1852     0313  0008               	return
  1853     0314                     __end_of_vfpfcnvrt:
  1854                           
  1855                           	psect	text4
  1856     045B                     __ptext4:	
  1857 ;; *************** function _fputc *****************
  1858 ;; Defined at:
  1859 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  c               2    2[COMMON] int 
  1862 ;;  fp              2    4[COMMON] PTR struct _IO_FILE
  1863 ;;		 -> sprintf@f(11), 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  2    2[COMMON] int 
  1868 ;; Registers used:
  1869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1875 ;;      Params:         4       0       0       0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0
  1877 ;;      Temps:          0       5       0       0       0       0       0       0
  1878 ;;      Totals:         4       5       0       0       0       0       0       0
  1879 ;;Total ram usage:        9 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 2
  1882 ;; This function calls:
  1883 ;;		_putch
  1884 ;; This function is called by:
  1885 ;;		_vfpfcnvrt
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889     045B                     _fputc:	
  1890                           ;psect for function _fputc
  1891                           
  1892     045B                     l1943:	
  1893                           ;incstack = 0
  1894                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1895                           
  1896     045B  0874               	movf	fputc@fp,w
  1897     045C  0475               	iorwf	fputc@fp+1,w
  1898     045D  1903               	btfsc	3,2
  1899     045E  2C60               	goto	u1411
  1900     045F  2C61               	goto	u1410
  1901     0460                     u1411:
  1902     0460  2C67               	goto	l1947
  1903     0461                     u1410:
  1904     0461                     l1945:
  1905     0461  0874               	movf	fputc@fp,w
  1906     0462  0475               	iorwf	fputc@fp+1,w
  1907     0463  1D03               	btfss	3,2
  1908     0464  2C66               	goto	u1421
  1909     0465  2C67               	goto	u1420
  1910     0466                     u1421:
  1911     0466  2C6C               	goto	l1949
  1912     0467                     u1420:
  1913     0467                     l1947:
  1914     0467  0872               	movf	fputc@c,w
  1915     0468  3185  25B6  3184   	fcall	_putch
  1916     046B  2CB3               	goto	l808
  1917     046C                     l1949:
  1918     046C  0874               	movf	fputc@fp,w
  1919     046D  0086               	movwf	6
  1920     046E  0187               	clrf	7
  1921     046F  3149               	addfsr 1,9
  1922     0470  0016               	moviw fsr1++
  1923     0471  0401               	iorwf	1,w
  1924     0472  1903               	btfsc	3,2
  1925     0473  2C75               	goto	u1431
  1926     0474  2C76               	goto	u1430
  1927     0475                     u1431:
  1928     0475  2C95               	goto	l1953
  1929     0476                     u1430:
  1930     0476                     l1951:
  1931     0476  0874               	movf	fputc@fp,w
  1932     0477  0086               	movwf	6
  1933     0478  0187               	clrf	7
  1934     0479  3149               	addfsr 1,9
  1935     047A  3F40               	moviw [0]fsr1
  1936     047B  0140               	movlb	0	; select bank0
  1937     047C  00A0               	movwf	??_fputc
  1938     047D  3F41               	moviw [1]fsr1
  1939     047E  00A1               	movwf	??_fputc+1
  1940     047F  0874               	movf	fputc@fp,w
  1941     0480  0086               	movwf	6
  1942     0481  0187               	clrf	7
  1943     0482  3142               	addfsr 1,2
  1944     0483  3F40               	moviw [0]fsr1
  1945     0484  00A2               	movwf	??_fputc+2
  1946     0485  3F41               	moviw [1]fsr1
  1947     0486  00A3               	movwf	??_fputc+3
  1948     0487  0823               	movf	??_fputc+3,w
  1949     0488  3A80               	xorlw	128
  1950     0489  00A4               	movwf	??_fputc+4
  1951     048A  0821               	movf	??_fputc+1,w
  1952     048B  3A80               	xorlw	128
  1953     048C  0224               	subwf	??_fputc+4,w
  1954     048D  1D03               	skipz
  1955     048E  2C91               	goto	u1445
  1956     048F  0820               	movf	??_fputc,w
  1957     0490  0222               	subwf	??_fputc+2,w
  1958     0491                     u1445:
  1959     0491  1803               	skipnc
  1960     0492  2C94               	goto	u1441
  1961     0493  2C95               	goto	u1440
  1962     0494                     u1441:
  1963     0494  2CB3               	goto	l808
  1964     0495                     u1440:
  1965     0495                     l1953:
  1966     0495  0874               	movf	fputc@fp,w
  1967     0496  0086               	movwf	6
  1968     0497  0187               	clrf	7
  1969     0498  3142               	addfsr 1,2
  1970     0499  0874               	movf	fputc@fp,w
  1971     049A  0084               	movwf	4
  1972     049B  0875               	movf	fputc@fp+1,w
  1973     049C  0085               	movwf	5
  1974     049D  3F00               	moviw [0]fsr0
  1975     049E  0140               	movlb	0	; select bank0
  1976     049F  00A0               	movwf	??_fputc
  1977     04A0  3F01               	moviw [1]fsr0
  1978     04A1  00A1               	movwf	??_fputc+1
  1979     04A2  3F40               	moviw [0]fsr1
  1980     04A3  0720               	addwf	??_fputc,w
  1981     04A4  0084               	movwf	4
  1982     04A5  3F41               	moviw [1]fsr1
  1983     04A6  3D21               	addwfc	??_fputc+1,w
  1984     04A7  0085               	movwf	5
  1985     04A8  0872               	movf	fputc@c,w
  1986     04A9  0080               	movwf	0
  1987     04AA                     l1955:
  1988     04AA  0874               	movf	fputc@fp,w
  1989     04AB  0086               	movwf	6
  1990     04AC  0187               	clrf	7
  1991     04AD  3142               	addfsr 1,2
  1992     04AE  3001               	movlw	1
  1993     04AF  0781               	addwf	1,f
  1994     04B0  3141               	addfsr 1,1
  1995     04B1  1803               	skipnc
  1996     04B2  0A81               	incf	1,f
  1997     04B3                     l808:
  1998     04B3  0008               	return
  1999     04B4                     __end_of_fputc:
  2000                           
  2001                           	psect	text5
  2002     05B6                     __ptext5:	
  2003 ;; *************** function _putch *****************
  2004 ;; Defined at:
  2005 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  c               1    wreg     unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  c               1    0[COMMON] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2019 ;;      Params:         0       0       0       0       0       0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0
  2022 ;;      Totals:         0       0       0       0       0       0       0       0
  2023 ;;Total ram usage:        0 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_fputc
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033     05B6                     _putch:	
  2034                           ;psect for function _putch
  2035                           
  2036     05B6                     l819:	
  2037                           ;incstack = 0
  2038                           ; Regs used in _putch: [wreg]
  2039                           
  2040     05B6  0008               	return
  2041     05B7                     __end_of_putch:
  2042                           
  2043                           	psect	text6
  2044     04EE                     __ptext6:	
  2045 ;; *************** function ___lwmod *****************
  2046 ;; Defined at:
  2047 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  divisor         2    2[COMMON] unsigned int 
  2050 ;;  dividend        2    4[COMMON] unsigned int 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  counter         1    6[COMMON] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2    2[COMMON] unsigned int 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2062 ;;      Params:         4       0       0       0       0       0       0       0
  2063 ;;      Locals:         1       0       0       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0
  2065 ;;      Totals:         5       0       0       0       0       0       0       0
  2066 ;;Total ram usage:        5 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_vfpfcnvrt
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076     04EE                     ___lwmod:	
  2077                           ;psect for function ___lwmod
  2078                           
  2079     04EE                     l1921:	
  2080                           ;incstack = 0
  2081                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2082                           
  2083     04EE  0872               	movf	___lwmod@divisor,w
  2084     04EF  0473               	iorwf	___lwmod@divisor+1,w
  2085     04F0  1903               	btfsc	3,2
  2086     04F1  2CF3               	goto	u1351
  2087     04F2  2CF4               	goto	u1350
  2088     04F3                     u1351:
  2089     04F3  2D1B               	goto	l1939
  2090     04F4                     u1350:
  2091     04F4                     l1923:
  2092     04F4  3001               	movlw	1
  2093     04F5  00F6               	movwf	___lwmod@counter
  2094     04F6  2CFE               	goto	l1929
  2095     04F7                     l1925:
  2096     04F7  3001               	movlw	1
  2097     04F8                     u1365:
  2098     04F8  35F2               	lslf	___lwmod@divisor,f
  2099     04F9  0DF3               	rlf	___lwmod@divisor+1,f
  2100     04FA  0B89               	decfsz	9,f
  2101     04FB  2CF8               	goto	u1365
  2102     04FC                     l1927:
  2103     04FC  3001               	movlw	1
  2104     04FD  07F6               	addwf	___lwmod@counter,f
  2105     04FE                     l1929:
  2106     04FE  1FF3               	btfss	___lwmod@divisor+1,7
  2107     04FF  2D01               	goto	u1371
  2108     0500  2D02               	goto	u1370
  2109     0501                     u1371:
  2110     0501  2CF7               	goto	l1925
  2111     0502                     u1370:
  2112     0502                     l1931:
  2113     0502  0873               	movf	___lwmod@divisor+1,w
  2114     0503  0275               	subwf	___lwmod@dividend+1,w
  2115     0504  1D03               	skipz
  2116     0505  2D08               	goto	u1385
  2117     0506  0872               	movf	___lwmod@divisor,w
  2118     0507  0274               	subwf	___lwmod@dividend,w
  2119     0508                     u1385:
  2120     0508  1C03               	skipc
  2121     0509  2D0B               	goto	u1381
  2122     050A  2D0C               	goto	u1380
  2123     050B                     u1381:
  2124     050B  2D10               	goto	l1935
  2125     050C                     u1380:
  2126     050C                     l1933:
  2127     050C  0872               	movf	___lwmod@divisor,w
  2128     050D  02F4               	subwf	___lwmod@dividend,f
  2129     050E  0873               	movf	___lwmod@divisor+1,w
  2130     050F  3BF5               	subwfb	___lwmod@dividend+1,f
  2131     0510                     l1935:
  2132     0510  3001               	movlw	1
  2133     0511                     u1395:
  2134     0511  36F3               	lsrf	___lwmod@divisor+1,f
  2135     0512  0CF2               	rrf	___lwmod@divisor,f
  2136     0513  0B89               	decfsz	9,f
  2137     0514  2D11               	goto	u1395
  2138     0515                     l1937:
  2139     0515  3001               	movlw	1
  2140     0516  02F6               	subwf	___lwmod@counter,f
  2141     0517  1D03               	btfss	3,2
  2142     0518  2D1A               	goto	u1401
  2143     0519  2D1B               	goto	u1400
  2144     051A                     u1401:
  2145     051A  2D02               	goto	l1931
  2146     051B                     u1400:
  2147     051B                     l1939:
  2148     051B  0875               	movf	___lwmod@dividend+1,w
  2149     051C  00F3               	movwf	?___lwmod+1
  2150     051D  0874               	movf	___lwmod@dividend,w
  2151     051E  00F2               	movwf	?___lwmod
  2152     051F                     l579:
  2153     051F  0008               	return
  2154     0520                     __end_of___lwmod:
  2155                           
  2156                           	psect	text7
  2157     04B4                     __ptext7:	
  2158 ;; *************** function ___lwdiv *****************
  2159 ;; Defined at:
  2160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  divisor         2    2[COMMON] unsigned int 
  2163 ;;  dividend        2    4[COMMON] unsigned int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  quotient        2    7[COMMON] unsigned int 
  2166 ;;  counter         1    6[COMMON] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  2    2[COMMON] unsigned int 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2176 ;;      Params:         4       0       0       0       0       0       0       0
  2177 ;;      Locals:         3       0       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0
  2179 ;;      Totals:         7       0       0       0       0       0       0       0
  2180 ;;Total ram usage:        7 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_vfpfcnvrt
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190     04B4                     ___lwdiv:	
  2191                           ;psect for function ___lwdiv
  2192                           
  2193     04B4                     l1895:	
  2194                           ;incstack = 0
  2195                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2196                           
  2197     04B4  01F7               	clrf	___lwdiv@quotient
  2198     04B5  01F8               	clrf	___lwdiv@quotient+1
  2199     04B6                     l1897:
  2200     04B6  0872               	movf	___lwdiv@divisor,w
  2201     04B7  0473               	iorwf	___lwdiv@divisor+1,w
  2202     04B8  1903               	btfsc	3,2
  2203     04B9  2CBB               	goto	u1281
  2204     04BA  2CBC               	goto	u1280
  2205     04BB                     u1281:
  2206     04BB  2CE9               	goto	l1917
  2207     04BC                     u1280:
  2208     04BC                     l1899:
  2209     04BC  3001               	movlw	1
  2210     04BD  00F6               	movwf	___lwdiv@counter
  2211     04BE  2CC6               	goto	l1905
  2212     04BF                     l1901:
  2213     04BF  3001               	movlw	1
  2214     04C0                     u1295:
  2215     04C0  35F2               	lslf	___lwdiv@divisor,f
  2216     04C1  0DF3               	rlf	___lwdiv@divisor+1,f
  2217     04C2  0B89               	decfsz	9,f
  2218     04C3  2CC0               	goto	u1295
  2219     04C4                     l1903:
  2220     04C4  3001               	movlw	1
  2221     04C5  07F6               	addwf	___lwdiv@counter,f
  2222     04C6                     l1905:
  2223     04C6  1FF3               	btfss	___lwdiv@divisor+1,7
  2224     04C7  2CC9               	goto	u1301
  2225     04C8  2CCA               	goto	u1300
  2226     04C9                     u1301:
  2227     04C9  2CBF               	goto	l1901
  2228     04CA                     u1300:
  2229     04CA                     l1907:
  2230     04CA  3001               	movlw	1
  2231     04CB                     u1315:
  2232     04CB  35F7               	lslf	___lwdiv@quotient,f
  2233     04CC  0DF8               	rlf	___lwdiv@quotient+1,f
  2234     04CD  0B89               	decfsz	9,f
  2235     04CE  2CCB               	goto	u1315
  2236     04CF  0873               	movf	___lwdiv@divisor+1,w
  2237     04D0  0275               	subwf	___lwdiv@dividend+1,w
  2238     04D1  1D03               	skipz
  2239     04D2  2CD5               	goto	u1325
  2240     04D3  0872               	movf	___lwdiv@divisor,w
  2241     04D4  0274               	subwf	___lwdiv@dividend,w
  2242     04D5                     u1325:
  2243     04D5  1C03               	skipc
  2244     04D6  2CD8               	goto	u1321
  2245     04D7  2CD9               	goto	u1320
  2246     04D8                     u1321:
  2247     04D8  2CDE               	goto	l1913
  2248     04D9                     u1320:
  2249     04D9                     l1909:
  2250     04D9  0872               	movf	___lwdiv@divisor,w
  2251     04DA  02F4               	subwf	___lwdiv@dividend,f
  2252     04DB  0873               	movf	___lwdiv@divisor+1,w
  2253     04DC  3BF5               	subwfb	___lwdiv@dividend+1,f
  2254     04DD                     l1911:
  2255     04DD  1477               	bsf	___lwdiv@quotient,0
  2256     04DE                     l1913:
  2257     04DE  3001               	movlw	1
  2258     04DF                     u1335:
  2259     04DF  36F3               	lsrf	___lwdiv@divisor+1,f
  2260     04E0  0CF2               	rrf	___lwdiv@divisor,f
  2261     04E1  0B89               	decfsz	9,f
  2262     04E2  2CDF               	goto	u1335
  2263     04E3                     l1915:
  2264     04E3  3001               	movlw	1
  2265     04E4  02F6               	subwf	___lwdiv@counter,f
  2266     04E5  1D03               	btfss	3,2
  2267     04E6  2CE8               	goto	u1341
  2268     04E7  2CE9               	goto	u1340
  2269     04E8                     u1341:
  2270     04E8  2CCA               	goto	l1907
  2271     04E9                     u1340:
  2272     04E9                     l1917:
  2273     04E9  0878               	movf	___lwdiv@quotient+1,w
  2274     04EA  00F3               	movwf	?___lwdiv+1
  2275     04EB  0877               	movf	___lwdiv@quotient,w
  2276     04EC  00F2               	movwf	?___lwdiv
  2277     04ED                     l569:
  2278     04ED  0008               	return
  2279     04EE                     __end_of___lwdiv:
  2280                           
  2281                           	psect	text8
  2282     0314                     __ptext8:	
  2283 ;; *************** function _get_TMR0L_from_voltage *****************
  2284 ;; Defined at:
  2285 ;;		line 189 in file "vtg_main.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  voltage         1    wreg     unsigned char 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  voltage         1    2[COMMON] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      unsigned char 
  2292 ;; Registers used:
  2293 ;;		wreg
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2299 ;;      Params:         0       0       0       0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0       0       0       0
  2302 ;;      Totals:         1       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        1 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 1
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313     0314                     _get_TMR0L_from_voltage:	
  2314                           ;psect for function _get_TMR0L_from_voltage
  2315                           
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _get_TMR0L_from_voltage: [wreg]
  2319                           ;get_TMR0L_from_voltage@voltage stored from wreg
  2320     0314  00F2               	movwf	get_TMR0L_from_voltage@voltage
  2321     0315                     l1501:
  2322                           
  2323                           ;vtg_main.c: 189: uint8_t get_TMR0L_from_voltage(uint8_t voltage);vtg_main.c: 190: {;vtg
      +                          _main.c: 191:     if(voltage <= 5){
  2324     0315  3006               	movlw	6
  2325     0316  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2326     0317  1803               	skipnc
  2327     0318  2B1A               	goto	u901
  2328     0319  2B1B               	goto	u900
  2329     031A                     u901:
  2330     031A  2B1D               	goto	l1509
  2331     031B                     u900:
  2332     031B                     l1503:
  2333                           
  2334                           ;vtg_main.c: 192:         return 149;
  2335     031B  3095               	movlw	149
  2336     031C  2BB7               	goto	l137
  2337     031D                     l1509:
  2338     031D  300B               	movlw	11
  2339     031E  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2340     031F  1803               	skipnc
  2341     0320  2B22               	goto	u911
  2342     0321  2B23               	goto	u910
  2343     0322                     u911:
  2344     0322  2B24               	goto	l1517
  2345     0323                     u910:
  2346     0323  2B1B               	goto	l1503
  2347     0324                     l1517:
  2348     0324  3010               	movlw	16
  2349     0325  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2350     0326  1803               	skipnc
  2351     0327  2B29               	goto	u921
  2352     0328  2B2A               	goto	u920
  2353     0329                     u921:
  2354     0329  2B2B               	goto	l1525
  2355     032A                     u920:
  2356     032A  2B1B               	goto	l1503
  2357     032B                     l1525:
  2358     032B  3015               	movlw	21
  2359     032C  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2360     032D  1803               	skipnc
  2361     032E  2B30               	goto	u931
  2362     032F  2B31               	goto	u930
  2363     0330                     u931:
  2364     0330  2B32               	goto	l1533
  2365     0331                     u930:
  2366     0331  2B1B               	goto	l1503
  2367     0332                     l1533:
  2368     0332  301F               	movlw	31
  2369     0333  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2370     0334  1803               	skipnc
  2371     0335  2B37               	goto	u941
  2372     0336  2B38               	goto	u940
  2373     0337                     u941:
  2374     0337  2B39               	goto	l1541
  2375     0338                     u940:
  2376     0338  2B1B               	goto	l1503
  2377     0339                     l1541:
  2378     0339  3024               	movlw	36
  2379     033A  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2380     033B  1803               	skipnc
  2381     033C  2B3E               	goto	u951
  2382     033D  2B3F               	goto	u950
  2383     033E                     u951:
  2384     033E  2B40               	goto	l1549
  2385     033F                     u950:
  2386     033F  2B1B               	goto	l1503
  2387     0340                     l1549:
  2388     0340  3029               	movlw	41
  2389     0341  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2390     0342  1803               	skipnc
  2391     0343  2B45               	goto	u961
  2392     0344  2B46               	goto	u960
  2393     0345                     u961:
  2394     0345  2B47               	goto	l1557
  2395     0346                     u960:
  2396     0346  2B1B               	goto	l1503
  2397     0347                     l1557:
  2398     0347  3033               	movlw	51
  2399     0348  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2400     0349  1803               	skipnc
  2401     034A  2B4C               	goto	u971
  2402     034B  2B4D               	goto	u970
  2403     034C                     u971:
  2404     034C  2B4F               	goto	l1565
  2405     034D                     u970:
  2406     034D                     l1559:
  2407                           
  2408                           ;vtg_main.c: 213:         return 156;
  2409     034D  309C               	movlw	156
  2410     034E  2BB7               	goto	l137
  2411     034F                     l1565:
  2412     034F  303D               	movlw	61
  2413     0350  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2414     0351  1803               	skipnc
  2415     0352  2B54               	goto	u981
  2416     0353  2B55               	goto	u980
  2417     0354                     u981:
  2418     0354  2B57               	goto	l1573
  2419     0355                     u980:
  2420     0355                     l1567:
  2421                           
  2422                           ;vtg_main.c: 216:         return 164;
  2423     0355  30A4               	movlw	164
  2424     0356  2BB7               	goto	l137
  2425     0357                     l1573:
  2426     0357  3046               	movlw	70
  2427     0358  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2428     0359  1803               	skipnc
  2429     035A  2B5C               	goto	u991
  2430     035B  2B5D               	goto	u990
  2431     035C                     u991:
  2432     035C  2B5F               	goto	l1581
  2433     035D                     u990:
  2434     035D                     l1575:
  2435                           
  2436                           ;vtg_main.c: 219:         return 172;
  2437     035D  30AC               	movlw	172
  2438     035E  2BB7               	goto	l137
  2439     035F                     l1581:
  2440     035F  304F               	movlw	79
  2441     0360  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2442     0361  1803               	skipnc
  2443     0362  2B64               	goto	u1001
  2444     0363  2B65               	goto	u1000
  2445     0364                     u1001:
  2446     0364  2B67               	goto	l1589
  2447     0365                     u1000:
  2448     0365                     l1583:
  2449                           
  2450                           ;vtg_main.c: 222:         return 180;
  2451     0365  30B4               	movlw	180
  2452     0366  2BB7               	goto	l137
  2453     0367                     l1589:
  2454     0367  3074               	movlw	116
  2455     0368  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2456     0369  1803               	skipnc
  2457     036A  2B6C               	goto	u1011
  2458     036B  2B6D               	goto	u1010
  2459     036C                     u1011:
  2460     036C  2B6F               	goto	l1597
  2461     036D                     u1010:
  2462     036D                     l1591:
  2463                           
  2464                           ;vtg_main.c: 225:         return 187;
  2465     036D  30BB               	movlw	187
  2466     036E  2BB7               	goto	l137
  2467     036F                     l1597:
  2468     036F  308D               	movlw	141
  2469     0370  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2470     0371  1803               	skipnc
  2471     0372  2B74               	goto	u1021
  2472     0373  2B75               	goto	u1020
  2473     0374                     u1021:
  2474     0374  2B77               	goto	l1605
  2475     0375                     u1020:
  2476     0375                     l1599:
  2477                           
  2478                           ;vtg_main.c: 228:         return 195;
  2479     0375  30C3               	movlw	195
  2480     0376  2BB7               	goto	l137
  2481     0377                     l1605:
  2482     0377  30A1               	movlw	161
  2483     0378  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2484     0379  1803               	skipnc
  2485     037A  2B7C               	goto	u1031
  2486     037B  2B7D               	goto	u1030
  2487     037C                     u1031:
  2488     037C  2B7F               	goto	l1613
  2489     037D                     u1030:
  2490     037D                     l1607:
  2491                           
  2492                           ;vtg_main.c: 231:         return 203;
  2493     037D  30CB               	movlw	203
  2494     037E  2BB7               	goto	l137
  2495     037F                     l1613:
  2496     037F  30AB               	movlw	171
  2497     0380  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2498     0381  1803               	skipnc
  2499     0382  2B84               	goto	u1041
  2500     0383  2B85               	goto	u1040
  2501     0384                     u1041:
  2502     0384  2B87               	goto	l1621
  2503     0385                     u1040:
  2504     0385                     l1615:
  2505                           
  2506                           ;vtg_main.c: 234:         return 210;
  2507     0385  30D2               	movlw	210
  2508     0386  2BB7               	goto	l137
  2509     0387                     l1621:
  2510     0387  30B5               	movlw	181
  2511     0388  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2512     0389  1803               	skipnc
  2513     038A  2B8C               	goto	u1051
  2514     038B  2B8D               	goto	u1050
  2515     038C                     u1051:
  2516     038C  2B8F               	goto	l1629
  2517     038D                     u1050:
  2518     038D                     l1623:
  2519                           
  2520                           ;vtg_main.c: 237:         return 218;
  2521     038D  30DA               	movlw	218
  2522     038E  2BB7               	goto	l137
  2523     038F                     l1629:
  2524     038F  30BF               	movlw	191
  2525     0390  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2526     0391  1803               	skipnc
  2527     0392  2B94               	goto	u1061
  2528     0393  2B95               	goto	u1060
  2529     0394                     u1061:
  2530     0394  2B97               	goto	l1637
  2531     0395                     u1060:
  2532     0395                     l1631:
  2533                           
  2534                           ;vtg_main.c: 240:         return 226;
  2535     0395  30E2               	movlw	226
  2536     0396  2BB7               	goto	l137
  2537     0397                     l1637:
  2538     0397  30C9               	movlw	201
  2539     0398  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2540     0399  1803               	skipnc
  2541     039A  2B9C               	goto	u1071
  2542     039B  2B9D               	goto	u1070
  2543     039C                     u1071:
  2544     039C  2B9F               	goto	l1645
  2545     039D                     u1070:
  2546     039D                     l1639:
  2547                           
  2548                           ;vtg_main.c: 243:         return 235;
  2549     039D  30EB               	movlw	235
  2550     039E  2BB7               	goto	l137
  2551     039F                     l1645:
  2552     039F  30D3               	movlw	211
  2553     03A0  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2554     03A1  1803               	skipnc
  2555     03A2  2BA4               	goto	u1081
  2556     03A3  2BA5               	goto	u1080
  2557     03A4                     u1081:
  2558     03A4  2BA7               	goto	l1653
  2559     03A5                     u1080:
  2560     03A5                     l1647:
  2561                           
  2562                           ;vtg_main.c: 246:         return 242;
  2563     03A5  30F2               	movlw	242
  2564     03A6  2BB7               	goto	l137
  2565     03A7                     l1653:
  2566     03A7  30DD               	movlw	221
  2567     03A8  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2568     03A9  1803               	skipnc
  2569     03AA  2BAC               	goto	u1091
  2570     03AB  2BAD               	goto	u1090
  2571     03AC                     u1091:
  2572     03AC  2BAF               	goto	l1661
  2573     03AD                     u1090:
  2574     03AD                     l1655:
  2575                           
  2576                           ;vtg_main.c: 249:         return 248;
  2577     03AD  30F8               	movlw	248
  2578     03AE  2BB7               	goto	l137
  2579     03AF                     l1661:
  2580     03AF  30E7               	movlw	231
  2581     03B0  0272               	subwf	get_TMR0L_from_voltage@voltage,w
  2582     03B1  1803               	skipnc
  2583     03B2  2BB4               	goto	u1101
  2584     03B3  2BB5               	goto	u1100
  2585     03B4                     u1101:
  2586     03B4  2BB7               	goto	l172
  2587     03B5                     u1100:
  2588     03B5                     l1663:
  2589                           
  2590                           ;vtg_main.c: 252:         return 252;
  2591     03B5  30FC               	movlw	252
  2592     03B6  2BB7               	goto	l137
  2593     03B7                     l172:
  2594     03B7                     l137:
  2595     03B7  0008               	return
  2596     03B8                     __end_of_get_TMR0L_from_voltage:
  2597                           
  2598                           	psect	text9
  2599     057C                     __ptext9:	
  2600 ;; *************** function _UART_Write_Text *****************
  2601 ;; Defined at:
  2602 ;;		line 124 in file "vtg_main.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  text            1    3[COMMON] PTR const unsigned char 
  2605 ;;		 -> buffer(64), 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2617 ;;      Params:         1       0       0       0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0
  2620 ;;      Totals:         1       0       0       0       0       0       0       0
  2621 ;;Total ram usage:        1 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 2
  2624 ;; This function calls:
  2625 ;;		_EUSART1_Write
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631     057C                     _UART_Write_Text:	
  2632                           ;psect for function _UART_Write_Text
  2633                           
  2634     057C                     l1493:	
  2635                           ;incstack = 0
  2636                           ; Regs used in _UART_Write_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2637                           
  2638                           
  2639                           ;vtg_main.c: 125:     while (*text != '\0') {
  2640     057C  2D87               	goto	l1499
  2641     057D                     l1495:
  2642                           
  2643                           ;vtg_main.c: 126:         EUSART1_Write(*text);
  2644     057D  0873               	movf	UART_Write_Text@text,w
  2645     057E  0086               	movwf	6
  2646     057F  3001               	movlw	1	; select bank2/3
  2647     0580  0087               	movwf	7
  2648     0581  0801               	movf	1,w
  2649     0582  3185  25A2  3185   	fcall	_EUSART1_Write
  2650     0585                     l1497:
  2651                           
  2652                           ;vtg_main.c: 127:         text++;
  2653     0585  3001               	movlw	1
  2654     0586  07F3               	addwf	UART_Write_Text@text,f
  2655     0587                     l1499:
  2656                           
  2657                           ;vtg_main.c: 125:     while (*text != '\0') {
  2658     0587  0873               	movf	UART_Write_Text@text,w
  2659     0588  0086               	movwf	6
  2660     0589  3001               	movlw	1	; select bank2/3
  2661     058A  0087               	movwf	7
  2662     058B  0801               	movf	1,w
  2663     058C  1D03               	btfss	3,2
  2664     058D  2D8F               	goto	u891
  2665     058E  2D90               	goto	u890
  2666     058F                     u891:
  2667     058F  2D7D               	goto	l1495
  2668     0590                     u890:
  2669     0590                     l127:
  2670     0590  0008               	return
  2671     0591                     __end_of_UART_Write_Text:
  2672                           
  2673                           	psect	text10
  2674     05A2                     __ptext10:	
  2675 ;; *************** function _EUSART1_Write *****************
  2676 ;; Defined at:
  2677 ;;		line 118 in file "vtg_main.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  txData          1    wreg     unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  txData          1    2[COMMON] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2691 ;;      Params:         0       0       0       0       0       0       0       0
  2692 ;;      Locals:         1       0       0       0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0
  2694 ;;      Totals:         1       0       0       0       0       0       0       0
  2695 ;;Total ram usage:        1 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_UART_Write_Text
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705     05A2                     _EUSART1_Write:	
  2706                           ;psect for function _EUSART1_Write
  2707                           
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _EUSART1_Write: [wreg]
  2711                           ;EUSART1_Write@txData stored from wreg
  2712     05A2  00F2               	movwf	EUSART1_Write@txData
  2713     05A3                     l1471:
  2714     05A3                     l118:	
  2715                           ;vtg_main.c: 118: void EUSART1_Write(uint8_t txData);vtg_main.c: 119: {;vtg_main.c: 120:
      +                               while (!PIR1bits.TX1IF);
  2716                           
  2717     05A3  014E               	movlb	14	; select bank14
  2718     05A4  1D8D               	btfss	13,3	;volatile
  2719     05A5  2DA7               	goto	u871
  2720     05A6  2DA8               	goto	u870
  2721     05A7                     u871:
  2722     05A7  2DA3               	goto	l118
  2723     05A8                     u870:
  2724     05A8                     l1473:
  2725                           
  2726                           ;vtg_main.c: 121:     TX1REG = txData;
  2727     05A8  0872               	movf	EUSART1_Write@txData,w
  2728     05A9  0142               	movlb	2	; select bank2
  2729     05AA  009A               	movwf	26	;volatile
  2730     05AB                     l121:
  2731     05AB  0008               	return
  2732     05AC                     __end_of_EUSART1_Write:
  2733                           
  2734                           	psect	text11
  2735     0562                     __ptext11:	
  2736 ;; *************** function _UART_Init *****************
  2737 ;; Defined at:
  2738 ;;		line 94 in file "vtg_main.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		status,2
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2752 ;;      Params:         0       0       0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_main
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766     0562                     _UART_Init:	
  2767                           ;psect for function _UART_Init
  2768                           
  2769     0562                     l1485:	
  2770                           ;incstack = 0
  2771                           ; Regs used in _UART_Init: [status,2]
  2772                           
  2773                           
  2774                           ;vtg_main.c: 95:     RX1PPS = 0x14;
  2775     0562  3014               	movlw	20
  2776     0563  017D               	movlb	61	; select bank61
  2777     0564  00CB               	movwf	75	;volatile
  2778                           
  2779                           ;vtg_main.c: 96:     RC3PPS = 0x05;
  2780     0565  3005               	movlw	5
  2781     0566  017E               	movlb	62	; select bank62
  2782     0567  00A3               	movwf	35	;volatile
  2783                           
  2784                           ;vtg_main.c: 97:     ANSELA = 0x17;
  2785     0568  3017               	movlw	23
  2786     0569  00B8               	movwf	56	;volatile
  2787                           
  2788                           ;vtg_main.c: 98:     ANSELC = 0x27;
  2789     056A  3027               	movlw	39
  2790     056B  00CE               	movwf	78	;volatile
  2791                           
  2792                           ;vtg_main.c: 99:     ANSELCbits.ANSC3= 0;
  2793     056C  11CE               	bcf	78,3	;volatile
  2794                           
  2795                           ;vtg_main.c: 100:     ANSELCbits.ANSC4 = 0;
  2796     056D  124E               	bcf	78,4	;volatile
  2797                           
  2798                           ;vtg_main.c: 102:     BAUD1CON = 0x58;
  2799     056E  3058               	movlw	88
  2800     056F  0142               	movlb	2	; select bank2
  2801     0570  009F               	movwf	31	;volatile
  2802                           
  2803                           ;vtg_main.c: 104:     RC1STA = 0x90;
  2804     0571  3090               	movlw	144
  2805     0572  009D               	movwf	29	;volatile
  2806                           
  2807                           ;vtg_main.c: 106:     TX1STA = 0x26;
  2808     0573  3026               	movlw	38
  2809     0574  009E               	movwf	30	;volatile
  2810                           
  2811                           ;vtg_main.c: 108:     SP1BRGL = 0xD0;
  2812     0575  30D0               	movlw	208
  2813     0576  009B               	movwf	27	;volatile
  2814     0577                     l1487:
  2815                           
  2816                           ;vtg_main.c: 110:     SP1BRGH = 0x0;
  2817     0577  019C               	clrf	28	;volatile
  2818     0578                     l1489:
  2819                           
  2820                           ;vtg_main.c: 112:     PIE1bits.RC1IE = 1;
  2821     0578  014E               	movlb	14	; select bank14
  2822     0579  1617               	bsf	23,4	;volatile
  2823     057A                     l1491:
  2824                           
  2825                           ;vtg_main.c: 113:     PIR1bits.RC1IF = 0;
  2826     057A  120D               	bcf	13,4	;volatile
  2827     057B                     l115:
  2828     057B  0008               	return
  2829     057C                     __end_of_UART_Init:
  2830                           
  2831                           	psect	intentry
  2832     0004                     __pintentry:	
  2833 ;; *************** function _ISR *****************
  2834 ;; Defined at:
  2835 ;;		line 375 in file "vtg_main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;  adc_result      2    0[COMMON] unsigned short 
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2849 ;;      Params:         0       0       0       0       0       0       0       0
  2850 ;;      Locals:         2       0       0       0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0
  2852 ;;      Totals:         2       0       0       0       0       0       0       0
  2853 ;;Total ram usage:        2 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		Interrupt level 1
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862     0004                     _ISR:
  2863                           
  2864                           ;incstack = 0
  2865     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2866                           
  2867                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0]
  2868     0005  3180               	pagesel	$
  2869     0006                     i1l1781:
  2870                           
  2871                           ;vtg_main.c: 377:   if (IOCCFbits.IOCCF0) {
  2872     0006  017E               	movlb	62	; select bank62
  2873     0007  1C55               	btfss	85,0	;volatile
  2874     0008  280A               	goto	u113_21
  2875     0009  280B               	goto	u113_20
  2876     000A                     u113_21:
  2877     000A  2857               	goto	i1l197
  2878     000B                     u113_20:
  2879     000B                     i1l1783:
  2880                           
  2881                           ;vtg_main.c: 381:         timer_counter++;
  2882     000B  3001               	movlw	1
  2883     000C  0140               	movlb	0	; select bank0
  2884     000D  07D0               	addwf	_timer_counter,f	;volatile
  2885     000E  3000               	movlw	0
  2886     000F  3DD1               	addwfc	_timer_counter+1,f	;volatile
  2887     0010                     i1l1785:
  2888                           
  2889                           ;vtg_main.c: 383:         if(rcv_FREQUENCY == 1){
  2890     0010  035B               	decf	_rcv_FREQUENCY,w
  2891     0011  1D03               	btfss	3,2
  2892     0012  2814               	goto	u114_21
  2893     0013  2815               	goto	u114_20
  2894     0014                     u114_21:
  2895     0014  2834               	goto	i1l1811
  2896     0015                     u114_20:
  2897     0015                     i1l1787:
  2898                           
  2899                           ;vtg_main.c: 384:             if (edge == 0) {
  2900     0015  087B               	movf	_edge,w	;volatile
  2901     0016  1D03               	btfss	3,2
  2902     0017  2819               	goto	u115_21
  2903     0018  281A               	goto	u115_20
  2904     0019                     u115_21:
  2905     0019  2825               	goto	i1l1799
  2906     001A                     u115_20:
  2907     001A                     i1l1789:
  2908                           
  2909                           ;vtg_main.c: 385:                 LATAbits.LATA5 = 1;
  2910     001A  1698               	bsf	24,5	;volatile
  2911     001B                     i1l1791:
  2912                           
  2913                           ;vtg_main.c: 386:                 TMR0H = 0;
  2914     001B  014B               	movlb	11	; select bank11
  2915     001C  019D               	clrf	29	;volatile
  2916     001D                     i1l1793:
  2917                           
  2918                           ;vtg_main.c: 387:                 TMR0L = timer_value;
  2919     001D  0140               	movlb	0	; select bank0
  2920     001E  0864               	movf	_timer_value,w
  2921     001F  014B               	movlb	11	; select bank11
  2922     0020  009C               	movwf	28	;volatile
  2923     0021                     i1l1795:
  2924                           
  2925                           ;vtg_main.c: 388:                 T0CON0bits.EN = 1;
  2926     0021  179E               	bsf	30,7	;volatile
  2927     0022                     i1l1797:
  2928                           
  2929                           ;vtg_main.c: 389:                 edge = 1;
  2930     0022  3001               	movlw	1
  2931     0023  00FB               	movwf	_edge	;volatile
  2932                           
  2933                           ;vtg_main.c: 390:             }
  2934     0024  2854               	goto	i1l1833
  2935     0025                     i1l1799:
  2936     0025  037B               	decf	_edge,w	;volatile
  2937     0026  1D03               	btfss	3,2
  2938     0027  2829               	goto	u116_21
  2939     0028  282A               	goto	u116_20
  2940     0029                     u116_21:
  2941     0029  2854               	goto	i1l1833
  2942     002A                     u116_20:
  2943     002A                     i1l1801:
  2944                           
  2945                           ;vtg_main.c: 392:                 LATAbits.LATA5 = 1;
  2946     002A  1698               	bsf	24,5	;volatile
  2947     002B                     i1l1803:
  2948                           
  2949                           ;vtg_main.c: 393:                 TMR0H = 0;
  2950     002B  014B               	movlb	11	; select bank11
  2951     002C  019D               	clrf	29	;volatile
  2952     002D                     i1l1805:
  2953                           
  2954                           ;vtg_main.c: 394:                 TMR0L = timer_value;
  2955     002D  0140               	movlb	0	; select bank0
  2956     002E  0864               	movf	_timer_value,w
  2957     002F  014B               	movlb	11	; select bank11
  2958     0030  009C               	movwf	28	;volatile
  2959     0031                     i1l1807:
  2960                           
  2961                           ;vtg_main.c: 395:                 T0CON0bits.EN = 1;
  2962     0031  179E               	bsf	30,7	;volatile
  2963     0032                     i1l1809:
  2964                           
  2965                           ;vtg_main.c: 396:                 edge = 0;
  2966     0032  01FB               	clrf	_edge	;volatile
  2967     0033  2854               	goto	i1l1833
  2968     0034                     i1l1811:
  2969     0034  085B               	movf	_rcv_FREQUENCY,w
  2970     0035  1D03               	btfss	3,2
  2971     0036  2838               	goto	u117_21
  2972     0037  2839               	goto	u117_20
  2973     0038                     u117_21:
  2974     0038  2854               	goto	i1l1833
  2975     0039                     u117_20:
  2976     0039                     i1l1813:
  2977                           
  2978                           ;vtg_main.c: 400:             if (edge == 0) {
  2979     0039  087B               	movf	_edge,w	;volatile
  2980     003A  1D03               	btfss	3,2
  2981     003B  283D               	goto	u118_21
  2982     003C  283E               	goto	u118_20
  2983     003D                     u118_21:
  2984     003D  2849               	goto	i1l1825
  2985     003E                     u118_20:
  2986     003E                     i1l1815:
  2987                           
  2988                           ;vtg_main.c: 401:                 LATAbits.LATA5 = 1;
  2989     003E  1698               	bsf	24,5	;volatile
  2990     003F                     i1l1817:
  2991                           
  2992                           ;vtg_main.c: 402:                 TMR0H = 0;
  2993     003F  014B               	movlb	11	; select bank11
  2994     0040  019D               	clrf	29	;volatile
  2995     0041                     i1l1819:
  2996                           
  2997                           ;vtg_main.c: 403:                 TMR0L = timer_value;
  2998     0041  0140               	movlb	0	; select bank0
  2999     0042  0864               	movf	_timer_value,w
  3000     0043  014B               	movlb	11	; select bank11
  3001     0044  009C               	movwf	28	;volatile
  3002     0045                     i1l1821:
  3003                           
  3004                           ;vtg_main.c: 404:                 T0CON0bits.EN = 1;
  3005     0045  179E               	bsf	30,7	;volatile
  3006     0046                     i1l1823:
  3007                           
  3008                           ;vtg_main.c: 405:                 edge++;
  3009     0046  3001               	movlw	1
  3010     0047  07FB               	addwf	_edge,f	;volatile
  3011                           
  3012                           ;vtg_main.c: 406:             }
  3013     0048  2854               	goto	i1l1833
  3014     0049                     i1l1825:
  3015     0049  037B               	decf	_edge,w	;volatile
  3016     004A  1D03               	btfss	3,2
  3017     004B  284D               	goto	u119_21
  3018     004C  284E               	goto	u119_20
  3019     004D                     u119_21:
  3020     004D  2854               	goto	i1l1833
  3021     004E                     u119_20:
  3022     004E                     i1l1827:
  3023                           
  3024                           ;vtg_main.c: 408:                 LATAbits.LATA5 = 1;
  3025     004E  1698               	bsf	24,5	;volatile
  3026     004F                     i1l1829:
  3027                           
  3028                           ;vtg_main.c: 409:                 TMR0H = 0;
  3029     004F  014B               	movlb	11	; select bank11
  3030     0050  019D               	clrf	29	;volatile
  3031                           
  3032                           ;vtg_main.c: 410:                 TMR0L = 0;
  3033     0051  019C               	clrf	28	;volatile
  3034     0052                     i1l1831:
  3035                           
  3036                           ;vtg_main.c: 411:                 T0CON0bits.EN = 0;
  3037     0052  139E               	bcf	30,7	;volatile
  3038                           
  3039                           ;vtg_main.c: 412:                 edge = 0;
  3040     0053  01FB               	clrf	_edge	;volatile
  3041     0054                     i1l1833:
  3042                           
  3043                           ;vtg_main.c: 417:         IOCCFbits.IOCCF0 = 0;
  3044     0054  017E               	movlb	62	; select bank62
  3045     0055  1055               	bcf	85,0	;volatile
  3046                           
  3047                           ;vtg_main.c: 418:     }
  3048     0056  287A               	goto	i1l1857
  3049     0057                     i1l197:	
  3050                           ;vtg_main.c: 420:   else if (PIR0bits.TMR0IF) {
  3051                           
  3052     0057  014E               	movlb	14	; select bank14
  3053     0058  1E8C               	btfss	12,5	;volatile
  3054     0059  285B               	goto	u120_21
  3055     005A  285C               	goto	u120_20
  3056     005B                     u120_21:
  3057     005B  287A               	goto	i1l1857
  3058     005C                     u120_20:
  3059     005C                     i1l1835:
  3060                           
  3061                           ;vtg_main.c: 421:         if (count == 0) {
  3062     005C  0140               	movlb	0	; select bank0
  3063     005D  085F               	movf	_count,w	;volatile
  3064     005E  1D03               	btfss	3,2
  3065     005F  2861               	goto	u121_21
  3066     0060  2862               	goto	u121_20
  3067     0061                     u121_21:
  3068     0061  286C               	goto	i1l1847
  3069     0062                     u121_20:
  3070     0062                     i1l1837:
  3071                           
  3072                           ;vtg_main.c: 422:             LATAbits.LATA5 = 0;
  3073     0062  1298               	bcf	24,5	;volatile
  3074     0063                     i1l1839:
  3075                           
  3076                           ;vtg_main.c: 423:             TMR0H = 0;
  3077     0063  014B               	movlb	11	; select bank11
  3078     0064  019D               	clrf	29	;volatile
  3079     0065                     i1l1841:
  3080                           
  3081                           ;vtg_main.c: 424:             TMR0L = 242;
  3082     0065  30F2               	movlw	242
  3083     0066  009C               	movwf	28	;volatile
  3084     0067                     i1l1843:
  3085                           
  3086                           ;vtg_main.c: 425:             T0CON0bits.EN = 1;
  3087     0067  179E               	bsf	30,7	;volatile
  3088     0068                     i1l1845:
  3089                           
  3090                           ;vtg_main.c: 426:             count = 1;
  3091     0068  3001               	movlw	1
  3092     0069  0140               	movlb	0	; select bank0
  3093     006A  00DF               	movwf	_count	;volatile
  3094                           
  3095                           ;vtg_main.c: 427:         }
  3096     006B  2878               	goto	i1l1855
  3097     006C                     i1l1847:
  3098     006C  035F               	decf	_count,w	;volatile
  3099     006D  1D03               	btfss	3,2
  3100     006E  2870               	goto	u122_21
  3101     006F  2871               	goto	u122_20
  3102     0070                     u122_21:
  3103     0070  2878               	goto	i1l1855
  3104     0071                     u122_20:
  3105     0071                     i1l1849:
  3106                           
  3107                           ;vtg_main.c: 429:             LATAbits.LATA5 = 1;
  3108     0071  1698               	bsf	24,5	;volatile
  3109     0072                     i1l1851:
  3110                           
  3111                           ;vtg_main.c: 430:             TMR0H = 0;
  3112     0072  014B               	movlb	11	; select bank11
  3113     0073  019D               	clrf	29	;volatile
  3114                           
  3115                           ;vtg_main.c: 431:             TMR0L = 0;
  3116     0074  019C               	clrf	28	;volatile
  3117     0075                     i1l1853:
  3118                           
  3119                           ;vtg_main.c: 432:             T0CON0bits.EN = 0;
  3120     0075  139E               	bcf	30,7	;volatile
  3121                           
  3122                           ;vtg_main.c: 433:             count = 0;
  3123     0076  0140               	movlb	0	; select bank0
  3124     0077  01DF               	clrf	_count	;volatile
  3125     0078                     i1l1855:
  3126                           
  3127                           ;vtg_main.c: 435:         PIR0bits.TMR0IF = 0;
  3128     0078  014E               	movlb	14	; select bank14
  3129     0079  128C               	bcf	12,5	;volatile
  3130     007A                     i1l1857:
  3131                           
  3132                           ;vtg_main.c: 437:    if (PIR1bits.RC1IF) {
  3133     007A  014E               	movlb	14	; select bank14
  3134     007B  1E0D               	btfss	13,4	;volatile
  3135     007C  287E               	goto	u123_21
  3136     007D  287F               	goto	u123_20
  3137     007E                     u123_21:
  3138     007E  28A3               	goto	i1l1879
  3139     007F                     u123_20:
  3140     007F                     i1l1859:
  3141                           
  3142                           ;vtg_main.c: 438:         PIR1bits.RC1IF = 0;
  3143     007F  120D               	bcf	13,4	;volatile
  3144     0080                     i1l1861:
  3145                           
  3146                           ;vtg_main.c: 439:         byte = RC1REG;
  3147     0080  0142               	movlb	2	; select bank2
  3148     0081  0819               	movf	25,w	;volatile
  3149     0082  0140               	movlb	0	; select bank0
  3150     0083  00DC               	movwf	_byte
  3151     0084                     i1l1863:
  3152                           
  3153                           ;vtg_main.c: 451:         if (cnt == 0 && byte != 0xAA) {
  3154     0084  085A               	movf	_cnt,w
  3155     0085  1D03               	btfss	3,2
  3156     0086  2888               	goto	u124_21
  3157     0087  2889               	goto	u124_20
  3158     0088                     u124_21:
  3159     0088  2890               	goto	i1l1869
  3160     0089                     u124_20:
  3161     0089                     i1l1865:
  3162     0089  30AA               	movlw	170
  3163     008A  065C               	xorwf	_byte,w
  3164     008B  1903               	btfsc	3,2
  3165     008C  288E               	goto	u125_21
  3166     008D  288F               	goto	u125_20
  3167     008E                     u125_21:
  3168     008E  2890               	goto	i1l1869
  3169     008F                     u125_20:
  3170     008F  28CE               	goto	i1l214
  3171     0090                     i1l1869:
  3172                           
  3173                           ;vtg_main.c: 456:         rx_buffer[cnt++] = byte;
  3174     0090  085A               	movf	_cnt,w
  3175     0091  3E44               	addlw	(low (_rx_buffer| 0))& (0+255)
  3176     0092  0086               	movwf	6
  3177     0093  0187               	clrf	7
  3178     0094  085C               	movf	_byte,w
  3179     0095  0081               	movwf	1
  3180     0096                     i1l1871:
  3181     0096  3001               	movlw	1
  3182     0097  07DA               	addwf	_cnt,f
  3183     0098                     i1l1873:
  3184                           
  3185                           ;vtg_main.c: 458:         if (cnt >= 3) {
  3186     0098  3003               	movlw	3
  3187     0099  025A               	subwf	_cnt,w
  3188     009A  1C03               	skipc
  3189     009B  289D               	goto	u126_21
  3190     009C  289E               	goto	u126_20
  3191     009D                     u126_21:
  3192     009D  28A3               	goto	i1l1879
  3193     009E                     u126_20:
  3194     009E                     i1l1875:
  3195                           
  3196                           ;vtg_main.c: 460:             rcv_current_value = rx_buffer[1];
  3197     009E  0845               	movf	_rx_buffer+1,w	;volatile
  3198     009F  00DD               	movwf	_rcv_current_value
  3199                           
  3200                           ;vtg_main.c: 461:             rcv_FREQUENCY = rx_buffer[2];
  3201     00A0  0846               	movf	_rx_buffer+2,w	;volatile
  3202     00A1  00DB               	movwf	_rcv_FREQUENCY
  3203     00A2                     i1l1877:
  3204                           
  3205                           ;vtg_main.c: 462:             cnt = 0;
  3206     00A2  01DA               	clrf	_cnt
  3207     00A3                     i1l1879:
  3208                           
  3209                           ;vtg_main.c: 473:         if (PIR1bits.ADIF) {
  3210     00A3  014E               	movlb	14	; select bank14
  3211     00A4  1C0D               	btfss	13,0	;volatile
  3212     00A5  28A7               	goto	u127_21
  3213     00A6  28A8               	goto	u127_20
  3214     00A7                     u127_21:
  3215     00A7  28CE               	goto	i1l214
  3216     00A8                     u127_20:
  3217     00A8                     i1l1881:
  3218                           
  3219                           ;vtg_main.c: 474:             PIR1bits.ADIF = 0;
  3220     00A8  100D               	bcf	13,0	;volatile
  3221     00A9                     i1l1883:
  3222                           
  3223                           ;vtg_main.c: 475:             uint16_t adc_result = (ADRESH << 8) | ADRESL;
  3224     00A9  0141               	movlb	1	; select bank1
  3225     00AA  081C               	movf	28,w	;volatile
  3226     00AB  00F1               	movwf	ISR@adc_result+1
  3227     00AC  081B               	movf	27,w	;volatile
  3228     00AD  00F0               	movwf	ISR@adc_result
  3229                           
  3230                           ;vtg_main.c: 478:             switch (adc_channel_index) {
  3231     00AE  28C1               	goto	i1l1893
  3232     00AF                     i1l1885:
  3233                           
  3234                           ;vtg_main.c: 480:                     voltage_val = adc_result;
  3235     00AF  0871               	movf	ISR@adc_result+1,w
  3236     00B0  0140               	movlb	0	; select bank0
  3237     00B1  00D7               	movwf	_voltage_val+1	;volatile
  3238     00B2  0870               	movf	ISR@adc_result,w
  3239     00B3  00D6               	movwf	_voltage_val	;volatile
  3240                           
  3241                           ;vtg_main.c: 481:                     break;
  3242     00B4  28CC               	goto	i1l219
  3243     00B5                     i1l1887:
  3244                           
  3245                           ;vtg_main.c: 483:                     current_val = adc_result;
  3246     00B5  0871               	movf	ISR@adc_result+1,w
  3247     00B6  0140               	movlb	0	; select bank0
  3248     00B7  00D5               	movwf	_current_val+1	;volatile
  3249     00B8  0870               	movf	ISR@adc_result,w
  3250     00B9  00D4               	movwf	_current_val	;volatile
  3251                           
  3252                           ;vtg_main.c: 484:                     break;
  3253     00BA  28CC               	goto	i1l219
  3254     00BB                     i1l1889:
  3255                           
  3256                           ;vtg_main.c: 486:                     temperature_val = adc_result;
  3257     00BB  0871               	movf	ISR@adc_result+1,w
  3258     00BC  0140               	movlb	0	; select bank0
  3259     00BD  00D3               	movwf	_temperature_val+1	;volatile
  3260     00BE  0870               	movf	ISR@adc_result,w
  3261     00BF  00D2               	movwf	_temperature_val	;volatile
  3262                           
  3263                           ;vtg_main.c: 487:                     break;
  3264     00C0  28CC               	goto	i1l219
  3265     00C1                     i1l1893:
  3266     00C1  087A               	movf	_adc_channel_index,w	;volatile
  3267                           
  3268                           ; Switch size 1, requested type "simple"
  3269                           ; Number of cases is 3, Range of values is 0 to 2
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte           10     6 (average)
  3273                           ; direct_byte           12     6 (fixed)
  3274                           ; jumptable            260     6 (fixed)
  3275                           ;	Chosen strategy is simple_byte
  3276     00C2  3A00               	xorlw	0	; case 0
  3277     00C3  1903               	skipnz
  3278     00C4  28AF               	goto	i1l1885
  3279     00C5  3A01               	xorlw	1	; case 1
  3280     00C6  1903               	skipnz
  3281     00C7  28B5               	goto	i1l1887
  3282     00C8  3A03               	xorlw	3	; case 2
  3283     00C9  1903               	skipnz
  3284     00CA  28BB               	goto	i1l1889
  3285     00CB  28CC               	goto	i1l219
  3286     00CC                     i1l219:
  3287                           
  3288                           ;vtg_main.c: 491:             ADCON0bits.GO = 1;
  3289     00CC  0141               	movlb	1	; select bank1
  3290     00CD  149D               	bsf	29,1	;volatile
  3291     00CE                     i1l214:
  3292     00CE  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3293     00CF  0009               	retfie
  3294     00D0                     __end_of_ISR:
  3295     0001                     ___latbits      equ	1
  3296     007E                     btemp           set	126	;btemp
  3297     007E                     int$flags       set	126
  3298     007E                     wtemp0          set	126
  3299                           
  3300                           	psect	config
  3301                           
  3302                           ;Config register CONFIG1 @ 0x8007
  3303                           ;	External Oscillator Mode Selection bits
  3304                           ;	FEXTOSC = OFF, Oscillator not enabled
  3305                           ;	Power-up Default Value for COSC bits
  3306                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  3307                           ;	Clock Out Enable bit
  3308                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  3309                           ;	VDD Range Analog Calibration Selection bit
  3310                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  3311     8007                     	org	32775
  3312     8007  3FED               	dw	16365
  3313                           
  3314                           ;Config register CONFIG2 @ 0x8008
  3315                           ;	Master Clear Enable bit
  3316                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  3317                           ;	Power-up Timer Selection bits
  3318                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3319                           ;	WDT Operating Mode bits
  3320                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  3321                           ;	Brown-out Reset Enable bits
  3322                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3323                           ;	Brown-out Reset Voltage Selection bit
  3324                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  3325                           ;	PPSLOCKED One-Way Set Enable bit
  3326                           ;	PPS1WAY = OFF, The PPSLOCKED bit can be set and cleared as needed (unlocking sequence 
      +                          is required)
  3327                           ;	Stack Overflow/Underflow Reset Enable bit
  3328                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a reset
  3329     8008                     	org	32776
  3330     8008  27E7               	dw	10215
  3331                           
  3332                           ;Config register CONFIG4 @ 0x800A
  3333                           ;	Boot Block Size Selection bits
  3334                           ;	BBSIZE = BB512, 512 words boot block size
  3335                           ;	Boot Block Enable bit
  3336                           ;	BBEN = OFF, Boot Block is disabled
  3337                           ;	SAF Enable bit
  3338                           ;	SAFEN = OFF, SAF is disabled
  3339                           ;	Application Block Write Protection bit
  3340                           ;	WRTAPP = OFF, Application Block is not write-protected
  3341                           ;	Boot Block Write Protection bit
  3342                           ;	WRTB = OFF, Boot Block is not write-protected
  3343                           ;	Configuration Registers Write Protection bit
  3344                           ;	WRTC = OFF, Configuration Registers are not write-protected
  3345                           ;	Storage Area Flash (SAF) Write Protection bit
  3346                           ;	WRTSAF = OFF, SAF is not write-protected
  3347                           ;	Low Voltage Programming Enable bit
  3348                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  3349     800A                     	org	32778
  3350     800A  3FFF               	dw	16383
  3351                           
  3352                           ;Config register CONFIG5 @ 0x800B
  3353                           ;	User Program Flash Memory Code Protection bit
  3354                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  3355     800B                     	org	32779
  3356     800B  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    330
    Data        4
    BSS         126
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     36      69
    BANK1            80     12      44
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(BANK2[64]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(BANK2[64]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S850$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(BANK2[64]), 

    S850$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK2[64]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 64
		 -> buffer(BANK2[64]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    _sprintf->_vfprintf
    _vfpfcnvrt->___lwdiv
    _UART_Write_Text->_EUSART1_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2654
                          _UART_Init
                    _UART_Write_Text
             _get_TMR0L_from_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    14      9    1970
                                             27 BANK0      9     0      9
                                              0 BANK1     12    12      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5    1658
                                              9 COMMON     1     1      0
                                             20 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4    1458
                                              5 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     329
                                              2 COMMON     4     0      4
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     238
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     247
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _get_TMR0L_from_voltage                               1     1      0     609
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      1     0      1      75
                                              3 COMMON     1     0      1
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      29
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0      67
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_Write_Text
     _EUSART1_Write
   _get_TMR0L_from_voltage
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___lwdiv
         ___lwmod
         _fputc
           _putch

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     10      12     85.7%
BANK0               80     36      69     86.2%
BANK1               80     12      44     55.0%
BANK2               80      0      64     80.0%
BANK3               80      0       0      0.0%
BANK4               80      0       0      0.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     186      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 12 17:49:33 2025

                           l121 05AB                             l115 057B                             l118 05A3  
                           l127 0590                             l137 03B7                             l172 03B7  
                           l186 0432                             l808 04B3                             l752 0543  
                           l569 04ED                             l579 051F                             l819 05B6  
                           l781 0297                             l796 0561                             l789 0313  
                           _ARR 0100                             _ISR 0004                             u900 031B  
                           u901 031A                             u910 0323                             u911 0322  
                           u920 032A                             u921 0329                             u930 0331  
                           u931 0330                             u940 0338                             u941 0337  
                           u870 05A8                             u950 033F                             u871 05A7  
                           u951 033E                             u960 0346                             u961 0345  
                           u890 0590                             u970 034D                             u891 058F  
                           u971 034C                             u980 0355                             u981 0354  
                           u990 035D                             u991 035C                             _cnt 005A  
                           wreg 0009                   ISR@adc_result 0070                            ?_ISR 0070  
                          l2003 0544                            l2005 054A                            l2021 053B  
                          l2013 0520                            l2101 0402                            l2007 0555  
                          l2015 0529                            l2111 0421                            l2103 0409  
                          l2031 03C5                            l2009 055F                            l2017 052B  
                          l2121 043C                            l2105 0412                            l2041 03CB  
                          l2033 03C6                            l2025 03B8                            l2019 052D  
                          l2107 0415                            l2115 0427                            l2123 043D  
                          l2051 03D1                            l2043 03CC                            l2035 03C7  
                          l2027 03C1                            l1501 0315                            l2125 0453  
                          l2117 0434                            l2109 041B                            l2061 03DA  
                          l2053 03D2                            l2045 03CD                            l2037 03C9  
                          l2029 03C3                            l1503 031B                            l2119 0436  
                          l2071 03E5                            l2063 03DC                            l2055 03D4  
                          l2047 03CF                            l2039 03CA                            l2081 03ED  
                          l2073 03E7                            l2065 03DE                            l2057 03D6  
                          l2049 03D0                            l2091 03F9                            l2083 03EF  
                          l2075 03E8                            l2067 03E0                            l2059 03D8  
                          l1621 0387                            l1613 037F                            l1605 0377  
                          l1541 0339                            l1533 0332                            l1525 032B  
                          l1517 0324                            l1509 031D                            l2093 03FA  
                          l2085 03F0                            l2077 03EA                            l2069 03E3  
                          l1471 05A3                            l1631 0395                            l1623 038D  
                          l1615 0385                            l1607 037D                            l2095 03FC  
                          l2087 03F4                            l2079 03EB                            l1473 05A8  
                          l2097 03FD                            l2089 03F8                            l1491 057A  
                          l2099 03FF                            l1485 0562                            l1493 057C  
                          l1661 03AF                            l1653 03A7                            l1645 039F  
                          l1637 0397                            l1629 038F                            l1581 035F  
                          l1573 0357                            l1565 034F                            l1557 0347  
                          l1549 0340                            l1901 04BF                            l1487 0577  
                          l1495 057D                            l1663 03B5                            l1655 03AD  
                          l1647 03A5                            l1639 039D                            l1591 036D  
                          l1583 0365                            l1575 035D                            l1567 0355  
                          l1559 034D                            l1911 04DD                            l1903 04C4  
                          l1489 0578                            l1497 0585                            l1913 04DE  
                          l1905 04C6                            l1921 04EE                            l1499 0587  
                          l1915 04E3                            l1907 04CA                            l1931 0502  
                          l1923 04F4                            l1597 036F                            l1589 0367  
                          l1909 04D9                            l1917 04E9                            l1933 050C  
                          l1925 04F7                            l1599 0375                            l1935 0510  
                          l1927 04FC                            l1951 0476                            l1943 045B  
                          l1937 0515                            l1929 04FE                            l1953 0495  
                          l1945 0461                            l1961 025C                            l1939 051B  
                          l1955 04AA                            l1947 0467                            l1971 027D  
                          l1963 0264                            l1949 046C                            l1981 02C4  
                          l1973 0289                            l1965 0268                            l1895 04B4  
                          l1983 02CA                            l1975 0299                            l1991 02E6  
                          l1967 026C                            l1959 024A                            l1897 04B6  
                          l1985 02DC                            l1977 02AD                            l1993 02EF  
                          l1969 0273                            l1899 04BC                            l1987 02DF  
                          l1979 02BE                            l1997 02F9                            STR_1 0591  
                          u1000 0365                            u1001 0364                            u1010 036D  
                          u1011 036C                            u1100 03B5                            u1020 0375  
                          u1101 03B4                            u1021 0374                            u1030 037D  
                          u1031 037C                            u1040 0385                            u1041 0384  
                          u1050 038D                            u1051 038C                            u1060 0395  
                          u1300 04CA                            u1061 0394                            u1301 04C9  
                          u1070 039D                            u1071 039C                            u1080 03A5  
                          u1320 04D9                            u1400 051B                            u1081 03A4  
                          u1321 04D8                            u1401 051A                            u1090 03AD  
                          u1410 0461                            u1091 03AC                            u1315 04CB  
                          u1411 0460                            u1340 04E9                            u1420 0467  
                          u1500 055F                            u1341 04E8                            u1325 04D5  
                          u1421 0466                            u1501 055E                            u1350 04F4  
                          u1430 0476                            u1510 0412                            u1335 04DF  
                          u1351 04F3                            u1431 0475                            u1511 0411  
                          u1280 04BC                            u1440 0495                            u1520 043C  
                          u1281 04BB                            u1441 0494                            u1521 043B  
                          u1370 0502                            u1450 025C                            u1371 0501  
                          u1451 025B                            u1380 050C                            u1460 027D  
                          u1381 050B                            u1365 04F8                            u1445 0491  
                          u1461 027C                            u1470 02C4                            u1295 04C0  
                          u1471 02C3                            u1480 02C9                            u1385 0508  
                          u1481 02C8                            u1490 02E5                            u1395 0511  
                          u1491 02E4                   _EUSART1_Write 05A2                            _Trip 0059  
                          _edge 007B                            _dbuf 00A0                            _main 03B8  
                          _byte 005C                            _prec 004C                            fsr0h 0005  
                          fsr1h 0007                            indf0 0000                            fsr0l 0004  
                          indf1 0001                            fsr1l 0006                            btemp 007E  
                          start 00D0                     _voltage_val 0056         __end_of_UART_Write_Text 0591  
                         ??_ISR 0070                           ?_main 0070                 __end_of___lwdiv 04EE  
                         i1l214 00CE                           i1l219 00CC                 __end_of___lwmod 0520  
                         i1l197 0057                    vfpfcnvrt@fmt 0027                           _TMR0H 059D  
                         _TMR0L 059C                           _flags 0058                           _count 005F  
                         _fputc 045B                           _width 004A                           _putch 05B6  
                ?_EUSART1_Write 0070                           status 0003                           wtemp0 007E  
               __end_of_sprintf 0544                 __initialization 00D2                    __end_of_main 045B  
                        ??_main 007A                          _ADCON0 009D                          _ADCON1 009E  
                        ?_fputc 0072                          _ADRESH 009C                          _ADRESL 009B  
                        _ANSELA 1F38                          ?_putch 0070                          _ANSELC 1F4E  
                        _RC1REG 0119                          _RC1STA 011D                          _RC3PPS 1F23  
                        u120_20 005C                          u120_21 005B                          u121_20 0062  
                        u113_20 000B                          u121_21 0061                          i1l1801 002A  
                        u113_21 000A                          i1l1803 002B                          i1l1811 0034  
                        i1l1821 0045                          i1l1813 0039                          i1l1805 002D  
                        i1l1831 0052                          i1l1823 0046                          i1l1815 003E  
                        i1l1807 0031                          u122_20 0071                          u114_20 0015  
                        u122_21 0070                          i1l1841 0065                          i1l1817 003F  
                        i1l1825 0049                          i1l1809 0032                          i1l1833 0054  
                        u114_21 0014                          i1l1851 0072                          i1l1843 0067  
                        i1l1835 005C                          i1l1827 004E                          i1l1819 0041  
                        i1l1861 0080                          i1l1853 0075                          i1l1845 0068  
                        i1l1837 0062                          i1l1829 004F                          i1l1781 0006  
                        i1l1871 0096                          i1l1863 0084                          i1l1855 0078  
                        i1l1839 0063                          i1l1847 006C                          i1l1791 001B  
                        i1l1783 000B                          u123_20 007F                          u115_20 001A  
                        i1l1881 00A8                          i1l1873 0098                          i1l1865 0089  
                        u123_21 007E                          i1l1849 0071                          i1l1857 007A  
                        i1l1793 001D                          u115_21 0019                          i1l1785 0010  
                        i1l1883 00A9                          i1l1875 009E                          i1l1859 007F  
                        i1l1795 0021                          i1l1787 0015                          i1l1885 00AF  
                        i1l1893 00C1                          i1l1877 00A2                          i1l1869 0090  
                        i1l1797 0022                          i1l1789 001A                          i1l1887 00B5  
                        i1l1879 00A3                          i1l1799 0025                          u124_20 0089  
                        u116_20 002A                          i1l1889 00BB                          u124_21 0088  
                        u116_21 0029                          u125_20 008F                          u117_20 0039  
                        u125_21 008E                          u117_21 0038                          u126_20 009E  
                        u118_20 003E                          u126_21 009D                          u118_21 003D  
                        u127_20 00A8                          u119_20 004E                          u127_21 00A7  
                        u119_21 004D          _get_TMR0L_from_voltage 0314                          _OSCCON 088E  
                        _RX1PPS 1ECB                          _TX1REG 011A                          _TX1STA 011E  
                  vfprintf@cfmt 0039               __end_of_UART_Init 057C                ?_UART_Write_Text 0073  
                     ??___lwdiv 0076                       ??___lwmod 0076                          _buffer 0120  
                        fputc@c 0072                          putch@c 0070                __end_of_vfprintf 0562  
               ??_EUSART1_Write 0072                       ??_sprintf 007A               _rcv_current_value 005D  
       __end_of__initialization 00FC                  __pcstackCOMMON 0070                    __pidataBANK0 05B2  
                 __end_of_fputc 04B4                   __end_of_putch 05B7                 _temperature_val 0052  
                       ??_fputc 0020                         ??_putch 0072                      __pbssBANK0 0044  
                    __pbssBANK1 00A0                      __pbssBANK2 0120                      __pmaintext 03B8  
                    __pintentry 0004                _SecondcycleDelay 0062                         _SP1BRGH 011C  
                       _SP1BRGL 011B                   _rcv_FREQUENCY 005B   get_TMR0L_from_voltage@voltage 0072  
                       _adc_val 004E                         ___lwdiv 04B4                         ___lwmod 04EE  
                     ?_vfprintf 0034                         __ptext1 0520                         __ptext2 0544  
                       __ptext3 024A                         __ptext4 045B                         __ptext5 05B6  
                       __ptext6 04EE                         __ptext7 04B4                         __ptext8 0314  
                       __ptext9 057C                         _max_adc 0060                       _IOCCFbits 1F55  
                     _IOCCNbits 1F54                       _IOCCPbits 1F53         ?_get_TMR0L_from_voltage 0070  
                       _sprintf 0520                         clrloop0 05AD            end_of_initialization 00FC  
                       fputc@fp 0074               __end_of_vfpfcnvrt 0314               _adc_channel_index 007A  
              vfpfcnvrt@convarg 002F                      ??_vfprintf 0079                       _UART_Init 0562  
__end_of_get_TMR0L_from_voltage 03B8                       _TRISAbits 0012                       _TRISCbits 0014  
           EUSART1_Write@txData 0072                     vfpfcnvrt@ap 0028                     vfpfcnvrt@cp 002D  
                   vfpfcnvrt@fp 0025                      ?_UART_Init 0070             start_initialization 00D2  
                   __end_of_ARR 024A                     __end_of_ISR 00D0           __end_of_EUSART1_Write 05AC  
              _temperature_flag 005E                     vfprintf@fmt 0036                     __pdataBANK0 0060  
                   __pbssCOMMON 007A                       ___latbits 0001                   __pcstackBANK0 0020  
                 __pcstackBANK1 00C0                       __pnvBANK0 0064                ___lwdiv@dividend 0074  
                      ?___lwdiv 0072                        ?___lwmod 0072                     ??_UART_Init 0072  
                      _BAUD1CON 011F                ___lwdiv@quotient 0077                        ?_sprintf 003B  
             ??_UART_Write_Text 0074                        _LATAbits 0018                       clear_ram0 05AC  
                      _PIE0bits 0716                        _PIE1bits 0717                        _PIR0bits 070C  
                      _PIR1bits 070D                       _vfpfcnvrt 024A                       _rx_buffer 0044  
                    _ADCON0bits 009D                      vfpfcnvrt@c 0033                      vfprintf@ap 0038  
                    vfprintf@fp 0034                      ?_vfpfcnvrt 0025                      _ANSELAbits 1F38  
                    _ANSELCbits 1F4E                      sprintf@fmt 003C                     _current_val 0054  
                    _T0CON0bits 059E                      _T0CON1bits 059F                 ___lwdiv@divisor 0072  
               ___lwdiv@counter 0076                        __ptext10 05A2                        __ptext11 0562  
           UART_Write_Text@text 0073                        int$flags 007E                        _vfprintf 0544  
                 _timer_counter 0050                      _INTCONbits 000B                        intlevel1 0000  
                     sprintf@ap 00C0                ___lwmod@dividend 0074                     ??_vfpfcnvrt 0029  
      ??_get_TMR0L_from_voltage 0072                   __pstringtext1 0100                   __pstringtext2 0591  
                 __pstringtext3 0000                 _UART_Write_Text 057C                        sprintf@f 00C1  
                      sprintf@s 003B                 ___lwmod@divisor 0072                 ___lwmod@counter 0076  
                   _timer_value 0064  
