

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 12 19:06:41 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F15224
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,space=0,delta=2,noexec
    12                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    20                           	psect	clrtext,global,class=CODE,space=0,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    26                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=2
    30                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=2
    31                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=1
    32                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    33                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    34                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    36                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    38                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    39                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=3
    42                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=3
    43                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    48                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    49                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    50                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    51                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    52                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    54                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,space=0,delta=2
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    59                           	dabs	1,0x7E,2
    60  0000                     
    61                           ; Generated 11/01/2024 GMT
    62                           ; 
    63                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC16F15224 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0008                     bsr             equ	8
    96  0005                     fsr0h           equ	5
    97  0004                     fsr0l           equ	4
    98  0007                     fsr1h           equ	7
    99  0006                     fsr1l           equ	6
   100  0000                     indf            equ	0
   101  0000                     indf0           equ	0
   102  0001                     indf1           equ	1
   103  000B                     intcon          equ	11
   104  0002                     pc              equ	2
   105  0002                     pcl             equ	2
   106  000A                     pclath          equ	10
   107  0003                     status          equ	3
   108  0009                     wreg            equ	9
   109  0000                     INDF0           equ	0	;# 
   110  0001                     INDF1           equ	1	;# 
   111  0002                     PCL             equ	2	;# 
   112  0003                     STATUS          equ	3	;# 
   113  0004                     FSR0L           equ	4	;# 
   114  0005                     FSR0H           equ	5	;# 
   115  0006                     FSR1L           equ	6	;# 
   116  0007                     FSR1H           equ	7	;# 
   117  0008                     BSR             equ	8	;# 
   118  0009                     WREG            equ	9	;# 
   119  000A                     PCLATH          equ	10	;# 
   120  000B                     INTCON          equ	11	;# 
   121  000C                     PORTA           equ	12	;# 
   122  000E                     PORTC           equ	14	;# 
   123  0012                     TRISA           equ	18	;# 
   124  0014                     TRISC           equ	20	;# 
   125  0018                     LATA            equ	24	;# 
   126  001A                     LATC            equ	26	;# 
   127  009A                     CPCON           equ	154	;# 
   128  009B                     ADRES           equ	155	;# 
   129  009B                     ADRESL          equ	155	;# 
   130  009C                     ADRESH          equ	156	;# 
   131  009D                     ADCON0          equ	157	;# 
   132  009E                     ADCON1          equ	158	;# 
   133  009F                     ADACT           equ	159	;# 
   134  010E                     RC0I2C          equ	270	;# 
   135  010F                     RC1I2C          equ	271	;# 
   136  0119                     RC1REG          equ	281	;# 
   137  011A                     TX1REG          equ	282	;# 
   138  011B                     SP1BRG          equ	283	;# 
   139  011B                     SP1BRGL         equ	283	;# 
   140  011C                     SP1BRGH         equ	284	;# 
   141  011D                     RC1STA          equ	285	;# 
   142  011E                     TX1STA          equ	286	;# 
   143  011F                     BAUD1CON        equ	287	;# 
   144  018C                     SSP1BUF         equ	396	;# 
   145  018D                     SSP1ADD         equ	397	;# 
   146  018E                     SSP1MSK         equ	398	;# 
   147  018F                     SSP1STAT        equ	399	;# 
   148  0190                     SSP1CON1        equ	400	;# 
   149  0191                     SSP1CON2        equ	401	;# 
   150  0192                     SSP1CON3        equ	402	;# 
   151  020C                     TMR1            equ	524	;# 
   152  020C                     TMR1L           equ	524	;# 
   153  020D                     TMR1H           equ	525	;# 
   154  020E                     T1CON           equ	526	;# 
   155  020E                     TMR1CON         equ	526	;# 
   156  020F                     T1GCON          equ	527	;# 
   157  020F                     TMR1GCON        equ	527	;# 
   158  0210                     T1GATE          equ	528	;# 
   159  0210                     TMR1GATE        equ	528	;# 
   160  0211                     T1CLK           equ	529	;# 
   161  0211                     TMR1CLK         equ	529	;# 
   162  0211                     PR1             equ	529	;# 
   163  028C                     T2TMR           equ	652	;# 
   164  028C                     TMR2            equ	652	;# 
   165  028D                     T2PR            equ	653	;# 
   166  028D                     PR2             equ	653	;# 
   167  028E                     T2CON           equ	654	;# 
   168  028F                     T2HLT           equ	655	;# 
   169  0290                     T2CLKCON        equ	656	;# 
   170  0291                     T2RST           equ	657	;# 
   171  030C                     CCPR1           equ	780	;# 
   172  030C                     CCPR1L          equ	780	;# 
   173  030D                     CCPR1H          equ	781	;# 
   174  030E                     CCP1CON         equ	782	;# 
   175  030F                     CCP1CAP         equ	783	;# 
   176  0310                     CCPR2           equ	784	;# 
   177  0310                     CCPR2L          equ	784	;# 
   178  0311                     CCPR2H          equ	785	;# 
   179  0312                     CCP2CON         equ	786	;# 
   180  0313                     CCP2CAP         equ	787	;# 
   181  0314                     PWM3DC          equ	788	;# 
   182  0314                     PWM3DCL         equ	788	;# 
   183  0315                     PWM3DCH         equ	789	;# 
   184  0316                     PWM3CON         equ	790	;# 
   185  0318                     PWM4DC          equ	792	;# 
   186  0318                     PWM4DCL         equ	792	;# 
   187  0319                     PWM4DCH         equ	793	;# 
   188  031A                     PWM4CON         equ	794	;# 
   189  059C                     TMR0L           equ	1436	;# 
   190  059C                     TMR0            equ	1436	;# 
   191  059D                     TMR0H           equ	1437	;# 
   192  059D                     PR0             equ	1437	;# 
   193  059E                     T0CON0          equ	1438	;# 
   194  059F                     T0CON1          equ	1439	;# 
   195  070C                     PIR0            equ	1804	;# 
   196  070D                     PIR1            equ	1805	;# 
   197  070E                     PIR2            equ	1806	;# 
   198  0716                     PIE0            equ	1814	;# 
   199  0717                     PIE1            equ	1815	;# 
   200  0718                     PIE2            equ	1816	;# 
   201  080C                     WDTCON          equ	2060	;# 
   202  0811                     BORCON          equ	2065	;# 
   203  0813                     PCON0           equ	2067	;# 
   204  0814                     PCON1           equ	2068	;# 
   205  081A                     NVMADR          equ	2074	;# 
   206  081A                     NVMADRL         equ	2074	;# 
   207  081B                     NVMADRH         equ	2075	;# 
   208  081C                     NVMDAT          equ	2076	;# 
   209  081C                     NVMDATL         equ	2076	;# 
   210  081D                     NVMDATH         equ	2077	;# 
   211  081E                     NVMCON1         equ	2078	;# 
   212  081F                     NVMCON2         equ	2079	;# 
   213  088E                     OSCCON          equ	2190	;# 
   214  0890                     OSCSTAT         equ	2192	;# 
   215  0891                     OSCEN           equ	2193	;# 
   216  0892                     OSCTUNE         equ	2194	;# 
   217  0893                     OSCFRQ          equ	2195	;# 
   218  090C                     FVRCON          equ	2316	;# 
   219  1E8F                     PPSLOCK         equ	7823	;# 
   220  1E90                     INTPPS          equ	7824	;# 
   221  1E91                     T0CKIPPS        equ	7825	;# 
   222  1E92                     T1CKIPPS        equ	7826	;# 
   223  1E93                     T1GPPS          equ	7827	;# 
   224  1E9C                     T2INPPS         equ	7836	;# 
   225  1EA1                     CCP1PPS         equ	7841	;# 
   226  1EA2                     CCP2PPS         equ	7842	;# 
   227  1EC3                     ADACTPPS        equ	7875	;# 
   228  1EC5                     SSP1CLKPPS      equ	7877	;# 
   229  1EC6                     SSP1DATPPS      equ	7878	;# 
   230  1EC7                     SSP1SSPPS       equ	7879	;# 
   231  1ECB                     RX1PPS          equ	7883	;# 
   232  1ECB                     RX1DTPPS        equ	7883	;# 
   233  1ECB                     RXPPS           equ	7883	;# 
   234  1ECC                     CK1PPS          equ	7884	;# 
   235  1ECC                     TX1CKPPS        equ	7884	;# 
   236  1ECC                     CKPPS           equ	7884	;# 
   237  1F10                     RA0PPS          equ	7952	;# 
   238  1F11                     RA1PPS          equ	7953	;# 
   239  1F12                     RA2PPS          equ	7954	;# 
   240  1F14                     RA4PPS          equ	7956	;# 
   241  1F15                     RA5PPS          equ	7957	;# 
   242  1F20                     RC0PPS          equ	7968	;# 
   243  1F21                     RC1PPS          equ	7969	;# 
   244  1F22                     RC2PPS          equ	7970	;# 
   245  1F23                     RC3PPS          equ	7971	;# 
   246  1F24                     RC4PPS          equ	7972	;# 
   247  1F25                     RC5PPS          equ	7973	;# 
   248  1F38                     ANSELA          equ	7992	;# 
   249  1F39                     WPUA            equ	7993	;# 
   250  1F3A                     ODCONA          equ	7994	;# 
   251  1F3B                     SLRCONA         equ	7995	;# 
   252  1F3C                     INLVLA          equ	7996	;# 
   253  1F3D                     IOCAP           equ	7997	;# 
   254  1F3E                     IOCAN           equ	7998	;# 
   255  1F3F                     IOCAF           equ	7999	;# 
   256  1F4E                     ANSELC          equ	8014	;# 
   257  1F4F                     WPUC            equ	8015	;# 
   258  1F50                     ODCONC          equ	8016	;# 
   259  1F51                     SLRCONC         equ	8017	;# 
   260  1F52                     INLVLC          equ	8018	;# 
   261  1F53                     IOCCP           equ	8019	;# 
   262  1F54                     IOCCN           equ	8020	;# 
   263  1F55                     IOCCF           equ	8021	;# 
   264  1FE4                     STATUS_SHAD     equ	8164	;# 
   265  1FE5                     WREG_SHAD       equ	8165	;# 
   266  1FE6                     BSR_SHAD        equ	8166	;# 
   267  1FE7                     PCLATH_SHAD     equ	8167	;# 
   268  1FE8                     FSR0_SHAD       equ	8168	;# 
   269  1FE8                     FSR0L_SHAD      equ	8168	;# 
   270  1FE9                     FSR0H_SHAD      equ	8169	;# 
   271  1FEA                     FSR1L_SHAD      equ	8170	;# 
   272  1FEB                     FSR1H_SHAD      equ	8171	;# 
   273  1FED                     STKPTR          equ	8173	;# 
   274  1FEE                     TOSL            equ	8174	;# 
   275  1FEF                     TOSH            equ	8175	;# 
   276                           
   277                           	psect	idataBANK2
   278  0000'                    __pidataBANK2:
   279                           
   280                           ;initializer for _max_adc
   281  0000' 3484               	retlw	132
   282  0001' 3403               	retlw	3
   283                           
   284                           ;initializer for _SecondcycleDelay
   285  0002' 34F2               	retlw	242
   286  0003' 3400               	retlw	0
   287                           
   288                           	psect	stringtext1
   289  0000'                    __pstringtext1:
   290  0000'                    _ARR:
   291  0000' 3400               	retlw	0
   292  0001' 3400               	retlw	0
   293  0002' 3400               	retlw	0
   294  0003' 3400               	retlw	0
   295  0004' 3400               	retlw	0
   296  0005' 3400               	retlw	0
   297  0006' 3400               	retlw	0
   298  0007' 3400               	retlw	0
   299  0008' 3400               	retlw	0
   300  0009' 3400               	retlw	0
   301  000A' 3400               	retlw	0
   302  000B' 3400               	retlw	0
   303  000C' 3400               	retlw	0
   304  000D' 3400               	retlw	0
   305  000E' 3400               	retlw	0
   306  000F' 3400               	retlw	0
   307  0010' 3400               	retlw	0
   308  0011' 3400               	retlw	0
   309  0012' 3400               	retlw	0
   310  0013' 3400               	retlw	0
   311  0014' 3400               	retlw	0
   312  0015' 3400               	retlw	0
   313  0016' 3400               	retlw	0
   314  0017' 3400               	retlw	0
   315  0018' 3400               	retlw	0
   316  0019' 3400               	retlw	0
   317  001A' 3400               	retlw	0
   318  001B' 3400               	retlw	0
   319  001C' 3400               	retlw	0
   320  001D' 3400               	retlw	0
   321  001E' 3400               	retlw	0
   322  001F' 3400               	retlw	0
   323  0020' 3400               	retlw	0
   324  0021' 3400               	retlw	0
   325  0022' 3400               	retlw	0
   326  0023' 3400               	retlw	0
   327  0024' 3400               	retlw	0
   328  0025' 3400               	retlw	0
   329  0026' 3400               	retlw	0
   330  0027' 3400               	retlw	0
   331  0028' 3400               	retlw	0
   332  0029' 3400               	retlw	0
   333  002A' 3400               	retlw	0
   334  002B' 3400               	retlw	0
   335  002C' 3400               	retlw	0
   336  002D' 3400               	retlw	0
   337  002E' 3400               	retlw	0
   338  002F' 3400               	retlw	0
   339  0030' 3400               	retlw	0
   340  0031' 3400               	retlw	0
   341  0032' 3400               	retlw	0
   342  0033' 3400               	retlw	0
   343  0034' 3400               	retlw	0
   344  0035' 3400               	retlw	0
   345  0036' 3400               	retlw	0
   346  0037' 3400               	retlw	0
   347  0038' 3400               	retlw	0
   348  0039' 3400               	retlw	0
   349  003A' 3400               	retlw	0
   350  003B' 3400               	retlw	0
   351  003C' 3400               	retlw	0
   352  003D' 3400               	retlw	0
   353  003E' 3400               	retlw	0
   354  003F' 3400               	retlw	0
   355  0040' 3400               	retlw	0
   356  0041' 3400               	retlw	0
   357  0042' 3400               	retlw	0
   358  0043' 3400               	retlw	0
   359  0044' 3400               	retlw	0
   360  0045' 3400               	retlw	0
   361  0046' 3400               	retlw	0
   362  0047' 3400               	retlw	0
   363  0048' 3400               	retlw	0
   364  0049' 3400               	retlw	0
   365  004A' 3400               	retlw	0
   366  004B' 3400               	retlw	0
   367  004C' 3400               	retlw	0
   368  004D' 3400               	retlw	0
   369  004E' 3400               	retlw	0
   370  004F' 3400               	retlw	0
   371  0050' 3400               	retlw	0
   372  0051' 3400               	retlw	0
   373  0052' 3400               	retlw	0
   374  0053' 3400               	retlw	0
   375  0054' 3400               	retlw	0
   376  0055' 3400               	retlw	0
   377  0056' 3400               	retlw	0
   378  0057' 3400               	retlw	0
   379  0058' 3400               	retlw	0
   380  0059' 3400               	retlw	0
   381  005A' 3400               	retlw	0
   382  005B' 3400               	retlw	0
   383  005C' 3400               	retlw	0
   384  005D' 3400               	retlw	0
   385  005E' 3400               	retlw	0
   386  005F' 3400               	retlw	0
   387  0060' 3400               	retlw	0
   388  0061' 3400               	retlw	0
   389  0062' 3400               	retlw	0
   390  0063' 3400               	retlw	0
   391  0064' 3400               	retlw	0
   392  0065' 3400               	retlw	0
   393  0066' 3400               	retlw	0
   394  0067' 3400               	retlw	0
   395  0068' 3400               	retlw	0
   396  0069' 3400               	retlw	0
   397  006A' 3400               	retlw	0
   398  006B' 3400               	retlw	0
   399  006C' 3400               	retlw	0
   400  006D' 3400               	retlw	0
   401  006E' 3400               	retlw	0
   402  006F' 3400               	retlw	0
   403  0070' 3400               	retlw	0
   404  0071' 3400               	retlw	0
   405  0072' 3400               	retlw	0
   406  0073' 3400               	retlw	0
   407  0074' 3400               	retlw	0
   408  0075' 3400               	retlw	0
   409  0076' 3400               	retlw	0
   410  0077' 3400               	retlw	0
   411  0078' 3400               	retlw	0
   412  0079' 3400               	retlw	0
   413  007A' 3400               	retlw	0
   414  007B' 3400               	retlw	0
   415  007C' 3400               	retlw	0
   416  007D' 3400               	retlw	0
   417  007E' 3400               	retlw	0
   418  007F' 3400               	retlw	0
   419  0080' 3400               	retlw	0
   420  0081' 3400               	retlw	0
   421  0082' 3400               	retlw	0
   422  0083' 3400               	retlw	0
   423  0084' 3400               	retlw	0
   424  0085' 3400               	retlw	0
   425  0086' 3400               	retlw	0
   426  0087' 3400               	retlw	0
   427  0088' 3400               	retlw	0
   428  0089' 3400               	retlw	0
   429  008A' 3400               	retlw	0
   430  008B' 3400               	retlw	0
   431  008C' 3400               	retlw	0
   432  008D' 3400               	retlw	0
   433  008E' 3400               	retlw	0
   434  008F' 3400               	retlw	0
   435  0090' 3400               	retlw	0
   436  0091' 3400               	retlw	0
   437  0092' 3400               	retlw	0
   438  0093' 3400               	retlw	0
   439  0094' 3400               	retlw	0
   440  0095' 3400               	retlw	0
   441  0096' 3400               	retlw	0
   442  0097' 3400               	retlw	0
   443  0098' 3400               	retlw	0
   444  0099' 3400               	retlw	0
   445  009A' 3400               	retlw	0
   446  009B' 3400               	retlw	0
   447  009C' 3400               	retlw	0
   448  009D' 3400               	retlw	0
   449  009E' 3400               	retlw	0
   450  009F' 3400               	retlw	0
   451  00A0' 3400               	retlw	0
   452  00A1' 3400               	retlw	0
   453  00A2' 3400               	retlw	0
   454  00A3' 3400               	retlw	0
   455  00A4' 3400               	retlw	0
   456  00A5' 3400               	retlw	0
   457  00A6' 3400               	retlw	0
   458  00A7' 3400               	retlw	0
   459  00A8' 3400               	retlw	0
   460  00A9' 3400               	retlw	0
   461  00AA' 3400               	retlw	0
   462  00AB' 3400               	retlw	0
   463  00AC' 3400               	retlw	0
   464  00AD' 3400               	retlw	0
   465  00AE' 3400               	retlw	0
   466  00AF' 3400               	retlw	0
   467  00B0' 3400               	retlw	0
   468  00B1' 3400               	retlw	0
   469  00B2' 3400               	retlw	0
   470  00B3' 3400               	retlw	0
   471  00B4' 3400               	retlw	0
   472  00B5' 3400               	retlw	0
   473  00B6' 3400               	retlw	0
   474  00B7' 3400               	retlw	0
   475  00B8' 3400               	retlw	0
   476  00B9' 3400               	retlw	0
   477  00BA' 3400               	retlw	0
   478  00BB' 3400               	retlw	0
   479  00BC' 3400               	retlw	0
   480  00BD' 3400               	retlw	0
   481  00BE' 3400               	retlw	0
   482  00BF' 3400               	retlw	0
   483  00C0' 3400               	retlw	0
   484  00C1' 3400               	retlw	0
   485  00C2' 3400               	retlw	0
   486  00C3' 3400               	retlw	0
   487  00C4' 3400               	retlw	0
   488  00C5' 3400               	retlw	0
   489  00C6' 3400               	retlw	0
   490  00C7' 3400               	retlw	0
   491  00C8' 3400               	retlw	0
   492  00C9' 3400               	retlw	0
   493  00CA' 3400               	retlw	0
   494  00CB' 3400               	retlw	0
   495  00CC' 3400               	retlw	0
   496  00CD' 3400               	retlw	0
   497  00CE' 3400               	retlw	0
   498  00CF' 3400               	retlw	0
   499  00D0' 3400               	retlw	0
   500  00D1' 3400               	retlw	0
   501  00D2' 3400               	retlw	0
   502  00D3' 3400               	retlw	0
   503  00D4' 3400               	retlw	0
   504  00D5' 3400               	retlw	0
   505  00D6' 3400               	retlw	0
   506  00D7' 3400               	retlw	0
   507  00D8' 3400               	retlw	0
   508  00D9' 3400               	retlw	0
   509  00DA' 3400               	retlw	0
   510  00DB' 3400               	retlw	0
   511  00DC' 3400               	retlw	0
   512  00DD' 3400               	retlw	0
   513  00DE' 3400               	retlw	0
   514  00DF' 3400               	retlw	0
   515  00E0' 3400               	retlw	0
   516  00E1' 3400               	retlw	0
   517  00E2' 3400               	retlw	0
   518  00E3' 3400               	retlw	0
   519  00E4' 3400               	retlw	0
   520  00E5' 3400               	retlw	0
   521  00E6' 3400               	retlw	0
   522  00E7' 3400               	retlw	0
   523  00E8' 3400               	retlw	0
   524  00E9' 3400               	retlw	0
   525  00EA' 3400               	retlw	0
   526  00EB' 3400               	retlw	0
   527  00EC' 3400               	retlw	0
   528  00ED' 3400               	retlw	0
   529  00EE' 3400               	retlw	0
   530  00EF' 3400               	retlw	0
   531  00F0' 3400               	retlw	0
   532  00F1' 3400               	retlw	0
   533  00F2' 3400               	retlw	0
   534  00F3' 3400               	retlw	0
   535  00F4' 3400               	retlw	0
   536  00F5' 3400               	retlw	0
   537  00F6' 3400               	retlw	0
   538  00F7' 3400               	retlw	0
   539  00F8' 3400               	retlw	0
   540  00F9' 3400               	retlw	0
   541  00FA' 3400               	retlw	0
   542  00FB' 3400               	retlw	0
   543  00FC' 3400               	retlw	0
   544  00FD' 3400               	retlw	0
   545  00FE' 3400               	retlw	0
   546  00FF' 3400               	retlw	0
   547  0100' 3400               	retlw	0
   548  0101' 3400               	retlw	0
   549  0102' 3400               	retlw	0
   550  0103' 3400               	retlw	0
   551  0104' 3400               	retlw	0
   552  0105' 3400               	retlw	0
   553  0106' 3400               	retlw	0
   554  0107' 3400               	retlw	0
   555  0108' 3400               	retlw	0
   556  0109' 3400               	retlw	0
   557  010A' 3400               	retlw	0
   558  010B' 3400               	retlw	0
   559  010C' 3400               	retlw	0
   560  010D' 3400               	retlw	0
   561  010E' 3400               	retlw	0
   562  010F' 3400               	retlw	0
   563  0110' 3400               	retlw	0
   564  0111' 3400               	retlw	0
   565  0112' 3400               	retlw	0
   566  0113' 3400               	retlw	0
   567  0114' 3400               	retlw	0
   568  0115' 3400               	retlw	0
   569  0116' 3400               	retlw	0
   570  0117' 3400               	retlw	0
   571  0118' 3400               	retlw	0
   572  0119' 3400               	retlw	0
   573  011A' 3400               	retlw	0
   574  011B' 3400               	retlw	0
   575  011C' 3400               	retlw	0
   576  011D' 3400               	retlw	0
   577  011E' 3400               	retlw	0
   578  011F' 3400               	retlw	0
   579  0120' 3400               	retlw	0
   580  0121' 3400               	retlw	0
   581  0122' 3400               	retlw	0
   582  0123' 3400               	retlw	0
   583  0124' 3400               	retlw	0
   584  0125' 3400               	retlw	0
   585  0126' 3400               	retlw	0
   586  0127' 3400               	retlw	0
   587  0128' 3400               	retlw	0
   588  0129' 3400               	retlw	0
   589  012A' 3400               	retlw	0
   590  012B' 3400               	retlw	0
   591  012C' 3400               	retlw	0
   592  012D' 3400               	retlw	0
   593  012E' 3400               	retlw	0
   594  012F' 3400               	retlw	0
   595  0130' 3400               	retlw	0
   596  0131' 3400               	retlw	0
   597  0132' 3400               	retlw	0
   598  0133' 3400               	retlw	0
   599  0134' 3400               	retlw	0
   600  0135' 3400               	retlw	0
   601  0136' 3400               	retlw	0
   602  0137' 3400               	retlw	0
   603  0138' 3400               	retlw	0
   604  0139' 3400               	retlw	0
   605  013A' 3400               	retlw	0
   606  013B' 3400               	retlw	0
   607  013C' 3400               	retlw	0
   608  013D' 3400               	retlw	0
   609  013E' 3400               	retlw	0
   610  013F' 3400               	retlw	0
   611  0140' 3400               	retlw	0
   612  0141' 3400               	retlw	0
   613  0142' 3400               	retlw	0
   614  0143' 3400               	retlw	0
   615  0144' 3400               	retlw	0
   616  0145' 3400               	retlw	0
   617  0146' 3400               	retlw	0
   618  0147' 3400               	retlw	0
   619  0148' 3400               	retlw	0
   620  0149' 3400               	retlw	0
   621  014A'                    __end_of_ARR:
   622                           
   623                           	psect	stringtext2
   624  0000'                    __pstringtext2:
   625  0000'                    _Max_RC5:
   626  0000' 3400               	retlw	0
   627  0001' 3402               	retlw	2
   628  0002'                    __end_of_Max_RC5:
   629                           
   630                           	psect	nvBANK0
   631  0000'                    __pnvBANK0:
   632  0000'                    _timer_value:
   633  0000'                    	ds	1
   634  000B                     _INTCONbits     set	11
   635  0014                     _TRISCbits      set	20
   636  0018                     _LATAbits       set	24
   637  0012                     _TRISAbits      set	18
   638  009E                     _ADCON1         set	158
   639  009D                     _ADCON0         set	157
   640  009B                     _ADRESL         set	155
   641  009C                     _ADRESH         set	156
   642  009D                     _ADCON0bits     set	157
   643  0119                     _RC1REG         set	281
   644  011A                     _TX1REG         set	282
   645  011C                     _SP1BRGH        set	284
   646  011B                     _SP1BRGL        set	283
   647  011E                     _TX1STA         set	286
   648  011D                     _RC1STA         set	285
   649  011F                     _BAUD1CON       set	287
   650  059C                     _TMR0L          set	1436
   651  059D                     _TMR0H          set	1437
   652  059F                     _T0CON1bits     set	1439
   653  059E                     _T0CON0bits     set	1438
   654  0716                     _PIE0bits       set	1814
   655  070C                     _PIR0bits       set	1804
   656  070D                     _PIR1bits       set	1805
   657  0717                     _PIE1bits       set	1815
   658  088E                     _OSCCON         set	2190
   659  1ECB                     _RX1PPS         set	7883
   660  1F38                     _ANSELAbits     set	7992
   661  1F55                     _IOCCFbits      set	8021
   662  1F54                     _IOCCNbits      set	8020
   663  1F53                     _IOCCPbits      set	8019
   664  1F4E                     _ANSELCbits     set	8014
   665  1F4E                     _ANSELC         set	8014
   666  1F38                     _ANSELA         set	7992
   667  1F23                     _RC3PPS         set	7971
   668                           
   669                           	psect	stringtext3
   670  0000'                    __pstringtext3:
   671  0000'                    STR_1:
   672  0000' 3456               	retlw	86	;'V'
   673  0001' 3470               	retlw	112	;'p'
   674  0002' 346B               	retlw	107	;'k'
   675  0003' 343A               	retlw	58	;':'
   676  0004' 3425               	retlw	37	;'%'
   677  0005' 342E               	retlw	46	;'.'
   678  0006' 3432               	retlw	50	;'2'
   679  0007' 3466               	retlw	102	;'f'
   680  0008' 3420               	retlw	32	;' '
   681  0009' 3449               	retlw	73	;'I'
   682  000A' 3470               	retlw	112	;'p'
   683  000B' 346B               	retlw	107	;'k'
   684  000C' 343A               	retlw	58	;':'
   685  000D' 3425               	retlw	37	;'%'
   686  000E' 342E               	retlw	46	;'.'
   687  000F' 3432               	retlw	50	;'2'
   688  0010' 3466               	retlw	102	;'f'
   689  0011' 3420               	retlw	32	;' '
   690  0012' 3454               	retlw	84	;'T'
   691  0013' 343A               	retlw	58	;':'
   692  0014' 3425               	retlw	37	;'%'
   693  0015' 3475               	retlw	117	;'u'
   694  0016' 340D               	retlw	13
   695  0017' 340A               	retlw	10
   696  0018' 3400               	retlw	0
   697                           
   698                           	psect	stringtext4
   699  0000'                    __pstringtext4:
   700  0000'                    STR_2:
   701  0000' 3469               	retlw	105	;'i'
   702  0001' 346E               	retlw	110	;'n'
   703  0002' 3466               	retlw	102	;'f'
   704  0003' 3400               	retlw	0
   705                           
   706                           	psect	stringtext5
   707  0000'                    __pstringtext5:
   708  0000'                    STR_5:
   709  0000' 346E               	retlw	110	;'n'
   710  0001' 3461               	retlw	97	;'a'
   711  0002' 346E               	retlw	110	;'n'
   712  0003' 3400               	retlw	0
   713                           
   714                           	psect	stringtext6
   715  0000'                    __pstringtext6:
   716  0000'                    STR_6           equ	STR_5
   717  0000'                    STR_7           equ	STR_5
   718  0000'                    STR_3           equ	STR_2
   719  0000'                    STR_4           equ	STR_2
   720                           
   721                           	psect	cinit
   722  0000'                    start_initialization:	
   723                           ; #config settings
   724                           
   725  0000'                    __initialization:
   726                           
   727                           ; Initialize objects allocated to BANK2
   728  0000' 0142               	movlb	2	; select bank2
   729  0001' 3180' 2000' 3180'  	fcall	__pidataBANK2	;fetch initializer
   730  0004' 0080'              	movwf	__pdataBANK2& (0+127)
   731  0005' 3180' 2000' 3180'  	fcall	__pidataBANK2+1	;fetch initializer
   732  0008' 0080'              	movwf	(__pdataBANK2+1)& (0+127)
   733  0009' 3180' 2000' 3180'  	fcall	__pidataBANK2+2	;fetch initializer
   734  000C' 0080'              	movwf	(__pdataBANK2+2)& (0+127)
   735  000D' 3180' 2000' 3180'  	fcall	__pidataBANK2+3	;fetch initializer
   736  0010' 0080'              	movwf	(__pdataBANK2+3)& (0+127)
   737                           
   738                           ; Clear objects allocated to COMMON
   739  0011' 0180'              	clrf	__pbssCOMMON& (0+127)
   740  0012' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
   741                           
   742                           ; Clear objects allocated to BANK0
   743  0013' 3000'              	movlw	low __pbssBANK0
   744  0014' 0084               	movwf	4
   745  0015' 3000'              	movlw	high __pbssBANK0
   746  0016' 0085               	movwf	5
   747  0017' 300A               	movlw	10
   748  0018' 3180' 2000' 3180'  	fcall	clear_ram0
   749                           
   750                           ; Clear objects allocated to BANK1
   751  001B' 0141               	movlb	1	; select bank1
   752  001C' 0180'              	clrf	__pbssBANK1& (0+127)
   753  001D' 0180'              	clrf	(__pbssBANK1+1)& (0+127)
   754                           
   755                           ; Clear objects allocated to BANK2
   756  001E' 3000'              	movlw	low __pbssBANK2
   757  001F' 0084               	movwf	4
   758  0020' 3000'              	movlw	high __pbssBANK2
   759  0021' 0085               	movwf	5
   760  0022' 3024               	movlw	36
   761  0023' 3180' 2000' 3180'  	fcall	clear_ram0
   762                           
   763                           ; Clear objects allocated to BANK3
   764  0026' 3000'              	movlw	low __pbssBANK3
   765  0027' 0084               	movwf	4
   766  0028' 3000'              	movlw	high __pbssBANK3
   767  0029' 0085               	movwf	5
   768  002A' 3050               	movlw	80
   769  002B' 3180' 2000' 3180'  	fcall	clear_ram0
   770                           
   771                           ; Clear objects allocated to BANK4
   772  002E' 3000'              	movlw	low __pbssBANK4
   773  002F' 0084               	movwf	4
   774  0030' 3000'              	movlw	high __pbssBANK4
   775  0031' 0085               	movwf	5
   776  0032' 3040               	movlw	64
   777  0033' 3180' 2000' 3180'  	fcall	clear_ram0
   778  0036'                    end_of_initialization:	
   779                           ;End of C runtime variable initialization code
   780                           
   781  0036'                    __end_of__initialization:
   782  0036' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   783  0037' 0140               	movlb	0
   784  0038' 3180' 2800'        	ljmp	_main	;jump to C main() function
   785                           
   786                           	psect	bssCOMMON
   787  0000'                    __pbssCOMMON:
   788  0000'                    _adc_channel_index:
   789  0000'                    	ds	1
   790  0001'                    _edge:
   791  0001'                    	ds	1
   792                           
   793                           	psect	bssBANK0
   794  0000'                    __pbssBANK0:
   795  0000'                    _prec:
   796  0000'                    	ds	2
   797  0002'                    _flags:
   798  0002'                    	ds	1
   799  0003'                    _Trip:
   800  0003'                    	ds	1
   801  0004'                    _cnt:
   802  0004'                    	ds	1
   803  0005'                    _rcv_FREQUENCY:
   804  0005'                    	ds	1
   805  0006'                    _byte:
   806  0006'                    	ds	1
   807  0007'                    _rcv_current_value:
   808  0007'                    	ds	1
   809  0008'                    _temperature_flag:
   810  0008'                    	ds	1
   811  0009'                    _count:
   812  0009'                    	ds	1
   813                           
   814                           	psect	bssBANK1
   815  0000'                    __pbssBANK1:
   816  0000'                    _voltage_val:
   817  0000'                    	ds	2
   818                           
   819                           	psect	bssBANK2
   820  0000'                    __pbssBANK2:
   821  0000'                    _rx_buffer:
   822  0000'                    	ds	6
   823  0006'                    floorf@F521:
   824  0006'                    	ds	4
   825  000A'                    ___fpclassifyf@F465:
   826  000A'                    	ds	4
   827  000E'                    _input_peak_current:
   828  000E'                    	ds	4
   829  0012'                    _input_peak_voltage:
   830  0012'                    	ds	4
   831  0016'                    _width:
   832  0016'                    	ds	2
   833  0018'                    _current_diff:
   834  0018'                    	ds	2
   835  001A'                    _voltage_diff:
   836  001A'                    	ds	2
   837  001C'                    _adc_val:
   838  001C'                    	ds	2
   839  001E'                    _timer_counter:
   840  001E'                    	ds	2
   841  0020'                    _temperature_val:
   842  0020'                    	ds	2
   843  0022'                    _current_val:
   844  0022'                    	ds	2
   845                           
   846                           	psect	dataBANK2
   847  0000'                    __pdataBANK2:
   848  0000'                    _max_adc:
   849  0000'                    	ds	2
   850  0002'                    _SecondcycleDelay:
   851  0002'                    	ds	2
   852                           
   853                           	psect	bssBANK3
   854  0000'                    __pbssBANK3:
   855  0000'                    _dbuf:
   856  0000'                    	ds	80
   857                           
   858                           	psect	bssBANK4
   859  0000'                    __pbssBANK4:
   860  0000'                    _buffer:
   861  0000'                    	ds	64
   862                           
   863                           	psect	clrtext
   864  0000'                    clear_ram0:	
   865                           ;	Called with FSR0 containing the base address, and
   866                           ;	WREG with the size to clear
   867                           
   868  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   869  0001'                    clrloop0:
   870  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   871  0002' 3101               	addfsr 0,1
   872  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   873  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
   874  0005' 3400               	retlw	0	;all done for this memory range, return
   875                           
   876                           	psect	cstackBANK1
   877  0000'                    __pcstackBANK1:
   878  0000'                    efgtoa@ne:
   879                           
   880                           ; 2 bytes @ 0x0
   881  0000'                    	ds	2
   882  0002'                    efgtoa@p:
   883                           
   884                           ; 2 bytes @ 0x2
   885  0002'                    	ds	2
   886  0004'                    efgtoa@t:
   887                           
   888                           ; 2 bytes @ 0x4
   889  0004'                    	ds	2
   890  0006'                    _efgtoa$982:
   891                           
   892                           ; 2 bytes @ 0x6
   893  0006'                    	ds	2
   894  0008'                    efgtoa@pp:
   895                           
   896                           ; 1 bytes @ 0x8
   897  0008'                    	ds	1
   898  0009'                    efgtoa@mode:
   899                           
   900                           ; 1 bytes @ 0x9
   901  0009'                    	ds	1
   902  000A'                    efgtoa@nmode:
   903                           
   904                           ; 1 bytes @ 0xA
   905  000A'                    	ds	1
   906  000B'                    efgtoa@d:
   907                           
   908                           ; 2 bytes @ 0xB
   909  000B'                    	ds	2
   910  000D'                    efgtoa@m:
   911                           
   912                           ; 2 bytes @ 0xD
   913  000D'                    	ds	2
   914  000F'                    efgtoa@e:
   915                           
   916                           ; 2 bytes @ 0xF
   917  000F'                    	ds	2
   918  0011'                    efgtoa@w:
   919                           
   920                           ; 2 bytes @ 0x11
   921  0011'                    	ds	2
   922  0013'                    efgtoa@ou:
   923                           
   924                           ; 4 bytes @ 0x13
   925  0013'                    	ds	4
   926  0017'                    efgtoa@i:
   927                           
   928                           ; 2 bytes @ 0x17
   929  0017'                    	ds	2
   930  0019'                    efgtoa@h:
   931                           
   932                           ; 4 bytes @ 0x19
   933  0019'                    	ds	4
   934  001D'                    efgtoa@l:
   935                           
   936                           ; 4 bytes @ 0x1D
   937  001D'                    	ds	4
   938  0021'                    efgtoa@sign:
   939                           
   940                           ; 1 bytes @ 0x21
   941  0021'                    	ds	1
   942  0022'                    efgtoa@g:
   943                           
   944                           ; 4 bytes @ 0x22
   945  0022'                    	ds	4
   946  0026'                    efgtoa@n:
   947                           
   948                           ; 2 bytes @ 0x26
   949  0026'                    	ds	2
   950  0028'                    efgtoa@u:
   951                           
   952                           ; 4 bytes @ 0x28
   953  0028'                    	ds	4
   954  002C'                    ?_vfpfcnvrt:
   955  002C'                    vfpfcnvrt@fp:	
   956                           ; 1 bytes @ 0x2C
   957                           
   958                           
   959                           ; 2 bytes @ 0x2C
   960  002C'                    	ds	2
   961  002E'                    vfpfcnvrt@fmt:
   962                           
   963                           ; 1 bytes @ 0x2E
   964  002E'                    	ds	1
   965  002F'                    vfpfcnvrt@ap:
   966                           
   967                           ; 1 bytes @ 0x2F
   968  002F'                    	ds	1
   969  0030'                    ?_vfprintf:
   970  0030'                    vfprintf@fp:	
   971                           ; 2 bytes @ 0x30
   972                           
   973                           
   974                           ; 2 bytes @ 0x30
   975  0030'                    	ds	2
   976  0032'                    vfprintf@fmt:
   977                           
   978                           ; 2 bytes @ 0x32
   979  0032'                    	ds	2
   980  0034'                    vfprintf@ap:
   981                           
   982                           ; 1 bytes @ 0x34
   983  0034'                    	ds	1
   984  0035'                    ?_sprintf:
   985  0035'                    sprintf@s:	
   986                           ; 2 bytes @ 0x35
   987                           
   988                           
   989                           ; 1 bytes @ 0x35
   990  0035'                    	ds	1
   991  0036'                    sprintf@fmt:
   992                           
   993                           ; 2 bytes @ 0x36
   994  0036'                    	ds	12
   995  0042'                    sprintf@ap:
   996                           
   997                           ; 1 bytes @ 0x42
   998  0042'                    	ds	1
   999  0043'                    sprintf@f:
  1000                           
  1001                           ; 11 bytes @ 0x43
  1002  0043'                    	ds	11
  1003                           
  1004                           	psect	cstackCOMMON
  1005  0000'                    __pcstackCOMMON:
  1006  0000'                    ?_putch:
  1007  0000'                    ?_UART_Init:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0000'                    ?_EUSART1_Write:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0000'                    ?_get_TMR0L_from_voltage:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0000'                    ?_main:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0000'                    ?_ISR:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0000'                    putch@c:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0000'                    ISR@adc_result:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0000'                    ??_ISR:	
  1029                           ; 2 bytes @ 0x0
  1030                           
  1031                           
  1032                           ; 1 bytes @ 0x0
  1033  0000'                    	ds	2
  1034  0002'                    ?_strcpy:
  1035  0002'                    ?_memcpy:	
  1036                           ; 1 bytes @ 0x2
  1037                           
  1038  0002'                    ?___fleq:	
  1039                           ; 1 bytes @ 0x2
  1040                           
  1041  0002'                    ?__Umul8_16:	
  1042                           ; 1 bit 
  1043                           
  1044  0002'                    ?_fputc:	
  1045                           ; 2 bytes @ 0x2
  1046                           
  1047  0002'                    ?___fpclassifyf:	
  1048                           ; 2 bytes @ 0x2
  1049                           
  1050  0002'                    ?___wmul:	
  1051                           ; 2 bytes @ 0x2
  1052                           
  1053  0002'                    ?___lwdiv:	
  1054                           ; 2 bytes @ 0x2
  1055                           
  1056  0002'                    ?___lwmod:	
  1057                           ; 2 bytes @ 0x2
  1058                           
  1059  0002'                    ?_labs:	
  1060                           ; 2 bytes @ 0x2
  1061                           
  1062  0002'                    ?___flneg:	
  1063                           ; 4 bytes @ 0x2
  1064                           
  1065  0002'                    ?___fltol:	
  1066                           ; 4 bytes @ 0x2
  1067                           
  1068  0002'                    ?___fladd:	
  1069                           ; 4 bytes @ 0x2
  1070                           
  1071  0002'                    ?___fldiv:	
  1072                           ; 4 bytes @ 0x2
  1073                           
  1074  0002'                    ?___xxtofl:	
  1075                           ; 4 bytes @ 0x2
  1076                           
  1077  0002'                    EUSART1_Write@txData:	
  1078                           ; 4 bytes @ 0x2
  1079                           
  1080  0002'                    get_TMR0L_from_voltage@voltage:	
  1081                           ; 1 bytes @ 0x2
  1082                           
  1083  0002'                    __Umul8_16@multiplicand:	
  1084                           ; 1 bytes @ 0x2
  1085                           
  1086  0002'                    memcpy@d1:	
  1087                           ; 1 bytes @ 0x2
  1088                           
  1089  0002'                    strcpy@dest:	
  1090                           ; 1 bytes @ 0x2
  1091                           
  1092  0002'                    ___wmul@multiplier:	
  1093                           ; 1 bytes @ 0x2
  1094                           
  1095  0002'                    ___lwdiv@divisor:	
  1096                           ; 2 bytes @ 0x2
  1097                           
  1098  0002'                    ___lwmod@divisor:	
  1099                           ; 2 bytes @ 0x2
  1100                           
  1101  0002'                    fputc@c:	
  1102                           ; 2 bytes @ 0x2
  1103                           
  1104  0002'                    ___fleq@ff1:	
  1105                           ; 2 bytes @ 0x2
  1106                           
  1107  0002'                    ___flneg@f1:	
  1108                           ; 4 bytes @ 0x2
  1109                           
  1110  0002'                    ___fltol@f1:	
  1111                           ; 4 bytes @ 0x2
  1112                           
  1113  0002'                    ___fladd@b:	
  1114                           ; 4 bytes @ 0x2
  1115                           
  1116  0002'                    ___fldiv@a:	
  1117                           ; 4 bytes @ 0x2
  1118                           
  1119  0002'                    ___xxtofl@val:	
  1120                           ; 4 bytes @ 0x2
  1121                           
  1122  0002'                    ___fpclassifyf@x:	
  1123                           ; 4 bytes @ 0x2
  1124                           
  1125  0002'                    labs@a:	
  1126                           ; 4 bytes @ 0x2
  1127                           
  1128  0002'                    ??_putch:	
  1129                           ; 4 bytes @ 0x2
  1130                           
  1131  0002'                    ??_UART_Init:	
  1132                           ; 1 bytes @ 0x2
  1133                           
  1134  0002'                    ??_EUSART1_Write:	
  1135                           ; 1 bytes @ 0x2
  1136                           
  1137  0002'                    ??_get_TMR0L_from_voltage:	
  1138                           ; 1 bytes @ 0x2
  1139                           
  1140                           
  1141                           ; 1 bytes @ 0x2
  1142  0002'                    	ds	1
  1143  0003'                    ?_UART_Write_Text:
  1144  0003'                    UART_Write_Text@text:	
  1145                           ; 1 bytes @ 0x3
  1146                           
  1147  0003'                    memcpy@s1:	
  1148                           ; 1 bytes @ 0x3
  1149                           
  1150  0003'                    strcpy@src:	
  1151                           ; 1 bytes @ 0x3
  1152                           
  1153                           
  1154                           ; 2 bytes @ 0x3
  1155  0003'                    	ds	1
  1156  0004'                    ___wmul@multiplicand:
  1157  0004'                    ___lwdiv@dividend:	
  1158                           ; 2 bytes @ 0x4
  1159                           
  1160  0004'                    ___lwmod@dividend:	
  1161                           ; 2 bytes @ 0x4
  1162                           
  1163  0004'                    memcpy@n:	
  1164                           ; 2 bytes @ 0x4
  1165                           
  1166  0004'                    fputc@fp:	
  1167                           ; 2 bytes @ 0x4
  1168                           
  1169  0004'                    ??__Umul8_16:	
  1170                           ; 2 bytes @ 0x4
  1171                           
  1172  0004'                    ??_UART_Write_Text:	
  1173                           ; 1 bytes @ 0x4
  1174                           
  1175                           
  1176                           ; 1 bytes @ 0x4
  1177  0004'                    	ds	1
  1178  0005'                    ??_strcpy:
  1179                           
  1180                           ; 1 bytes @ 0x5
  1181  0005'                    	ds	1
  1182  0006'                    ___lwmod@counter:
  1183  0006'                    memcpy@tmp:	
  1184                           ; 1 bytes @ 0x6
  1185                           
  1186  0006'                    ___wmul@product:	
  1187                           ; 1 bytes @ 0x6
  1188                           
  1189  0006'                    ___lwdiv@quotient:	
  1190                           ; 2 bytes @ 0x6
  1191                           
  1192  0006'                    ___fleq@ff2:	
  1193                           ; 2 bytes @ 0x6
  1194                           
  1195  0006'                    ___fladd@a:	
  1196                           ; 4 bytes @ 0x6
  1197                           
  1198  0006'                    ___fldiv@b:	
  1199                           ; 4 bytes @ 0x6
  1200                           
  1201  0006'                    ??_fputs:	
  1202                           ; 4 bytes @ 0x6
  1203                           
  1204  0006'                    ??_labs:	
  1205                           ; 1 bytes @ 0x6
  1206                           
  1207  0006'                    ??_memcpy:	
  1208                           ; 1 bytes @ 0x6
  1209                           
  1210  0006'                    ??___wmul:	
  1211                           ; 1 bytes @ 0x6
  1212                           
  1213  0006'                    ??___flneg:	
  1214                           ; 1 bytes @ 0x6
  1215                           
  1216  0006'                    ??___fltol:	
  1217                           ; 1 bytes @ 0x6
  1218                           
  1219  0006'                    ??___lwdiv:	
  1220                           ; 1 bytes @ 0x6
  1221                           
  1222  0006'                    ??___lwmod:	
  1223                           ; 1 bytes @ 0x6
  1224                           
  1225  0006'                    ??___xxtofl:	
  1226                           ; 1 bytes @ 0x6
  1227                           
  1228                           
  1229                           ; 1 bytes @ 0x6
  1230  0006'                    	ds	1
  1231  0007'                    memcpy@d:
  1232  0007'                    strcpy@d:	
  1233                           ; 1 bytes @ 0x7
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0x7
  1237  0007'                    	ds	1
  1238  0008'                    ?_read_prec_or_width:
  1239  0008'                    ___lwdiv@counter:	
  1240                           ; 2 bytes @ 0x8
  1241                           
  1242  0008'                    read_prec_or_width@fmt:	
  1243                           ; 1 bytes @ 0x8
  1244                           
  1245  0008'                    memcpy@s:	
  1246                           ; 1 bytes @ 0x8
  1247                           
  1248  0008'                    ??_pad:	
  1249                           ; 1 bytes @ 0x8
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0x8
  1253  0008'                    	ds	1
  1254  0009'                    read_prec_or_width@ap:
  1255  0009'                    ??_utoa:	
  1256                           ; 1 bytes @ 0x9
  1257                           
  1258                           
  1259                           ; 1 bytes @ 0x9
  1260  0009'                    	ds	1
  1261  000A'                    ??_sprintf:
  1262  000A'                    ??_main:	
  1263                           ; 1 bytes @ 0xA
  1264                           
  1265  000A'                    ??___flsub:	
  1266                           ; 1 bytes @ 0xA
  1267                           
  1268                           
  1269                           	psect	cstackBANK0
  1270  0000'                    __pcstackBANK0:	
  1271                           ; 1 bytes @ 0xA
  1272                           
  1273  0000'                    ___fltol@sign1:
  1274  0000'                    ___xxtofl@sign:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0000'                    __Umul8_16@product:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0000'                    ??_fputc:	
  1281                           ; 2 bytes @ 0x0
  1282                           
  1283  0000'                    ??___fpclassifyf:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0000'                    ??___fleq:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0000'                    ??___fladd:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0000'                    ??___fldiv:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0000'                    ??_read_prec_or_width:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298                           
  1299                           ; 1 bytes @ 0x0
  1300  0000'                    	ds	1
  1301  0001'                    ___fltol@exp1:
  1302  0001'                    ___xxtofl@exp:	
  1303                           ; 1 bytes @ 0x1
  1304                           
  1305                           
  1306                           ; 1 bytes @ 0x1
  1307  0001'                    	ds	1
  1308  0002'                    __Umul8_16@word_mpld:
  1309  0002'                    ___xxtofl@arg:	
  1310                           ; 2 bytes @ 0x2
  1311                           
  1312                           
  1313                           ; 4 bytes @ 0x2
  1314  0002'                    	ds	1
  1315  0003'                    read_prec_or_width@c:
  1316                           
  1317                           ; 1 bytes @ 0x3
  1318  0003'                    	ds	1
  1319  0004'                    __Umul8_16@multiplier:
  1320  0004'                    read_prec_or_width@n:	
  1321                           ; 1 bytes @ 0x4
  1322                           
  1323                           
  1324                           ; 2 bytes @ 0x4
  1325  0004'                    	ds	1
  1326  0005'                    ?_fputs:
  1327  0005'                    fputs@s:	
  1328                           ; 2 bytes @ 0x5
  1329                           
  1330  0005'                    ___fldiv@rem:	
  1331                           ; 1 bytes @ 0x5
  1332                           
  1333                           
  1334                           ; 4 bytes @ 0x5
  1335  0005'                    	ds	1
  1336  0006'                    ?___flmul:
  1337  0006'                    ___fpclassifyf@e:	
  1338                           ; 4 bytes @ 0x6
  1339                           
  1340  0006'                    fputs@fp:	
  1341                           ; 2 bytes @ 0x6
  1342                           
  1343  0006'                    ___flmul@b:	
  1344                           ; 2 bytes @ 0x6
  1345                           
  1346                           
  1347                           ; 4 bytes @ 0x6
  1348  0006'                    	ds	2
  1349  0008'                    ___fladd@signs:
  1350  0008'                    fputs@c:	
  1351                           ; 1 bytes @ 0x8
  1352                           
  1353  0008'                    ___fpclassifyf@u:	
  1354                           ; 1 bytes @ 0x8
  1355                           
  1356                           
  1357                           ; 4 bytes @ 0x8
  1358  0008'                    	ds	1
  1359  0009'                    ___fladd@aexp:
  1360  0009'                    ___fldiv@sign:	
  1361                           ; 1 bytes @ 0x9
  1362                           
  1363  0009'                    fputs@i:	
  1364                           ; 1 bytes @ 0x9
  1365                           
  1366                           
  1367                           ; 2 bytes @ 0x9
  1368  0009'                    	ds	1
  1369  000A'                    ___fladd@bexp:
  1370  000A'                    ___fldiv@new_exp:	
  1371                           ; 1 bytes @ 0xA
  1372                           
  1373  000A'                    ___flmul@a:	
  1374                           ; 2 bytes @ 0xA
  1375                           
  1376                           
  1377                           ; 4 bytes @ 0xA
  1378  000A'                    	ds	1
  1379  000B'                    ?_pad:
  1380  000B'                    ___fladd@grs:	
  1381                           ; 1 bytes @ 0xB
  1382                           
  1383  000B'                    pad@fp:	
  1384                           ; 1 bytes @ 0xB
  1385                           
  1386                           
  1387                           ; 2 bytes @ 0xB
  1388  000B'                    	ds	1
  1389  000C'                    ___fldiv@grs:
  1390                           
  1391                           ; 4 bytes @ 0xC
  1392  000C'                    	ds	1
  1393  000D'                    pad@buf:
  1394                           
  1395                           ; 1 bytes @ 0xD
  1396  000D'                    	ds	1
  1397  000E'                    pad@p:
  1398  000E'                    ??___flmul:	
  1399                           ; 2 bytes @ 0xE
  1400                           
  1401                           
  1402                           ; 1 bytes @ 0xE
  1403  000E'                    	ds	2
  1404  0010'                    ___fldiv@bexp:
  1405  0010'                    pad@i:	
  1406                           ; 1 bytes @ 0x10
  1407                           
  1408                           
  1409                           ; 2 bytes @ 0x10
  1410  0010'                    	ds	1
  1411  0011'                    ___fldiv@aexp:
  1412                           
  1413                           ; 1 bytes @ 0x11
  1414  0011'                    	ds	1
  1415  0012'                    ?_utoa:
  1416  0012'                    ?_floorf:	
  1417                           ; 1 bytes @ 0x12
  1418                           
  1419  0012'                    utoa@fp:	
  1420                           ; 4 bytes @ 0x12
  1421                           
  1422  0012'                    floorf@x:	
  1423                           ; 2 bytes @ 0x12
  1424                           
  1425                           
  1426                           ; 4 bytes @ 0x12
  1427  0012'                    	ds	1
  1428  0013'                    ___flmul@sign:
  1429                           
  1430                           ; 1 bytes @ 0x13
  1431  0013'                    	ds	1
  1432  0014'                    ___flmul@aexp:
  1433  0014'                    utoa@d:	
  1434                           ; 1 bytes @ 0x14
  1435                           
  1436                           
  1437                           ; 2 bytes @ 0x14
  1438  0014'                    	ds	1
  1439  0015'                    ___flmul@grs:
  1440                           
  1441                           ; 4 bytes @ 0x15
  1442  0015'                    	ds	1
  1443  0016'                    utoa@w:
  1444  0016'                    ??_floorf:	
  1445                           ; 2 bytes @ 0x16
  1446                           
  1447                           
  1448                           ; 1 bytes @ 0x16
  1449  0016'                    	ds	2
  1450  0018'                    utoa@p:
  1451                           
  1452                           ; 2 bytes @ 0x18
  1453  0018'                    	ds	1
  1454  0019'                    ___flmul@bexp:
  1455                           
  1456                           ; 1 bytes @ 0x19
  1457  0019'                    	ds	1
  1458  001A'                    utoa@i:
  1459  001A'                    ___flmul@prod:	
  1460                           ; 2 bytes @ 0x1A
  1461                           
  1462                           
  1463                           ; 4 bytes @ 0x1A
  1464  001A'                    	ds	2
  1465  001C'                    floorf@m:
  1466                           
  1467                           ; 4 bytes @ 0x1C
  1468  001C'                    	ds	2
  1469  001E'                    ___flmul@temp:
  1470                           
  1471                           ; 2 bytes @ 0x1E
  1472  001E'                    	ds	2
  1473  0020'                    ?___flge:
  1474  0020'                    ?___flsub:	
  1475                           ; 1 bit 
  1476                           
  1477  0020'                    floorf@e:	
  1478                           ; 4 bytes @ 0x20
  1479                           
  1480  0020'                    ___flge@ff1:	
  1481                           ; 2 bytes @ 0x20
  1482                           
  1483  0020'                    ___flsub@a:	
  1484                           ; 4 bytes @ 0x20
  1485                           
  1486                           
  1487                           ; 4 bytes @ 0x20
  1488  0020'                    	ds	2
  1489  0022'                    floorf@u:
  1490                           
  1491                           ; 4 bytes @ 0x22
  1492  0022'                    	ds	2
  1493  0024'                    ___flge@ff2:
  1494  0024'                    ___flsub@b:	
  1495                           ; 4 bytes @ 0x24
  1496                           
  1497                           
  1498                           ; 4 bytes @ 0x24
  1499  0024'                    	ds	4
  1500  0028'                    ??___flge:
  1501                           
  1502                           ; 1 bytes @ 0x28
  1503  0028'                    	ds	4
  1504  002C'                    ?_efgtoa:
  1505  002C'                    efgtoa@fp:	
  1506                           ; 1 bytes @ 0x2C
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x2C
  1510  002C'                    	ds	2
  1511  002E'                    efgtoa@f:
  1512                           
  1513                           ; 4 bytes @ 0x2E
  1514  002E'                    	ds	4
  1515  0032'                    efgtoa@c:
  1516                           
  1517                           ; 1 bytes @ 0x32
  1518  0032'                    	ds	1
  1519  0033'                    ??_efgtoa:
  1520                           
  1521                           ; 1 bytes @ 0x33
  1522  0033'                    	ds	4
  1523  0037'                    ??_vfpfcnvrt:
  1524                           
  1525                           ; 1 bytes @ 0x37
  1526  0037'                    	ds	4
  1527  003B'                    vfpfcnvrt@convarg:
  1528                           
  1529                           ; 4 bytes @ 0x3B
  1530  003B'                    	ds	4
  1531  003F'                    vfpfcnvrt@c:
  1532                           
  1533                           ; 1 bytes @ 0x3F
  1534  003F'                    	ds	1
  1535  0040'                    vfpfcnvrt@cp:
  1536                           
  1537                           ; 2 bytes @ 0x40
  1538  0040'                    	ds	2
  1539  0042'                    ??_vfprintf:
  1540                           
  1541                           ; 1 bytes @ 0x42
  1542  0042'                    	ds	1
  1543  0043'                    vfprintf@cfmt:
  1544                           
  1545                           ; 2 bytes @ 0x43
  1546  0043'                    	ds	2
  1547                           
  1548                           	psect	maintext
  1549  0000'                    __pmaintext:	
  1550 ;;
  1551 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1552 ;;
  1553 ;; *************** function _main *****************
  1554 ;; Defined at:
  1555 ;;		line 261 in file "vtg_main.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : B3F/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1569 ;;      Params:         0       0       0       0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0
  1572 ;;      Totals:         0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        0 bytes
  1574 ;; Hardware stack levels required when called: 9
  1575 ;; This function calls:
  1576 ;;		_UART_Init
  1577 ;;		_UART_Write_Text
  1578 ;;		___flmul
  1579 ;;		___xxtofl
  1580 ;;		_get_TMR0L_from_voltage
  1581 ;;		_sprintf
  1582 ;; This function is called by:
  1583 ;;		Startup code after reset
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587  0000'                    _main:	
  1588                           ;psect for function _main
  1589                           
  1590  0000'                    l4622:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1593                           
  1594                           
  1595                           ;vtg_main.c: 263:     OSCCON = 0x70;
  1596  0000' 3070               	movlw	112
  1597  0001' 0151               	movlb	17	; select bank17
  1598  0002' 008E               	movwf	14	;volatile
  1599                           
  1600                           ;vtg_main.c: 266:     TRISAbits.TRISA5 = 0;
  1601  0003' 0140               	movlb	0	; select bank0
  1602  0004' 1292               	bcf	18,5	;volatile
  1603                           
  1604                           ;vtg_main.c: 267:     LATAbits.LATA5 = 1;
  1605  0005' 1698               	bsf	24,5	;volatile
  1606                           
  1607                           ;vtg_main.c: 269:     TRISCbits.TRISC0 = 1;
  1608  0006' 1414               	bsf	20,0	;volatile
  1609                           
  1610                           ;vtg_main.c: 272:     TRISCbits.TRISC4 = 1;
  1611  0007' 1614               	bsf	20,4	;volatile
  1612                           
  1613                           ;vtg_main.c: 273:     TRISCbits.TRISC3 = 0;
  1614  0008' 1194               	bcf	20,3	;volatile
  1615  0009'                    l4624:
  1616                           
  1617                           ;vtg_main.c: 275:     edge = 0;
  1618  0009' 0181'              	clrf	_edge	;volatile
  1619                           
  1620                           ;vtg_main.c: 276:     count = 0;
  1621  000A' 0189'              	clrf	_count	;volatile
  1622  000B'                    l4626:
  1623                           
  1624                           ;vtg_main.c: 279:     IOCCPbits.IOCCP0 = 1;
  1625  000B' 017E               	movlb	62	; select bank62
  1626  000C' 1453               	bsf	83,0	;volatile
  1627  000D'                    l4628:
  1628                           
  1629                           ;vtg_main.c: 280:     IOCCNbits.IOCCN0 = 1;
  1630  000D' 1454               	bsf	84,0	;volatile
  1631  000E'                    l4630:
  1632                           
  1633                           ;vtg_main.c: 281:     IOCCFbits.IOCCF0 = 0;
  1634  000E' 1055               	bcf	85,0	;volatile
  1635  000F'                    l4632:
  1636                           
  1637                           ;vtg_main.c: 283:     PIR0bits.IOCIF = 0;
  1638  000F' 014E               	movlb	14	; select bank14
  1639  0010' 120C               	bcf	12,4	;volatile
  1640  0011'                    l4634:
  1641                           
  1642                           ;vtg_main.c: 284:     PIE0bits.IOCIE = 1;
  1643  0011' 1616               	bsf	22,4	;volatile
  1644  0012'                    l4636:
  1645                           
  1646                           ;vtg_main.c: 286:     INTCONbits.PEIE = 1;
  1647  0012' 170B               	bsf	11,6	;volatile
  1648  0013'                    l4638:
  1649                           
  1650                           ;vtg_main.c: 287:     INTCONbits.GIE = 1;
  1651  0013' 178B               	bsf	11,7	;volatile
  1652  0014'                    l4640:
  1653                           
  1654                           ;vtg_main.c: 288:     INTCONbits.INTEDG = 0;
  1655  0014' 100B               	bcf	11,0	;volatile
  1656  0015'                    l4642:
  1657                           
  1658                           ;vtg_main.c: 291:     TRISCbits.TRISC2 = 1;
  1659  0015' 0140               	movlb	0	; select bank0
  1660  0016' 1514               	bsf	20,2	;volatile
  1661  0017'                    l4644:
  1662                           
  1663                           ;vtg_main.c: 292:     TRISAbits.TRISA2 = 1;
  1664  0017' 1512               	bsf	18,2	;volatile
  1665  0018'                    l4646:
  1666                           
  1667                           ;vtg_main.c: 293:     TRISAbits.TRISA4 = 1;
  1668  0018' 1612               	bsf	18,4	;volatile
  1669  0019'                    l4648:
  1670                           
  1671                           ;vtg_main.c: 299:     TRISCbits.TRISC2 = 1;
  1672  0019' 1514               	bsf	20,2	;volatile
  1673  001A'                    l4650:
  1674                           
  1675                           ;vtg_main.c: 300:     ANSELCbits.ANSC2 = 1;
  1676  001A' 017E               	movlb	62	; select bank62
  1677  001B' 154E               	bsf	78,2	;volatile
  1678  001C'                    l4652:
  1679                           
  1680                           ;vtg_main.c: 301:     TRISAbits.TRISA2 = 1;
  1681  001C' 0140               	movlb	0	; select bank0
  1682  001D' 1512               	bsf	18,2	;volatile
  1683  001E'                    l4654:
  1684                           
  1685                           ;vtg_main.c: 302:     ANSELAbits.ANSA2 = 1;
  1686  001E' 017E               	movlb	62	; select bank62
  1687  001F' 1538               	bsf	56,2	;volatile
  1688  0020'                    l4656:
  1689                           
  1690                           ;vtg_main.c: 303:     TRISAbits.TRISA4 = 1;
  1691  0020' 0140               	movlb	0	; select bank0
  1692  0021' 1612               	bsf	18,4	;volatile
  1693  0022'                    l4658:
  1694                           
  1695                           ;vtg_main.c: 304:     ANSELAbits.ANSA4 = 1;
  1696  0022' 017E               	movlb	62	; select bank62
  1697  0023' 1638               	bsf	56,4	;volatile
  1698  0024'                    l4660:
  1699                           
  1700                           ;vtg_main.c: 305:     TRISCbits.TRISC5 = 1;
  1701  0024' 0140               	movlb	0	; select bank0
  1702  0025' 1694               	bsf	20,5	;volatile
  1703  0026'                    l4662:
  1704                           
  1705                           ;vtg_main.c: 306:     ANSELCbits.ANSC5 = 1;
  1706  0026' 017E               	movlb	62	; select bank62
  1707  0027' 16CE               	bsf	78,5	;volatile
  1708  0028'                    l4664:
  1709                           
  1710                           ;vtg_main.c: 311:      ADCON0 = 0b01010100;
  1711  0028' 3054               	movlw	84
  1712  0029' 0141               	movlb	1	; select bank1
  1713  002A' 009D               	movwf	29	;volatile
  1714  002B'                    l4666:
  1715                           
  1716                           ;vtg_main.c: 314:     ADCON1 = 0b11100000;
  1717  002B' 30E0               	movlw	224
  1718  002C' 009E               	movwf	30	;volatile
  1719  002D'                    l4668:
  1720                           
  1721                           ;vtg_main.c: 315:     PIR1bits.ADIF = 0;
  1722  002D' 014E               	movlb	14	; select bank14
  1723  002E' 100D               	bcf	13,0	;volatile
  1724  002F'                    l4670:
  1725                           
  1726                           ;vtg_main.c: 316:     PIE1bits.ADIE = 1;
  1727  002F' 1417               	bsf	23,0	;volatile
  1728  0030'                    l4672:
  1729                           
  1730                           ;vtg_main.c: 317:     ADCON0bits.ON = 1;
  1731  0030' 0141               	movlb	1	; select bank1
  1732  0031' 141D               	bsf	29,0	;volatile
  1733  0032'                    l4674:
  1734                           
  1735                           ;vtg_main.c: 318:     ADCON0bits.GO = 1;
  1736  0032' 149D               	bsf	29,1	;volatile
  1737  0033'                    l4676:
  1738                           
  1739                           ;vtg_main.c: 321:     T0CON0bits.MD16 = 0;
  1740  0033' 014B               	movlb	11	; select bank11
  1741  0034' 121E               	bcf	30,4	;volatile
  1742  0035'                    l4678:
  1743                           
  1744                           ;vtg_main.c: 322:     T0CON0bits.OUTPS = 0x00;
  1745  0035' 30F0               	movlw	-16
  1746  0036' 059E               	andwf	30,f	;volatile
  1747  0037'                    l4680:
  1748                           
  1749                           ;vtg_main.c: 323:     T0CON1bits.ASYNC = 0;
  1750  0037' 121F               	bcf	31,4	;volatile
  1751  0038'                    l4682:
  1752                           
  1753                           ;vtg_main.c: 324:     T0CON1bits.CS = 0b010;
  1754  0038' 081F               	movf	31,w	;volatile
  1755  0039' 391F               	andlw	-225
  1756  003A' 3840               	iorlw	64
  1757  003B' 009F               	movwf	31	;volatile
  1758  003C'                    l4684:
  1759                           
  1760                           ;vtg_main.c: 325:     T0CON1bits.CKPS = 0x04;
  1761  003C' 081F               	movf	31,w	;volatile
  1762  003D' 39F0               	andlw	-16
  1763  003E' 3804               	iorlw	4
  1764  003F' 009F               	movwf	31	;volatile
  1765  0040'                    l4686:
  1766                           
  1767                           ;vtg_main.c: 326:     TMR0H = 0;
  1768  0040' 019D               	clrf	29	;volatile
  1769  0041'                    l4688:
  1770                           
  1771                           ;vtg_main.c: 327:     TMR0L = 0;
  1772  0041' 019C               	clrf	28	;volatile
  1773  0042'                    l4690:
  1774                           
  1775                           ;vtg_main.c: 328:     PIR0bits.TMR0IF = 0;
  1776  0042' 014E               	movlb	14	; select bank14
  1777  0043' 128C               	bcf	12,5	;volatile
  1778  0044'                    l4692:
  1779                           
  1780                           ;vtg_main.c: 329:     PIE0bits.TMR0IE = 1;
  1781  0044' 1696               	bsf	22,5	;volatile
  1782  0045'                    l4694:
  1783                           
  1784                           ;vtg_main.c: 330:     T0CON0bits.EN = 1;
  1785  0045' 014B               	movlb	11	; select bank11
  1786  0046' 179E               	bsf	30,7	;volatile
  1787  0047'                    l4696:
  1788                           
  1789                           ;vtg_main.c: 331:     UART_Init();
  1790  0047' 3180' 2000' 3180'  	fcall	_UART_Init
  1791  004A'                    l4698:
  1792                           
  1793                           ;vtg_main.c: 335:         timer_value = get_TMR0L_from_voltage(rcv_current_value);
  1794  004A' 0140               	movlb	0	; select bank0
  1795  004B' 0807'              	movf	_rcv_current_value,w
  1796  004C' 3180' 2000' 3180'  	fcall	_get_TMR0L_from_voltage
  1797  004F' 0140               	movlb	0	; select bank0
  1798  0050' 0080'              	movwf	_timer_value
  1799  0051'                    l4700:
  1800                           
  1801                           ;vtg_main.c: 337:         if (timer_counter >= 3) {
  1802  0051' 3000               	movlw	0
  1803  0052' 0142               	movlb	2	; select bank2
  1804  0053' 0200'              	subwf	(_timer_counter+1)^(0+256),w	;volatile
  1805  0054' 3003               	movlw	3
  1806  0055' 1903               	skipnz
  1807  0056' 0200'              	subwf	_timer_counter^(0+256),w	;volatile
  1808  0057' 1C03               	skipc
  1809  0058' 2800'              	goto	u6341
  1810  0059' 2800'              	goto	u6340
  1811  005A'                    u6341:
  1812  005A' 2800'              	goto	l4720
  1813  005B'                    u6340:
  1814  005B'                    l4702:
  1815                           
  1816                           ;vtg_main.c: 338:             timer_counter = 0;
  1817  005B' 0180'              	clrf	_timer_counter^(0+256)	;volatile
  1818  005C' 0180'              	clrf	(_timer_counter+1)^(0+256)	;volatile
  1819                           
  1820                           ;vtg_main.c: 341:             switch (adc_channel_index) {
  1821  005D' 2800'              	goto	l4712
  1822  005E'                    l4704:
  1823                           
  1824                           ;vtg_main.c: 343:                     ADCON0bits.CHS = 0b010010;
  1825  005E' 0141               	movlb	1	; select bank1
  1826  005F' 081D               	movf	29,w	;volatile
  1827  0060' 3903               	andlw	-253
  1828  0061' 3848               	iorlw	72
  1829  0062' 009D               	movwf	29	;volatile
  1830                           
  1831                           ;vtg_main.c: 344:                     break;
  1832  0063' 2800'              	goto	l196
  1833  0064'                    l4706:
  1834                           
  1835                           ;vtg_main.c: 347:                     ADCON0bits.CHS = 0b000010;
  1836  0064' 0141               	movlb	1	; select bank1
  1837  0065' 081D               	movf	29,w	;volatile
  1838  0066' 3903               	andlw	-253
  1839  0067' 3808               	iorlw	8
  1840  0068' 009D               	movwf	29	;volatile
  1841                           
  1842                           ;vtg_main.c: 348:                     break;
  1843  0069' 2800'              	goto	l196
  1844  006A'                    l4708:
  1845                           
  1846                           ;vtg_main.c: 351:                     ADCON0bits.CHS = 0b000100;
  1847  006A' 0141               	movlb	1	; select bank1
  1848  006B' 081D               	movf	29,w	;volatile
  1849  006C' 3903               	andlw	-253
  1850  006D' 3810               	iorlw	16
  1851  006E' 009D               	movwf	29	;volatile
  1852                           
  1853                           ;vtg_main.c: 352:                     break;
  1854  006F' 2800'              	goto	l196
  1855  0070'                    l4712:
  1856  0070' 0800'              	movf	_adc_channel_index,w	;volatile
  1857                           
  1858                           ; Switch size 1, requested type "simple"
  1859                           ; Number of cases is 3, Range of values is 0 to 2
  1860                           ; switch strategies available:
  1861                           ; Name         Instructions Cycles
  1862                           ; simple_byte           10     6 (average)
  1863                           ; direct_byte           12     6 (fixed)
  1864                           ; jumptable            260     6 (fixed)
  1865                           ;	Chosen strategy is simple_byte
  1866  0071' 3A00               	xorlw	0	; case 0
  1867  0072' 1903               	skipnz
  1868  0073' 2800'              	goto	l4704
  1869  0074' 3A01               	xorlw	1	; case 1
  1870  0075' 1903               	skipnz
  1871  0076' 2800'              	goto	l4706
  1872  0077' 3A03               	xorlw	3	; case 2
  1873  0078' 1903               	skipnz
  1874  0079' 2800'              	goto	l4708
  1875  007A' 2800'              	goto	l196
  1876  007B'                    l196:
  1877                           
  1878                           ;vtg_main.c: 356:             ADCON0bits.GO = 1;
  1879  007B' 0141               	movlb	1	; select bank1
  1880  007C' 149D               	bsf	29,1	;volatile
  1881  007D'                    l4714:
  1882                           
  1883                           ;vtg_main.c: 359:             adc_channel_index++;
  1884  007D' 3001               	movlw	1
  1885  007E' 0780'              	addwf	_adc_channel_index,f	;volatile
  1886  007F'                    l4716:
  1887                           
  1888                           ;vtg_main.c: 360:             if (adc_channel_index > 2) {
  1889  007F' 3003               	movlw	3
  1890  0080' 0200'              	subwf	_adc_channel_index,w	;volatile
  1891  0081' 1C03               	skipc
  1892  0082' 2800'              	goto	u6351
  1893  0083' 2800'              	goto	u6350
  1894  0084'                    u6351:
  1895  0084' 2800'              	goto	l4720
  1896  0085'                    u6350:
  1897  0085'                    l4718:
  1898                           
  1899                           ;vtg_main.c: 361:                 adc_channel_index = 0;
  1900  0085' 0180'              	clrf	_adc_channel_index	;volatile
  1901  0086'                    l4720:
  1902                           
  1903                           ;vtg_main.c: 365:          voltage_diff = voltage_val - Max_RC5;
  1904  0086' 0141               	movlb	1	; select bank1
  1905  0087' 0800'              	movf	_voltage_val^(0+128),w	;volatile
  1906  0088' 3E00               	addlw	0
  1907  0089' 0142               	movlb	2	; select bank2
  1908  008A' 0080'              	movwf	_voltage_diff^(0+256)
  1909  008B' 30FE               	movlw	254
  1910  008C' 0141               	movlb	1	; select bank1
  1911  008D' 3D00'              	addwfc	(_voltage_val+1)^(0+128),w	;volatile
  1912  008E' 0142               	movlb	2	; select bank2
  1913  008F' 0080'              	movwf	(_voltage_diff+1)^(0+256)
  1914  0090'                    l4722:
  1915                           
  1916                           ;vtg_main.c: 366:          current_diff = current_val - Max_RC5;
  1917  0090' 0800'              	movf	_current_val^(0+256),w	;volatile
  1918  0091' 3E00               	addlw	0
  1919  0092' 0080'              	movwf	_current_diff^(0+256)
  1920  0093' 30FE               	movlw	254
  1921  0094' 3D00'              	addwfc	(_current_val+1)^(0+256),w	;volatile
  1922  0095' 0080'              	movwf	(_current_diff+1)^(0+256)
  1923  0096'                    l4724:
  1924                           
  1925                           ;vtg_main.c: 368:         input_peak_voltage = voltage_diff * 1.0064853f;
  1926  0096' 303F               	movlw	63
  1927  0097' 0140               	movlb	0	; select bank0
  1928  0098' 0089'              	movwf	___flmul@b+3
  1929  0099' 3080               	movlw	128
  1930  009A' 0088'              	movwf	___flmul@b+2
  1931  009B' 30D4               	movlw	212
  1932  009C' 0087'              	movwf	___flmul@b+1
  1933  009D' 3083               	movlw	131
  1934  009E' 0086'              	movwf	___flmul@b
  1935  009F' 0142               	movlb	2	; select bank2
  1936  00A0' 0800'              	movf	_voltage_diff^(0+256),w
  1937  00A1' 0082'              	movwf	___xxtofl@val
  1938  00A2' 0800'              	movf	(_voltage_diff+1)^(0+256),w
  1939  00A3' 0083'              	movwf	___xxtofl@val+1
  1940  00A4' 0D89               	rlf	9,f
  1941  00A5' 3B89               	subwfb	9,f
  1942  00A6' 0989               	comf	9,f
  1943  00A7' 0084'              	movwf	___xxtofl@val+2
  1944  00A8' 0085'              	movwf	___xxtofl@val+3
  1945  00A9' 3001               	movlw	1
  1946  00AA' 3180' 2000' 3180'  	fcall	___xxtofl
  1947  00AD' 0805'              	movf	?___xxtofl+3,w
  1948  00AE' 0140               	movlb	0	; select bank0
  1949  00AF' 008D'              	movwf	___flmul@a+3
  1950  00B0' 0804'              	movf	?___xxtofl+2,w
  1951  00B1' 008C'              	movwf	___flmul@a+2
  1952  00B2' 0803'              	movf	?___xxtofl+1,w
  1953  00B3' 008B'              	movwf	___flmul@a+1
  1954  00B4' 0802'              	movf	?___xxtofl,w
  1955  00B5' 008A'              	movwf	___flmul@a
  1956  00B6' 3180' 2000' 3180'  	fcall	___flmul
  1957  00B9' 0140               	movlb	0	; select bank0
  1958  00BA' 0809'              	movf	?___flmul+3,w
  1959  00BB' 0142               	movlb	2	; select bank2
  1960  00BC' 0080'              	movwf	(_input_peak_voltage+3)^(0+256)
  1961  00BD' 0140               	movlb	0	; select bank0
  1962  00BE' 0808'              	movf	?___flmul+2,w
  1963  00BF' 0142               	movlb	2	; select bank2
  1964  00C0' 0080'              	movwf	(_input_peak_voltage+2)^(0+256)
  1965  00C1' 0140               	movlb	0	; select bank0
  1966  00C2' 0807'              	movf	?___flmul+1,w
  1967  00C3' 0142               	movlb	2	; select bank2
  1968  00C4' 0080'              	movwf	(_input_peak_voltage+1)^(0+256)
  1969  00C5' 0140               	movlb	0	; select bank0
  1970  00C6' 0806'              	movf	?___flmul,w
  1971  00C7' 0142               	movlb	2	; select bank2
  1972  00C8' 0080'              	movwf	_input_peak_voltage^(0+256)
  1973  00C9'                    l4726:
  1974                           
  1975                           ;vtg_main.c: 369:         input_peak_current = current_diff * 0.048828125f;
  1976  00C9' 303D               	movlw	61
  1977  00CA' 0140               	movlb	0	; select bank0
  1978  00CB' 0089'              	movwf	___flmul@b+3
  1979  00CC' 3048               	movlw	72
  1980  00CD' 0088'              	movwf	___flmul@b+2
  1981  00CE' 3000               	movlw	0
  1982  00CF' 0087'              	movwf	___flmul@b+1
  1983  00D0' 3000               	movlw	0
  1984  00D1' 0086'              	movwf	___flmul@b
  1985  00D2' 0142               	movlb	2	; select bank2
  1986  00D3' 0800'              	movf	_current_diff^(0+256),w
  1987  00D4' 0082'              	movwf	___xxtofl@val
  1988  00D5' 0800'              	movf	(_current_diff+1)^(0+256),w
  1989  00D6' 0083'              	movwf	___xxtofl@val+1
  1990  00D7' 0D89               	rlf	9,f
  1991  00D8' 3B89               	subwfb	9,f
  1992  00D9' 0989               	comf	9,f
  1993  00DA' 0084'              	movwf	___xxtofl@val+2
  1994  00DB' 0085'              	movwf	___xxtofl@val+3
  1995  00DC' 3001               	movlw	1
  1996  00DD' 3180' 2000' 3180'  	fcall	___xxtofl
  1997  00E0' 0805'              	movf	?___xxtofl+3,w
  1998  00E1' 0140               	movlb	0	; select bank0
  1999  00E2' 008D'              	movwf	___flmul@a+3
  2000  00E3' 0804'              	movf	?___xxtofl+2,w
  2001  00E4' 008C'              	movwf	___flmul@a+2
  2002  00E5' 0803'              	movf	?___xxtofl+1,w
  2003  00E6' 008B'              	movwf	___flmul@a+1
  2004  00E7' 0802'              	movf	?___xxtofl,w
  2005  00E8' 008A'              	movwf	___flmul@a
  2006  00E9' 3180' 2000' 3180'  	fcall	___flmul
  2007  00EC' 0140               	movlb	0	; select bank0
  2008  00ED' 0809'              	movf	?___flmul+3,w
  2009  00EE' 0142               	movlb	2	; select bank2
  2010  00EF' 0080'              	movwf	(_input_peak_current+3)^(0+256)
  2011  00F0' 0140               	movlb	0	; select bank0
  2012  00F1' 0808'              	movf	?___flmul+2,w
  2013  00F2' 0142               	movlb	2	; select bank2
  2014  00F3' 0080'              	movwf	(_input_peak_current+2)^(0+256)
  2015  00F4' 0140               	movlb	0	; select bank0
  2016  00F5' 0807'              	movf	?___flmul+1,w
  2017  00F6' 0142               	movlb	2	; select bank2
  2018  00F7' 0080'              	movwf	(_input_peak_current+1)^(0+256)
  2019  00F8' 0140               	movlb	0	; select bank0
  2020  00F9' 0806'              	movf	?___flmul,w
  2021  00FA' 0142               	movlb	2	; select bank2
  2022  00FB' 0080'              	movwf	_input_peak_current^(0+256)
  2023  00FC'                    l4728:
  2024                           
  2025                           ;vtg_main.c: 381:         sprintf(buffer, "Vpk:%.2f Ipk:%.2f T:%u\r\n", input_peak_volta
      +                          ge, input_peak_current, temperature_val);
  2026  00FC' 3000'              	movlw	(low (_buffer| (0+512)))& (0+255)
  2027  00FD' 0141               	movlb	1	; select bank1
  2028  00FE' 0080'              	movwf	sprintf@s^(0+128)
  2029  00FF' 3000'              	movlw	low (STR_1| (0+32768))
  2030  0100' 0080'              	movwf	sprintf@fmt^(0+128)
  2031  0101' 3000'              	movlw	high (STR_1| (0+32768))
  2032  0102' 0081'              	movwf	(sprintf@fmt^(0+128)+1)
  2033  0103' 0142               	movlb	2	; select bank2
  2034  0104' 0800'              	movf	(_input_peak_voltage+3)^(0+256),w
  2035  0105' 0141               	movlb	1	; select bank1
  2036  0106' 0083'              	movwf	((?_sprintf+3)^(0+128)+3)
  2037  0107' 0142               	movlb	2	; select bank2
  2038  0108' 0800'              	movf	(_input_peak_voltage+2)^(0+256),w
  2039  0109' 0141               	movlb	1	; select bank1
  2040  010A' 0083'              	movwf	((?_sprintf+2)^(0+128)+3)
  2041  010B' 0142               	movlb	2	; select bank2
  2042  010C' 0800'              	movf	(_input_peak_voltage+1)^(0+256),w
  2043  010D' 0141               	movlb	1	; select bank1
  2044  010E' 0083'              	movwf	((?_sprintf+1)^(0+128)+3)
  2045  010F' 0142               	movlb	2	; select bank2
  2046  0110' 0800'              	movf	_input_peak_voltage^(0+256),w
  2047  0111' 0141               	movlb	1	; select bank1
  2048  0112' 0083'              	movwf	(?_sprintf^(0+128)+3)
  2049  0113' 0142               	movlb	2	; select bank2
  2050  0114' 0800'              	movf	(_input_peak_current+3)^(0+256),w
  2051  0115' 0141               	movlb	1	; select bank1
  2052  0116' 0087'              	movwf	((?_sprintf+3)^(0+128)+7)
  2053  0117' 0142               	movlb	2	; select bank2
  2054  0118' 0800'              	movf	(_input_peak_current+2)^(0+256),w
  2055  0119' 0141               	movlb	1	; select bank1
  2056  011A' 0087'              	movwf	((?_sprintf+2)^(0+128)+7)
  2057  011B' 0142               	movlb	2	; select bank2
  2058  011C' 0800'              	movf	(_input_peak_current+1)^(0+256),w
  2059  011D' 0141               	movlb	1	; select bank1
  2060  011E' 0087'              	movwf	((?_sprintf+1)^(0+128)+7)
  2061  011F' 0142               	movlb	2	; select bank2
  2062  0120' 0800'              	movf	_input_peak_current^(0+256),w
  2063  0121' 0141               	movlb	1	; select bank1
  2064  0122' 0087'              	movwf	(?_sprintf^(0+128)+7)
  2065  0123' 0142               	movlb	2	; select bank2
  2066  0124' 0800'              	movf	(_temperature_val+1)^(0+256),w	;volatile
  2067  0125' 0141               	movlb	1	; select bank1
  2068  0126' 008B'              	movwf	((?_sprintf+1)^(0+128)+11)
  2069  0127' 0142               	movlb	2	; select bank2
  2070  0128' 0800'              	movf	_temperature_val^(0+256),w	;volatile
  2071  0129' 0141               	movlb	1	; select bank1
  2072  012A' 008B'              	movwf	(?_sprintf^(0+128)+11)
  2073  012B' 3180' 2000' 3180'  	fcall	_sprintf
  2074  012E'                    l4730:
  2075                           
  2076                           ;vtg_main.c: 382:         UART_Write_Text((uint8_t*)buffer);
  2077  012E' 3000'              	movlw	(low (_buffer| (0+512)))& (0+255)
  2078  012F' 0083'              	movwf	UART_Write_Text@text
  2079  0130' 3180' 2000' 3180'  	fcall	_UART_Write_Text
  2080  0133' 2800'              	goto	l4698
  2081  0134' 3180' 2800'        	ljmp	start
  2082  0136'                    __end_of_main:
  2083                           
  2084                           	psect	text1
  2085  0000'                    __ptext1:	
  2086 ;; *************** function _sprintf *****************
  2087 ;; Defined at:
  2088 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  s               1   53[BANK1 ] PTR unsigned char 
  2091 ;;		 -> buffer(64), 
  2092 ;;  fmt             2   54[BANK1 ] PTR const unsigned char 
  2093 ;;		 -> STR_1(25), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  f              11   67[BANK1 ] struct _IO_FILE
  2096 ;;  ret             2    0        int 
  2097 ;;  ap              1   66[BANK1 ] PTR void [1]
  2098 ;;		 -> ?_sprintf(2), 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2   53[BANK1 ] int 
  2101 ;; Registers used:
  2102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2108 ;;      Params:         0       0      13       0       0       0       0       0
  2109 ;;      Locals:         0       0      12       0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0       0       0       0
  2111 ;;      Totals:         0       0      25       0       0       0       0       0
  2112 ;;Total ram usage:       25 bytes
  2113 ;; Hardware stack levels used: 1
  2114 ;; Hardware stack levels required when called: 8
  2115 ;; This function calls:
  2116 ;;		_vfprintf
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122  0000'                    _sprintf:	
  2123                           ;psect for function _sprintf
  2124                           
  2125  0000'                    l4610:	
  2126                           ;incstack = 0
  2127                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2128                           
  2129  0000' 3000'              	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2130  0001' 0141               	movlb	1	; select bank1
  2131  0002' 0080'              	movwf	sprintf@ap^(0+128)
  2132  0003' 0800'              	movf	sprintf@s^(0+128),w
  2133  0004' 0080'              	movwf	sprintf@f^(0+128)
  2134  0005' 3002               	movlw	2
  2135  0006' 0080'              	movwf	(sprintf@f+1)^(0+128)
  2136  0007'                    l4612:
  2137  0007' 0182'              	clrf	(sprintf@f^(0+128)+2)
  2138  0008' 0182'              	clrf	((sprintf@f+1)^(0+128)+2)
  2139  0009'                    l4614:
  2140  0009' 0189'              	clrf	(sprintf@f^(0+128)+9)
  2141  000A' 0189'              	clrf	((sprintf@f+1)^(0+128)+9)
  2142  000B'                    l4616:
  2143  000B' 3000'              	movlw	low sprintf@f
  2144  000C' 0080'              	movwf	vfprintf@fp^(0+128)
  2145  000D' 3000'              	movlw	high sprintf@f
  2146  000E' 0081'              	movwf	(vfprintf@fp^(0+128)+1)
  2147  000F' 0800'              	movf	(sprintf@fmt+1)^(0+128),w
  2148  0010' 0080'              	movwf	(vfprintf@fmt+1)^(0+128)
  2149  0011' 0800'              	movf	sprintf@fmt^(0+128),w
  2150  0012' 0080'              	movwf	vfprintf@fmt^(0+128)
  2151  0013' 3000'              	movlw	(low (sprintf@ap| 0))& (0+255)
  2152  0014' 0080'              	movwf	vfprintf@ap^(0+128)
  2153  0015' 3180' 2000' 3180'  	fcall	_vfprintf
  2154  0018'                    l4618:
  2155  0018' 0141               	movlb	1	; select bank1
  2156  0019' 0800'              	movf	sprintf@s^(0+128),w
  2157  001A' 0702'              	addwf	(sprintf@f^(0+128)+2),w
  2158  001B' 0086               	movwf	6
  2159  001C' 3002               	movlw	2	; select bank4/5
  2160  001D' 0087               	movwf	7
  2161  001E' 0181               	clrf	1
  2162  001F'                    l762:
  2163  001F' 0008               	return
  2164  0020'                    __end_of_sprintf:
  2165                           
  2166                           	psect	text2
  2167  0000'                    __ptext2:	
  2168 ;; *************** function _vfprintf *****************
  2169 ;; Defined at:
  2170 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  fp              2   48[BANK1 ] PTR struct _IO_FILE
  2173 ;;		 -> sprintf@f(11), 
  2174 ;;  fmt             2   50[BANK1 ] PTR const unsigned char 
  2175 ;;		 -> STR_1(25), 
  2176 ;;  ap              1   52[BANK1 ] PTR PTR void 
  2177 ;;		 -> sprintf@ap(1), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  cfmt            2   67[BANK0 ] PTR unsigned char 
  2180 ;;		 -> STR_1(25), 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  2   48[BANK1 ] int 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2190 ;;      Params:         0       0       5       0       0       0       0       0
  2191 ;;      Locals:         0       2       0       0       0       0       0       0
  2192 ;;      Temps:          0       1       0       0       0       0       0       0
  2193 ;;      Totals:         0       3       5       0       0       0       0       0
  2194 ;;Total ram usage:        8 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 7
  2197 ;; This function calls:
  2198 ;;		_vfpfcnvrt
  2199 ;; This function is called by:
  2200 ;;		_sprintf
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204  0000'                    _vfprintf:	
  2205                           ;psect for function _vfprintf
  2206                           
  2207  0000'                    l4600:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2210                           
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2213  0000' 0141               	movlb	1	; select bank1
  2214  0001' 0800'              	movf	(vfprintf@fmt+1)^(0+128),w
  2215  0002' 0140               	movlb	0	; select bank0
  2216  0003' 00C4'              	movwf	vfprintf@cfmt+1
  2217  0004' 0141               	movlb	1	; select bank1
  2218  0005' 0800'              	movf	vfprintf@fmt^(0+128),w
  2219  0006' 0140               	movlb	0	; select bank0
  2220  0007' 00C3'              	movwf	vfprintf@cfmt
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2223  0008' 2800'              	goto	l4604
  2224  0009'                    l4602:
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2227  0009' 0141               	movlb	1	; select bank1
  2228  000A' 0800'              	movf	(vfprintf@fp+1)^(0+128),w
  2229  000B' 0080'              	movwf	(vfpfcnvrt@fp+1)^(0+128)
  2230  000C' 0800'              	movf	vfprintf@fp^(0+128),w
  2231  000D' 0080'              	movwf	vfpfcnvrt@fp^(0+128)
  2232  000E' 3000'              	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2233  000F' 0080'              	movwf	vfpfcnvrt@fmt^(0+128)
  2234  0010' 0800'              	movf	vfprintf@ap^(0+128),w
  2235  0011' 0080'              	movwf	vfpfcnvrt@ap^(0+128)
  2236  0012' 3180' 2000' 3180'  	fcall	_vfpfcnvrt
  2237  0015'                    l4604:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2240  0015' 0140               	movlb	0	; select bank0
  2241  0016' 0843'              	movf	vfprintf@cfmt,w
  2242  0017' 0084               	movwf	4
  2243  0018' 0844'              	movf	vfprintf@cfmt+1,w
  2244  0019' 0085               	movwf	5
  2245  001A' 0012               	moviw fsr0++
  2246  001B' 1D03               	btfss	3,2
  2247  001C' 2800'              	goto	u6331
  2248  001D' 2800'              	goto	u6330
  2249  001E'                    u6331:
  2250  001E' 2800'              	goto	l4602
  2251  001F'                    u6330:
  2252  001F'                    l4606:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2255  001F' 0141               	movlb	1	; select bank1
  2256  0020' 0180'              	clrf	?_vfprintf^(0+128)
  2257  0021' 0180'              	clrf	(?_vfprintf+1)^(0+128)
  2258  0022'                    l898:
  2259  0022' 0008               	return
  2260  0023'                    __end_of_vfprintf:
  2261                           
  2262                           	psect	text3
  2263  0000'                    __ptext3:	
  2264 ;; *************** function _vfpfcnvrt *****************
  2265 ;; Defined at:
  2266 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  fp              2   44[BANK1 ] PTR struct _IO_FILE
  2269 ;;		 -> sprintf@f(11), 
  2270 ;;  fmt             1   46[BANK1 ] PTR PTR unsigned char 
  2271 ;;		 -> vfprintf@cfmt(2), 
  2272 ;;  ap              1   47[BANK1 ] PTR PTR void 
  2273 ;;		 -> sprintf@ap(1), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  convarg         4   59[BANK0 ] struct .
  2276 ;;  cp              2   64[BANK0 ] PTR unsigned char 
  2277 ;;		 -> STR_1(25), 
  2278 ;;  c               1   63[BANK0 ] unsigned char 
  2279 ;;  done            1    0        _Bool 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2289 ;;      Params:         0       0       4       0       0       0       0       0
  2290 ;;      Locals:         0       7       0       0       0       0       0       0
  2291 ;;      Temps:          0       4       0       0       0       0       0       0
  2292 ;;      Totals:         0      11       4       0       0       0       0       0
  2293 ;;Total ram usage:       15 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 6
  2296 ;; This function calls:
  2297 ;;		_efgtoa
  2298 ;;		_fputc
  2299 ;;		_read_prec_or_width
  2300 ;;		_utoa
  2301 ;; This function is called by:
  2302 ;;		_vfprintf
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306  0000'                    _vfpfcnvrt:	
  2307                           ;psect for function _vfpfcnvrt
  2308                           
  2309  0000'                    l4528:	
  2310                           ;incstack = 0
  2311                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2312                           
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2315  0000' 0141               	movlb	1	; select bank1
  2316  0001' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2317  0002' 0086               	movwf	6
  2318  0003' 0187               	clrf	7
  2319  0004' 3F40               	moviw [0]fsr1
  2320  0005' 0140               	movlb	0	; select bank0
  2321  0006' 00B7'              	movwf	??_vfpfcnvrt
  2322  0007' 3F41               	moviw [1]fsr1
  2323  0008' 00B8'              	movwf	??_vfpfcnvrt+1
  2324  0009' 0837'              	movf	??_vfpfcnvrt,w
  2325  000A' 0084               	movwf	4
  2326  000B' 0838'              	movf	??_vfpfcnvrt+1,w
  2327  000C' 0085               	movwf	5
  2328  000D' 0012               	moviw fsr0++
  2329  000E' 3A25               	xorlw	37
  2330  000F' 1D03               	btfss	3,2
  2331  0010' 2800'              	goto	u6291
  2332  0011' 2800'              	goto	u6290
  2333  0012'                    u6291:
  2334  0012' 2800'              	goto	l4594
  2335  0013'                    u6290:
  2336  0013'                    l4530:
  2337                           
  2338                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2339  0013' 0141               	movlb	1	; select bank1
  2340  0014' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2341  0015' 0086               	movwf	6
  2342  0016' 0187               	clrf	7
  2343  0017' 3001               	movlw	1
  2344  0018' 0781               	addwf	1,f
  2345  0019' 3141               	addfsr 1,1
  2346  001A' 1803               	skipnc
  2347  001B' 0A81               	incf	1,f
  2348  001C'                    l4532:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2351  001C' 0142               	movlb	2	; select bank2
  2352  001D' 0180'              	clrf	_width^(0+256)
  2353  001E' 0180'              	clrf	(_width+1)^(0+256)
  2354  001F' 3000               	movlw	0
  2355  0020' 0140               	movlb	0	; select bank0
  2356  0021' 0082'              	movwf	_flags
  2357  0022'                    l4534:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2360  0022' 30FF               	movlw	255
  2361  0023' 0080'              	movwf	_prec
  2362  0024' 30FF               	movlw	255
  2363  0025' 0081'              	movwf	_prec+1
  2364  0026'                    l4536:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2367  0026' 0141               	movlb	1	; select bank1
  2368  0027' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2369  0028' 0086               	movwf	6
  2370  0029' 0187               	clrf	7
  2371  002A' 3F40               	moviw [0]fsr1
  2372  002B' 0140               	movlb	0	; select bank0
  2373  002C' 00B7'              	movwf	??_vfpfcnvrt
  2374  002D' 3F41               	moviw [1]fsr1
  2375  002E' 00B8'              	movwf	??_vfpfcnvrt+1
  2376  002F' 0837'              	movf	??_vfpfcnvrt,w
  2377  0030' 0084               	movwf	4
  2378  0031' 0838'              	movf	??_vfpfcnvrt+1,w
  2379  0032' 0085               	movwf	5
  2380  0033' 0012               	moviw fsr0++
  2381  0034' 3A2E               	xorlw	46
  2382  0035' 1D03               	btfss	3,2
  2383  0036' 2800'              	goto	u6301
  2384  0037' 2800'              	goto	u6300
  2385  0038'                    u6301:
  2386  0038' 2800'              	goto	l4542
  2387  0039'                    u6300:
  2388  0039'                    l4538:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2391  0039' 0141               	movlb	1	; select bank1
  2392  003A' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2393  003B' 0086               	movwf	6
  2394  003C' 0187               	clrf	7
  2395  003D' 3001               	movlw	1
  2396  003E' 0781               	addwf	1,f
  2397  003F' 3141               	addfsr 1,1
  2398  0040' 1803               	skipnc
  2399  0041' 0A81               	incf	1,f
  2400  0042'                    l4540:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2403  0042' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2404  0043' 0088'              	movwf	read_prec_or_width@fmt
  2405  0044' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  2406  0045' 0089'              	movwf	read_prec_or_width@ap
  2407  0046' 3180' 2000' 3180'  	fcall	_read_prec_or_width
  2408  0049' 0809'              	movf	?_read_prec_or_width+1,w
  2409  004A' 0140               	movlb	0	; select bank0
  2410  004B' 0081'              	movwf	_prec+1
  2411  004C' 0808'              	movf	?_read_prec_or_width,w
  2412  004D' 0080'              	movwf	_prec
  2413  004E'                    l4542:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2416  004E' 0141               	movlb	1	; select bank1
  2417  004F' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2418  0050' 0086               	movwf	6
  2419  0051' 0187               	clrf	7
  2420  0052' 3F40               	moviw [0]fsr1
  2421  0053' 0140               	movlb	0	; select bank0
  2422  0054' 00C0'              	movwf	vfpfcnvrt@cp
  2423  0055' 3F41               	moviw [1]fsr1
  2424  0056' 00C1'              	movwf	vfpfcnvrt@cp+1
  2425  0057'                    l4544:
  2426  0057' 0840'              	movf	vfpfcnvrt@cp,w
  2427  0058' 0084               	movwf	4
  2428  0059' 0841'              	movf	vfpfcnvrt@cp+1,w
  2429  005A' 0085               	movwf	5
  2430  005B' 0012               	moviw fsr0++
  2431  005C' 3A75               	xorlw	117
  2432  005D' 1D03               	btfss	3,2
  2433  005E' 2800'              	goto	u6311
  2434  005F' 2800'              	goto	u6310
  2435  0060'                    u6311:
  2436  0060' 2800'              	goto	l4558
  2437  0061'                    u6310:
  2438  0061'                    l4546:
  2439                           
  2440                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2441  0061' 0141               	movlb	1	; select bank1
  2442  0062' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  2443  0063' 0086               	movwf	6
  2444  0064' 0187               	clrf	7
  2445  0065' 0801               	movf	1,w
  2446  0066' 0084               	movwf	4
  2447  0067' 0185               	clrf	5
  2448  0068' 3002               	movlw	2
  2449  0069' 0781               	addwf	1,f
  2450  006A' 3F00               	moviw [0]fsr0
  2451  006B' 0140               	movlb	0	; select bank0
  2452  006C' 00BB'              	movwf	vfpfcnvrt@convarg
  2453  006D' 3F01               	moviw [1]fsr0
  2454  006E' 00BC'              	movwf	vfpfcnvrt@convarg+1
  2455  006F'                    l4548:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2458  006F' 0840'              	movf	vfpfcnvrt@cp,w
  2459  0070' 3E01               	addlw	1
  2460  0071' 00B7'              	movwf	??_vfpfcnvrt
  2461  0072' 3000               	movlw	0
  2462  0073' 3D41'              	addwfc	vfpfcnvrt@cp+1,w
  2463  0074' 00B8'              	movwf	??_vfpfcnvrt+1
  2464  0075' 0141               	movlb	1	; select bank1
  2465  0076' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2466  0077' 0086               	movwf	6
  2467  0078' 0187               	clrf	7
  2468  0079' 0140               	movlb	0	; select bank0
  2469  007A' 0837'              	movf	??_vfpfcnvrt,w
  2470  007B' 3FC0               	movwi [0]fsr1
  2471  007C' 0838'              	movf	??_vfpfcnvrt+1,w
  2472  007D' 3FC1               	movwi [1]fsr1
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2475  007E' 2800'              	goto	l4556
  2476  007F'                    l4550:
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2479  007F' 0141               	movlb	1	; select bank1
  2480  0080' 0800'              	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2481  0081' 0140               	movlb	0	; select bank0
  2482  0082' 0093'              	movwf	utoa@fp+1
  2483  0083' 0141               	movlb	1	; select bank1
  2484  0084' 0800'              	movf	vfpfcnvrt@fp^(0+128),w
  2485  0085' 0140               	movlb	0	; select bank0
  2486  0086' 0092'              	movwf	utoa@fp
  2487  0087' 083C'              	movf	vfpfcnvrt@convarg+1,w
  2488  0088' 0095'              	movwf	utoa@d+1
  2489  0089' 083B'              	movf	vfpfcnvrt@convarg,w
  2490  008A' 0094'              	movwf	utoa@d
  2491  008B' 3180' 2000' 3180'  	fcall	_utoa
  2492  008E' 2800'              	goto	l875
  2493  008F'                    l4556:
  2494  008F' 0840'              	movf	vfpfcnvrt@cp,w
  2495  0090' 0084               	movwf	4
  2496  0091' 0841'              	movf	vfpfcnvrt@cp+1,w
  2497  0092' 0085               	movwf	5
  2498  0093' 0800               	movf	0,w	;code access
  2499                           
  2500                           ; Switch size 1, requested type "simple"
  2501                           ; Number of cases is 1, Range of values is 117 to 117
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte            4     3 (average)
  2505                           ; direct_byte           11     9 (fixed)
  2506                           ; jumptable            263     9 (fixed)
  2507                           ;	Chosen strategy is simple_byte
  2508  0094' 3A75               	xorlw	117	; case 117
  2509  0095' 1903               	skipnz
  2510  0096' 2800'              	goto	l4550
  2511  0097' 2800'              	goto	l4558
  2512  0098'                    l4558:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2515  0098' 0141               	movlb	1	; select bank1
  2516  0099' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2517  009A' 0086               	movwf	6
  2518  009B' 0187               	clrf	7
  2519  009C' 3F40               	moviw [0]fsr1
  2520  009D' 0140               	movlb	0	; select bank0
  2521  009E' 00C0'              	movwf	vfpfcnvrt@cp
  2522  009F' 3F41               	moviw [1]fsr1
  2523  00A0' 00C1'              	movwf	vfpfcnvrt@cp+1
  2524  00A1'                    l4560:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2527  00A1' 0840'              	movf	vfpfcnvrt@cp,w
  2528  00A2' 0084               	movwf	4
  2529  00A3' 0841'              	movf	vfpfcnvrt@cp+1,w
  2530  00A4' 0085               	movwf	5
  2531  00A5' 0800               	movf	0,w	;code access
  2532  00A6' 00BF'              	movwf	vfpfcnvrt@c
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2535  00A7' 2800'              	goto	l4568
  2536  00A8'                    l4562:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2539  00A8' 3001               	movlw	1
  2540  00A9' 07C0'              	addwf	vfpfcnvrt@cp,f
  2541  00AA' 3000               	movlw	0
  2542  00AB' 3DC1'              	addwfc	vfpfcnvrt@cp+1,f
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2545  00AC' 2800'              	goto	l4570
  2546  00AD'                    l881:	
  2547                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1710:    case 'f'
      +                          :
  2548                           
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2551  00AD' 306C               	movlw	108
  2552  00AE' 00BF'              	movwf	vfpfcnvrt@c
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2555  00AF' 2800'              	goto	l4570
  2556  00B0'                    l4564:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2559  00B0' 01BF'              	clrf	vfpfcnvrt@c
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2562  00B1' 2800'              	goto	l4570
  2563  00B2'                    l4568:
  2564  00B2' 083F'              	movf	vfpfcnvrt@c,w
  2565                           
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 3, Range of values is 76 to 108
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte           10     6 (average)
  2571                           ; direct_byte           75     9 (fixed)
  2572                           ; jumptable            263     9 (fixed)
  2573                           ;	Chosen strategy is simple_byte
  2574  00B3' 3A4C               	xorlw	76	; case 76
  2575  00B4' 1903               	skipnz
  2576  00B5' 2800'              	goto	l4562
  2577  00B6' 3A2A               	xorlw	42	; case 102
  2578  00B7' 1903               	skipnz
  2579  00B8' 2800'              	goto	l881
  2580  00B9' 3A0A               	xorlw	10	; case 108
  2581  00BA' 1903               	skipnz
  2582  00BB' 2800'              	goto	l4562
  2583  00BC' 2800'              	goto	l4564
  2584  00BD'                    l4570:
  2585  00BD' 0840'              	movf	vfpfcnvrt@cp,w
  2586  00BE' 0084               	movwf	4
  2587  00BF' 0841'              	movf	vfpfcnvrt@cp+1,w
  2588  00C0' 0085               	movwf	5
  2589  00C1' 0012               	moviw fsr0++
  2590  00C2' 3A66               	xorlw	102
  2591  00C3' 1D03               	btfss	3,2
  2592  00C4' 2800'              	goto	u6321
  2593  00C5' 2800'              	goto	u6320
  2594  00C6'                    u6321:
  2595  00C6' 2800'              	goto	l4590
  2596  00C7'                    u6320:
  2597  00C7' 2800'              	goto	l4578
  2598  00C8'                    l4572:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2601  00C8' 0141               	movlb	1	; select bank1
  2602  00C9' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  2603  00CA' 0086               	movwf	6
  2604  00CB' 0187               	clrf	7
  2605  00CC' 0801               	movf	1,w
  2606  00CD' 0084               	movwf	4
  2607  00CE' 0185               	clrf	5
  2608  00CF' 3004               	movlw	4
  2609  00D0' 0781               	addwf	1,f
  2610  00D1' 3F00               	moviw [0]fsr0
  2611  00D2' 0140               	movlb	0	; select bank0
  2612  00D3' 00BB'              	movwf	vfpfcnvrt@convarg
  2613  00D4' 3F01               	moviw [1]fsr0
  2614  00D5' 00BC'              	movwf	vfpfcnvrt@convarg+1
  2615  00D6' 3F02               	moviw [2]fsr0
  2616  00D7' 00BD'              	movwf	vfpfcnvrt@convarg+2
  2617  00D8' 3F03               	moviw [3]fsr0
  2618  00D9' 00BE'              	movwf	vfpfcnvrt@convarg+3
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2621  00DA' 2800'              	goto	l4580
  2622  00DB'                    l4574:
  2623                           
  2624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2625  00DB' 0141               	movlb	1	; select bank1
  2626  00DC' 0800'              	movf	vfpfcnvrt@ap^(0+128),w
  2627  00DD' 0086               	movwf	6
  2628  00DE' 0187               	clrf	7
  2629  00DF' 0801               	movf	1,w
  2630  00E0' 0084               	movwf	4
  2631  00E1' 0185               	clrf	5
  2632  00E2' 3004               	movlw	4
  2633  00E3' 0781               	addwf	1,f
  2634  00E4' 3F00               	moviw [0]fsr0
  2635  00E5' 0140               	movlb	0	; select bank0
  2636  00E6' 00BB'              	movwf	vfpfcnvrt@convarg
  2637  00E7' 3F01               	moviw [1]fsr0
  2638  00E8' 00BC'              	movwf	vfpfcnvrt@convarg+1
  2639  00E9' 3F02               	moviw [2]fsr0
  2640  00EA' 00BD'              	movwf	vfpfcnvrt@convarg+2
  2641  00EB' 3F03               	moviw [3]fsr0
  2642  00EC' 00BE'              	movwf	vfpfcnvrt@convarg+3
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2645  00ED' 2800'              	goto	l4580
  2646  00EE'                    l4578:
  2647  00EE' 083F'              	movf	vfpfcnvrt@c,w
  2648                           
  2649                           ; Switch size 1, requested type "simple"
  2650                           ; Number of cases is 2, Range of values is 76 to 108
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte            7     4 (average)
  2654                           ; direct_byte           75     9 (fixed)
  2655                           ; jumptable            263     9 (fixed)
  2656                           ;	Chosen strategy is simple_byte
  2657  00EF' 3A4C               	xorlw	76	; case 76
  2658  00F0' 1903               	skipnz
  2659  00F1' 2800'              	goto	l4574
  2660  00F2' 3A20               	xorlw	32	; case 108
  2661  00F3' 1903               	skipnz
  2662  00F4' 2800'              	goto	l4572
  2663  00F5' 2800'              	goto	l4580
  2664  00F6'                    l4580:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2667  00F6' 0840'              	movf	vfpfcnvrt@cp,w
  2668  00F7' 3E01               	addlw	1
  2669  00F8' 00B7'              	movwf	??_vfpfcnvrt
  2670  00F9' 3000               	movlw	0
  2671  00FA' 3D41'              	addwfc	vfpfcnvrt@cp+1,w
  2672  00FB' 00B8'              	movwf	??_vfpfcnvrt+1
  2673  00FC' 0141               	movlb	1	; select bank1
  2674  00FD' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2675  00FE' 0086               	movwf	6
  2676  00FF' 0187               	clrf	7
  2677  0100' 0140               	movlb	0	; select bank0
  2678  0101' 0837'              	movf	??_vfpfcnvrt,w
  2679  0102' 3FC0               	movwi [0]fsr1
  2680  0103' 0838'              	movf	??_vfpfcnvrt+1,w
  2681  0104' 3FC1               	movwi [1]fsr1
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2684  0105' 2800'              	goto	l4588
  2685  0106'                    l4582:
  2686                           
  2687                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2688  0106' 0141               	movlb	1	; select bank1
  2689  0107' 0800'              	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2690  0108' 0140               	movlb	0	; select bank0
  2691  0109' 00AD'              	movwf	efgtoa@fp+1
  2692  010A' 0141               	movlb	1	; select bank1
  2693  010B' 0800'              	movf	vfpfcnvrt@fp^(0+128),w
  2694  010C' 0140               	movlb	0	; select bank0
  2695  010D' 00AC'              	movwf	efgtoa@fp
  2696  010E' 083E'              	movf	vfpfcnvrt@convarg+3,w
  2697  010F' 00B1'              	movwf	efgtoa@f+3
  2698  0110' 083D'              	movf	vfpfcnvrt@convarg+2,w
  2699  0111' 00B0'              	movwf	efgtoa@f+2
  2700  0112' 083C'              	movf	vfpfcnvrt@convarg+1,w
  2701  0113' 00AF'              	movwf	efgtoa@f+1
  2702  0114' 083B'              	movf	vfpfcnvrt@convarg,w
  2703  0115' 00AE'              	movwf	efgtoa@f
  2704  0116' 0840'              	movf	vfpfcnvrt@cp,w
  2705  0117' 0084               	movwf	4
  2706  0118' 0841'              	movf	vfpfcnvrt@cp+1,w
  2707  0119' 0085               	movwf	5
  2708  011A' 0800               	movf	0,w	;code access
  2709  011B' 00B2'              	movwf	efgtoa@c
  2710  011C' 3180' 2000' 3180'  	fcall	_efgtoa
  2711  011F' 2800'              	goto	l875
  2712  0120'                    l4588:
  2713  0120' 0840'              	movf	vfpfcnvrt@cp,w
  2714  0121' 0084               	movwf	4
  2715  0122' 0841'              	movf	vfpfcnvrt@cp+1,w
  2716  0123' 0085               	movwf	5
  2717  0124' 0800               	movf	0,w	;code access
  2718                           
  2719                           ; Switch size 1, requested type "simple"
  2720                           ; Number of cases is 1, Range of values is 102 to 102
  2721                           ; switch strategies available:
  2722                           ; Name         Instructions Cycles
  2723                           ; simple_byte            4     3 (average)
  2724                           ; direct_byte           11     9 (fixed)
  2725                           ; jumptable            263     9 (fixed)
  2726                           ;	Chosen strategy is simple_byte
  2727  0125' 3A66               	xorlw	102	; case 102
  2728  0126' 1903               	skipnz
  2729  0127' 2800'              	goto	l4582
  2730  0128' 2800'              	goto	l4590
  2731  0129'                    l4590:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2734  0129' 0141               	movlb	1	; select bank1
  2735  012A' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2736  012B' 0086               	movwf	6
  2737  012C' 0187               	clrf	7
  2738  012D' 3001               	movlw	1
  2739  012E' 0781               	addwf	1,f
  2740  012F' 3141               	addfsr 1,1
  2741  0130' 1803               	skipnc
  2742  0131' 0A81               	incf	1,f
  2743  0132' 2800'              	goto	l875
  2744  0133'                    l4594:
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2747  0133' 0141               	movlb	1	; select bank1
  2748  0134' 0800'              	movf	vfpfcnvrt@fmt^(0+128),w
  2749  0135' 0086               	movwf	6
  2750  0136' 0187               	clrf	7
  2751  0137' 3F40               	moviw [0]fsr1
  2752  0138' 0140               	movlb	0	; select bank0
  2753  0139' 00B7'              	movwf	??_vfpfcnvrt
  2754  013A' 3F41               	moviw [1]fsr1
  2755  013B' 00B8'              	movwf	??_vfpfcnvrt+1
  2756  013C' 0837'              	movf	??_vfpfcnvrt,w
  2757  013D' 0084               	movwf	4
  2758  013E' 0838'              	movf	??_vfpfcnvrt+1,w
  2759  013F' 0085               	movwf	5
  2760  0140' 0800               	movf	0,w	;code access
  2761  0141' 00B9'              	movwf	??_vfpfcnvrt+2
  2762  0142' 01BA'              	clrf	??_vfpfcnvrt+3
  2763  0143' 0839'              	movf	??_vfpfcnvrt+2,w
  2764  0144' 0082'              	movwf	fputc@c
  2765  0145' 083A'              	movf	??_vfpfcnvrt+3,w
  2766  0146' 0083'              	movwf	fputc@c+1
  2767  0147' 0141               	movlb	1	; select bank1
  2768  0148' 0800'              	movf	(vfpfcnvrt@fp+1)^(0+128),w
  2769  0149' 0085'              	movwf	fputc@fp+1
  2770  014A' 0800'              	movf	vfpfcnvrt@fp^(0+128),w
  2771  014B' 0084'              	movwf	fputc@fp
  2772  014C' 3180' 2000' 3180'  	fcall	_fputc
  2773  014F' 2800'              	goto	l4590
  2774  0150'                    l875:
  2775  0150' 0008               	return
  2776  0151'                    __end_of_vfpfcnvrt:
  2777                           
  2778                           	psect	text4
  2779  0000'                    __ptext4:	
  2780 ;; *************** function _utoa *****************
  2781 ;; Defined at:
  2782 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  2785 ;;		 -> sprintf@f(11), 
  2786 ;;  d               2   20[BANK0 ] unsigned int 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  i               2   26[BANK0 ] int 
  2789 ;;  p               2   24[BANK0 ] int 
  2790 ;;  w               2   22[BANK0 ] int 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2800 ;;      Params:         0       4       0       0       0       0       0       0
  2801 ;;      Locals:         0       6       0       0       0       0       0       0
  2802 ;;      Temps:          1       0       0       0       0       0       0       0
  2803 ;;      Totals:         1      10       0       0       0       0       0       0
  2804 ;;Total ram usage:       11 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 5
  2807 ;; This function calls:
  2808 ;;		___lwdiv
  2809 ;;		___lwmod
  2810 ;;		_pad
  2811 ;; This function is called by:
  2812 ;;		_vfpfcnvrt
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816  0000'                    _utoa:	
  2817                           ;psect for function _utoa
  2818                           
  2819  0000'                    l4500:	
  2820                           ;incstack = 0
  2821                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2822                           
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1005:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           1017:     p = (0 <= prec) ? prec : 1;
  2825  0000' 0140               	movlb	0	; select bank0
  2826  0001' 1F81'              	btfss	_prec+1,7
  2827  0002' 2800'              	goto	u6251
  2828  0003' 2800'              	goto	u6250
  2829  0004'                    u6251:
  2830  0004' 2800'              	goto	l4504
  2831  0005'                    u6250:
  2832  0005'                    l4502:
  2833  0005' 3001               	movlw	1
  2834  0006' 0098'              	movwf	utoa@p
  2835  0007' 3000               	movlw	0
  2836  0008' 0099'              	movwf	utoa@p+1
  2837  0009' 2800'              	goto	l851
  2838  000A'                    l4504:
  2839  000A' 0801'              	movf	_prec+1,w
  2840  000B' 0099'              	movwf	utoa@p+1
  2841  000C' 0800'              	movf	_prec,w
  2842  000D' 0098'              	movwf	utoa@p
  2843  000E'                    l851:
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  2846  000E' 0142               	movlb	2	; select bank2
  2847  000F' 0800'              	movf	(_width+1)^(0+256),w
  2848  0010' 0140               	movlb	0	; select bank0
  2849  0011' 0097'              	movwf	utoa@w+1
  2850  0012' 0142               	movlb	2	; select bank2
  2851  0013' 0800'              	movf	_width^(0+256),w
  2852  0014' 0140               	movlb	0	; select bank0
  2853  0015' 0096'              	movwf	utoa@w
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  2856  0016' 304F               	movlw	79
  2857  0017' 009A'              	movwf	utoa@i
  2858  0018' 3000               	movlw	0
  2859  0019' 009B'              	movwf	utoa@i+1
  2860  001A'                    l4506:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  2863  001A' 0143               	movlb	3	; select bank3
  2864  001B' 01CF'              	clrf	(_dbuf^(0+384)+79)
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2867  001C' 2800'              	goto	l4518
  2868  001D'                    l4508:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
  2871  001D' 30FF               	movlw	255
  2872  001E' 0140               	movlb	0	; select bank0
  2873  001F' 079A'              	addwf	utoa@i,f
  2874  0020' 30FF               	movlw	255
  2875  0021' 3D9B'              	addwfc	utoa@i+1,f
  2876  0022'                    l4510:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  2879  0022' 081A'              	movf	utoa@i,w
  2880  0023' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  2881  0024' 0086               	movwf	6
  2882  0025' 3001               	movlw	1	; select bank3/4
  2883  0026' 0087               	movwf	7
  2884  0027' 300A               	movlw	10
  2885  0028' 0082'              	movwf	___lwmod@divisor
  2886  0029' 3000               	movlw	0
  2887  002A' 0083'              	movwf	___lwmod@divisor+1
  2888  002B' 0815'              	movf	utoa@d+1,w
  2889  002C' 0085'              	movwf	___lwmod@dividend+1
  2890  002D' 0814'              	movf	utoa@d,w
  2891  002E' 0084'              	movwf	___lwmod@dividend
  2892  002F' 3180' 2000' 3180'  	fcall	___lwmod
  2893  0032' 0802'              	movf	?___lwmod,w
  2894  0033' 3E30               	addlw	48
  2895  0034' 0081               	movwf	1
  2896  0035'                    l4512:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
  2899  0035' 30FF               	movlw	255
  2900  0036' 0140               	movlb	0	; select bank0
  2901  0037' 0798'              	addwf	utoa@p,f
  2902  0038' 30FF               	movlw	255
  2903  0039' 3D99'              	addwfc	utoa@p+1,f
  2904  003A'                    l4514:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  2907  003A' 30FF               	movlw	255
  2908  003B' 0796'              	addwf	utoa@w,f
  2909  003C' 30FF               	movlw	255
  2910  003D' 3D97'              	addwfc	utoa@w+1,f
  2911  003E'                    l4516:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  2914  003E' 300A               	movlw	10
  2915  003F' 0082'              	movwf	___lwdiv@divisor
  2916  0040' 3000               	movlw	0
  2917  0041' 0083'              	movwf	___lwdiv@divisor+1
  2918  0042' 0815'              	movf	utoa@d+1,w
  2919  0043' 0085'              	movwf	___lwdiv@dividend+1
  2920  0044' 0814'              	movf	utoa@d,w
  2921  0045' 0084'              	movwf	___lwdiv@dividend
  2922  0046' 3180' 2000' 3180'  	fcall	___lwdiv
  2923  0049' 0803'              	movf	?___lwdiv+1,w
  2924  004A' 0140               	movlb	0	; select bank0
  2925  004B' 0095'              	movwf	utoa@d+1
  2926  004C' 0802'              	movf	?___lwdiv,w
  2927  004D' 0094'              	movwf	utoa@d
  2928  004E'                    l4518:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  2931  004E' 0140               	movlb	0	; select bank0
  2932  004F' 081A'              	movf	utoa@i,w
  2933  0050' 041B'              	iorwf	utoa@i+1,w
  2934  0051' 1903               	btfsc	3,2
  2935  0052' 2800'              	goto	u6261
  2936  0053' 2800'              	goto	u6260
  2937  0054'                    u6261:
  2938  0054' 2800'              	goto	l4524
  2939  0055'                    u6260:
  2940  0055'                    l4520:
  2941  0055' 0814'              	movf	utoa@d,w
  2942  0056' 0415'              	iorwf	utoa@d+1,w
  2943  0057' 1D03               	btfss	3,2
  2944  0058' 2800'              	goto	u6271
  2945  0059' 2800'              	goto	u6270
  2946  005A'                    u6271:
  2947  005A' 2800'              	goto	l4508
  2948  005B'                    u6270:
  2949  005B'                    l4522:
  2950  005B' 0819'              	movf	utoa@p+1,w
  2951  005C' 3A80               	xorlw	128
  2952  005D' 0089'              	movwf	??_utoa
  2953  005E' 3080               	movlw	128
  2954  005F' 0209'              	subwf	??_utoa,w
  2955  0060' 1D03               	skipz
  2956  0061' 2800'              	goto	u6285
  2957  0062' 3001               	movlw	1
  2958  0063' 0218'              	subwf	utoa@p,w
  2959  0064'                    u6285:
  2960  0064' 1803               	skipnc
  2961  0065' 2800'              	goto	u6281
  2962  0066' 2800'              	goto	u6280
  2963  0067'                    u6281:
  2964  0067' 2800'              	goto	l4508
  2965  0068'                    u6280:
  2966  0068'                    l4524:
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2969  0068' 0140               	movlb	0	; select bank0
  2970  0069' 0813'              	movf	utoa@fp+1,w
  2971  006A' 008C'              	movwf	pad@fp+1
  2972  006B' 0812'              	movf	utoa@fp,w
  2973  006C' 008B'              	movwf	pad@fp
  2974  006D' 081A'              	movf	utoa@i,w
  2975  006E' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  2976  006F' 008D'              	movwf	pad@buf
  2977  0070' 0817'              	movf	utoa@w+1,w
  2978  0071' 008F'              	movwf	pad@p+1
  2979  0072' 0816'              	movf	utoa@w,w
  2980  0073' 008E'              	movwf	pad@p
  2981  0074' 3180' 2000' 3180'  	fcall	_pad
  2982  0077'                    l857:
  2983  0077' 0008               	return
  2984  0078'                    __end_of_utoa:
  2985                           
  2986                           	psect	text5
  2987  0000'                    __ptext5:	
  2988 ;; *************** function ___lwmod *****************
  2989 ;; Defined at:
  2990 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  divisor         2    2[COMMON] unsigned int 
  2993 ;;  dividend        2    4[COMMON] unsigned int 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  counter         1    6[COMMON] unsigned char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2    2[COMMON] unsigned int 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3005 ;;      Params:         4       0       0       0       0       0       0       0
  3006 ;;      Locals:         1       0       0       0       0       0       0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0
  3008 ;;      Totals:         5       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        5 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_utoa
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019  0000'                    ___lwmod:	
  3020                           ;psect for function ___lwmod
  3021                           
  3022  0000'                    l2862:	
  3023                           ;incstack = 0
  3024                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3025                           
  3026  0000' 0802'              	movf	___lwmod@divisor,w
  3027  0001' 0403'              	iorwf	___lwmod@divisor+1,w
  3028  0002' 1903               	btfsc	3,2
  3029  0003' 2800'              	goto	u3541
  3030  0004' 2800'              	goto	u3540
  3031  0005'                    u3541:
  3032  0005' 2800'              	goto	l2880
  3033  0006'                    u3540:
  3034  0006'                    l2864:
  3035  0006' 3001               	movlw	1
  3036  0007' 0086'              	movwf	___lwmod@counter
  3037  0008' 2800'              	goto	l2870
  3038  0009'                    l2866:
  3039  0009' 3001               	movlw	1
  3040  000A'                    u3555:
  3041  000A' 3582'              	lslf	___lwmod@divisor,f
  3042  000B' 0D83'              	rlf	___lwmod@divisor+1,f
  3043  000C' 0B89               	decfsz	9,f
  3044  000D' 2800'              	goto	u3555
  3045  000E'                    l2868:
  3046  000E' 3001               	movlw	1
  3047  000F' 0786'              	addwf	___lwmod@counter,f
  3048  0010'                    l2870:
  3049  0010' 1F83'              	btfss	___lwmod@divisor+1,7
  3050  0011' 2800'              	goto	u3561
  3051  0012' 2800'              	goto	u3560
  3052  0013'                    u3561:
  3053  0013' 2800'              	goto	l2866
  3054  0014'                    u3560:
  3055  0014'                    l2872:
  3056  0014' 0803'              	movf	___lwmod@divisor+1,w
  3057  0015' 0205'              	subwf	___lwmod@dividend+1,w
  3058  0016' 1D03               	skipz
  3059  0017' 2800'              	goto	u3575
  3060  0018' 0802'              	movf	___lwmod@divisor,w
  3061  0019' 0204'              	subwf	___lwmod@dividend,w
  3062  001A'                    u3575:
  3063  001A' 1C03               	skipc
  3064  001B' 2800'              	goto	u3571
  3065  001C' 2800'              	goto	u3570
  3066  001D'                    u3571:
  3067  001D' 2800'              	goto	l2876
  3068  001E'                    u3570:
  3069  001E'                    l2874:
  3070  001E' 0802'              	movf	___lwmod@divisor,w
  3071  001F' 0284'              	subwf	___lwmod@dividend,f
  3072  0020' 0803'              	movf	___lwmod@divisor+1,w
  3073  0021' 3B85'              	subwfb	___lwmod@dividend+1,f
  3074  0022'                    l2876:
  3075  0022' 3001               	movlw	1
  3076  0023'                    u3585:
  3077  0023' 3683'              	lsrf	___lwmod@divisor+1,f
  3078  0024' 0C82'              	rrf	___lwmod@divisor,f
  3079  0025' 0B89               	decfsz	9,f
  3080  0026' 2800'              	goto	u3585
  3081  0027'                    l2878:
  3082  0027' 3001               	movlw	1
  3083  0028' 0286'              	subwf	___lwmod@counter,f
  3084  0029' 1D03               	btfss	3,2
  3085  002A' 2800'              	goto	u3591
  3086  002B' 2800'              	goto	u3590
  3087  002C'                    u3591:
  3088  002C' 2800'              	goto	l2872
  3089  002D'                    u3590:
  3090  002D'                    l2880:
  3091  002D' 0805'              	movf	___lwmod@dividend+1,w
  3092  002E' 0083'              	movwf	?___lwmod+1
  3093  002F' 0804'              	movf	___lwmod@dividend,w
  3094  0030' 0082'              	movwf	?___lwmod
  3095  0031'                    l589:
  3096  0031' 0008               	return
  3097  0032'                    __end_of___lwmod:
  3098                           
  3099                           	psect	text6
  3100  0000'                    __ptext6:	
  3101 ;; *************** function ___lwdiv *****************
  3102 ;; Defined at:
  3103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  divisor         2    2[COMMON] unsigned int 
  3106 ;;  dividend        2    4[COMMON] unsigned int 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  quotient        2    6[COMMON] unsigned int 
  3109 ;;  counter         1    8[COMMON] unsigned char 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2    2[COMMON] unsigned int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3119 ;;      Params:         4       0       0       0       0       0       0       0
  3120 ;;      Locals:         3       0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0
  3122 ;;      Totals:         7       0       0       0       0       0       0       0
  3123 ;;Total ram usage:        7 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_utoa
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133  0000'                    ___lwdiv:	
  3134                           ;psect for function ___lwdiv
  3135                           
  3136  0000'                    l2836:	
  3137                           ;incstack = 0
  3138                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3139                           
  3140  0000' 0186'              	clrf	___lwdiv@quotient
  3141  0001' 0187'              	clrf	___lwdiv@quotient+1
  3142  0002'                    l2838:
  3143  0002' 0802'              	movf	___lwdiv@divisor,w
  3144  0003' 0403'              	iorwf	___lwdiv@divisor+1,w
  3145  0004' 1903               	btfsc	3,2
  3146  0005' 2800'              	goto	u3471
  3147  0006' 2800'              	goto	u3470
  3148  0007'                    u3471:
  3149  0007' 2800'              	goto	l2858
  3150  0008'                    u3470:
  3151  0008'                    l2840:
  3152  0008' 3001               	movlw	1
  3153  0009' 0088'              	movwf	___lwdiv@counter
  3154  000A' 2800'              	goto	l2846
  3155  000B'                    l2842:
  3156  000B' 3001               	movlw	1
  3157  000C'                    u3485:
  3158  000C' 3582'              	lslf	___lwdiv@divisor,f
  3159  000D' 0D83'              	rlf	___lwdiv@divisor+1,f
  3160  000E' 0B89               	decfsz	9,f
  3161  000F' 2800'              	goto	u3485
  3162  0010'                    l2844:
  3163  0010' 3001               	movlw	1
  3164  0011' 0788'              	addwf	___lwdiv@counter,f
  3165  0012'                    l2846:
  3166  0012' 1F83'              	btfss	___lwdiv@divisor+1,7
  3167  0013' 2800'              	goto	u3491
  3168  0014' 2800'              	goto	u3490
  3169  0015'                    u3491:
  3170  0015' 2800'              	goto	l2842
  3171  0016'                    u3490:
  3172  0016'                    l2848:
  3173  0016' 3001               	movlw	1
  3174  0017'                    u3505:
  3175  0017' 3586'              	lslf	___lwdiv@quotient,f
  3176  0018' 0D87'              	rlf	___lwdiv@quotient+1,f
  3177  0019' 0B89               	decfsz	9,f
  3178  001A' 2800'              	goto	u3505
  3179  001B' 0803'              	movf	___lwdiv@divisor+1,w
  3180  001C' 0205'              	subwf	___lwdiv@dividend+1,w
  3181  001D' 1D03               	skipz
  3182  001E' 2800'              	goto	u3515
  3183  001F' 0802'              	movf	___lwdiv@divisor,w
  3184  0020' 0204'              	subwf	___lwdiv@dividend,w
  3185  0021'                    u3515:
  3186  0021' 1C03               	skipc
  3187  0022' 2800'              	goto	u3511
  3188  0023' 2800'              	goto	u3510
  3189  0024'                    u3511:
  3190  0024' 2800'              	goto	l2854
  3191  0025'                    u3510:
  3192  0025'                    l2850:
  3193  0025' 0802'              	movf	___lwdiv@divisor,w
  3194  0026' 0284'              	subwf	___lwdiv@dividend,f
  3195  0027' 0803'              	movf	___lwdiv@divisor+1,w
  3196  0028' 3B85'              	subwfb	___lwdiv@dividend+1,f
  3197  0029'                    l2852:
  3198  0029' 1406'              	bsf	___lwdiv@quotient,0
  3199  002A'                    l2854:
  3200  002A' 3001               	movlw	1
  3201  002B'                    u3525:
  3202  002B' 3683'              	lsrf	___lwdiv@divisor+1,f
  3203  002C' 0C82'              	rrf	___lwdiv@divisor,f
  3204  002D' 0B89               	decfsz	9,f
  3205  002E' 2800'              	goto	u3525
  3206  002F'                    l2856:
  3207  002F' 3001               	movlw	1
  3208  0030' 0288'              	subwf	___lwdiv@counter,f
  3209  0031' 1D03               	btfss	3,2
  3210  0032' 2800'              	goto	u3531
  3211  0033' 2800'              	goto	u3530
  3212  0034'                    u3531:
  3213  0034' 2800'              	goto	l2848
  3214  0035'                    u3530:
  3215  0035'                    l2858:
  3216  0035' 0807'              	movf	___lwdiv@quotient+1,w
  3217  0036' 0083'              	movwf	?___lwdiv+1
  3218  0037' 0806'              	movf	___lwdiv@quotient,w
  3219  0038' 0082'              	movwf	?___lwdiv
  3220  0039'                    l579:
  3221  0039' 0008               	return
  3222  003A'                    __end_of___lwdiv:
  3223                           
  3224                           	psect	text7
  3225  0000'                    __ptext7:	
  3226 ;; *************** function _read_prec_or_width *****************
  3227 ;; Defined at:
  3228 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  fmt             1    8[COMMON] PTR PTR const unsigned c
  3231 ;;		 -> vfprintf@cfmt(2), 
  3232 ;;  ap              1    9[COMMON] PTR PTR void [1]
  3233 ;;		 -> sprintf@ap(1), 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  c               1    3[BANK0 ] unsigned char 
  3236 ;;  n               2    4[BANK0 ] int 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2    8[COMMON] int 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3246 ;;      Params:         2       0       0       0       0       0       0       0
  3247 ;;      Locals:         0       3       0       0       0       0       0       0
  3248 ;;      Temps:          0       3       0       0       0       0       0       0
  3249 ;;      Totals:         2       6       0       0       0       0       0       0
  3250 ;;Total ram usage:        8 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 2
  3253 ;; This function calls:
  3254 ;;		___wmul
  3255 ;; This function is called by:
  3256 ;;		_vfpfcnvrt
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260  0000'                    _read_prec_or_width:	
  3261                           ;psect for function _read_prec_or_width
  3262                           
  3263  0000'                    l3486:	
  3264                           ;incstack = 0
  3265                           ; Regs used in _read_prec_or_width: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3266                           
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3269  0000' 0140               	movlb	0	; select bank0
  3270  0001' 0184'              	clrf	read_prec_or_width@n
  3271  0002' 0185'              	clrf	read_prec_or_width@n+1
  3272  0003'                    l3488:
  3273                           
  3274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3275  0003' 0808'              	movf	read_prec_or_width@fmt,w
  3276  0004' 0086               	movwf	6
  3277  0005' 0187               	clrf	7
  3278  0006' 3F40               	moviw [0]fsr1
  3279  0007' 0080'              	movwf	??_read_prec_or_width
  3280  0008' 3F41               	moviw [1]fsr1
  3281  0009' 0081'              	movwf	??_read_prec_or_width+1
  3282  000A' 0800'              	movf	??_read_prec_or_width,w
  3283  000B' 0084               	movwf	4
  3284  000C' 0801'              	movf	??_read_prec_or_width+1,w
  3285  000D' 0085               	movwf	5
  3286  000E' 0012               	moviw fsr0++
  3287  000F' 3A2A               	xorlw	42
  3288  0010' 1D03               	btfss	3,2
  3289  0011' 2800'              	goto	u4771
  3290  0012' 2800'              	goto	u4770
  3291  0013'                    u4771:
  3292  0013' 2800'              	goto	l3498
  3293  0014'                    u4770:
  3294  0014'                    l3490:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3297  0014' 0808'              	movf	read_prec_or_width@fmt,w
  3298  0015' 0086               	movwf	6
  3299  0016' 0187               	clrf	7
  3300  0017' 3001               	movlw	1
  3301  0018' 0781               	addwf	1,f
  3302  0019' 3141               	addfsr 1,1
  3303  001A' 1803               	skipnc
  3304  001B' 0A81               	incf	1,f
  3305  001C'                    l3492:
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3308  001C' 0809'              	movf	read_prec_or_width@ap,w
  3309  001D' 0086               	movwf	6
  3310  001E' 0187               	clrf	7
  3311  001F' 0801               	movf	1,w
  3312  0020' 0084               	movwf	4
  3313  0021' 0185               	clrf	5
  3314  0022' 3002               	movlw	2
  3315  0023' 0781               	addwf	1,f
  3316  0024' 3F00               	moviw [0]fsr0
  3317  0025' 0084'              	movwf	read_prec_or_width@n
  3318  0026' 3F01               	moviw [1]fsr0
  3319  0027' 0085'              	movwf	read_prec_or_width@n+1
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3322  0028' 2800'              	goto	l3500
  3323  0029'                    l3494:
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3326  0029' 0805'              	movf	read_prec_or_width@n+1,w
  3327  002A' 0083'              	movwf	___wmul@multiplier+1
  3328  002B' 0804'              	movf	read_prec_or_width@n,w
  3329  002C' 0082'              	movwf	___wmul@multiplier
  3330  002D' 300A               	movlw	10
  3331  002E' 0084'              	movwf	___wmul@multiplicand
  3332  002F' 3000               	movlw	0
  3333  0030' 0085'              	movwf	___wmul@multiplicand+1
  3334  0031' 3180' 2000' 3180'  	fcall	___wmul
  3335  0034' 0140               	movlb	0	; select bank0
  3336  0035' 0803'              	movf	read_prec_or_width@c,w
  3337  0036' 0702'              	addwf	?___wmul,w
  3338  0037' 0084'              	movwf	read_prec_or_width@n
  3339  0038' 3000               	movlw	0
  3340  0039' 3D03'              	addwfc	?___wmul+1,w
  3341  003A' 0085'              	movwf	read_prec_or_width@n+1
  3342  003B'                    l3496:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3345  003B' 0808'              	movf	read_prec_or_width@fmt,w
  3346  003C' 0086               	movwf	6
  3347  003D' 0187               	clrf	7
  3348  003E' 3001               	movlw	1
  3349  003F' 0781               	addwf	1,f
  3350  0040' 3141               	addfsr 1,1
  3351  0041' 1803               	skipnc
  3352  0042' 0A81               	incf	1,f
  3353  0043'                    l3498:
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3356  0043' 0808'              	movf	read_prec_or_width@fmt,w
  3357  0044' 0086               	movwf	6
  3358  0045' 0187               	clrf	7
  3359  0046' 3F40               	moviw [0]fsr1
  3360  0047' 0080'              	movwf	??_read_prec_or_width
  3361  0048' 3F41               	moviw [1]fsr1
  3362  0049' 0081'              	movwf	??_read_prec_or_width+1
  3363  004A' 0800'              	movf	??_read_prec_or_width,w
  3364  004B' 0084               	movwf	4
  3365  004C' 0801'              	movf	??_read_prec_or_width+1,w
  3366  004D' 0085               	movwf	5
  3367  004E' 0800               	movf	0,w	;code access
  3368  004F' 3ED0               	addlw	208
  3369  0050' 0083'              	movwf	read_prec_or_width@c
  3370  0051' 300A               	movlw	10
  3371  0052' 0203'              	subwf	read_prec_or_width@c,w
  3372  0053' 1C03               	skipc
  3373  0054' 2800'              	goto	u4781
  3374  0055' 2800'              	goto	u4780
  3375  0056'                    u4781:
  3376  0056' 2800'              	goto	l3494
  3377  0057'                    u4780:
  3378  0057'                    l3500:
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3381  0057' 0805'              	movf	read_prec_or_width@n+1,w
  3382  0058' 0089'              	movwf	?_read_prec_or_width+1
  3383  0059' 0804'              	movf	read_prec_or_width@n,w
  3384  005A' 0088'              	movwf	?_read_prec_or_width
  3385  005B'                    l865:
  3386  005B' 0008               	return
  3387  005C'                    __end_of_read_prec_or_width:
  3388                           
  3389                           	psect	text8
  3390  0000'                    __ptext8:	
  3391 ;; *************** function ___wmul *****************
  3392 ;; Defined at:
  3393 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  multiplier      2    2[COMMON] unsigned int 
  3396 ;;  multiplicand    2    4[COMMON] unsigned int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  product         2    6[COMMON] unsigned int 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2    2[COMMON] unsigned int 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3408 ;;      Params:         4       0       0       0       0       0       0       0
  3409 ;;      Locals:         2       0       0       0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0       0
  3411 ;;      Totals:         6       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        6 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_read_prec_or_width
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422  0000'                    ___wmul:	
  3423                           ;psect for function ___wmul
  3424                           
  3425  0000'                    l2746:	
  3426                           ;incstack = 0
  3427                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3428                           
  3429  0000' 0186'              	clrf	___wmul@product
  3430  0001' 0187'              	clrf	___wmul@product+1
  3431  0002'                    l2748:
  3432  0002' 1C02'              	btfss	___wmul@multiplier,0
  3433  0003' 2800'              	goto	u3241
  3434  0004' 2800'              	goto	u3240
  3435  0005'                    u3241:
  3436  0005' 2800'              	goto	l299
  3437  0006'                    u3240:
  3438  0006'                    l2750:
  3439  0006' 0804'              	movf	___wmul@multiplicand,w
  3440  0007' 0786'              	addwf	___wmul@product,f
  3441  0008' 0805'              	movf	___wmul@multiplicand+1,w
  3442  0009' 3D87'              	addwfc	___wmul@product+1,f
  3443  000A'                    l299:
  3444  000A' 3001               	movlw	1
  3445  000B'                    u3255:
  3446  000B' 3584'              	lslf	___wmul@multiplicand,f
  3447  000C' 0D85'              	rlf	___wmul@multiplicand+1,f
  3448  000D' 0B89               	decfsz	9,f
  3449  000E' 2800'              	goto	u3255
  3450  000F'                    l2752:
  3451  000F' 3001               	movlw	1
  3452  0010'                    u3265:
  3453  0010' 3683'              	lsrf	___wmul@multiplier+1,f
  3454  0011' 0C82'              	rrf	___wmul@multiplier,f
  3455  0012' 0B89               	decfsz	9,f
  3456  0013' 2800'              	goto	u3265
  3457  0014'                    l2754:
  3458  0014' 0802'              	movf	___wmul@multiplier,w
  3459  0015' 0403'              	iorwf	___wmul@multiplier+1,w
  3460  0016' 1D03               	btfss	3,2
  3461  0017' 2800'              	goto	u3271
  3462  0018' 2800'              	goto	u3270
  3463  0019'                    u3271:
  3464  0019' 2800'              	goto	l2748
  3465  001A'                    u3270:
  3466  001A'                    l2756:
  3467  001A' 0807'              	movf	___wmul@product+1,w
  3468  001B' 0083'              	movwf	?___wmul+1
  3469  001C' 0806'              	movf	___wmul@product,w
  3470  001D' 0082'              	movwf	?___wmul
  3471  001E'                    l301:
  3472  001E' 0008               	return
  3473  001F'                    __end_of___wmul:
  3474                           
  3475                           	psect	text9
  3476  0000'                    __ptext9:	
  3477 ;; *************** function _efgtoa *****************
  3478 ;; Defined at:
  3479 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  3482 ;;		 -> sprintf@f(11), 
  3483 ;;  f               4   46[BANK0 ] PTR struct _IO_FILE
  3484 ;;  c               1   50[BANK0 ] unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  u               4   40[BANK1 ] struct flui
  3487 ;;  g               4   34[BANK1 ] struct flui
  3488 ;;  l               4   29[BANK1 ] struct flui
  3489 ;;  h               4   25[BANK1 ] struct flui
  3490 ;;  ou              4   19[BANK1 ] struct flui
  3491 ;;  n               2   38[BANK1 ] int 
  3492 ;;  i               2   23[BANK1 ] int 
  3493 ;;  w               2   17[BANK1 ] int 
  3494 ;;  e               2   15[BANK1 ] int 
  3495 ;;  m               2   13[BANK1 ] int 
  3496 ;;  d               2   11[BANK1 ] int 
  3497 ;;  t               2    4[BANK1 ] int 
  3498 ;;  p               2    2[BANK1 ] int 
  3499 ;;  ne              2    0[BANK1 ] int 
  3500 ;;  sign            1   33[BANK1 ] unsigned char 
  3501 ;;  nmode           1   10[BANK1 ] unsigned char 
  3502 ;;  mode            1    9[BANK1 ] unsigned char 
  3503 ;;  pp              1    8[BANK1 ] unsigned char 
  3504 ;;  esign           1    0        unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3514 ;;      Params:         0       7       0       0       0       0       0       0
  3515 ;;      Locals:         0       0      44       0       0       0       0       0
  3516 ;;      Temps:          0       4       0       0       0       0       0       0
  3517 ;;      Totals:         0      11      44       0       0       0       0       0
  3518 ;;Total ram usage:       55 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 5
  3521 ;; This function calls:
  3522 ;;		___fladd
  3523 ;;		___fldiv
  3524 ;;		___fleq
  3525 ;;		___flge
  3526 ;;		___flmul
  3527 ;;		___flneg
  3528 ;;		___flsub
  3529 ;;		___fltol
  3530 ;;		___fpclassifyf
  3531 ;;		_floorf
  3532 ;;		_labs
  3533 ;;		_memcpy
  3534 ;;		_pad
  3535 ;;		_strcpy
  3536 ;; This function is called by:
  3537 ;;		_vfpfcnvrt
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541  0000'                    _efgtoa:	
  3542                           ;psect for function _efgtoa
  3543                           
  3544  0000'                    l4298:	
  3545                           ;incstack = 0
  3546                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3547                           
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3550  0000' 0141               	movlb	1	; select bank1
  3551  0001' 0180'              	clrf	efgtoa@sign^(0+128)
  3552  0002'                    l4300:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3555  0002' 0140               	movlb	0	; select bank0
  3556  0003' 0831'              	movf	efgtoa@f+3,w
  3557  0004' 0141               	movlb	1	; select bank1
  3558  0005' 0080'              	movwf	(efgtoa@g+3)^(0+128)
  3559  0006' 0140               	movlb	0	; select bank0
  3560  0007' 0830'              	movf	efgtoa@f+2,w
  3561  0008' 0141               	movlb	1	; select bank1
  3562  0009' 0080'              	movwf	(efgtoa@g+2)^(0+128)
  3563  000A' 0140               	movlb	0	; select bank0
  3564  000B' 082F'              	movf	efgtoa@f+1,w
  3565  000C' 0141               	movlb	1	; select bank1
  3566  000D' 0080'              	movwf	(efgtoa@g+1)^(0+128)
  3567  000E' 0140               	movlb	0	; select bank0
  3568  000F' 082E'              	movf	efgtoa@f,w
  3569  0010' 0141               	movlb	1	; select bank1
  3570  0011' 0080'              	movwf	efgtoa@g^(0+128)
  3571  0012'                    l4302:
  3572                           
  3573                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3574  0012' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  3575  0013' 0140               	movlb	0	; select bank0
  3576  0014' 00A3'              	movwf	___flge@ff1+3
  3577  0015' 0141               	movlb	1	; select bank1
  3578  0016' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  3579  0017' 0140               	movlb	0	; select bank0
  3580  0018' 00A2'              	movwf	___flge@ff1+2
  3581  0019' 0141               	movlb	1	; select bank1
  3582  001A' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  3583  001B' 0140               	movlb	0	; select bank0
  3584  001C' 00A1'              	movwf	___flge@ff1+1
  3585  001D' 0141               	movlb	1	; select bank1
  3586  001E' 0800'              	movf	efgtoa@g^(0+128),w
  3587  001F' 0140               	movlb	0	; select bank0
  3588  0020' 00A0'              	movwf	___flge@ff1
  3589  0021' 3000               	movlw	0
  3590  0022' 00A7'              	movwf	___flge@ff2+3
  3591  0023' 3000               	movlw	0
  3592  0024' 00A6'              	movwf	___flge@ff2+2
  3593  0025' 3000               	movlw	0
  3594  0026' 00A5'              	movwf	___flge@ff2+1
  3595  0027' 3000               	movlw	0
  3596  0028' 00A4'              	movwf	___flge@ff2
  3597  0029' 3180' 2000' 3180'  	fcall	___flge
  3598  002C' 1803               	btfsc	3,0
  3599  002D' 2800'              	goto	u5931
  3600  002E' 2800'              	goto	u5930
  3601  002F'                    u5931:
  3602  002F' 2800'              	goto	l4308
  3603  0030'                    u5930:
  3604  0030'                    l4304:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3607  0030' 3001               	movlw	1
  3608  0031' 0141               	movlb	1	; select bank1
  3609  0032' 0080'              	movwf	efgtoa@sign^(0+128)
  3610  0033'                    l4306:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3613  0033' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  3614  0034' 0085'              	movwf	___flneg@f1+3
  3615  0035' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  3616  0036' 0084'              	movwf	___flneg@f1+2
  3617  0037' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  3618  0038' 0083'              	movwf	___flneg@f1+1
  3619  0039' 0800'              	movf	efgtoa@g^(0+128),w
  3620  003A' 0082'              	movwf	___flneg@f1
  3621  003B' 3180' 2000' 3180'  	fcall	___flneg
  3622  003E' 0805'              	movf	?___flneg+3,w
  3623  003F' 0141               	movlb	1	; select bank1
  3624  0040' 0080'              	movwf	(efgtoa@g+3)^(0+128)
  3625  0041' 0804'              	movf	?___flneg+2,w
  3626  0042' 0080'              	movwf	(efgtoa@g+2)^(0+128)
  3627  0043' 0803'              	movf	?___flneg+1,w
  3628  0044' 0080'              	movwf	(efgtoa@g+1)^(0+128)
  3629  0045' 0802'              	movf	?___flneg,w
  3630  0046' 0080'              	movwf	efgtoa@g^(0+128)
  3631  0047'                    l4308:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3634  0047' 0141               	movlb	1	; select bank1
  3635  0048' 0180'              	clrf	efgtoa@n^(0+128)
  3636  0049' 0180'              	clrf	(efgtoa@n+1)^(0+128)
  3637  004A'                    l4310:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3640  004A' 0142               	movlb	2	; select bank2
  3641  004B' 0800'              	movf	(_width+1)^(0+256),w
  3642  004C' 0141               	movlb	1	; select bank1
  3643  004D' 0080'              	movwf	(efgtoa@w+1)^(0+128)
  3644  004E' 0142               	movlb	2	; select bank2
  3645  004F' 0800'              	movf	_width^(0+256),w
  3646  0050' 0141               	movlb	1	; select bank1
  3647  0051' 0080'              	movwf	efgtoa@w^(0+128)
  3648  0052'                    l4312:
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3651  0052' 0800'              	movf	efgtoa@sign^(0+128),w
  3652  0053' 1903               	btfsc	3,2
  3653  0054' 2800'              	goto	u5941
  3654  0055' 2800'              	goto	u5940
  3655  0056'                    u5941:
  3656  0056' 2800'              	goto	l4320
  3657  0057'                    u5940:
  3658  0057'                    l4314:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3661  0057' 0800'              	movf	efgtoa@sign^(0+128),w
  3662  0058' 1D03               	btfss	3,2
  3663  0059' 2800'              	goto	u5951
  3664  005A' 2800'              	goto	u5950
  3665  005B'                    u5951:
  3666  005B' 2800'              	goto	l4318
  3667  005C'                    u5950:
  3668  005C'                    l4316:
  3669  005C' 302B               	movlw	43
  3670  005D' 0080'              	movwf	_efgtoa$982^(0+128)
  3671  005E' 3000               	movlw	0
  3672  005F' 0081'              	movwf	(_efgtoa$982^(0+128)+1)
  3673  0060' 2800'              	goto	l801
  3674  0061'                    l4318:
  3675  0061' 302D               	movlw	45
  3676  0062' 0080'              	movwf	_efgtoa$982^(0+128)
  3677  0063' 3000               	movlw	0
  3678  0064' 0081'              	movwf	(_efgtoa$982^(0+128)+1)
  3679  0065'                    l801:
  3680  0065' 0800'              	movf	_efgtoa$982^(0+128),w
  3681  0066' 0080'              	movwf	efgtoa@sign^(0+128)
  3682  0067'                    l4320:
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3685  0067' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  3686  0068' 0085'              	movwf	___fpclassifyf@x+3
  3687  0069' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  3688  006A' 0084'              	movwf	___fpclassifyf@x+2
  3689  006B' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  3690  006C' 0083'              	movwf	___fpclassifyf@x+1
  3691  006D' 0800'              	movf	efgtoa@g^(0+128),w
  3692  006E' 0082'              	movwf	___fpclassifyf@x
  3693  006F' 3180' 2000' 3180'  	fcall	___fpclassifyf
  3694  0072' 0302'              	decf	?___fpclassifyf,w
  3695  0073' 0403'              	iorwf	?___fpclassifyf+1,w
  3696  0074' 1D03               	btfss	3,2
  3697  0075' 2800'              	goto	u5961
  3698  0076' 2800'              	goto	u5960
  3699  0077'                    u5961:
  3700  0077' 2800'              	goto	l4332
  3701  0078'                    u5960:
  3702  0078'                    l4322:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3705  0078' 0141               	movlb	1	; select bank1
  3706  0079' 0800'              	movf	efgtoa@sign^(0+128),w
  3707  007A' 1903               	btfsc	3,2
  3708  007B' 2800'              	goto	u5971
  3709  007C' 2800'              	goto	u5970
  3710  007D'                    u5971:
  3711  007D' 2800'              	goto	l4326
  3712  007E'                    u5970:
  3713  007E'                    l4324:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3716  007E' 0800'              	movf	efgtoa@sign^(0+128),w
  3717  007F' 0143               	movlb	3	; select bank3
  3718  0080' 0080'              	movwf	_dbuf^(0+384)
  3719                           
  3720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3721  0081' 30FF               	movlw	255
  3722  0082' 0141               	movlb	1	; select bank1
  3723  0083' 0780'              	addwf	efgtoa@w^(0+128),f
  3724  0084' 30FF               	movlw	255
  3725  0085' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3728  0086' 3001               	movlw	1
  3729  0087' 0080'              	movwf	efgtoa@n^(0+128)
  3730  0088' 3000               	movlw	0
  3731  0089' 0081'              	movwf	(efgtoa@n^(0+128)+1)
  3732  008A'                    l4326:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3735  008A' 0800'              	movf	efgtoa@n^(0+128),w
  3736  008B' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  3737  008C' 0082'              	movwf	strcpy@dest
  3738  008D' 3000'              	movlw	low (STR_2| (0+32768))
  3739  008E' 0083'              	movwf	strcpy@src
  3740  008F' 3000'              	movlw	high (STR_2| (0+32768))
  3741  0090' 0084'              	movwf	strcpy@src+1
  3742  0091' 3180' 2000' 3180'  	fcall	_strcpy
  3743  0094'                    l4328:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3746  0094' 30FD               	movlw	253
  3747  0095' 0141               	movlb	1	; select bank1
  3748  0096' 0780'              	addwf	efgtoa@w^(0+128),f
  3749  0097' 30FF               	movlw	255
  3750  0098' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3753  0099' 0140               	movlb	0	; select bank0
  3754  009A' 082D'              	movf	efgtoa@fp+1,w
  3755  009B' 008C'              	movwf	pad@fp+1
  3756  009C' 082C'              	movf	efgtoa@fp,w
  3757  009D' 008B'              	movwf	pad@fp
  3758  009E' 3000'              	movlw	(low (_dbuf| (0+256)))& (0+255)
  3759  009F' 008D'              	movwf	pad@buf
  3760  00A0' 0141               	movlb	1	; select bank1
  3761  00A1' 0800'              	movf	(efgtoa@w+1)^(0+128),w
  3762  00A2' 0140               	movlb	0	; select bank0
  3763  00A3' 008F'              	movwf	pad@p+1
  3764  00A4' 0141               	movlb	1	; select bank1
  3765  00A5' 0800'              	movf	efgtoa@w^(0+128),w
  3766  00A6' 0140               	movlb	0	; select bank0
  3767  00A7' 008E'              	movwf	pad@p
  3768  00A8' 3180' 2000' 3180'  	fcall	_pad
  3769  00AB' 2800'              	goto	l804
  3770  00AC'                    l4332:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3773  00AC' 0141               	movlb	1	; select bank1
  3774  00AD' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  3775  00AE' 0085'              	movwf	___fpclassifyf@x+3
  3776  00AF' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  3777  00B0' 0084'              	movwf	___fpclassifyf@x+2
  3778  00B1' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  3779  00B2' 0083'              	movwf	___fpclassifyf@x+1
  3780  00B3' 0800'              	movf	efgtoa@g^(0+128),w
  3781  00B4' 0082'              	movwf	___fpclassifyf@x
  3782  00B5' 3180' 2000' 3180'  	fcall	___fpclassifyf
  3783  00B8' 0802'              	movf	?___fpclassifyf,w
  3784  00B9' 0403'              	iorwf	?___fpclassifyf+1,w
  3785  00BA' 1D03               	btfss	3,2
  3786  00BB' 2800'              	goto	u5981
  3787  00BC' 2800'              	goto	u5980
  3788  00BD'                    u5981:
  3789  00BD' 2800'              	goto	l4344
  3790  00BE'                    u5980:
  3791  00BE'                    l4334:
  3792                           
  3793                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3794  00BE' 0141               	movlb	1	; select bank1
  3795  00BF' 0800'              	movf	efgtoa@sign^(0+128),w
  3796  00C0' 1903               	btfsc	3,2
  3797  00C1' 2800'              	goto	u5991
  3798  00C2' 2800'              	goto	u5990
  3799  00C3'                    u5991:
  3800  00C3' 2800'              	goto	l4338
  3801  00C4'                    u5990:
  3802  00C4'                    l4336:
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3805  00C4' 0800'              	movf	efgtoa@sign^(0+128),w
  3806  00C5' 0143               	movlb	3	; select bank3
  3807  00C6' 0080'              	movwf	_dbuf^(0+384)
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3810  00C7' 30FF               	movlw	255
  3811  00C8' 0141               	movlb	1	; select bank1
  3812  00C9' 0780'              	addwf	efgtoa@w^(0+128),f
  3813  00CA' 30FF               	movlw	255
  3814  00CB' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3817  00CC' 3001               	movlw	1
  3818  00CD' 0080'              	movwf	efgtoa@n^(0+128)
  3819  00CE' 3000               	movlw	0
  3820  00CF' 0081'              	movwf	(efgtoa@n^(0+128)+1)
  3821  00D0'                    l4338:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3824  00D0' 0800'              	movf	efgtoa@n^(0+128),w
  3825  00D1' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  3826  00D2' 0082'              	movwf	strcpy@dest
  3827  00D3' 3000'              	movlw	low (STR_5| (0+32768))
  3828  00D4' 0083'              	movwf	strcpy@src
  3829  00D5' 3000'              	movlw	high (STR_5| (0+32768))
  3830  00D6' 0084'              	movwf	strcpy@src+1
  3831  00D7' 3180' 2000' 3180'  	fcall	_strcpy
  3832  00DA' 2800'              	goto	l4328
  3833  00DB'                    l4344:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3836  00DB' 303F               	movlw	63
  3837  00DC' 0141               	movlb	1	; select bank1
  3838  00DD' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  3839  00DE' 3080               	movlw	128
  3840  00DF' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  3841  00E0' 3000               	movlw	0
  3842  00E1' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  3843  00E2' 3000               	movlw	0
  3844  00E3' 0080'              	movwf	efgtoa@u^(0+128)
  3845  00E4'                    l4346:
  3846                           
  3847                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3848  00E4' 0180'              	clrf	efgtoa@e^(0+128)
  3849  00E5' 0180'              	clrf	(efgtoa@e+1)^(0+128)
  3850  00E6'                    l4348:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3853  00E6' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  3854  00E7' 0085'              	movwf	___fleq@ff1+3
  3855  00E8' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  3856  00E9' 0084'              	movwf	___fleq@ff1+2
  3857  00EA' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  3858  00EB' 0083'              	movwf	___fleq@ff1+1
  3859  00EC' 0800'              	movf	efgtoa@g^(0+128),w
  3860  00ED' 0082'              	movwf	___fleq@ff1
  3861  00EE' 3000               	movlw	0
  3862  00EF' 0089'              	movwf	___fleq@ff2+3
  3863  00F0' 3000               	movlw	0
  3864  00F1' 0088'              	movwf	___fleq@ff2+2
  3865  00F2' 3000               	movlw	0
  3866  00F3' 0087'              	movwf	___fleq@ff2+1
  3867  00F4' 3000               	movlw	0
  3868  00F5' 0086'              	movwf	___fleq@ff2
  3869  00F6' 3180' 2000' 3180'  	fcall	___fleq
  3870  00F9' 1803               	btfsc	3,0
  3871  00FA' 2800'              	goto	u6001
  3872  00FB' 2800'              	goto	u6000
  3873  00FC'                    u6001:
  3874  00FC' 2800'              	goto	l4374
  3875  00FD'                    u6000:
  3876  00FD' 2800'              	goto	l4354
  3877  00FE'                    l4352:
  3878                           
  3879                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3880  00FE' 0141               	movlb	1	; select bank1
  3881  00FF' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  3882  0100' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  3883  0101' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  3884  0102' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  3885  0103' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  3886  0104' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  3887  0105' 0800'              	movf	efgtoa@ou^(0+128),w
  3888  0106' 0080'              	movwf	efgtoa@u^(0+128)
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3891  0107' 3001               	movlw	1
  3892  0108' 0780'              	addwf	efgtoa@e^(0+128),f
  3893  0109' 3000               	movlw	0
  3894  010A' 3D80'              	addwfc	(efgtoa@e+1)^(0+128),f
  3895  010B'                    l4354:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3898  010B' 3041               	movlw	65
  3899  010C' 0140               	movlb	0	; select bank0
  3900  010D' 0089'              	movwf	___flmul@b+3
  3901  010E' 3020               	movlw	32
  3902  010F' 0088'              	movwf	___flmul@b+2
  3903  0110' 3000               	movlw	0
  3904  0111' 0087'              	movwf	___flmul@b+1
  3905  0112' 3000               	movlw	0
  3906  0113' 0086'              	movwf	___flmul@b
  3907  0114' 0141               	movlb	1	; select bank1
  3908  0115' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  3909  0116' 0140               	movlb	0	; select bank0
  3910  0117' 008D'              	movwf	___flmul@a+3
  3911  0118' 0141               	movlb	1	; select bank1
  3912  0119' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  3913  011A' 0140               	movlb	0	; select bank0
  3914  011B' 008C'              	movwf	___flmul@a+2
  3915  011C' 0141               	movlb	1	; select bank1
  3916  011D' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  3917  011E' 0140               	movlb	0	; select bank0
  3918  011F' 008B'              	movwf	___flmul@a+1
  3919  0120' 0141               	movlb	1	; select bank1
  3920  0121' 0800'              	movf	efgtoa@u^(0+128),w
  3921  0122' 0140               	movlb	0	; select bank0
  3922  0123' 008A'              	movwf	___flmul@a
  3923  0124' 3180' 2000' 3180'  	fcall	___flmul
  3924  0127' 0140               	movlb	0	; select bank0
  3925  0128' 0809'              	movf	?___flmul+3,w
  3926  0129' 0141               	movlb	1	; select bank1
  3927  012A' 0080'              	movwf	(efgtoa@ou+3)^(0+128)
  3928  012B' 0140               	movlb	0	; select bank0
  3929  012C' 0808'              	movf	?___flmul+2,w
  3930  012D' 0141               	movlb	1	; select bank1
  3931  012E' 0080'              	movwf	(efgtoa@ou+2)^(0+128)
  3932  012F' 0140               	movlb	0	; select bank0
  3933  0130' 0807'              	movf	?___flmul+1,w
  3934  0131' 0141               	movlb	1	; select bank1
  3935  0132' 0080'              	movwf	(efgtoa@ou+1)^(0+128)
  3936  0133' 0140               	movlb	0	; select bank0
  3937  0134' 0806'              	movf	?___flmul,w
  3938  0135' 0141               	movlb	1	; select bank1
  3939  0136' 0080'              	movwf	efgtoa@ou^(0+128)
  3940  0137'                    l4356:
  3941  0137' 0800'              	movf	efgtoa@ou^(0+128),w
  3942  0138' 0200'              	subwf	efgtoa@g^(0+128),w
  3943  0139' 0140               	movlb	0	; select bank0
  3944  013A' 00B3'              	movwf	??_efgtoa
  3945  013B' 0141               	movlb	1	; select bank1
  3946  013C' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  3947  013D' 3B00'              	subwfb	(efgtoa@g+1)^(0+128),w
  3948  013E' 0140               	movlb	0	; select bank0
  3949  013F' 00B4'              	movwf	??_efgtoa+1
  3950  0140' 0141               	movlb	1	; select bank1
  3951  0141' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  3952  0142' 3B00'              	subwfb	(efgtoa@g+2)^(0+128),w
  3953  0143' 0140               	movlb	0	; select bank0
  3954  0144' 00B5'              	movwf	??_efgtoa+2
  3955  0145' 0141               	movlb	1	; select bank1
  3956  0146' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  3957  0147' 3B00'              	subwfb	(efgtoa@g+3)^(0+128),w
  3958  0148' 0140               	movlb	0	; select bank0
  3959  0149' 00B6'              	movwf	??_efgtoa+3
  3960  014A' 0836'              	movf	??_efgtoa+3,w
  3961  014B' 0085'              	movwf	labs@a+3
  3962  014C' 0835'              	movf	??_efgtoa+2,w
  3963  014D' 0084'              	movwf	labs@a+2
  3964  014E' 0834'              	movf	??_efgtoa+1,w
  3965  014F' 0083'              	movwf	labs@a+1
  3966  0150' 0833'              	movf	??_efgtoa,w
  3967  0151' 0082'              	movwf	labs@a
  3968  0152' 3180' 2000' 3180'  	fcall	_labs
  3969  0155' 1B85'              	btfsc	?_labs+3,7
  3970  0156' 2800'              	goto	u6011
  3971  0157' 0805'              	movf	?_labs+3,w
  3972  0158' 1D03               	btfss	3,2
  3973  0159' 2800'              	goto	u6010
  3974  015A' 0804'              	movf	?_labs+2,w
  3975  015B' 1D03               	btfss	3,2
  3976  015C' 2800'              	goto	u6010
  3977  015D' 0803'              	movf	?_labs+1,w
  3978  015E' 1D03               	btfss	3,2
  3979  015F' 2800'              	goto	u6010
  3980  0160' 3002               	movlw	2
  3981  0161' 0202'              	subwf	?_labs,w
  3982  0162' 1C03               	btfss	3,0
  3983  0163' 2800'              	goto	u6011
  3984  0164' 2800'              	goto	u6010
  3985  0165'                    u6011:
  3986  0165' 2800'              	goto	l4352
  3987  0166'                    u6010:
  3988  0166'                    l4358:
  3989  0166' 0141               	movlb	1	; select bank1
  3990  0167' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  3991  0168' 0140               	movlb	0	; select bank0
  3992  0169' 00A3'              	movwf	___flge@ff1+3
  3993  016A' 0141               	movlb	1	; select bank1
  3994  016B' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  3995  016C' 0140               	movlb	0	; select bank0
  3996  016D' 00A2'              	movwf	___flge@ff1+2
  3997  016E' 0141               	movlb	1	; select bank1
  3998  016F' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  3999  0170' 0140               	movlb	0	; select bank0
  4000  0171' 00A1'              	movwf	___flge@ff1+1
  4001  0172' 0141               	movlb	1	; select bank1
  4002  0173' 0800'              	movf	efgtoa@ou^(0+128),w
  4003  0174' 0140               	movlb	0	; select bank0
  4004  0175' 00A0'              	movwf	___flge@ff1
  4005  0176' 0141               	movlb	1	; select bank1
  4006  0177' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  4007  0178' 0140               	movlb	0	; select bank0
  4008  0179' 00A7'              	movwf	___flge@ff2+3
  4009  017A' 0141               	movlb	1	; select bank1
  4010  017B' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  4011  017C' 0140               	movlb	0	; select bank0
  4012  017D' 00A6'              	movwf	___flge@ff2+2
  4013  017E' 0141               	movlb	1	; select bank1
  4014  017F' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  4015  0180' 0140               	movlb	0	; select bank0
  4016  0181' 00A5'              	movwf	___flge@ff2+1
  4017  0182' 0141               	movlb	1	; select bank1
  4018  0183' 0800'              	movf	efgtoa@g^(0+128),w
  4019  0184' 0140               	movlb	0	; select bank0
  4020  0185' 00A4'              	movwf	___flge@ff2
  4021  0186' 3180' 2000' 3180'  	fcall	___flge
  4022  0189' 1C03               	btfss	3,0
  4023  018A' 2800'              	goto	u6021
  4024  018B' 2800'              	goto	u6020
  4025  018C'                    u6021:
  4026  018C' 2800'              	goto	l4352
  4027  018D'                    u6020:
  4028  018D'                    l4360:
  4029                           
  4030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4031  018D' 0141               	movlb	1	; select bank1
  4032  018E' 0800'              	movf	efgtoa@u^(0+128),w
  4033  018F' 0200'              	subwf	efgtoa@g^(0+128),w
  4034  0190' 0140               	movlb	0	; select bank0
  4035  0191' 00B3'              	movwf	??_efgtoa
  4036  0192' 0141               	movlb	1	; select bank1
  4037  0193' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4038  0194' 3B00'              	subwfb	(efgtoa@g+1)^(0+128),w
  4039  0195' 0140               	movlb	0	; select bank0
  4040  0196' 00B4'              	movwf	??_efgtoa+1
  4041  0197' 0141               	movlb	1	; select bank1
  4042  0198' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4043  0199' 3B00'              	subwfb	(efgtoa@g+2)^(0+128),w
  4044  019A' 0140               	movlb	0	; select bank0
  4045  019B' 00B5'              	movwf	??_efgtoa+2
  4046  019C' 0141               	movlb	1	; select bank1
  4047  019D' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4048  019E' 3B00'              	subwfb	(efgtoa@g+3)^(0+128),w
  4049  019F' 0140               	movlb	0	; select bank0
  4050  01A0' 00B6'              	movwf	??_efgtoa+3
  4051  01A1' 0836'              	movf	??_efgtoa+3,w
  4052  01A2' 0085'              	movwf	labs@a+3
  4053  01A3' 0835'              	movf	??_efgtoa+2,w
  4054  01A4' 0084'              	movwf	labs@a+2
  4055  01A5' 0834'              	movf	??_efgtoa+1,w
  4056  01A6' 0083'              	movwf	labs@a+1
  4057  01A7' 0833'              	movf	??_efgtoa,w
  4058  01A8' 0082'              	movwf	labs@a
  4059  01A9' 3180' 2000' 3180'  	fcall	_labs
  4060  01AC' 1B85'              	btfsc	?_labs+3,7
  4061  01AD' 2800'              	goto	u6030
  4062  01AE' 0805'              	movf	?_labs+3,w
  4063  01AF' 1D03               	btfss	3,2
  4064  01B0' 2800'              	goto	u6031
  4065  01B1' 0804'              	movf	?_labs+2,w
  4066  01B2' 1D03               	btfss	3,2
  4067  01B3' 2800'              	goto	u6031
  4068  01B4' 0803'              	movf	?_labs+1,w
  4069  01B5' 1D03               	btfss	3,2
  4070  01B6' 2800'              	goto	u6031
  4071  01B7' 3002               	movlw	2
  4072  01B8' 0202'              	subwf	?_labs,w
  4073  01B9' 1803               	btfsc	3,0
  4074  01BA' 2800'              	goto	u6031
  4075  01BB' 2800'              	goto	u6030
  4076  01BC'                    u6031:
  4077  01BC' 2800'              	goto	l4372
  4078  01BD'                    u6030:
  4079  01BD'                    l4362:
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  4082  01BD' 0141               	movlb	1	; select bank1
  4083  01BE' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4084  01BF' 0080'              	movwf	(efgtoa@g+3)^(0+128)
  4085  01C0' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4086  01C1' 0080'              	movwf	(efgtoa@g+2)^(0+128)
  4087  01C2' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4088  01C3' 0080'              	movwf	(efgtoa@g+1)^(0+128)
  4089  01C4' 0800'              	movf	efgtoa@u^(0+128),w
  4090  01C5' 0080'              	movwf	efgtoa@g^(0+128)
  4091                           
  4092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  4093  01C6' 2800'              	goto	l4374
  4094  01C7'                    l4364:
  4095                           
  4096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  4097  01C7' 3041               	movlw	65
  4098  01C8' 0085'              	movwf	___fldiv@a+3
  4099  01C9' 3020               	movlw	32
  4100  01CA' 0084'              	movwf	___fldiv@a+2
  4101  01CB' 3000               	movlw	0
  4102  01CC' 0083'              	movwf	___fldiv@a+1
  4103  01CD' 3000               	movlw	0
  4104  01CE' 0082'              	movwf	___fldiv@a
  4105  01CF' 0141               	movlb	1	; select bank1
  4106  01D0' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4107  01D1' 0089'              	movwf	___fldiv@b+3
  4108  01D2' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4109  01D3' 0088'              	movwf	___fldiv@b+2
  4110  01D4' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4111  01D5' 0087'              	movwf	___fldiv@b+1
  4112  01D6' 0800'              	movf	efgtoa@u^(0+128),w
  4113  01D7' 0086'              	movwf	___fldiv@b
  4114  01D8' 3180' 2000' 3180'  	fcall	___fldiv
  4115  01DB' 0805'              	movf	?___fldiv+3,w
  4116  01DC' 0141               	movlb	1	; select bank1
  4117  01DD' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  4118  01DE' 0804'              	movf	?___fldiv+2,w
  4119  01DF' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  4120  01E0' 0803'              	movf	?___fldiv+1,w
  4121  01E1' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  4122  01E2' 0802'              	movf	?___fldiv,w
  4123  01E3' 0080'              	movwf	efgtoa@u^(0+128)
  4124  01E4'                    l4366:
  4125                           
  4126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  4127  01E4' 30FF               	movlw	255
  4128  01E5' 0780'              	addwf	efgtoa@e^(0+128),f
  4129  01E6' 30FF               	movlw	255
  4130  01E7' 3D80'              	addwfc	(efgtoa@e+1)^(0+128),f
  4131  01E8'                    l4368:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4134  01E8' 0800'              	movf	efgtoa@u^(0+128),w
  4135  01E9' 0200'              	subwf	efgtoa@g^(0+128),w
  4136  01EA' 0140               	movlb	0	; select bank0
  4137  01EB' 00B3'              	movwf	??_efgtoa
  4138  01EC' 0141               	movlb	1	; select bank1
  4139  01ED' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4140  01EE' 3B00'              	subwfb	(efgtoa@g+1)^(0+128),w
  4141  01EF' 0140               	movlb	0	; select bank0
  4142  01F0' 00B4'              	movwf	??_efgtoa+1
  4143  01F1' 0141               	movlb	1	; select bank1
  4144  01F2' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4145  01F3' 3B00'              	subwfb	(efgtoa@g+2)^(0+128),w
  4146  01F4' 0140               	movlb	0	; select bank0
  4147  01F5' 00B5'              	movwf	??_efgtoa+2
  4148  01F6' 0141               	movlb	1	; select bank1
  4149  01F7' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4150  01F8' 3B00'              	subwfb	(efgtoa@g+3)^(0+128),w
  4151  01F9' 0140               	movlb	0	; select bank0
  4152  01FA' 00B6'              	movwf	??_efgtoa+3
  4153  01FB' 0836'              	movf	??_efgtoa+3,w
  4154  01FC' 0085'              	movwf	labs@a+3
  4155  01FD' 0835'              	movf	??_efgtoa+2,w
  4156  01FE' 0084'              	movwf	labs@a+2
  4157  01FF' 0834'              	movf	??_efgtoa+1,w
  4158  0200' 0083'              	movwf	labs@a+1
  4159  0201' 0833'              	movf	??_efgtoa,w
  4160  0202' 0082'              	movwf	labs@a
  4161  0203' 3180' 2000' 3180'  	fcall	_labs
  4162  0206' 1B85'              	btfsc	?_labs+3,7
  4163  0207' 2800'              	goto	u6040
  4164  0208' 0805'              	movf	?_labs+3,w
  4165  0209' 1D03               	btfss	3,2
  4166  020A' 2800'              	goto	u6041
  4167  020B' 0804'              	movf	?_labs+2,w
  4168  020C' 1D03               	btfss	3,2
  4169  020D' 2800'              	goto	u6041
  4170  020E' 0803'              	movf	?_labs+1,w
  4171  020F' 1D03               	btfss	3,2
  4172  0210' 2800'              	goto	u6041
  4173  0211' 3002               	movlw	2
  4174  0212' 0202'              	subwf	?_labs,w
  4175  0213' 1803               	btfsc	3,0
  4176  0214' 2800'              	goto	u6041
  4177  0215' 2800'              	goto	u6040
  4178  0216'                    u6041:
  4179  0216' 2800'              	goto	l4372
  4180  0217'                    u6040:
  4181  0217' 2800'              	goto	l4362
  4182  0218'                    l4372:
  4183                           
  4184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4185  0218' 0141               	movlb	1	; select bank1
  4186  0219' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  4187  021A' 0140               	movlb	0	; select bank0
  4188  021B' 00A3'              	movwf	___flge@ff1+3
  4189  021C' 0141               	movlb	1	; select bank1
  4190  021D' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  4191  021E' 0140               	movlb	0	; select bank0
  4192  021F' 00A2'              	movwf	___flge@ff1+2
  4193  0220' 0141               	movlb	1	; select bank1
  4194  0221' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  4195  0222' 0140               	movlb	0	; select bank0
  4196  0223' 00A1'              	movwf	___flge@ff1+1
  4197  0224' 0141               	movlb	1	; select bank1
  4198  0225' 0800'              	movf	efgtoa@g^(0+128),w
  4199  0226' 0140               	movlb	0	; select bank0
  4200  0227' 00A0'              	movwf	___flge@ff1
  4201  0228' 0141               	movlb	1	; select bank1
  4202  0229' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4203  022A' 0140               	movlb	0	; select bank0
  4204  022B' 00A7'              	movwf	___flge@ff2+3
  4205  022C' 0141               	movlb	1	; select bank1
  4206  022D' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4207  022E' 0140               	movlb	0	; select bank0
  4208  022F' 00A6'              	movwf	___flge@ff2+2
  4209  0230' 0141               	movlb	1	; select bank1
  4210  0231' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4211  0232' 0140               	movlb	0	; select bank0
  4212  0233' 00A5'              	movwf	___flge@ff2+1
  4213  0234' 0141               	movlb	1	; select bank1
  4214  0235' 0800'              	movf	efgtoa@u^(0+128),w
  4215  0236' 0140               	movlb	0	; select bank0
  4216  0237' 00A4'              	movwf	___flge@ff2
  4217  0238' 3180' 2000' 3180'  	fcall	___flge
  4218  023B' 1C03               	btfss	3,0
  4219  023C' 2800'              	goto	u6051
  4220  023D' 2800'              	goto	u6050
  4221  023E'                    u6051:
  4222  023E' 2800'              	goto	l4364
  4223  023F'                    u6050:
  4224  023F'                    l4374:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4227  023F' 0140               	movlb	0	; select bank0
  4228  0240' 0832'              	movf	efgtoa@c,w
  4229  0241' 0141               	movlb	1	; select bank1
  4230  0242' 0080'              	movwf	efgtoa@mode^(0+128)
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4233  0243' 0800'              	movf	efgtoa@mode^(0+128),w
  4234  0244' 0080'              	movwf	efgtoa@nmode^(0+128)
  4235  0245'                    l4376:
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4238  0245' 0140               	movlb	0	; select bank0
  4239  0246' 1B81'              	btfsc	_prec+1,7
  4240  0247' 2800'              	goto	u6061
  4241  0248' 2800'              	goto	u6060
  4242  0249'                    u6061:
  4243  0249' 2800'              	goto	l4380
  4244  024A'                    u6060:
  4245  024A'                    l4378:
  4246  024A' 0801'              	movf	_prec+1,w
  4247  024B' 0141               	movlb	1	; select bank1
  4248  024C' 0080'              	movwf	(efgtoa@p+1)^(0+128)
  4249  024D' 0140               	movlb	0	; select bank0
  4250  024E' 0800'              	movf	_prec,w
  4251  024F' 0141               	movlb	1	; select bank1
  4252  0250' 0080'              	movwf	efgtoa@p^(0+128)
  4253  0251' 2800'              	goto	l820
  4254  0252'                    l4380:
  4255  0252' 3006               	movlw	6
  4256  0253' 0141               	movlb	1	; select bank1
  4257  0254' 0080'              	movwf	efgtoa@p^(0+128)
  4258  0255' 3000               	movlw	0
  4259  0256' 0081'              	movwf	(efgtoa@p^(0+128)+1)
  4260  0257'                    l820:
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4263  0257' 0800'              	movf	(efgtoa@p+1)^(0+128),w
  4264  0258' 0080'              	movwf	(efgtoa@m+1)^(0+128)
  4265  0259' 0800'              	movf	efgtoa@p^(0+128),w
  4266  025A' 0080'              	movwf	efgtoa@m^(0+128)
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4269  025B' 3001               	movlw	1
  4270  025C' 0780'              	addwf	efgtoa@m^(0+128),f
  4271  025D' 3000               	movlw	0
  4272  025E' 3D80'              	addwfc	(efgtoa@m+1)^(0+128),f
  4273  025F'                    l4382:
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4276  025F' 3066               	movlw	102
  4277  0260' 0600'              	xorwf	efgtoa@nmode^(0+128),w
  4278  0261' 1D03               	btfss	3,2
  4279  0262' 2800'              	goto	u6071
  4280  0263' 2800'              	goto	u6070
  4281  0264'                    u6071:
  4282  0264' 2800'              	goto	l4394
  4283  0265'                    u6070:
  4284  0265'                    l4384:
  4285                           
  4286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4287  0265' 1F80'              	btfss	(efgtoa@e+1)^(0+128),7
  4288  0266' 2800'              	goto	u6081
  4289  0267' 2800'              	goto	u6080
  4290  0268'                    u6081:
  4291  0268' 2800'              	goto	l4390
  4292  0269'                    u6080:
  4293  0269'                    l4386:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4296  0269' 303F               	movlw	63
  4297  026A' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  4298  026B' 3080               	movlw	128
  4299  026C' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  4300  026D' 3000               	movlw	0
  4301  026E' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  4302  026F' 3000               	movlw	0
  4303  0270' 0080'              	movwf	efgtoa@u^(0+128)
  4304  0271'                    l4388:
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4307  0271' 0180'              	clrf	efgtoa@e^(0+128)
  4308  0272' 0180'              	clrf	(efgtoa@e+1)^(0+128)
  4309  0273'                    l4390:
  4310                           
  4311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4312  0273' 3067               	movlw	103
  4313  0274' 0600'              	xorwf	efgtoa@mode^(0+128),w
  4314  0275' 1903               	btfsc	3,2
  4315  0276' 2800'              	goto	u6091
  4316  0277' 2800'              	goto	u6090
  4317  0278'                    u6091:
  4318  0278' 2800'              	goto	l4394
  4319  0279'                    u6090:
  4320  0279'                    l4392:
  4321                           
  4322                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4323  0279' 0800'              	movf	efgtoa@e^(0+128),w
  4324  027A' 0780'              	addwf	efgtoa@m^(0+128),f
  4325  027B' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  4326  027C' 3D80'              	addwfc	(efgtoa@m+1)^(0+128),f
  4327  027D'                    l4394:
  4328                           
  4329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4330  027D' 0180'              	clrf	efgtoa@i^(0+128)
  4331  027E' 0180'              	clrf	(efgtoa@i+1)^(0+128)
  4332  027F'                    l4396:
  4333                           
  4334                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4335  027F' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  4336  0280' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  4337  0281' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  4338  0282' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  4339  0283' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  4340  0284' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  4341  0285' 0800'              	movf	efgtoa@g^(0+128),w
  4342  0286' 0080'              	movwf	efgtoa@h^(0+128)
  4343  0287'                    l4398:
  4344                           
  4345                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4346  0287' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4347  0288' 0080'              	movwf	(efgtoa@ou+3)^(0+128)
  4348  0289' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4349  028A' 0080'              	movwf	(efgtoa@ou+2)^(0+128)
  4350  028B' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4351  028C' 0080'              	movwf	(efgtoa@ou+1)^(0+128)
  4352  028D' 0800'              	movf	efgtoa@u^(0+128),w
  4353  028E' 0080'              	movwf	efgtoa@ou^(0+128)
  4354                           
  4355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4356  028F' 2800'              	goto	l4404
  4357  0290'                    l4400:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4360  0290' 0141               	movlb	1	; select bank1
  4361  0291' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4362  0292' 0085'              	movwf	___fldiv@a+3
  4363  0293' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4364  0294' 0084'              	movwf	___fldiv@a+2
  4365  0295' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4366  0296' 0083'              	movwf	___fldiv@a+1
  4367  0297' 0800'              	movf	efgtoa@u^(0+128),w
  4368  0298' 0082'              	movwf	___fldiv@a
  4369  0299' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  4370  029A' 0089'              	movwf	___fldiv@b+3
  4371  029B' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  4372  029C' 0088'              	movwf	___fldiv@b+2
  4373  029D' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  4374  029E' 0087'              	movwf	___fldiv@b+1
  4375  029F' 0800'              	movf	efgtoa@h^(0+128),w
  4376  02A0' 0086'              	movwf	___fldiv@b
  4377  02A1' 3180' 2000' 3180'  	fcall	___fldiv
  4378  02A4' 0805'              	movf	?___fldiv+3,w
  4379  02A5' 0140               	movlb	0	; select bank0
  4380  02A6' 0095'              	movwf	floorf@x+3
  4381  02A7' 0804'              	movf	?___fldiv+2,w
  4382  02A8' 0094'              	movwf	floorf@x+2
  4383  02A9' 0803'              	movf	?___fldiv+1,w
  4384  02AA' 0093'              	movwf	floorf@x+1
  4385  02AB' 0802'              	movf	?___fldiv,w
  4386  02AC' 0092'              	movwf	floorf@x
  4387  02AD' 3180' 2000' 3180'  	fcall	_floorf
  4388  02B0' 0140               	movlb	0	; select bank0
  4389  02B1' 0815'              	movf	?_floorf+3,w
  4390  02B2' 0141               	movlb	1	; select bank1
  4391  02B3' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  4392  02B4' 0140               	movlb	0	; select bank0
  4393  02B5' 0814'              	movf	?_floorf+2,w
  4394  02B6' 0141               	movlb	1	; select bank1
  4395  02B7' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  4396  02B8' 0140               	movlb	0	; select bank0
  4397  02B9' 0813'              	movf	?_floorf+1,w
  4398  02BA' 0141               	movlb	1	; select bank1
  4399  02BB' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  4400  02BC' 0140               	movlb	0	; select bank0
  4401  02BD' 0812'              	movf	?_floorf,w
  4402  02BE' 0141               	movlb	1	; select bank1
  4403  02BF' 0080'              	movwf	efgtoa@l^(0+128)
  4404                           
  4405                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4406  02C0' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  4407  02C1' 0085'              	movwf	___fltol@f1+3
  4408  02C2' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  4409  02C3' 0084'              	movwf	___fltol@f1+2
  4410  02C4' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  4411  02C5' 0083'              	movwf	___fltol@f1+1
  4412  02C6' 0800'              	movf	efgtoa@l^(0+128),w
  4413  02C7' 0082'              	movwf	___fltol@f1
  4414  02C8' 3180' 2000' 3180'  	fcall	___fltol
  4415  02CB' 0803'              	movf	?___fltol+1,w
  4416  02CC' 0141               	movlb	1	; select bank1
  4417  02CD' 0080'              	movwf	(efgtoa@d+1)^(0+128)
  4418  02CE' 0802'              	movf	?___fltol,w
  4419  02CF' 0080'              	movwf	efgtoa@d^(0+128)
  4420                           
  4421                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4422  02D0' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4423  02D1' 0140               	movlb	0	; select bank0
  4424  02D2' 008D'              	movwf	___flmul@a+3
  4425  02D3' 0141               	movlb	1	; select bank1
  4426  02D4' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4427  02D5' 0140               	movlb	0	; select bank0
  4428  02D6' 008C'              	movwf	___flmul@a+2
  4429  02D7' 0141               	movlb	1	; select bank1
  4430  02D8' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4431  02D9' 0140               	movlb	0	; select bank0
  4432  02DA' 008B'              	movwf	___flmul@a+1
  4433  02DB' 0141               	movlb	1	; select bank1
  4434  02DC' 0800'              	movf	efgtoa@u^(0+128),w
  4435  02DD' 0140               	movlb	0	; select bank0
  4436  02DE' 008A'              	movwf	___flmul@a
  4437  02DF' 0141               	movlb	1	; select bank1
  4438  02E0' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  4439  02E1' 0140               	movlb	0	; select bank0
  4440  02E2' 0089'              	movwf	___flmul@b+3
  4441  02E3' 0141               	movlb	1	; select bank1
  4442  02E4' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  4443  02E5' 0140               	movlb	0	; select bank0
  4444  02E6' 0088'              	movwf	___flmul@b+2
  4445  02E7' 0141               	movlb	1	; select bank1
  4446  02E8' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  4447  02E9' 0140               	movlb	0	; select bank0
  4448  02EA' 0087'              	movwf	___flmul@b+1
  4449  02EB' 0141               	movlb	1	; select bank1
  4450  02EC' 0800'              	movf	efgtoa@l^(0+128),w
  4451  02ED' 0140               	movlb	0	; select bank0
  4452  02EE' 0086'              	movwf	___flmul@b
  4453  02EF' 3180' 2000' 3180'  	fcall	___flmul
  4454  02F2' 0140               	movlb	0	; select bank0
  4455  02F3' 0809'              	movf	?___flmul+3,w
  4456  02F4' 00A3'              	movwf	___flsub@a+3
  4457  02F5' 0808'              	movf	?___flmul+2,w
  4458  02F6' 00A2'              	movwf	___flsub@a+2
  4459  02F7' 0807'              	movf	?___flmul+1,w
  4460  02F8' 00A1'              	movwf	___flsub@a+1
  4461  02F9' 0806'              	movf	?___flmul,w
  4462  02FA' 00A0'              	movwf	___flsub@a
  4463  02FB' 0141               	movlb	1	; select bank1
  4464  02FC' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  4465  02FD' 0140               	movlb	0	; select bank0
  4466  02FE' 00A7'              	movwf	___flsub@b+3
  4467  02FF' 0141               	movlb	1	; select bank1
  4468  0300' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  4469  0301' 0140               	movlb	0	; select bank0
  4470  0302' 00A6'              	movwf	___flsub@b+2
  4471  0303' 0141               	movlb	1	; select bank1
  4472  0304' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  4473  0305' 0140               	movlb	0	; select bank0
  4474  0306' 00A5'              	movwf	___flsub@b+1
  4475  0307' 0141               	movlb	1	; select bank1
  4476  0308' 0800'              	movf	efgtoa@h^(0+128),w
  4477  0309' 0140               	movlb	0	; select bank0
  4478  030A' 00A4'              	movwf	___flsub@b
  4479  030B' 3180' 2000' 3180'  	fcall	___flsub
  4480  030E' 0140               	movlb	0	; select bank0
  4481  030F' 0823'              	movf	?___flsub+3,w
  4482  0310' 0141               	movlb	1	; select bank1
  4483  0311' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  4484  0312' 0140               	movlb	0	; select bank0
  4485  0313' 0822'              	movf	?___flsub+2,w
  4486  0314' 0141               	movlb	1	; select bank1
  4487  0315' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  4488  0316' 0140               	movlb	0	; select bank0
  4489  0317' 0821'              	movf	?___flsub+1,w
  4490  0318' 0141               	movlb	1	; select bank1
  4491  0319' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  4492  031A' 0140               	movlb	0	; select bank0
  4493  031B' 0820'              	movf	?___flsub,w
  4494  031C' 0141               	movlb	1	; select bank1
  4495  031D' 0080'              	movwf	efgtoa@h^(0+128)
  4496                           
  4497                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4498  031E' 3041               	movlw	65
  4499  031F' 0085'              	movwf	___fldiv@a+3
  4500  0320' 3020               	movlw	32
  4501  0321' 0084'              	movwf	___fldiv@a+2
  4502  0322' 3000               	movlw	0
  4503  0323' 0083'              	movwf	___fldiv@a+1
  4504  0324' 3000               	movlw	0
  4505  0325' 0082'              	movwf	___fldiv@a
  4506  0326' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4507  0327' 0089'              	movwf	___fldiv@b+3
  4508  0328' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4509  0329' 0088'              	movwf	___fldiv@b+2
  4510  032A' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4511  032B' 0087'              	movwf	___fldiv@b+1
  4512  032C' 0800'              	movf	efgtoa@u^(0+128),w
  4513  032D' 0086'              	movwf	___fldiv@b
  4514  032E' 3180' 2000' 3180'  	fcall	___fldiv
  4515  0331' 0805'              	movf	?___fldiv+3,w
  4516  0332' 0141               	movlb	1	; select bank1
  4517  0333' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  4518  0334' 0804'              	movf	?___fldiv+2,w
  4519  0335' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  4520  0336' 0803'              	movf	?___fldiv+1,w
  4521  0337' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  4522  0338' 0802'              	movf	?___fldiv,w
  4523  0339' 0080'              	movwf	efgtoa@u^(0+128)
  4524  033A'                    l4402:
  4525                           
  4526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4527  033A' 3001               	movlw	1
  4528  033B' 0780'              	addwf	efgtoa@i^(0+128),f
  4529  033C' 3000               	movlw	0
  4530  033D' 3D80'              	addwfc	(efgtoa@i+1)^(0+128),f
  4531  033E'                    l4404:
  4532                           
  4533                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4534  033E' 0800'              	movf	(efgtoa@i+1)^(0+128),w
  4535  033F' 3A80               	xorlw	128
  4536  0340' 0140               	movlb	0	; select bank0
  4537  0341' 00B3'              	movwf	??_efgtoa
  4538  0342' 0141               	movlb	1	; select bank1
  4539  0343' 0800'              	movf	(efgtoa@m+1)^(0+128),w
  4540  0344' 3A80               	xorlw	128
  4541  0345' 0140               	movlb	0	; select bank0
  4542  0346' 0233'              	subwf	??_efgtoa,w
  4543  0347' 1D03               	skipz
  4544  0348' 2800'              	goto	u6105
  4545  0349' 0141               	movlb	1	; select bank1
  4546  034A' 0800'              	movf	efgtoa@m^(0+128),w
  4547  034B' 0200'              	subwf	efgtoa@i^(0+128),w
  4548  034C'                    u6105:
  4549  034C' 1C03               	skipc
  4550  034D' 2800'              	goto	u6101
  4551  034E' 2800'              	goto	u6100
  4552  034F'                    u6101:
  4553  034F' 2800'              	goto	l4400
  4554  0350'                    u6100:
  4555  0350'                    l4406:
  4556                           
  4557                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4558  0350' 3040               	movlw	64
  4559  0351' 0140               	movlb	0	; select bank0
  4560  0352' 0089'              	movwf	___flmul@b+3
  4561  0353' 30A0               	movlw	160
  4562  0354' 0088'              	movwf	___flmul@b+2
  4563  0355' 3000               	movlw	0
  4564  0356' 0087'              	movwf	___flmul@b+1
  4565  0357' 3000               	movlw	0
  4566  0358' 0086'              	movwf	___flmul@b
  4567  0359' 0141               	movlb	1	; select bank1
  4568  035A' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4569  035B' 0140               	movlb	0	; select bank0
  4570  035C' 008D'              	movwf	___flmul@a+3
  4571  035D' 0141               	movlb	1	; select bank1
  4572  035E' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4573  035F' 0140               	movlb	0	; select bank0
  4574  0360' 008C'              	movwf	___flmul@a+2
  4575  0361' 0141               	movlb	1	; select bank1
  4576  0362' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4577  0363' 0140               	movlb	0	; select bank0
  4578  0364' 008B'              	movwf	___flmul@a+1
  4579  0365' 0141               	movlb	1	; select bank1
  4580  0366' 0800'              	movf	efgtoa@u^(0+128),w
  4581  0367' 0140               	movlb	0	; select bank0
  4582  0368' 008A'              	movwf	___flmul@a
  4583  0369' 3180' 2000' 3180'  	fcall	___flmul
  4584  036C' 0140               	movlb	0	; select bank0
  4585  036D' 0809'              	movf	?___flmul+3,w
  4586  036E' 0141               	movlb	1	; select bank1
  4587  036F' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  4588  0370' 0140               	movlb	0	; select bank0
  4589  0371' 0808'              	movf	?___flmul+2,w
  4590  0372' 0141               	movlb	1	; select bank1
  4591  0373' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  4592  0374' 0140               	movlb	0	; select bank0
  4593  0375' 0807'              	movf	?___flmul+1,w
  4594  0376' 0141               	movlb	1	; select bank1
  4595  0377' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  4596  0378' 0140               	movlb	0	; select bank0
  4597  0379' 0806'              	movf	?___flmul,w
  4598  037A' 0141               	movlb	1	; select bank1
  4599  037B' 0080'              	movwf	efgtoa@l^(0+128)
  4600                           
  4601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4602  037C' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  4603  037D' 0140               	movlb	0	; select bank0
  4604  037E' 00A3'              	movwf	___flge@ff1+3
  4605  037F' 0141               	movlb	1	; select bank1
  4606  0380' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  4607  0381' 0140               	movlb	0	; select bank0
  4608  0382' 00A2'              	movwf	___flge@ff1+2
  4609  0383' 0141               	movlb	1	; select bank1
  4610  0384' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  4611  0385' 0140               	movlb	0	; select bank0
  4612  0386' 00A1'              	movwf	___flge@ff1+1
  4613  0387' 0141               	movlb	1	; select bank1
  4614  0388' 0800'              	movf	efgtoa@h^(0+128),w
  4615  0389' 0140               	movlb	0	; select bank0
  4616  038A' 00A0'              	movwf	___flge@ff1
  4617  038B' 0141               	movlb	1	; select bank1
  4618  038C' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  4619  038D' 0140               	movlb	0	; select bank0
  4620  038E' 00A7'              	movwf	___flge@ff2+3
  4621  038F' 0141               	movlb	1	; select bank1
  4622  0390' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  4623  0391' 0140               	movlb	0	; select bank0
  4624  0392' 00A6'              	movwf	___flge@ff2+2
  4625  0393' 0141               	movlb	1	; select bank1
  4626  0394' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  4627  0395' 0140               	movlb	0	; select bank0
  4628  0396' 00A5'              	movwf	___flge@ff2+1
  4629  0397' 0141               	movlb	1	; select bank1
  4630  0398' 0800'              	movf	efgtoa@l^(0+128),w
  4631  0399' 0140               	movlb	0	; select bank0
  4632  039A' 00A4'              	movwf	___flge@ff2
  4633  039B' 3180' 2000' 3180'  	fcall	___flge
  4634  039E' 1803               	btfsc	3,0
  4635  039F' 2800'              	goto	u6111
  4636  03A0' 2800'              	goto	u6110
  4637  03A1'                    u6111:
  4638  03A1' 2800'              	goto	l4410
  4639  03A2'                    u6110:
  4640  03A2'                    l4408:
  4641                           
  4642                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4643  03A2' 3000               	movlw	0
  4644  03A3' 0141               	movlb	1	; select bank1
  4645  03A4' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  4646  03A5' 3000               	movlw	0
  4647  03A6' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  4648  03A7' 3000               	movlw	0
  4649  03A8' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  4650  03A9' 3000               	movlw	0
  4651  03AA' 0080'              	movwf	efgtoa@l^(0+128)
  4652                           
  4653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  4654  03AB' 2800'              	goto	l4416
  4655  03AC'                    l4410:
  4656                           
  4657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4658  03AC' 0141               	movlb	1	; select bank1
  4659  03AD' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  4660  03AE' 0085'              	movwf	___fleq@ff1+3
  4661  03AF' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  4662  03B0' 0084'              	movwf	___fleq@ff1+2
  4663  03B1' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  4664  03B2' 0083'              	movwf	___fleq@ff1+1
  4665  03B3' 0800'              	movf	efgtoa@h^(0+128),w
  4666  03B4' 0082'              	movwf	___fleq@ff1
  4667  03B5' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  4668  03B6' 0089'              	movwf	___fleq@ff2+3
  4669  03B7' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  4670  03B8' 0088'              	movwf	___fleq@ff2+2
  4671  03B9' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  4672  03BA' 0087'              	movwf	___fleq@ff2+1
  4673  03BB' 0800'              	movf	efgtoa@l^(0+128),w
  4674  03BC' 0086'              	movwf	___fleq@ff2
  4675  03BD' 3180' 2000' 3180'  	fcall	___fleq
  4676  03C0' 1C03               	btfss	3,0
  4677  03C1' 2800'              	goto	u6121
  4678  03C2' 2800'              	goto	u6120
  4679  03C3'                    u6121:
  4680  03C3' 2800'              	goto	l4416
  4681  03C4'                    u6120:
  4682  03C4'                    l4412:
  4683  03C4' 0141               	movlb	1	; select bank1
  4684  03C5' 1800'              	btfsc	efgtoa@d^(0+128),0
  4685  03C6' 2800'              	goto	u6131
  4686  03C7' 2800'              	goto	u6130
  4687  03C8'                    u6131:
  4688  03C8' 2800'              	goto	l4416
  4689  03C9'                    u6130:
  4690  03C9'                    l4414:
  4691                           
  4692                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4693  03C9' 3000               	movlw	0
  4694  03CA' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  4695  03CB' 3000               	movlw	0
  4696  03CC' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  4697  03CD' 3000               	movlw	0
  4698  03CE' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  4699  03CF' 3000               	movlw	0
  4700  03D0' 0080'              	movwf	efgtoa@l^(0+128)
  4701  03D1'                    l4416:
  4702                           
  4703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4704  03D1' 0141               	movlb	1	; select bank1
  4705  03D2' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  4706  03D3' 0085'              	movwf	___fladd@b+3
  4707  03D4' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  4708  03D5' 0084'              	movwf	___fladd@b+2
  4709  03D6' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  4710  03D7' 0083'              	movwf	___fladd@b+1
  4711  03D8' 0800'              	movf	efgtoa@l^(0+128),w
  4712  03D9' 0082'              	movwf	___fladd@b
  4713  03DA' 0800'              	movf	(efgtoa@g+3)^(0+128),w
  4714  03DB' 0089'              	movwf	___fladd@a+3
  4715  03DC' 0800'              	movf	(efgtoa@g+2)^(0+128),w
  4716  03DD' 0088'              	movwf	___fladd@a+2
  4717  03DE' 0800'              	movf	(efgtoa@g+1)^(0+128),w
  4718  03DF' 0087'              	movwf	___fladd@a+1
  4719  03E0' 0800'              	movf	efgtoa@g^(0+128),w
  4720  03E1' 0086'              	movwf	___fladd@a
  4721  03E2' 3180' 2000' 3180'  	fcall	___fladd
  4722  03E5' 0805'              	movf	?___fladd+3,w
  4723  03E6' 0141               	movlb	1	; select bank1
  4724  03E7' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  4725  03E8' 0804'              	movf	?___fladd+2,w
  4726  03E9' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  4727  03EA' 0803'              	movf	?___fladd+1,w
  4728  03EB' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  4729  03EC' 0802'              	movf	?___fladd,w
  4730  03ED' 0080'              	movwf	efgtoa@h^(0+128)
  4731  03EE'                    l4418:
  4732                           
  4733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4734  03EE' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  4735  03EF' 0140               	movlb	0	; select bank0
  4736  03F0' 00A3'              	movwf	___flge@ff1+3
  4737  03F1' 0141               	movlb	1	; select bank1
  4738  03F2' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  4739  03F3' 0140               	movlb	0	; select bank0
  4740  03F4' 00A2'              	movwf	___flge@ff1+2
  4741  03F5' 0141               	movlb	1	; select bank1
  4742  03F6' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  4743  03F7' 0140               	movlb	0	; select bank0
  4744  03F8' 00A1'              	movwf	___flge@ff1+1
  4745  03F9' 0141               	movlb	1	; select bank1
  4746  03FA' 0800'              	movf	efgtoa@h^(0+128),w
  4747  03FB' 0140               	movlb	0	; select bank0
  4748  03FC' 00A0'              	movwf	___flge@ff1
  4749  03FD' 3041               	movlw	65
  4750  03FE' 0089'              	movwf	___flmul@b+3
  4751  03FF' 3020               	movlw	32
  4752  0400' 0088'              	movwf	___flmul@b+2
  4753  0401' 3000               	movlw	0
  4754  0402' 0087'              	movwf	___flmul@b+1
  4755  0403' 3000               	movlw	0
  4756  0404' 0086'              	movwf	___flmul@b
  4757  0405' 0141               	movlb	1	; select bank1
  4758  0406' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  4759  0407' 0140               	movlb	0	; select bank0
  4760  0408' 008D'              	movwf	___flmul@a+3
  4761  0409' 0141               	movlb	1	; select bank1
  4762  040A' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  4763  040B' 0140               	movlb	0	; select bank0
  4764  040C' 008C'              	movwf	___flmul@a+2
  4765  040D' 0141               	movlb	1	; select bank1
  4766  040E' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  4767  040F' 0140               	movlb	0	; select bank0
  4768  0410' 008B'              	movwf	___flmul@a+1
  4769  0411' 0141               	movlb	1	; select bank1
  4770  0412' 0800'              	movf	efgtoa@ou^(0+128),w
  4771  0413' 0140               	movlb	0	; select bank0
  4772  0414' 008A'              	movwf	___flmul@a
  4773  0415' 3180' 2000' 3180'  	fcall	___flmul
  4774  0418' 0140               	movlb	0	; select bank0
  4775  0419' 0809'              	movf	?___flmul+3,w
  4776  041A' 00A7'              	movwf	___flge@ff2+3
  4777  041B' 0808'              	movf	?___flmul+2,w
  4778  041C' 00A6'              	movwf	___flge@ff2+2
  4779  041D' 0807'              	movf	?___flmul+1,w
  4780  041E' 00A5'              	movwf	___flge@ff2+1
  4781  041F' 0806'              	movf	?___flmul,w
  4782  0420' 00A4'              	movwf	___flge@ff2
  4783  0421' 3180' 2000' 3180'  	fcall	___flge
  4784  0424' 1C03               	btfss	3,0
  4785  0425' 2800'              	goto	u6141
  4786  0426' 2800'              	goto	u6140
  4787  0427'                    u6141:
  4788  0427' 2800'              	goto	l830
  4789  0428'                    u6140:
  4790  0428'                    l4420:
  4791                           
  4792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  4793  0428' 3001               	movlw	1
  4794  0429' 0141               	movlb	1	; select bank1
  4795  042A' 0780'              	addwf	efgtoa@e^(0+128),f
  4796  042B' 3000               	movlw	0
  4797  042C' 3D80'              	addwfc	(efgtoa@e+1)^(0+128),f
  4798  042D'                    l4422:
  4799                           
  4800                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4801  042D' 3041               	movlw	65
  4802  042E' 0140               	movlb	0	; select bank0
  4803  042F' 0089'              	movwf	___flmul@b+3
  4804  0430' 3020               	movlw	32
  4805  0431' 0088'              	movwf	___flmul@b+2
  4806  0432' 3000               	movlw	0
  4807  0433' 0087'              	movwf	___flmul@b+1
  4808  0434' 3000               	movlw	0
  4809  0435' 0086'              	movwf	___flmul@b
  4810  0436' 0141               	movlb	1	; select bank1
  4811  0437' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  4812  0438' 0140               	movlb	0	; select bank0
  4813  0439' 008D'              	movwf	___flmul@a+3
  4814  043A' 0141               	movlb	1	; select bank1
  4815  043B' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  4816  043C' 0140               	movlb	0	; select bank0
  4817  043D' 008C'              	movwf	___flmul@a+2
  4818  043E' 0141               	movlb	1	; select bank1
  4819  043F' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  4820  0440' 0140               	movlb	0	; select bank0
  4821  0441' 008B'              	movwf	___flmul@a+1
  4822  0442' 0141               	movlb	1	; select bank1
  4823  0443' 0800'              	movf	efgtoa@ou^(0+128),w
  4824  0444' 0140               	movlb	0	; select bank0
  4825  0445' 008A'              	movwf	___flmul@a
  4826  0446' 3180' 2000' 3180'  	fcall	___flmul
  4827  0449' 0140               	movlb	0	; select bank0
  4828  044A' 0809'              	movf	?___flmul+3,w
  4829  044B' 0141               	movlb	1	; select bank1
  4830  044C' 0080'              	movwf	(efgtoa@ou+3)^(0+128)
  4831  044D' 0140               	movlb	0	; select bank0
  4832  044E' 0808'              	movf	?___flmul+2,w
  4833  044F' 0141               	movlb	1	; select bank1
  4834  0450' 0080'              	movwf	(efgtoa@ou+2)^(0+128)
  4835  0451' 0140               	movlb	0	; select bank0
  4836  0452' 0807'              	movf	?___flmul+1,w
  4837  0453' 0141               	movlb	1	; select bank1
  4838  0454' 0080'              	movwf	(efgtoa@ou+1)^(0+128)
  4839  0455' 0140               	movlb	0	; select bank0
  4840  0456' 0806'              	movf	?___flmul,w
  4841  0457' 0141               	movlb	1	; select bank1
  4842  0458' 0080'              	movwf	efgtoa@ou^(0+128)
  4843  0459'                    l4424:
  4844                           
  4845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4846  0459' 3066               	movlw	102
  4847  045A' 0600'              	xorwf	efgtoa@nmode^(0+128),w
  4848  045B' 1D03               	btfss	3,2
  4849  045C' 2800'              	goto	u6151
  4850  045D' 2800'              	goto	u6150
  4851  045E'                    u6151:
  4852  045E' 2800'              	goto	l830
  4853  045F'                    u6150:
  4854  045F'                    l4426:
  4855                           
  4856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  4857  045F' 3001               	movlw	1
  4858  0460' 0780'              	addwf	efgtoa@m^(0+128),f
  4859  0461' 3000               	movlw	0
  4860  0462' 3D80'              	addwfc	(efgtoa@m+1)^(0+128),f
  4861  0463'                    l830:	
  4862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 767:  }
  4863                           
  4864                           
  4865                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4866  0463' 0141               	movlb	1	; select bank1
  4867  0464' 0800'              	movf	(efgtoa@ou+3)^(0+128),w
  4868  0465' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  4869  0466' 0800'              	movf	(efgtoa@ou+2)^(0+128),w
  4870  0467' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  4871  0468' 0800'              	movf	(efgtoa@ou+1)^(0+128),w
  4872  0469' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  4873  046A' 0800'              	movf	efgtoa@ou^(0+128),w
  4874  046B' 0080'              	movwf	efgtoa@u^(0+128)
  4875                           
  4876                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4877  046C' 0800'              	movf	(efgtoa@e+1)^(0+128),w
  4878  046D' 0080'              	movwf	(efgtoa@ne+1)^(0+128)
  4879  046E' 0800'              	movf	efgtoa@e^(0+128),w
  4880  046F' 0080'              	movwf	efgtoa@ne^(0+128)
  4881  0470'                    l4428:
  4882                           
  4883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4884  0470' 0180'              	clrf	efgtoa@pp^(0+128)
  4885  0471'                    l4430:
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4888  0471' 0180'              	clrf	efgtoa@t^(0+128)
  4889  0472' 0180'              	clrf	(efgtoa@t+1)^(0+128)
  4890  0473'                    l4432:
  4891                           
  4892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4893  0473' 0180'              	clrf	efgtoa@i^(0+128)
  4894  0474' 0180'              	clrf	(efgtoa@i+1)^(0+128)
  4895                           
  4896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4897  0475' 2800'              	goto	l4476
  4898  0476'                    l4434:
  4899                           
  4900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4901  0476' 0141               	movlb	1	; select bank1
  4902  0477' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  4903  0478' 0085'              	movwf	___fldiv@a+3
  4904  0479' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  4905  047A' 0084'              	movwf	___fldiv@a+2
  4906  047B' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  4907  047C' 0083'              	movwf	___fldiv@a+1
  4908  047D' 0800'              	movf	efgtoa@u^(0+128),w
  4909  047E' 0082'              	movwf	___fldiv@a
  4910  047F' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  4911  0480' 0089'              	movwf	___fldiv@b+3
  4912  0481' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  4913  0482' 0088'              	movwf	___fldiv@b+2
  4914  0483' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  4915  0484' 0087'              	movwf	___fldiv@b+1
  4916  0485' 0800'              	movf	efgtoa@h^(0+128),w
  4917  0486' 0086'              	movwf	___fldiv@b
  4918  0487' 3180' 2000' 3180'  	fcall	___fldiv
  4919  048A' 0805'              	movf	?___fldiv+3,w
  4920  048B' 0140               	movlb	0	; select bank0
  4921  048C' 0095'              	movwf	floorf@x+3
  4922  048D' 0804'              	movf	?___fldiv+2,w
  4923  048E' 0094'              	movwf	floorf@x+2
  4924  048F' 0803'              	movf	?___fldiv+1,w
  4925  0490' 0093'              	movwf	floorf@x+1
  4926  0491' 0802'              	movf	?___fldiv,w
  4927  0492' 0092'              	movwf	floorf@x
  4928  0493' 3180' 2000' 3180'  	fcall	_floorf
  4929  0496' 0140               	movlb	0	; select bank0
  4930  0497' 0815'              	movf	?_floorf+3,w
  4931  0498' 0141               	movlb	1	; select bank1
  4932  0499' 0080'              	movwf	(efgtoa@l+3)^(0+128)
  4933  049A' 0140               	movlb	0	; select bank0
  4934  049B' 0814'              	movf	?_floorf+2,w
  4935  049C' 0141               	movlb	1	; select bank1
  4936  049D' 0080'              	movwf	(efgtoa@l+2)^(0+128)
  4937  049E' 0140               	movlb	0	; select bank0
  4938  049F' 0813'              	movf	?_floorf+1,w
  4939  04A0' 0141               	movlb	1	; select bank1
  4940  04A1' 0080'              	movwf	(efgtoa@l+1)^(0+128)
  4941  04A2' 0140               	movlb	0	; select bank0
  4942  04A3' 0812'              	movf	?_floorf,w
  4943  04A4' 0141               	movlb	1	; select bank1
  4944  04A5' 0080'              	movwf	efgtoa@l^(0+128)
  4945                           
  4946                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4947  04A6' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  4948  04A7' 0085'              	movwf	___fltol@f1+3
  4949  04A8' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  4950  04A9' 0084'              	movwf	___fltol@f1+2
  4951  04AA' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  4952  04AB' 0083'              	movwf	___fltol@f1+1
  4953  04AC' 0800'              	movf	efgtoa@l^(0+128),w
  4954  04AD' 0082'              	movwf	___fltol@f1
  4955  04AE' 3180' 2000' 3180'  	fcall	___fltol
  4956  04B1' 0803'              	movf	?___fltol+1,w
  4957  04B2' 3A80               	xorlw	128
  4958  04B3' 0140               	movlb	0	; select bank0
  4959  04B4' 00B3'              	movwf	??_efgtoa
  4960  04B5' 3080               	movlw	128
  4961  04B6' 0233'              	subwf	??_efgtoa,w
  4962  04B7' 1D03               	skipz
  4963  04B8' 2800'              	goto	u6165
  4964  04B9' 300A               	movlw	10
  4965  04BA' 0202'              	subwf	?___fltol,w
  4966  04BB'                    u6165:
  4967  04BB' 1803               	skipnc
  4968  04BC' 2800'              	goto	u6161
  4969  04BD' 2800'              	goto	u6160
  4970  04BE'                    u6161:
  4971  04BE' 2800'              	goto	l4438
  4972  04BF'                    u6160:
  4973  04BF'                    l4436:
  4974  04BF' 0141               	movlb	1	; select bank1
  4975  04C0' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  4976  04C1' 0085'              	movwf	___fltol@f1+3
  4977  04C2' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  4978  04C3' 0084'              	movwf	___fltol@f1+2
  4979  04C4' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  4980  04C5' 0083'              	movwf	___fltol@f1+1
  4981  04C6' 0800'              	movf	efgtoa@l^(0+128),w
  4982  04C7' 0082'              	movwf	___fltol@f1
  4983  04C8' 3180' 2000' 3180'  	fcall	___fltol
  4984  04CB' 0803'              	movf	?___fltol+1,w
  4985  04CC' 0141               	movlb	1	; select bank1
  4986  04CD' 0080'              	movwf	(efgtoa@d+1)^(0+128)
  4987  04CE' 0802'              	movf	?___fltol,w
  4988  04CF' 0080'              	movwf	efgtoa@d^(0+128)
  4989  04D0' 2800'              	goto	l4440
  4990  04D1'                    l4438:
  4991  04D1' 3009               	movlw	9
  4992  04D2' 0141               	movlb	1	; select bank1
  4993  04D3' 0080'              	movwf	efgtoa@d^(0+128)
  4994  04D4' 3000               	movlw	0
  4995  04D5' 0081'              	movwf	(efgtoa@d^(0+128)+1)
  4996  04D6'                    l4440:
  4997                           
  4998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4999  04D6' 0800'              	movf	efgtoa@pp^(0+128),w
  5000  04D7' 1D03               	btfss	3,2
  5001  04D8' 2800'              	goto	u6171
  5002  04D9' 2800'              	goto	u6170
  5003  04DA'                    u6171:
  5004  04DA' 2800'              	goto	l4460
  5005  04DB'                    u6170:
  5006  04DB'                    l4442:
  5007  04DB' 1F80'              	btfss	(efgtoa@ne+1)^(0+128),7
  5008  04DC' 2800'              	goto	u6181
  5009  04DD' 2800'              	goto	u6180
  5010  04DE'                    u6181:
  5011  04DE' 2800'              	goto	l4460
  5012  04DF'                    u6180:
  5013  04DF'                    l4444:
  5014                           
  5015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  5016  04DF' 0800'              	movf	efgtoa@n^(0+128),w
  5017  04E0' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  5018  04E1' 0086               	movwf	6
  5019  04E2' 3001               	movlw	1	; select bank3/4
  5020  04E3' 0087               	movwf	7
  5021  04E4' 302E               	movlw	46
  5022  04E5' 0081               	movwf	1
  5023  04E6'                    l4446:
  5024  04E6' 3001               	movlw	1
  5025  04E7' 0780'              	addwf	efgtoa@n^(0+128),f
  5026  04E8' 3000               	movlw	0
  5027  04E9' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  5028  04EA'                    l4448:
  5029                           
  5030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  5031  04EA' 30FF               	movlw	255
  5032  04EB' 0780'              	addwf	efgtoa@w^(0+128),f
  5033  04EC' 30FF               	movlw	255
  5034  04ED' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  5035  04EE'                    l4450:
  5036                           
  5037                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  5038  04EE' 3001               	movlw	1
  5039  04EF' 0080'              	movwf	efgtoa@pp^(0+128)
  5040  04F0' 2800'              	goto	l4460
  5041  04F1'                    l4452:
  5042                           
  5043                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  5044  04F1' 0800'              	movf	efgtoa@n^(0+128),w
  5045  04F2' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  5046  04F3' 0086               	movwf	6
  5047  04F4' 3001               	movlw	1	; select bank3/4
  5048  04F5' 0087               	movwf	7
  5049  04F6' 3030               	movlw	48
  5050  04F7' 0081               	movwf	1
  5051  04F8'                    l4454:
  5052  04F8' 3001               	movlw	1
  5053  04F9' 0780'              	addwf	efgtoa@n^(0+128),f
  5054  04FA' 3000               	movlw	0
  5055  04FB' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  5056  04FC'                    l4456:
  5057                           
  5058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  5059  04FC' 30FF               	movlw	255
  5060  04FD' 0780'              	addwf	efgtoa@w^(0+128),f
  5061  04FE' 30FF               	movlw	255
  5062  04FF' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  5063  0500'                    l4458:
  5064                           
  5065                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  5066  0500' 30FF               	movlw	255
  5067  0501' 0780'              	addwf	efgtoa@t^(0+128),f
  5068  0502' 30FF               	movlw	255
  5069  0503' 3D80'              	addwfc	(efgtoa@t+1)^(0+128),f
  5070  0504'                    l4460:
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  5073  0504' 0800'              	movf	efgtoa@t^(0+128),w
  5074  0505' 0400'              	iorwf	(efgtoa@t+1)^(0+128),w
  5075  0506' 1D03               	btfss	3,2
  5076  0507' 2800'              	goto	u6191
  5077  0508' 2800'              	goto	u6190
  5078  0509'                    u6191:
  5079  0509' 2800'              	goto	l4452
  5080  050A'                    u6190:
  5081  050A'                    l4462:
  5082                           
  5083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5084  050A' 0800'              	movf	efgtoa@n^(0+128),w
  5085  050B' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  5086  050C' 0086               	movwf	6
  5087  050D' 3001               	movlw	1	; select bank3/4
  5088  050E' 0087               	movwf	7
  5089  050F' 0800'              	movf	efgtoa@d^(0+128),w
  5090  0510' 3E30               	addlw	48
  5091  0511' 0081               	movwf	1
  5092  0512'                    l4464:
  5093  0512' 3001               	movlw	1
  5094  0513' 0780'              	addwf	efgtoa@n^(0+128),f
  5095  0514' 3000               	movlw	0
  5096  0515' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  5097  0516'                    l4466:
  5098                           
  5099                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  5100  0516' 30FF               	movlw	255
  5101  0517' 0780'              	addwf	efgtoa@w^(0+128),f
  5102  0518' 30FF               	movlw	255
  5103  0519' 3D80'              	addwfc	(efgtoa@w+1)^(0+128),f
  5104  051A'                    l4468:
  5105                           
  5106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  5107  051A' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  5108  051B' 0140               	movlb	0	; select bank0
  5109  051C' 008D'              	movwf	___flmul@a+3
  5110  051D' 0141               	movlb	1	; select bank1
  5111  051E' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  5112  051F' 0140               	movlb	0	; select bank0
  5113  0520' 008C'              	movwf	___flmul@a+2
  5114  0521' 0141               	movlb	1	; select bank1
  5115  0522' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  5116  0523' 0140               	movlb	0	; select bank0
  5117  0524' 008B'              	movwf	___flmul@a+1
  5118  0525' 0141               	movlb	1	; select bank1
  5119  0526' 0800'              	movf	efgtoa@u^(0+128),w
  5120  0527' 0140               	movlb	0	; select bank0
  5121  0528' 008A'              	movwf	___flmul@a
  5122  0529' 0141               	movlb	1	; select bank1
  5123  052A' 0800'              	movf	(efgtoa@l+3)^(0+128),w
  5124  052B' 0140               	movlb	0	; select bank0
  5125  052C' 0089'              	movwf	___flmul@b+3
  5126  052D' 0141               	movlb	1	; select bank1
  5127  052E' 0800'              	movf	(efgtoa@l+2)^(0+128),w
  5128  052F' 0140               	movlb	0	; select bank0
  5129  0530' 0088'              	movwf	___flmul@b+2
  5130  0531' 0141               	movlb	1	; select bank1
  5131  0532' 0800'              	movf	(efgtoa@l+1)^(0+128),w
  5132  0533' 0140               	movlb	0	; select bank0
  5133  0534' 0087'              	movwf	___flmul@b+1
  5134  0535' 0141               	movlb	1	; select bank1
  5135  0536' 0800'              	movf	efgtoa@l^(0+128),w
  5136  0537' 0140               	movlb	0	; select bank0
  5137  0538' 0086'              	movwf	___flmul@b
  5138  0539' 3180' 2000' 3180'  	fcall	___flmul
  5139  053C' 0140               	movlb	0	; select bank0
  5140  053D' 0809'              	movf	?___flmul+3,w
  5141  053E' 00A3'              	movwf	___flsub@a+3
  5142  053F' 0808'              	movf	?___flmul+2,w
  5143  0540' 00A2'              	movwf	___flsub@a+2
  5144  0541' 0807'              	movf	?___flmul+1,w
  5145  0542' 00A1'              	movwf	___flsub@a+1
  5146  0543' 0806'              	movf	?___flmul,w
  5147  0544' 00A0'              	movwf	___flsub@a
  5148  0545' 0141               	movlb	1	; select bank1
  5149  0546' 0800'              	movf	(efgtoa@h+3)^(0+128),w
  5150  0547' 0140               	movlb	0	; select bank0
  5151  0548' 00A7'              	movwf	___flsub@b+3
  5152  0549' 0141               	movlb	1	; select bank1
  5153  054A' 0800'              	movf	(efgtoa@h+2)^(0+128),w
  5154  054B' 0140               	movlb	0	; select bank0
  5155  054C' 00A6'              	movwf	___flsub@b+2
  5156  054D' 0141               	movlb	1	; select bank1
  5157  054E' 0800'              	movf	(efgtoa@h+1)^(0+128),w
  5158  054F' 0140               	movlb	0	; select bank0
  5159  0550' 00A5'              	movwf	___flsub@b+1
  5160  0551' 0141               	movlb	1	; select bank1
  5161  0552' 0800'              	movf	efgtoa@h^(0+128),w
  5162  0553' 0140               	movlb	0	; select bank0
  5163  0554' 00A4'              	movwf	___flsub@b
  5164  0555' 3180' 2000' 3180'  	fcall	___flsub
  5165  0558' 0140               	movlb	0	; select bank0
  5166  0559' 0823'              	movf	?___flsub+3,w
  5167  055A' 0141               	movlb	1	; select bank1
  5168  055B' 0080'              	movwf	(efgtoa@h+3)^(0+128)
  5169  055C' 0140               	movlb	0	; select bank0
  5170  055D' 0822'              	movf	?___flsub+2,w
  5171  055E' 0141               	movlb	1	; select bank1
  5172  055F' 0080'              	movwf	(efgtoa@h+2)^(0+128)
  5173  0560' 0140               	movlb	0	; select bank0
  5174  0561' 0821'              	movf	?___flsub+1,w
  5175  0562' 0141               	movlb	1	; select bank1
  5176  0563' 0080'              	movwf	(efgtoa@h+1)^(0+128)
  5177  0564' 0140               	movlb	0	; select bank0
  5178  0565' 0820'              	movf	?___flsub,w
  5179  0566' 0141               	movlb	1	; select bank1
  5180  0567' 0080'              	movwf	efgtoa@h^(0+128)
  5181  0568'                    l4470:
  5182                           
  5183                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  5184  0568' 3041               	movlw	65
  5185  0569' 0085'              	movwf	___fldiv@a+3
  5186  056A' 3020               	movlw	32
  5187  056B' 0084'              	movwf	___fldiv@a+2
  5188  056C' 3000               	movlw	0
  5189  056D' 0083'              	movwf	___fldiv@a+1
  5190  056E' 3000               	movlw	0
  5191  056F' 0082'              	movwf	___fldiv@a
  5192  0570' 0800'              	movf	(efgtoa@u+3)^(0+128),w
  5193  0571' 0089'              	movwf	___fldiv@b+3
  5194  0572' 0800'              	movf	(efgtoa@u+2)^(0+128),w
  5195  0573' 0088'              	movwf	___fldiv@b+2
  5196  0574' 0800'              	movf	(efgtoa@u+1)^(0+128),w
  5197  0575' 0087'              	movwf	___fldiv@b+1
  5198  0576' 0800'              	movf	efgtoa@u^(0+128),w
  5199  0577' 0086'              	movwf	___fldiv@b
  5200  0578' 3180' 2000' 3180'  	fcall	___fldiv
  5201  057B' 0805'              	movf	?___fldiv+3,w
  5202  057C' 0141               	movlb	1	; select bank1
  5203  057D' 0080'              	movwf	(efgtoa@u+3)^(0+128)
  5204  057E' 0804'              	movf	?___fldiv+2,w
  5205  057F' 0080'              	movwf	(efgtoa@u+2)^(0+128)
  5206  0580' 0803'              	movf	?___fldiv+1,w
  5207  0581' 0080'              	movwf	(efgtoa@u+1)^(0+128)
  5208  0582' 0802'              	movf	?___fldiv,w
  5209  0583' 0080'              	movwf	efgtoa@u^(0+128)
  5210  0584'                    l4472:
  5211                           
  5212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  5213  0584' 30FF               	movlw	255
  5214  0585' 0780'              	addwf	efgtoa@ne^(0+128),f
  5215  0586' 30FF               	movlw	255
  5216  0587' 3D80'              	addwfc	(efgtoa@ne+1)^(0+128),f
  5217  0588'                    l4474:
  5218                           
  5219                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  5220  0588' 3001               	movlw	1
  5221  0589' 0780'              	addwf	efgtoa@i^(0+128),f
  5222  058A' 3000               	movlw	0
  5223  058B' 3D80'              	addwfc	(efgtoa@i+1)^(0+128),f
  5224  058C'                    l4476:
  5225                           
  5226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5227  058C' 0800'              	movf	(efgtoa@i+1)^(0+128),w
  5228  058D' 3A80               	xorlw	128
  5229  058E' 0140               	movlb	0	; select bank0
  5230  058F' 00B3'              	movwf	??_efgtoa
  5231  0590' 0141               	movlb	1	; select bank1
  5232  0591' 0800'              	movf	(efgtoa@m+1)^(0+128),w
  5233  0592' 3A80               	xorlw	128
  5234  0593' 0140               	movlb	0	; select bank0
  5235  0594' 0233'              	subwf	??_efgtoa,w
  5236  0595' 1D03               	skipz
  5237  0596' 2800'              	goto	u6205
  5238  0597' 0141               	movlb	1	; select bank1
  5239  0598' 0800'              	movf	efgtoa@m^(0+128),w
  5240  0599' 0200'              	subwf	efgtoa@i^(0+128),w
  5241  059A'                    u6205:
  5242  059A' 1803               	skipnc
  5243  059B' 2800'              	goto	u6201
  5244  059C' 2800'              	goto	u6200
  5245  059D'                    u6201:
  5246  059D' 2800'              	goto	l4480
  5247  059E'                    u6200:
  5248  059E'                    l4478:
  5249  059E' 0141               	movlb	1	; select bank1
  5250  059F' 0800'              	movf	(efgtoa@n+1)^(0+128),w
  5251  05A0' 3A80               	xorlw	128
  5252  05A1' 0140               	movlb	0	; select bank0
  5253  05A2' 00B3'              	movwf	??_efgtoa
  5254  05A3' 3080               	movlw	128
  5255  05A4' 0233'              	subwf	??_efgtoa,w
  5256  05A5' 1D03               	skipz
  5257  05A6' 2800'              	goto	u6215
  5258  05A7' 304B               	movlw	75
  5259  05A8' 0141               	movlb	1	; select bank1
  5260  05A9' 0200'              	subwf	efgtoa@n^(0+128),w
  5261  05AA'                    u6215:
  5262  05AA' 1C03               	skipc
  5263  05AB' 2800'              	goto	u6211
  5264  05AC' 2800'              	goto	u6210
  5265  05AD'                    u6211:
  5266  05AD' 2800'              	goto	l4434
  5267  05AE'                    u6210:
  5268  05AE'                    l4480:
  5269                           
  5270                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5271  05AE' 304F               	movlw	79
  5272  05AF' 0141               	movlb	1	; select bank1
  5273  05B0' 0080'              	movwf	efgtoa@i^(0+128)
  5274  05B1' 3000               	movlw	0
  5275  05B2' 0081'              	movwf	(efgtoa@i^(0+128)+1)
  5276  05B3'                    l4482:
  5277                           
  5278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5279  05B3' 0800'              	movf	efgtoa@i^(0+128),w
  5280  05B4' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  5281  05B5' 0086               	movwf	6
  5282  05B6' 3001               	movlw	1	; select bank3/4
  5283  05B7' 0087               	movwf	7
  5284  05B8' 0181               	clrf	1
  5285  05B9'                    l4484:
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5288  05B9' 3000'              	movlw	(low (_dbuf| (0+256)))& (0+255)
  5289  05BA' 0140               	movlb	0	; select bank0
  5290  05BB' 00B3'              	movwf	??_efgtoa
  5291  05BC' 0141               	movlb	1	; select bank1
  5292  05BD' 0800'              	movf	efgtoa@n^(0+128),w
  5293  05BE' 0140               	movlb	0	; select bank0
  5294  05BF' 0233'              	subwf	??_efgtoa,w
  5295  05C0' 0141               	movlb	1	; select bank1
  5296  05C1' 0700'              	addwf	efgtoa@i^(0+128),w
  5297  05C2' 0082'              	movwf	memcpy@d1
  5298  05C3' 3000'              	movlw	(low (_dbuf| (0+256)))& (0+255)
  5299  05C4' 0083'              	movwf	memcpy@s1
  5300  05C5' 0800'              	movf	(efgtoa@n+1)^(0+128),w
  5301  05C6' 0085'              	movwf	memcpy@n+1
  5302  05C7' 0800'              	movf	efgtoa@n^(0+128),w
  5303  05C8' 0084'              	movwf	memcpy@n
  5304  05C9' 3180' 2000' 3180'  	fcall	_memcpy
  5305  05CC'                    l4486:
  5306                           
  5307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5308  05CC' 0141               	movlb	1	; select bank1
  5309  05CD' 0800'              	movf	efgtoa@n^(0+128),w
  5310  05CE' 0200'              	subwf	efgtoa@i^(0+128),w
  5311  05CF' 0080'              	movwf	efgtoa@n^(0+128)
  5312  05D0' 0800'              	movf	(efgtoa@n+1)^(0+128),w
  5313  05D1' 3B00'              	subwfb	(efgtoa@i+1)^(0+128),w
  5314  05D2' 0080'              	movwf	(efgtoa@n+1)^(0+128)
  5315  05D3'                    l4488:
  5316                           
  5317                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5318  05D3' 0800'              	movf	efgtoa@sign^(0+128),w
  5319  05D4' 1D03               	btfss	3,2
  5320  05D5' 2800'              	goto	u6221
  5321  05D6' 2800'              	goto	u6220
  5322  05D7'                    u6221:
  5323  05D7' 3001               	movlw	1
  5324  05D8' 2800'              	goto	u6230
  5325  05D9'                    u6220:
  5326  05D9' 3000               	movlw	0
  5327  05DA'                    u6230:
  5328  05DA' 0140               	movlb	0	; select bank0
  5329  05DB' 00B3'              	movwf	??_efgtoa
  5330  05DC' 01B4'              	clrf	??_efgtoa+1
  5331  05DD' 0833'              	movf	??_efgtoa,w
  5332  05DE' 0141               	movlb	1	; select bank1
  5333  05DF' 0080'              	movwf	efgtoa@i^(0+128)
  5334  05E0' 0140               	movlb	0	; select bank0
  5335  05E1' 0834'              	movf	??_efgtoa+1,w
  5336  05E2' 0141               	movlb	1	; select bank1
  5337  05E3' 0080'              	movwf	(efgtoa@i+1)^(0+128)
  5338  05E4'                    l4490:
  5339                           
  5340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5341  05E4' 0800'              	movf	efgtoa@sign^(0+128),w
  5342  05E5' 1903               	btfsc	3,2
  5343  05E6' 2800'              	goto	u6241
  5344  05E7' 2800'              	goto	u6240
  5345  05E8'                    u6241:
  5346  05E8' 2800'              	goto	l4494
  5347  05E9'                    u6240:
  5348  05E9'                    l4492:
  5349                           
  5350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5351  05E9' 30FF               	movlw	255
  5352  05EA' 0780'              	addwf	efgtoa@n^(0+128),f
  5353  05EB' 30FF               	movlw	255
  5354  05EC' 3D80'              	addwfc	(efgtoa@n+1)^(0+128),f
  5355  05ED' 0800'              	movf	efgtoa@n^(0+128),w
  5356  05EE' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  5357  05EF' 0086               	movwf	6
  5358  05F0' 3001               	movlw	1	; select bank3/4
  5359  05F1' 0087               	movwf	7
  5360  05F2' 0800'              	movf	efgtoa@sign^(0+128),w
  5361  05F3' 0081               	movwf	1
  5362  05F4'                    l4494:
  5363                           
  5364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  5365  05F4' 0800'              	movf	efgtoa@i^(0+128),w
  5366  05F5' 0280'              	subwf	efgtoa@w^(0+128),f
  5367  05F6' 0800'              	movf	(efgtoa@i+1)^(0+128),w
  5368  05F7' 3B80'              	subwfb	(efgtoa@w+1)^(0+128),f
  5369  05F8'                    l4496:
  5370                           
  5371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5372  05F8' 0140               	movlb	0	; select bank0
  5373  05F9' 082D'              	movf	efgtoa@fp+1,w
  5374  05FA' 008C'              	movwf	pad@fp+1
  5375  05FB' 082C'              	movf	efgtoa@fp,w
  5376  05FC' 008B'              	movwf	pad@fp
  5377  05FD' 0141               	movlb	1	; select bank1
  5378  05FE' 0800'              	movf	efgtoa@n^(0+128),w
  5379  05FF' 3E00'              	addlw	(low (_dbuf| (0+256)))& (0+255)
  5380  0600' 0140               	movlb	0	; select bank0
  5381  0601' 008D'              	movwf	pad@buf
  5382  0602' 0141               	movlb	1	; select bank1
  5383  0603' 0800'              	movf	(efgtoa@w+1)^(0+128),w
  5384  0604' 0140               	movlb	0	; select bank0
  5385  0605' 008F'              	movwf	pad@p+1
  5386  0606' 0141               	movlb	1	; select bank1
  5387  0607' 0800'              	movf	efgtoa@w^(0+128),w
  5388  0608' 0140               	movlb	0	; select bank0
  5389  0609' 008E'              	movwf	pad@p
  5390  060A' 3180' 2000' 3180'  	fcall	_pad
  5391  060D'                    l804:
  5392  060D' 0008               	return
  5393  060E'                    __end_of_efgtoa:
  5394                           
  5395                           	psect	text10
  5396  0000'                    __ptext10:	
  5397 ;; *************** function _strcpy *****************
  5398 ;; Defined at:
  5399 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  dest            1    2[COMMON] PTR unsigned char 
  5402 ;;		 -> dbuf(80), 
  5403 ;;  src             2    3[COMMON] PTR const unsigned char 
  5404 ;;		 -> STR_5(4), STR_2(4), 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  d               1    7[COMMON] PTR unsigned char 
  5407 ;;		 -> dbuf(80), 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    2[COMMON] PTR unsigned char 
  5410 ;; Registers used:
  5411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5417 ;;      Params:         3       0       0       0       0       0       0       0
  5418 ;;      Locals:         1       0       0       0       0       0       0       0
  5419 ;;      Temps:          2       0       0       0       0       0       0       0
  5420 ;;      Totals:         6       0       0       0       0       0       0       0
  5421 ;;Total ram usage:        6 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; Hardware stack levels required when called: 1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_efgtoa
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431  0000'                    _strcpy:	
  5432                           ;psect for function _strcpy
  5433                           
  5434  0000'                    l3206:	
  5435                           ;incstack = 0
  5436                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  5437                           
  5438  0000' 0802'              	movf	strcpy@dest,w
  5439  0001' 0087'              	movwf	strcpy@d
  5440  0002'                    l3208:
  5441  0002' 0807'              	movf	strcpy@d,w
  5442  0003' 0086               	movwf	6
  5443  0004' 3001               	movlw	1	; select bank2/3
  5444  0005' 0087               	movwf	7
  5445  0006' 0A87'              	incf	strcpy@d,f
  5446  0007' 0804'              	movf	strcpy@src+1,w
  5447  0008' 0086'              	movwf	??_strcpy+1
  5448  0009' 0803'              	movf	strcpy@src,w
  5449  000A' 0085'              	movwf	??_strcpy
  5450  000B' 0A83'              	incf	strcpy@src,f
  5451  000C' 1903               	skipnz
  5452  000D' 0A84'              	incf	strcpy@src+1,f
  5453  000E' 0805'              	movf	??_strcpy,w
  5454  000F' 0084               	movwf	4
  5455  0010' 0806'              	movf	??_strcpy+1,w
  5456  0011' 0085               	movwf	5
  5457  0012' 0800               	movf	0,w	;code access
  5458  0013' 3FC0               	movwi [0]fsr1
  5459  0014' 0889               	movf	9,f
  5460  0015' 1D03               	btfss	3,2
  5461  0016' 2800'              	goto	u4271
  5462  0017' 2800'              	goto	u4270
  5463  0018'                    u4271:
  5464  0018' 2800'              	goto	l3208
  5465  0019'                    u4270:
  5466  0019'                    l964:
  5467  0019' 0008               	return
  5468  001A'                    __end_of_strcpy:
  5469                           
  5470                           	psect	text11
  5471  0000'                    __ptext11:	
  5472 ;; *************** function _pad *****************
  5473 ;; Defined at:
  5474 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  5477 ;;		 -> sprintf@f(11), 
  5478 ;;  buf             1   13[BANK0 ] PTR unsigned char 
  5479 ;;		 -> dbuf(80), 
  5480 ;;  p               2   14[BANK0 ] int 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  i               2   16[BANK0 ] int 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5492 ;;      Params:         0       5       0       0       0       0       0       0
  5493 ;;      Locals:         0       2       0       0       0       0       0       0
  5494 ;;      Temps:          1       0       0       0       0       0       0       0
  5495 ;;      Totals:         1       7       0       0       0       0       0       0
  5496 ;;Total ram usage:        8 bytes
  5497 ;; Hardware stack levels used: 1
  5498 ;; Hardware stack levels required when called: 4
  5499 ;; This function calls:
  5500 ;;		_fputc
  5501 ;;		_fputs
  5502 ;; This function is called by:
  5503 ;;		_efgtoa
  5504 ;;		_utoa
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508  0000'                    _pad:	
  5509                           ;psect for function _pad
  5510                           
  5511  0000'                    l4262:	
  5512                           ;incstack = 0
  5513                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5514                           
  5515                           
  5516                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  5517  0000' 0140               	movlb	0	; select bank0
  5518  0001' 1F8F'              	btfss	pad@p+1,7
  5519  0002' 2800'              	goto	u5831
  5520  0003' 2800'              	goto	u5830
  5521  0004'                    u5831:
  5522  0004' 2800'              	goto	l789
  5523  0005'                    u5830:
  5524  0005'                    l4264:
  5525                           
  5526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5527  0005' 018E'              	clrf	pad@p
  5528  0006' 018F'              	clrf	pad@p+1
  5529  0007'                    l789:	
  5530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
  5531                           
  5532                           
  5533                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5534  0007' 0190'              	clrf	pad@i
  5535  0008' 0191'              	clrf	pad@i+1
  5536                           
  5537                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5538  0009' 2800'              	goto	l4270
  5539  000A'                    l4266:
  5540                           
  5541                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  5542  000A' 3020               	movlw	32
  5543  000B' 0082'              	movwf	fputc@c
  5544  000C' 3000               	movlw	0
  5545  000D' 0083'              	movwf	fputc@c+1
  5546  000E' 0140               	movlb	0	; select bank0
  5547  000F' 080C'              	movf	pad@fp+1,w
  5548  0010' 0085'              	movwf	fputc@fp+1
  5549  0011' 080B'              	movf	pad@fp,w
  5550  0012' 0084'              	movwf	fputc@fp
  5551  0013' 3180' 2000' 3180'  	fcall	_fputc
  5552  0016'                    l4268:
  5553                           
  5554                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5555  0016' 3001               	movlw	1
  5556  0017' 0140               	movlb	0	; select bank0
  5557  0018' 0790'              	addwf	pad@i,f
  5558  0019' 3000               	movlw	0
  5559  001A' 3D91'              	addwfc	pad@i+1,f
  5560  001B'                    l4270:
  5561                           
  5562                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5563  001B' 0811'              	movf	pad@i+1,w
  5564  001C' 3A80               	xorlw	128
  5565  001D' 0088'              	movwf	??_pad
  5566  001E' 080F'              	movf	pad@p+1,w
  5567  001F' 3A80               	xorlw	128
  5568  0020' 0208'              	subwf	??_pad,w
  5569  0021' 1D03               	skipz
  5570  0022' 2800'              	goto	u5845
  5571  0023' 080E'              	movf	pad@p,w
  5572  0024' 0210'              	subwf	pad@i,w
  5573  0025'                    u5845:
  5574  0025' 1C03               	skipc
  5575  0026' 2800'              	goto	u5841
  5576  0027' 2800'              	goto	u5840
  5577  0028'                    u5841:
  5578  0028' 2800'              	goto	l4266
  5579  0029'                    u5840:
  5580  0029'                    l4272:
  5581                           
  5582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5583  0029' 0140               	movlb	0	; select bank0
  5584  002A' 080D'              	movf	pad@buf,w
  5585  002B' 0085'              	movwf	fputs@s
  5586  002C' 080C'              	movf	pad@fp+1,w
  5587  002D' 0087'              	movwf	fputs@fp+1
  5588  002E' 080B'              	movf	pad@fp,w
  5589  002F' 0086'              	movwf	fputs@fp
  5590  0030' 3180' 2000' 3180'  	fcall	_fputs
  5591  0033'                    l793:
  5592  0033' 0008               	return
  5593  0034'                    __end_of_pad:
  5594                           
  5595                           	psect	text12
  5596  0000'                    __ptext12:	
  5597 ;; *************** function _fputs *****************
  5598 ;; Defined at:
  5599 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  5602 ;;		 -> dbuf(80), 
  5603 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  5604 ;;		 -> sprintf@f(11), 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  i               2    9[BANK0 ] int 
  5607 ;;  c               1    8[BANK0 ] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  2    5[BANK0 ] int 
  5610 ;; Registers used:
  5611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5617 ;;      Params:         0       3       0       0       0       0       0       0
  5618 ;;      Locals:         0       3       0       0       0       0       0       0
  5619 ;;      Temps:          2       0       0       0       0       0       0       0
  5620 ;;      Totals:         2       6       0       0       0       0       0       0
  5621 ;;Total ram usage:        8 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 3
  5624 ;; This function calls:
  5625 ;;		_fputc
  5626 ;; This function is called by:
  5627 ;;		_pad
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631  0000'                    _fputs:	
  5632                           ;psect for function _fputs
  5633                           
  5634  0000'                    l4078:	
  5635                           ;incstack = 0
  5636                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5637                           
  5638  0000' 0140               	movlb	0	; select bank0
  5639  0001' 0189'              	clrf	fputs@i
  5640  0002' 018A'              	clrf	fputs@i+1
  5641  0003' 2800'              	goto	l4084
  5642  0004'                    l4080:
  5643  0004' 0808'              	movf	fputs@c,w
  5644  0005' 0086'              	movwf	??_fputs
  5645  0006' 0187'              	clrf	??_fputs+1
  5646  0007' 0806'              	movf	??_fputs,w
  5647  0008' 0082'              	movwf	fputc@c
  5648  0009' 0807'              	movf	??_fputs+1,w
  5649  000A' 0083'              	movwf	fputc@c+1
  5650  000B' 0807'              	movf	fputs@fp+1,w
  5651  000C' 0085'              	movwf	fputc@fp+1
  5652  000D' 0806'              	movf	fputs@fp,w
  5653  000E' 0084'              	movwf	fputc@fp
  5654  000F' 3180' 2000' 3180'  	fcall	_fputc
  5655  0012'                    l4082:
  5656  0012' 3001               	movlw	1
  5657  0013' 0140               	movlb	0	; select bank0
  5658  0014' 0789'              	addwf	fputs@i,f
  5659  0015' 3000               	movlw	0
  5660  0016' 3D8A'              	addwfc	fputs@i+1,f
  5661  0017'                    l4084:
  5662  0017' 0805'              	movf	fputs@s,w
  5663  0018' 0709'              	addwf	fputs@i,w
  5664  0019' 0086               	movwf	6
  5665  001A' 3001               	movlw	1	; select bank2/3
  5666  001B' 0087               	movwf	7
  5667  001C' 0801               	movf	1,w
  5668  001D' 0088'              	movwf	fputs@c
  5669  001E' 0808'              	movf	fputs@c,w
  5670  001F' 1D03               	btfss	3,2
  5671  0020' 2800'              	goto	u5451
  5672  0021' 2800'              	goto	u5450
  5673  0022'                    u5451:
  5674  0022' 2800'              	goto	l4080
  5675  0023'                    u5450:
  5676  0023'                    l955:
  5677  0023' 0008               	return
  5678  0024'                    __end_of_fputs:
  5679                           
  5680                           	psect	text13
  5681  0000'                    __ptext13:	
  5682 ;; *************** function _fputc *****************
  5683 ;; Defined at:
  5684 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  c               2    2[COMMON] int 
  5687 ;;  fp              2    4[COMMON] PTR struct _IO_FILE
  5688 ;;		 -> sprintf@f(11), 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  2    2[COMMON] int 
  5693 ;; Registers used:
  5694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5700 ;;      Params:         4       0       0       0       0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0       0
  5702 ;;      Temps:          0       5       0       0       0       0       0       0
  5703 ;;      Totals:         4       5       0       0       0       0       0       0
  5704 ;;Total ram usage:        9 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 2
  5707 ;; This function calls:
  5708 ;;		_putch
  5709 ;; This function is called by:
  5710 ;;		_pad
  5711 ;;		_vfpfcnvrt
  5712 ;;		_fputs
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716  0000'                    _fputc:	
  5717                           ;psect for function _fputc
  5718                           
  5719  0000'                    l4048:	
  5720                           ;incstack = 0
  5721                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5722                           
  5723  0000' 0804'              	movf	fputc@fp,w
  5724  0001' 0405'              	iorwf	fputc@fp+1,w
  5725  0002' 1903               	btfsc	3,2
  5726  0003' 2800'              	goto	u5381
  5727  0004' 2800'              	goto	u5380
  5728  0005'                    u5381:
  5729  0005' 2800'              	goto	l4052
  5730  0006'                    u5380:
  5731  0006'                    l4050:
  5732  0006' 0804'              	movf	fputc@fp,w
  5733  0007' 0405'              	iorwf	fputc@fp+1,w
  5734  0008' 1D03               	btfss	3,2
  5735  0009' 2800'              	goto	u5391
  5736  000A' 2800'              	goto	u5390
  5737  000B'                    u5391:
  5738  000B' 2800'              	goto	l4054
  5739  000C'                    u5390:
  5740  000C'                    l4052:
  5741  000C' 0802'              	movf	fputc@c,w
  5742  000D' 3180' 2000' 3180'  	fcall	_putch
  5743  0010' 2800'              	goto	l947
  5744  0011'                    l4054:
  5745  0011' 0804'              	movf	fputc@fp,w
  5746  0012' 0086               	movwf	6
  5747  0013' 0187               	clrf	7
  5748  0014' 3149               	addfsr 1,9
  5749  0015' 0016               	moviw fsr1++
  5750  0016' 0401               	iorwf	1,w
  5751  0017' 1903               	btfsc	3,2
  5752  0018' 2800'              	goto	u5401
  5753  0019' 2800'              	goto	u5400
  5754  001A'                    u5401:
  5755  001A' 2800'              	goto	l4058
  5756  001B'                    u5400:
  5757  001B'                    l4056:
  5758  001B' 0804'              	movf	fputc@fp,w
  5759  001C' 0086               	movwf	6
  5760  001D' 0187               	clrf	7
  5761  001E' 3149               	addfsr 1,9
  5762  001F' 3F40               	moviw [0]fsr1
  5763  0020' 0140               	movlb	0	; select bank0
  5764  0021' 0080'              	movwf	??_fputc
  5765  0022' 3F41               	moviw [1]fsr1
  5766  0023' 0081'              	movwf	??_fputc+1
  5767  0024' 0804'              	movf	fputc@fp,w
  5768  0025' 0086               	movwf	6
  5769  0026' 0187               	clrf	7
  5770  0027' 3142               	addfsr 1,2
  5771  0028' 3F40               	moviw [0]fsr1
  5772  0029' 0082'              	movwf	??_fputc+2
  5773  002A' 3F41               	moviw [1]fsr1
  5774  002B' 0083'              	movwf	??_fputc+3
  5775  002C' 0803'              	movf	??_fputc+3,w
  5776  002D' 3A80               	xorlw	128
  5777  002E' 0084'              	movwf	??_fputc+4
  5778  002F' 0801'              	movf	??_fputc+1,w
  5779  0030' 3A80               	xorlw	128
  5780  0031' 0204'              	subwf	??_fputc+4,w
  5781  0032' 1D03               	skipz
  5782  0033' 2800'              	goto	u5415
  5783  0034' 0800'              	movf	??_fputc,w
  5784  0035' 0202'              	subwf	??_fputc+2,w
  5785  0036'                    u5415:
  5786  0036' 1803               	skipnc
  5787  0037' 2800'              	goto	u5411
  5788  0038' 2800'              	goto	u5410
  5789  0039'                    u5411:
  5790  0039' 2800'              	goto	l947
  5791  003A'                    u5410:
  5792  003A'                    l4058:
  5793  003A' 0804'              	movf	fputc@fp,w
  5794  003B' 0086               	movwf	6
  5795  003C' 0187               	clrf	7
  5796  003D' 3142               	addfsr 1,2
  5797  003E' 0804'              	movf	fputc@fp,w
  5798  003F' 0084               	movwf	4
  5799  0040' 0805'              	movf	fputc@fp+1,w
  5800  0041' 0085               	movwf	5
  5801  0042' 3F00               	moviw [0]fsr0
  5802  0043' 0140               	movlb	0	; select bank0
  5803  0044' 0080'              	movwf	??_fputc
  5804  0045' 3F01               	moviw [1]fsr0
  5805  0046' 0081'              	movwf	??_fputc+1
  5806  0047' 3F40               	moviw [0]fsr1
  5807  0048' 0700'              	addwf	??_fputc,w
  5808  0049' 0084               	movwf	4
  5809  004A' 3F41               	moviw [1]fsr1
  5810  004B' 3D01'              	addwfc	??_fputc+1,w
  5811  004C' 0085               	movwf	5
  5812  004D' 0802'              	movf	fputc@c,w
  5813  004E' 0080               	movwf	0
  5814  004F'                    l4060:
  5815  004F' 0804'              	movf	fputc@fp,w
  5816  0050' 0086               	movwf	6
  5817  0051' 0187               	clrf	7
  5818  0052' 3142               	addfsr 1,2
  5819  0053' 3001               	movlw	1
  5820  0054' 0781               	addwf	1,f
  5821  0055' 3141               	addfsr 1,1
  5822  0056' 1803               	skipnc
  5823  0057' 0A81               	incf	1,f
  5824  0058'                    l947:
  5825  0058' 0008               	return
  5826  0059'                    __end_of_fputc:
  5827                           
  5828                           	psect	text14
  5829  0000'                    __ptext14:	
  5830 ;; *************** function _putch *****************
  5831 ;; Defined at:
  5832 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  c               1    wreg     unsigned char 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  c               1    0[COMMON] unsigned char 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5846 ;;      Params:         0       0       0       0       0       0       0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0
  5849 ;;      Totals:         0       0       0       0       0       0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; Hardware stack levels required when called: 1
  5853 ;; This function calls:
  5854 ;;		Nothing
  5855 ;; This function is called by:
  5856 ;;		_fputc
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860  0000'                    _putch:	
  5861                           ;psect for function _putch
  5862                           
  5863  0000'                    l958:	
  5864                           ;incstack = 0
  5865                           ; Regs used in _putch: [wreg]
  5866                           
  5867  0000' 0008               	return
  5868  0001'                    __end_of_putch:
  5869                           
  5870                           	psect	text15
  5871  0000'                    __ptext15:	
  5872 ;; *************** function _memcpy *****************
  5873 ;; Defined at:
  5874 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  d1              1    2[COMMON] PTR void 
  5877 ;;		 -> dbuf(80), 
  5878 ;;  s1              1    3[COMMON] PTR const void 
  5879 ;;		 -> dbuf(80), 
  5880 ;;  n               2    4[COMMON] unsigned int 
  5881 ;; Auto vars:     Size  Location     Type
  5882 ;;  s               1    8[COMMON] PTR const unsigned char 
  5883 ;;		 -> dbuf(80), 
  5884 ;;  d               1    7[COMMON] PTR unsigned char 
  5885 ;;		 -> dbuf(80), 
  5886 ;;  tmp             1    6[COMMON] unsigned char 
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    2[COMMON] PTR void 
  5889 ;; Registers used:
  5890 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5896 ;;      Params:         4       0       0       0       0       0       0       0
  5897 ;;      Locals:         3       0       0       0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0       0
  5899 ;;      Totals:         7       0       0       0       0       0       0       0
  5900 ;;Total ram usage:        7 bytes
  5901 ;; Hardware stack levels used: 1
  5902 ;; Hardware stack levels required when called: 1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_efgtoa
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910  0000'                    _memcpy:	
  5911                           ;psect for function _memcpy
  5912                           
  5913  0000'                    l3248:	
  5914                           ;incstack = 0
  5915                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  5916                           
  5917  0000' 0803'              	movf	memcpy@s1,w
  5918  0001' 0088'              	movwf	memcpy@s
  5919  0002' 0802'              	movf	memcpy@d1,w
  5920  0003' 0087'              	movwf	memcpy@d
  5921  0004' 2800'              	goto	l932
  5922  0005'                    l3250:
  5923  0005' 0808'              	movf	memcpy@s,w
  5924  0006' 0086               	movwf	6
  5925  0007' 3001               	movlw	1	; select bank2/3
  5926  0008' 0087               	movwf	7
  5927  0009' 0801               	movf	1,w
  5928  000A' 0086'              	movwf	memcpy@tmp
  5929  000B'                    l3252:
  5930  000B' 3001               	movlw	1
  5931  000C' 0788'              	addwf	memcpy@s,f
  5932  000D'                    l3254:
  5933  000D' 0807'              	movf	memcpy@d,w
  5934  000E' 0086               	movwf	6
  5935  000F' 3001               	movlw	1	; select bank2/3
  5936  0010' 0087               	movwf	7
  5937  0011' 0806'              	movf	memcpy@tmp,w
  5938  0012' 0081               	movwf	1
  5939  0013' 3001               	movlw	1
  5940  0014' 0787'              	addwf	memcpy@d,f
  5941  0015'                    l932:
  5942  0015' 3001               	movlw	1
  5943  0016' 0284'              	subwf	memcpy@n,f
  5944  0017' 3000               	movlw	0
  5945  0018' 3B85'              	subwfb	memcpy@n+1,f
  5946  0019' 0A04'              	incf	memcpy@n,w
  5947  001A' 1D03               	skipz
  5948  001B' 2800'              	goto	u4401
  5949  001C' 0A05'              	incf	memcpy@n+1,w
  5950  001D' 1D03               	btfss	3,2
  5951  001E' 2800'              	goto	u4401
  5952  001F' 2800'              	goto	u4400
  5953  0020'                    u4401:
  5954  0020' 2800'              	goto	l3250
  5955  0021'                    u4400:
  5956  0021'                    l935:
  5957  0021' 0008               	return
  5958  0022'                    __end_of_memcpy:
  5959                           
  5960                           	psect	text16
  5961  0000'                    __ptext16:	
  5962 ;; *************** function _labs *****************
  5963 ;; Defined at:
  5964 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  a               4    2[COMMON] long 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  4    2[COMMON] long 
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5978 ;;      Params:         4       0       0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0
  5981 ;;      Totals:         4       0       0       0       0       0       0       0
  5982 ;;Total ram usage:        4 bytes
  5983 ;; Hardware stack levels used: 1
  5984 ;; Hardware stack levels required when called: 1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_efgtoa
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992  0000'                    _labs:	
  5993                           ;psect for function _labs
  5994                           
  5995  0000'                    l3210:	
  5996                           ;incstack = 0
  5997                           ; Regs used in _labs: [wreg+status,2+status,0]
  5998                           
  5999  0000' 1B85'              	btfsc	labs@a+3,7
  6000  0001' 2800'              	goto	u4281
  6001  0002' 2800'              	goto	u4280
  6002  0003'                    u4281:
  6003  0003' 2800'              	goto	l3214
  6004  0004'                    u4280:
  6005  0004'                    l3212:
  6006  0004' 2800'              	goto	l929
  6007  0005'                    l3214:
  6008  0005' 0902'              	comf	labs@a,w
  6009  0006' 0082'              	movwf	?_labs
  6010  0007' 0903'              	comf	labs@a+1,w
  6011  0008' 0083'              	movwf	?_labs+1
  6012  0009' 0904'              	comf	labs@a+2,w
  6013  000A' 0084'              	movwf	?_labs+2
  6014  000B' 0905'              	comf	labs@a+3,w
  6015  000C' 0085'              	movwf	?_labs+3
  6016  000D' 0A82'              	incf	?_labs,f
  6017  000E' 1903               	skipnz
  6018  000F' 0A83'              	incf	?_labs+1,f
  6019  0010' 1903               	skipnz
  6020  0011' 0A84'              	incf	?_labs+2,f
  6021  0012' 1903               	skipnz
  6022  0013' 0A85'              	incf	?_labs+3,f
  6023  0014'                    l929:
  6024  0014' 0008               	return
  6025  0015'                    __end_of_labs:
  6026                           
  6027                           	psect	text17
  6028  0000'                    __ptext17:	
  6029 ;; *************** function _floorf *****************
  6030 ;; Defined at:
  6031 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  x               4   18[BANK0 ] float 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  u               4   34[BANK0 ] struct .
  6036 ;;  m               4   28[BANK0 ] unsigned long 
  6037 ;;  e               2   32[BANK0 ] int 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  4   18[BANK0 ] float 
  6040 ;; Registers used:
  6041 ;;		wreg, status,2, status,0
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6047 ;;      Params:         0       4       0       0       0       0       0       0
  6048 ;;      Locals:         0      10       0       0       0       0       0       0
  6049 ;;      Temps:          0       6       0       0       0       0       0       0
  6050 ;;      Totals:         0      20       0       0       0       0       0       0
  6051 ;;Total ram usage:       20 bytes
  6052 ;; Hardware stack levels used: 1
  6053 ;; Hardware stack levels required when called: 1
  6054 ;; This function calls:
  6055 ;;		Nothing
  6056 ;; This function is called by:
  6057 ;;		_efgtoa
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061  0000'                    _floorf:	
  6062                           ;psect for function _floorf
  6063                           
  6064  0000'                    l3218:	
  6065                           ;incstack = 0
  6066                           ; Regs used in _floorf: [wreg+status,2+status,0]
  6067                           
  6068  0000' 0142               	movlb	2	; select bank2
  6069  0001' 0800'              	movf	(floorf@F521+3)^(0+256),w
  6070  0002' 0140               	movlb	0	; select bank0
  6071  0003' 00A5'              	movwf	floorf@u+3
  6072  0004' 0142               	movlb	2	; select bank2
  6073  0005' 0800'              	movf	(floorf@F521+2)^(0+256),w
  6074  0006' 0140               	movlb	0	; select bank0
  6075  0007' 00A4'              	movwf	floorf@u+2
  6076  0008' 0142               	movlb	2	; select bank2
  6077  0009' 0800'              	movf	(floorf@F521+1)^(0+256),w
  6078  000A' 0140               	movlb	0	; select bank0
  6079  000B' 00A3'              	movwf	floorf@u+1
  6080  000C' 0142               	movlb	2	; select bank2
  6081  000D' 0800'              	movf	floorf@F521^(0+256),w
  6082  000E' 0140               	movlb	0	; select bank0
  6083  000F' 00A2'              	movwf	floorf@u
  6084  0010' 0815'              	movf	floorf@x+3,w
  6085  0011' 00A5'              	movwf	floorf@u+3
  6086  0012' 0814'              	movf	floorf@x+2,w
  6087  0013' 00A4'              	movwf	floorf@u+2
  6088  0014' 0813'              	movf	floorf@x+1,w
  6089  0015' 00A3'              	movwf	floorf@u+1
  6090  0016' 0812'              	movf	floorf@x,w
  6091  0017' 00A2'              	movwf	floorf@u
  6092  0018'                    l3220:
  6093  0018' 0822'              	movf	floorf@u,w
  6094  0019' 0096'              	movwf	??_floorf
  6095  001A' 0823'              	movf	floorf@u+1,w
  6096  001B' 0097'              	movwf	??_floorf+1
  6097  001C' 0824'              	movf	floorf@u+2,w
  6098  001D' 0098'              	movwf	??_floorf+2
  6099  001E' 0825'              	movf	floorf@u+3,w
  6100  001F' 0099'              	movwf	??_floorf+3
  6101  0020' 3017               	movlw	23
  6102  0021'                    u4295:
  6103  0021' 3699'              	lsrf	??_floorf+3,f
  6104  0022' 0C98'              	rrf	??_floorf+2,f
  6105  0023' 0C97'              	rrf	??_floorf+1,f
  6106  0024' 0C96'              	rrf	??_floorf,f
  6107  0025'                    u4290:
  6108  0025' 0B89               	decfsz	9,f
  6109  0026' 2800'              	goto	u4295
  6110  0027' 30FF               	movlw	255
  6111  0028' 0516'              	andwf	??_floorf,w
  6112  0029' 009A'              	movwf	??_floorf+4
  6113  002A' 3000               	movlw	0
  6114  002B' 0517'              	andwf	??_floorf+1,w
  6115  002C' 009B'              	movwf	??_floorf+5
  6116  002D' 081A'              	movf	??_floorf+4,w
  6117  002E' 3E81               	addlw	129
  6118  002F' 00A0'              	movwf	floorf@e
  6119  0030' 30FF               	movlw	255
  6120  0031' 3D1B'              	addwfc	??_floorf+5,w
  6121  0032' 00A1'              	movwf	floorf@e+1
  6122  0033'                    l3222:
  6123  0033' 0821'              	movf	floorf@e+1,w
  6124  0034' 3A80               	xorlw	128
  6125  0035' 0096'              	movwf	??_floorf
  6126  0036' 3080               	movlw	128
  6127  0037' 0216'              	subwf	??_floorf,w
  6128  0038' 1D03               	skipz
  6129  0039' 2800'              	goto	u4305
  6130  003A' 3017               	movlw	23
  6131  003B' 0220'              	subwf	floorf@e,w
  6132  003C'                    u4305:
  6133  003C' 1C03               	skipc
  6134  003D' 2800'              	goto	u4301
  6135  003E' 2800'              	goto	u4300
  6136  003F'                    u4301:
  6137  003F' 2800'              	goto	l914
  6138  0040'                    u4300:
  6139  0040'                    l3224:
  6140  0040' 2800'              	goto	l915
  6141  0041'                    l914:
  6142  0041' 0140               	movlb	0	; select bank0
  6143  0042' 1BA1'              	btfsc	floorf@e+1,7
  6144  0043' 2800'              	goto	u4311
  6145  0044' 2800'              	goto	u4310
  6146  0045'                    u4311:
  6147  0045' 2800'              	goto	l3238
  6148  0046'                    u4310:
  6149  0046'                    l3226:
  6150  0046' 30FF               	movlw	255
  6151  0047' 0096'              	movwf	??_floorf
  6152  0048' 30FF               	movlw	255
  6153  0049' 0097'              	movwf	??_floorf+1
  6154  004A' 307F               	movlw	127
  6155  004B' 0098'              	movwf	??_floorf+2
  6156  004C' 3000               	movlw	0
  6157  004D' 0099'              	movwf	??_floorf+3
  6158  004E' 0A20'              	incf	floorf@e,w
  6159  004F' 2800'              	goto	u4320
  6160  0050'                    u4325:
  6161  0050' 3799'              	asrf	??_floorf+3,f
  6162  0051' 0C98'              	rrf	??_floorf+2,f
  6163  0052' 0C97'              	rrf	??_floorf+1,f
  6164  0053' 0C96'              	rrf	??_floorf,f
  6165  0054'                    u4320:
  6166  0054' 0B89               	decfsz	9,f
  6167  0055' 2800'              	goto	u4325
  6168  0056' 0819'              	movf	??_floorf+3,w
  6169  0057' 009F'              	movwf	floorf@m+3
  6170  0058' 0818'              	movf	??_floorf+2,w
  6171  0059' 009E'              	movwf	floorf@m+2
  6172  005A' 0817'              	movf	??_floorf+1,w
  6173  005B' 009D'              	movwf	floorf@m+1
  6174  005C' 0816'              	movf	??_floorf,w
  6175  005D' 009C'              	movwf	floorf@m
  6176  005E'                    l3228:
  6177  005E' 0822'              	movf	floorf@u,w
  6178  005F' 051C'              	andwf	floorf@m,w
  6179  0060' 0096'              	movwf	??_floorf
  6180  0061' 0823'              	movf	floorf@u+1,w
  6181  0062' 051D'              	andwf	floorf@m+1,w
  6182  0063' 0097'              	movwf	??_floorf+1
  6183  0064' 0824'              	movf	floorf@u+2,w
  6184  0065' 051E'              	andwf	floorf@m+2,w
  6185  0066' 0098'              	movwf	??_floorf+2
  6186  0067' 0825'              	movf	floorf@u+3,w
  6187  0068' 051F'              	andwf	floorf@m+3,w
  6188  0069' 0099'              	movwf	??_floorf+3
  6189  006A' 0819'              	movf	??_floorf+3,w
  6190  006B' 0418'              	iorwf	??_floorf+2,w
  6191  006C' 0417'              	iorwf	??_floorf+1,w
  6192  006D' 0416'              	iorwf	??_floorf,w
  6193  006E' 1D03               	skipz
  6194  006F' 2800'              	goto	u4331
  6195  0070' 2800'              	goto	u4330
  6196  0071'                    u4331:
  6197  0071' 2800'              	goto	l3232
  6198  0072'                    u4330:
  6199  0072' 2800'              	goto	l3224
  6200  0073'                    l3232:
  6201  0073' 0822'              	movf	floorf@u,w
  6202  0074' 0096'              	movwf	??_floorf
  6203  0075' 0823'              	movf	floorf@u+1,w
  6204  0076' 0097'              	movwf	??_floorf+1
  6205  0077' 0824'              	movf	floorf@u+2,w
  6206  0078' 0098'              	movwf	??_floorf+2
  6207  0079' 0825'              	movf	floorf@u+3,w
  6208  007A' 0099'              	movwf	??_floorf+3
  6209  007B' 301F               	movlw	31
  6210  007C'                    u4345:
  6211  007C' 3699'              	lsrf	??_floorf+3,f
  6212  007D' 0C98'              	rrf	??_floorf+2,f
  6213  007E' 0C97'              	rrf	??_floorf+1,f
  6214  007F' 0C96'              	rrf	??_floorf,f
  6215  0080'                    u4340:
  6216  0080' 0B89               	decfsz	9,f
  6217  0081' 2800'              	goto	u4345
  6218  0082' 0819'              	movf	??_floorf+3,w
  6219  0083' 0418'              	iorwf	??_floorf+2,w
  6220  0084' 0417'              	iorwf	??_floorf+1,w
  6221  0085' 0416'              	iorwf	??_floorf,w
  6222  0086' 1903               	skipnz
  6223  0087' 2800'              	goto	u4351
  6224  0088' 2800'              	goto	u4350
  6225  0089'                    u4351:
  6226  0089' 2800'              	goto	l3236
  6227  008A'                    u4350:
  6228  008A'                    l3234:
  6229  008A' 081C'              	movf	floorf@m,w
  6230  008B' 07A2'              	addwf	floorf@u,f
  6231  008C' 081D'              	movf	floorf@m+1,w
  6232  008D' 3DA3'              	addwfc	floorf@u+1,f
  6233  008E' 081E'              	movf	floorf@m+2,w
  6234  008F' 3DA4'              	addwfc	floorf@u+2,f
  6235  0090' 081F'              	movf	floorf@m+3,w
  6236  0091' 3DA5'              	addwfc	floorf@u+3,f
  6237  0092'                    l3236:
  6238  0092' 091C'              	comf	floorf@m,w
  6239  0093' 0096'              	movwf	??_floorf
  6240  0094' 091D'              	comf	floorf@m+1,w
  6241  0095' 0097'              	movwf	??_floorf+1
  6242  0096' 091E'              	comf	floorf@m+2,w
  6243  0097' 0098'              	movwf	??_floorf+2
  6244  0098' 091F'              	comf	floorf@m+3,w
  6245  0099' 0099'              	movwf	??_floorf+3
  6246  009A' 0816'              	movf	??_floorf,w
  6247  009B' 05A2'              	andwf	floorf@u,f
  6248  009C' 0817'              	movf	??_floorf+1,w
  6249  009D' 05A3'              	andwf	floorf@u+1,f
  6250  009E' 0818'              	movf	??_floorf+2,w
  6251  009F' 05A4'              	andwf	floorf@u+2,f
  6252  00A0' 0819'              	movf	??_floorf+3,w
  6253  00A1' 05A5'              	andwf	floorf@u+3,f
  6254  00A2' 2800'              	goto	l919
  6255  00A3'                    l3238:
  6256  00A3' 0822'              	movf	floorf@u,w
  6257  00A4' 0096'              	movwf	??_floorf
  6258  00A5' 0823'              	movf	floorf@u+1,w
  6259  00A6' 0097'              	movwf	??_floorf+1
  6260  00A7' 0824'              	movf	floorf@u+2,w
  6261  00A8' 0098'              	movwf	??_floorf+2
  6262  00A9' 0825'              	movf	floorf@u+3,w
  6263  00AA' 0099'              	movwf	??_floorf+3
  6264  00AB' 301F               	movlw	31
  6265  00AC'                    u4365:
  6266  00AC' 3699'              	lsrf	??_floorf+3,f
  6267  00AD' 0C98'              	rrf	??_floorf+2,f
  6268  00AE' 0C97'              	rrf	??_floorf+1,f
  6269  00AF' 0C96'              	rrf	??_floorf,f
  6270  00B0'                    u4360:
  6271  00B0' 0B89               	decfsz	9,f
  6272  00B1' 2800'              	goto	u4365
  6273  00B2' 0819'              	movf	??_floorf+3,w
  6274  00B3' 0418'              	iorwf	??_floorf+2,w
  6275  00B4' 0417'              	iorwf	??_floorf+1,w
  6276  00B5' 0416'              	iorwf	??_floorf,w
  6277  00B6' 1D03               	skipz
  6278  00B7' 2800'              	goto	u4371
  6279  00B8' 2800'              	goto	u4370
  6280  00B9'                    u4371:
  6281  00B9' 2800'              	goto	l3242
  6282  00BA'                    u4370:
  6283  00BA'                    l3240:
  6284  00BA' 3000               	movlw	0
  6285  00BB' 00A5'              	movwf	floorf@u+3
  6286  00BC' 3000               	movlw	0
  6287  00BD' 00A4'              	movwf	floorf@u+2
  6288  00BE' 3000               	movlw	0
  6289  00BF' 00A3'              	movwf	floorf@u+1
  6290  00C0' 3000               	movlw	0
  6291  00C1' 00A2'              	movwf	floorf@u
  6292  00C2' 2800'              	goto	l919
  6293  00C3'                    l3242:
  6294  00C3' 0822'              	movf	floorf@u,w
  6295  00C4' 0096'              	movwf	??_floorf
  6296  00C5' 0823'              	movf	floorf@u+1,w
  6297  00C6' 0097'              	movwf	??_floorf+1
  6298  00C7' 0824'              	movf	floorf@u+2,w
  6299  00C8' 0098'              	movwf	??_floorf+2
  6300  00C9' 0825'              	movf	floorf@u+3,w
  6301  00CA' 0099'              	movwf	??_floorf+3
  6302  00CB' 3001               	movlw	1
  6303  00CC'                    u4385:
  6304  00CC' 3596'              	lslf	??_floorf,f
  6305  00CD' 0D97'              	rlf	??_floorf+1,f
  6306  00CE' 0D98'              	rlf	??_floorf+2,f
  6307  00CF' 0D99'              	rlf	??_floorf+3,f
  6308  00D0'                    u4380:
  6309  00D0' 0B89               	decfsz	9,f
  6310  00D1' 2800'              	goto	u4385
  6311  00D2' 0819'              	movf	??_floorf+3,w
  6312  00D3' 0418'              	iorwf	??_floorf+2,w
  6313  00D4' 0417'              	iorwf	??_floorf+1,w
  6314  00D5' 0416'              	iorwf	??_floorf,w
  6315  00D6' 1903               	skipnz
  6316  00D7' 2800'              	goto	u4391
  6317  00D8' 2800'              	goto	u4390
  6318  00D9'                    u4391:
  6319  00D9' 2800'              	goto	l919
  6320  00DA'                    u4390:
  6321  00DA'                    l3244:
  6322  00DA' 30BF               	movlw	191
  6323  00DB' 00A5'              	movwf	floorf@u+3
  6324  00DC' 3080               	movlw	128
  6325  00DD' 00A4'              	movwf	floorf@u+2
  6326  00DE' 3000               	movlw	0
  6327  00DF' 00A3'              	movwf	floorf@u+1
  6328  00E0' 3000               	movlw	0
  6329  00E1' 00A2'              	movwf	floorf@u
  6330  00E2'                    l919:
  6331  00E2' 0825'              	movf	floorf@u+3,w
  6332  00E3' 0095'              	movwf	?_floorf+3
  6333  00E4' 0824'              	movf	floorf@u+2,w
  6334  00E5' 0094'              	movwf	?_floorf+2
  6335  00E6' 0823'              	movf	floorf@u+1,w
  6336  00E7' 0093'              	movwf	?_floorf+1
  6337  00E8' 0822'              	movf	floorf@u,w
  6338  00E9' 0092'              	movwf	?_floorf
  6339  00EA'                    l915:
  6340  00EA' 0008               	return
  6341  00EB'                    __end_of_floorf:
  6342                           
  6343                           	psect	text18
  6344  0000'                    __ptext18:	
  6345 ;; *************** function ___fpclassifyf *****************
  6346 ;; Defined at:
  6347 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  x               4    2[COMMON] float 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  u               4    8[BANK0 ] struct .
  6352 ;;  e               2    6[BANK0 ] int 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2    2[COMMON] int 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6362 ;;      Params:         4       0       0       0       0       0       0       0
  6363 ;;      Locals:         0       6       0       0       0       0       0       0
  6364 ;;      Temps:          0       6       0       0       0       0       0       0
  6365 ;;      Totals:         4      12       0       0       0       0       0       0
  6366 ;;Total ram usage:       16 bytes
  6367 ;; Hardware stack levels used: 1
  6368 ;; Hardware stack levels required when called: 1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_efgtoa
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376  0000'                    ___fpclassifyf:	
  6377                           ;psect for function ___fpclassifyf
  6378                           
  6379  0000'                    l4274:	
  6380                           ;incstack = 0
  6381                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6382                           
  6383  0000' 0142               	movlb	2	; select bank2
  6384  0001' 0800'              	movf	(___fpclassifyf@F465+3)^(0+256),w
  6385  0002' 0140               	movlb	0	; select bank0
  6386  0003' 008B'              	movwf	___fpclassifyf@u+3
  6387  0004' 0142               	movlb	2	; select bank2
  6388  0005' 0800'              	movf	(___fpclassifyf@F465+2)^(0+256),w
  6389  0006' 0140               	movlb	0	; select bank0
  6390  0007' 008A'              	movwf	___fpclassifyf@u+2
  6391  0008' 0142               	movlb	2	; select bank2
  6392  0009' 0800'              	movf	(___fpclassifyf@F465+1)^(0+256),w
  6393  000A' 0140               	movlb	0	; select bank0
  6394  000B' 0089'              	movwf	___fpclassifyf@u+1
  6395  000C' 0142               	movlb	2	; select bank2
  6396  000D' 0800'              	movf	___fpclassifyf@F465^(0+256),w
  6397  000E' 0140               	movlb	0	; select bank0
  6398  000F' 0088'              	movwf	___fpclassifyf@u
  6399  0010' 0805'              	movf	___fpclassifyf@x+3,w
  6400  0011' 008B'              	movwf	___fpclassifyf@u+3
  6401  0012' 0804'              	movf	___fpclassifyf@x+2,w
  6402  0013' 008A'              	movwf	___fpclassifyf@u+2
  6403  0014' 0803'              	movf	___fpclassifyf@x+1,w
  6404  0015' 0089'              	movwf	___fpclassifyf@u+1
  6405  0016' 0802'              	movf	___fpclassifyf@x,w
  6406  0017' 0088'              	movwf	___fpclassifyf@u
  6407  0018'                    l4276:
  6408  0018' 0808'              	movf	___fpclassifyf@u,w
  6409  0019' 0080'              	movwf	??___fpclassifyf
  6410  001A' 0809'              	movf	___fpclassifyf@u+1,w
  6411  001B' 0081'              	movwf	??___fpclassifyf+1
  6412  001C' 080A'              	movf	___fpclassifyf@u+2,w
  6413  001D' 0082'              	movwf	??___fpclassifyf+2
  6414  001E' 080B'              	movf	___fpclassifyf@u+3,w
  6415  001F' 0083'              	movwf	??___fpclassifyf+3
  6416  0020' 3017               	movlw	23
  6417  0021'                    u5855:
  6418  0021' 3683'              	lsrf	??___fpclassifyf+3,f
  6419  0022' 0C82'              	rrf	??___fpclassifyf+2,f
  6420  0023' 0C81'              	rrf	??___fpclassifyf+1,f
  6421  0024' 0C80'              	rrf	??___fpclassifyf,f
  6422  0025'                    u5850:
  6423  0025' 0B89               	decfsz	9,f
  6424  0026' 2800'              	goto	u5855
  6425  0027' 30FF               	movlw	255
  6426  0028' 0500'              	andwf	??___fpclassifyf,w
  6427  0029' 0086'              	movwf	___fpclassifyf@e
  6428  002A' 3000               	movlw	0
  6429  002B' 0501'              	andwf	??___fpclassifyf+1,w
  6430  002C' 0087'              	movwf	___fpclassifyf@e+1
  6431  002D'                    l4278:
  6432  002D' 0806'              	movf	___fpclassifyf@e,w
  6433  002E' 0407'              	iorwf	___fpclassifyf@e+1,w
  6434  002F' 1D03               	btfss	3,2
  6435  0030' 2800'              	goto	u5861
  6436  0031' 2800'              	goto	u5860
  6437  0032'                    u5861:
  6438  0032' 2800'              	goto	l4288
  6439  0033'                    u5860:
  6440  0033'                    l4280:
  6441  0033' 0808'              	movf	___fpclassifyf@u,w
  6442  0034' 0080'              	movwf	??___fpclassifyf
  6443  0035' 0809'              	movf	___fpclassifyf@u+1,w
  6444  0036' 0081'              	movwf	??___fpclassifyf+1
  6445  0037' 080A'              	movf	___fpclassifyf@u+2,w
  6446  0038' 0082'              	movwf	??___fpclassifyf+2
  6447  0039' 080B'              	movf	___fpclassifyf@u+3,w
  6448  003A' 0083'              	movwf	??___fpclassifyf+3
  6449  003B' 3001               	movlw	1
  6450  003C'                    u5875:
  6451  003C' 3580'              	lslf	??___fpclassifyf,f
  6452  003D' 0D81'              	rlf	??___fpclassifyf+1,f
  6453  003E' 0D82'              	rlf	??___fpclassifyf+2,f
  6454  003F' 0D83'              	rlf	??___fpclassifyf+3,f
  6455  0040'                    u5870:
  6456  0040' 0B89               	decfsz	9,f
  6457  0041' 2800'              	goto	u5875
  6458  0042' 0803'              	movf	??___fpclassifyf+3,w
  6459  0043' 0402'              	iorwf	??___fpclassifyf+2,w
  6460  0044' 0401'              	iorwf	??___fpclassifyf+1,w
  6461  0045' 0400'              	iorwf	??___fpclassifyf,w
  6462  0046' 1D03               	skipz
  6463  0047' 2800'              	goto	u5881
  6464  0048' 2800'              	goto	u5880
  6465  0049'                    u5881:
  6466  0049' 2800'              	goto	l4284
  6467  004A'                    u5880:
  6468  004A'                    l4282:
  6469  004A' 3002               	movlw	2
  6470  004B' 0082'              	movwf	?___fpclassifyf
  6471  004C' 3000               	movlw	0
  6472  004D' 0083'              	movwf	?___fpclassifyf+1
  6473  004E' 2800'              	goto	l908
  6474  004F'                    l4284:
  6475  004F' 3003               	movlw	3
  6476  0050' 0082'              	movwf	?___fpclassifyf
  6477  0051' 3000               	movlw	0
  6478  0052' 0083'              	movwf	?___fpclassifyf+1
  6479  0053' 2800'              	goto	l908
  6480  0054'                    l4288:
  6481  0054' 0A06'              	incf	___fpclassifyf@e,w
  6482  0055' 0407'              	iorwf	___fpclassifyf@e+1,w
  6483  0056' 1D03               	btfss	3,2
  6484  0057' 2800'              	goto	u5891
  6485  0058' 2800'              	goto	u5890
  6486  0059'                    u5891:
  6487  0059' 2800'              	goto	l4294
  6488  005A'                    u5890:
  6489  005A'                    l4290:
  6490  005A' 0808'              	movf	___fpclassifyf@u,w
  6491  005B' 0080'              	movwf	??___fpclassifyf
  6492  005C' 0809'              	movf	___fpclassifyf@u+1,w
  6493  005D' 0081'              	movwf	??___fpclassifyf+1
  6494  005E' 080A'              	movf	___fpclassifyf@u+2,w
  6495  005F' 0082'              	movwf	??___fpclassifyf+2
  6496  0060' 080B'              	movf	___fpclassifyf@u+3,w
  6497  0061' 0083'              	movwf	??___fpclassifyf+3
  6498  0062' 3009               	movlw	9
  6499  0063'                    u5905:
  6500  0063' 3580'              	lslf	??___fpclassifyf,f
  6501  0064' 0D81'              	rlf	??___fpclassifyf+1,f
  6502  0065' 0D82'              	rlf	??___fpclassifyf+2,f
  6503  0066' 0D83'              	rlf	??___fpclassifyf+3,f
  6504  0067'                    u5900:
  6505  0067' 0B89               	decfsz	9,f
  6506  0068' 2800'              	goto	u5905
  6507  0069' 0803'              	movf	??___fpclassifyf+3,w
  6508  006A' 0402'              	iorwf	??___fpclassifyf+2,w
  6509  006B' 0401'              	iorwf	??___fpclassifyf+1,w
  6510  006C' 0400'              	iorwf	??___fpclassifyf,w
  6511  006D' 1903               	skipnz
  6512  006E' 2800'              	goto	u5911
  6513  006F' 2800'              	goto	u5910
  6514  0070'                    u5911:
  6515  0070' 3001               	movlw	1
  6516  0071' 2800'              	goto	u5920
  6517  0072'                    u5910:
  6518  0072' 3000               	movlw	0
  6519  0073'                    u5920:
  6520  0073' 0084'              	movwf	??___fpclassifyf+4
  6521  0074' 0185'              	clrf	??___fpclassifyf+5
  6522  0075' 0804'              	movf	??___fpclassifyf+4,w
  6523  0076' 0082'              	movwf	?___fpclassifyf
  6524  0077' 0805'              	movf	??___fpclassifyf+5,w
  6525  0078' 0083'              	movwf	?___fpclassifyf+1
  6526  0079' 2800'              	goto	l908
  6527  007A'                    l4294:
  6528  007A' 3004               	movlw	4
  6529  007B' 0082'              	movwf	?___fpclassifyf
  6530  007C' 3000               	movlw	0
  6531  007D' 0083'              	movwf	?___fpclassifyf+1
  6532  007E'                    l908:
  6533  007E' 0008               	return
  6534  007F'                    __end_of___fpclassifyf:
  6535                           
  6536                           	psect	text19
  6537  0000'                    __ptext19:	
  6538 ;; *************** function ___fltol *****************
  6539 ;; Defined at:
  6540 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  f1              4    2[COMMON] int 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  exp1            1    1[BANK0 ] unsigned char 
  6545 ;;  sign1           1    0[BANK0 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  4    2[COMMON] long 
  6548 ;; Registers used:
  6549 ;;		wreg, status,2, status,0
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6555 ;;      Params:         4       0       0       0       0       0       0       0
  6556 ;;      Locals:         0       2       0       0       0       0       0       0
  6557 ;;      Temps:          4       0       0       0       0       0       0       0
  6558 ;;      Totals:         8       2       0       0       0       0       0       0
  6559 ;;Total ram usage:       10 bytes
  6560 ;; Hardware stack levels used: 1
  6561 ;; Hardware stack levels required when called: 1
  6562 ;; This function calls:
  6563 ;;		Nothing
  6564 ;; This function is called by:
  6565 ;;		_efgtoa
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569  0000'                    ___fltol:	
  6570                           ;psect for function ___fltol
  6571                           
  6572  0000'                    l4086:	
  6573                           ;incstack = 0
  6574                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6575                           
  6576  0000' 1003               	clrc
  6577  0001' 0D04'              	rlf	___fltol@f1+2,w
  6578  0002' 0D05'              	rlf	___fltol@f1+3,w
  6579  0003' 0140               	movlb	0	; select bank0
  6580  0004' 0081'              	movwf	___fltol@exp1
  6581  0005' 0801'              	movf	___fltol@exp1,w
  6582  0006' 1D03               	btfss	3,2
  6583  0007' 2800'              	goto	u5461
  6584  0008' 2800'              	goto	u5460
  6585  0009'                    u5461:
  6586  0009' 2800'              	goto	l4092
  6587  000A'                    u5460:
  6588  000A'                    l4088:
  6589  000A' 3000               	movlw	0
  6590  000B' 0085'              	movwf	?___fltol+3
  6591  000C' 3000               	movlw	0
  6592  000D' 0084'              	movwf	?___fltol+2
  6593  000E' 3000               	movlw	0
  6594  000F' 0083'              	movwf	?___fltol+1
  6595  0010' 3000               	movlw	0
  6596  0011' 0082'              	movwf	?___fltol
  6597  0012' 2800'              	goto	l493
  6598  0013'                    l4092:
  6599  0013' 0802'              	movf	___fltol@f1,w
  6600  0014' 0086'              	movwf	??___fltol
  6601  0015' 0803'              	movf	___fltol@f1+1,w
  6602  0016' 0087'              	movwf	??___fltol+1
  6603  0017' 0804'              	movf	___fltol@f1+2,w
  6604  0018' 0088'              	movwf	??___fltol+2
  6605  0019' 0805'              	movf	___fltol@f1+3,w
  6606  001A' 0089'              	movwf	??___fltol+3
  6607  001B' 301F               	movlw	31
  6608  001C'                    u5475:
  6609  001C' 3689'              	lsrf	??___fltol+3,f
  6610  001D' 0C88'              	rrf	??___fltol+2,f
  6611  001E' 0C87'              	rrf	??___fltol+1,f
  6612  001F' 0C86'              	rrf	??___fltol,f
  6613  0020'                    u5470:
  6614  0020' 0B89               	decfsz	9,f
  6615  0021' 2800'              	goto	u5475
  6616  0022' 0806'              	movf	??___fltol,w
  6617  0023' 0080'              	movwf	___fltol@sign1
  6618  0024'                    l4094:
  6619  0024' 1784'              	bsf	___fltol@f1+2,7
  6620  0025'                    l4096:
  6621  0025' 30FF               	movlw	255
  6622  0026' 0582'              	andwf	___fltol@f1,f
  6623  0027' 30FF               	movlw	255
  6624  0028' 0583'              	andwf	___fltol@f1+1,f
  6625  0029' 30FF               	movlw	255
  6626  002A' 0584'              	andwf	___fltol@f1+2,f
  6627  002B' 3000               	movlw	0
  6628  002C' 0585'              	andwf	___fltol@f1+3,f
  6629  002D'                    l4098:
  6630  002D' 3096               	movlw	150
  6631  002E' 0281'              	subwf	___fltol@exp1,f
  6632  002F'                    l4100:
  6633  002F' 1F81'              	btfss	___fltol@exp1,7
  6634  0030' 2800'              	goto	u5481
  6635  0031' 2800'              	goto	u5480
  6636  0032'                    u5481:
  6637  0032' 2800'              	goto	l4110
  6638  0033'                    u5480:
  6639  0033'                    l4102:
  6640  0033' 0801'              	movf	___fltol@exp1,w
  6641  0034' 3A80               	xorlw	128
  6642  0035' 3E97               	addlw	151
  6643  0036' 1803               	skipnc
  6644  0037' 2800'              	goto	u5491
  6645  0038' 2800'              	goto	u5490
  6646  0039'                    u5491:
  6647  0039' 2800'              	goto	l4108
  6648  003A'                    u5490:
  6649  003A' 2800'              	goto	l4088
  6650  003B'                    l4108:
  6651  003B' 3001               	movlw	1
  6652  003C'                    u5505:
  6653  003C' 3685'              	lsrf	___fltol@f1+3,f
  6654  003D' 0C84'              	rrf	___fltol@f1+2,f
  6655  003E' 0C83'              	rrf	___fltol@f1+1,f
  6656  003F' 0C82'              	rrf	___fltol@f1,f
  6657  0040' 0B89               	decfsz	9,f
  6658  0041' 2800'              	goto	u5505
  6659  0042' 3001               	movlw	1
  6660  0043' 0781'              	addwf	___fltol@exp1,f
  6661  0044' 1D03               	btfss	3,2
  6662  0045' 2800'              	goto	u5511
  6663  0046' 2800'              	goto	u5510
  6664  0047'                    u5511:
  6665  0047' 2800'              	goto	l4108
  6666  0048'                    u5510:
  6667  0048' 2800'              	goto	l4118
  6668  0049'                    l4110:
  6669  0049' 3020               	movlw	32
  6670  004A' 0201'              	subwf	___fltol@exp1,w
  6671  004B' 1C03               	skipc
  6672  004C' 2800'              	goto	u5521
  6673  004D' 2800'              	goto	u5520
  6674  004E'                    u5521:
  6675  004E' 2800'              	goto	l500
  6676  004F'                    u5520:
  6677  004F' 2800'              	goto	l4088
  6678  0050'                    l4116:
  6679  0050' 3001               	movlw	1
  6680  0051'                    u5535:
  6681  0051' 3582'              	lslf	___fltol@f1,f
  6682  0052' 0D83'              	rlf	___fltol@f1+1,f
  6683  0053' 0D84'              	rlf	___fltol@f1+2,f
  6684  0054' 0D85'              	rlf	___fltol@f1+3,f
  6685  0055' 0B89               	decfsz	9,f
  6686  0056' 2800'              	goto	u5535
  6687  0057' 3001               	movlw	1
  6688  0058' 0281'              	subwf	___fltol@exp1,f
  6689  0059'                    l500:
  6690  0059' 0801'              	movf	___fltol@exp1,w
  6691  005A' 1D03               	btfss	3,2
  6692  005B' 2800'              	goto	u5541
  6693  005C' 2800'              	goto	u5540
  6694  005D'                    u5541:
  6695  005D' 2800'              	goto	l4116
  6696  005E'                    u5540:
  6697  005E'                    l4118:
  6698  005E' 0800'              	movf	___fltol@sign1,w
  6699  005F' 1903               	btfsc	3,2
  6700  0060' 2800'              	goto	u5551
  6701  0061' 2800'              	goto	u5550
  6702  0062'                    u5551:
  6703  0062' 2800'              	goto	l503
  6704  0063'                    u5550:
  6705  0063'                    l4120:
  6706  0063' 0982'              	comf	___fltol@f1,f
  6707  0064' 0983'              	comf	___fltol@f1+1,f
  6708  0065' 0984'              	comf	___fltol@f1+2,f
  6709  0066' 0985'              	comf	___fltol@f1+3,f
  6710  0067' 0A82'              	incf	___fltol@f1,f
  6711  0068' 1903               	skipnz
  6712  0069' 0A83'              	incf	___fltol@f1+1,f
  6713  006A' 1903               	skipnz
  6714  006B' 0A84'              	incf	___fltol@f1+2,f
  6715  006C' 1903               	skipnz
  6716  006D' 0A85'              	incf	___fltol@f1+3,f
  6717  006E'                    l503:
  6718  006E'                    l493:
  6719  006E' 0008               	return
  6720  006F'                    __end_of___fltol:
  6721                           
  6722                           	psect	text20
  6723  0000'                    __ptext20:	
  6724 ;; *************** function ___flsub *****************
  6725 ;; Defined at:
  6726 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  a               4   32[BANK0 ] long 
  6729 ;;  b               4   36[BANK0 ] long 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;		None
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  4   32[BANK0 ] long 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0, pclath, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6741 ;;      Params:         0       8       0       0       0       0       0       0
  6742 ;;      Locals:         0       0       0       0       0       0       0       0
  6743 ;;      Temps:          0       0       0       0       0       0       0       0
  6744 ;;      Totals:         0       8       0       0       0       0       0       0
  6745 ;;Total ram usage:        8 bytes
  6746 ;; Hardware stack levels used: 1
  6747 ;; Hardware stack levels required when called: 2
  6748 ;; This function calls:
  6749 ;;		___fladd
  6750 ;; This function is called by:
  6751 ;;		_efgtoa
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755  0000'                    ___flsub:	
  6756                           ;psect for function ___flsub
  6757                           
  6758  0000'                    l2884:	
  6759                           ;incstack = 0
  6760                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  6761                           
  6762  0000' 3080               	movlw	128
  6763  0001' 0140               	movlb	0	; select bank0
  6764  0002' 06A3'              	xorwf	___flsub@a+3,f
  6765  0003'                    l2886:
  6766  0003' 0827'              	movf	___flsub@b+3,w
  6767  0004' 0085'              	movwf	___fladd@b+3
  6768  0005' 0826'              	movf	___flsub@b+2,w
  6769  0006' 0084'              	movwf	___fladd@b+2
  6770  0007' 0825'              	movf	___flsub@b+1,w
  6771  0008' 0083'              	movwf	___fladd@b+1
  6772  0009' 0824'              	movf	___flsub@b,w
  6773  000A' 0082'              	movwf	___fladd@b
  6774  000B' 0823'              	movf	___flsub@a+3,w
  6775  000C' 0089'              	movwf	___fladd@a+3
  6776  000D' 0822'              	movf	___flsub@a+2,w
  6777  000E' 0088'              	movwf	___fladd@a+2
  6778  000F' 0821'              	movf	___flsub@a+1,w
  6779  0010' 0087'              	movwf	___fladd@a+1
  6780  0011' 0820'              	movf	___flsub@a,w
  6781  0012' 0086'              	movwf	___fladd@a
  6782  0013' 3180' 2000' 3180'  	fcall	___fladd
  6783  0016' 0805'              	movf	?___fladd+3,w
  6784  0017' 0140               	movlb	0	; select bank0
  6785  0018' 00A3'              	movwf	?___flsub+3
  6786  0019' 0804'              	movf	?___fladd+2,w
  6787  001A' 00A2'              	movwf	?___flsub+2
  6788  001B' 0803'              	movf	?___fladd+1,w
  6789  001C' 00A1'              	movwf	?___flsub+1
  6790  001D' 0802'              	movf	?___fladd,w
  6791  001E' 00A0'              	movwf	?___flsub
  6792  001F'                    l646:
  6793  001F' 0008               	return
  6794  0020'                    __end_of___flsub:
  6795                           
  6796                           	psect	text21
  6797  0000'                    __ptext21:	
  6798 ;; *************** function ___fladd *****************
  6799 ;; Defined at:
  6800 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  b               4    2[COMMON] long 
  6803 ;;  a               4    6[COMMON] long 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  grs             1   11[BANK0 ] unsigned char 
  6806 ;;  bexp            1   10[BANK0 ] unsigned char 
  6807 ;;  aexp            1    9[BANK0 ] unsigned char 
  6808 ;;  signs           1    8[BANK0 ] unsigned char 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  4    2[COMMON] unsigned char 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6818 ;;      Params:         8       0       0       0       0       0       0       0
  6819 ;;      Locals:         0       4       0       0       0       0       0       0
  6820 ;;      Temps:          0       8       0       0       0       0       0       0
  6821 ;;      Totals:         8      12       0       0       0       0       0       0
  6822 ;;Total ram usage:       20 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; Hardware stack levels required when called: 1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		___flsub
  6829 ;;		_efgtoa
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833  0000'                    ___fladd:	
  6834                           ;psect for function ___fladd
  6835                           
  6836  0000'                    l2528:	
  6837                           ;incstack = 0
  6838                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  6839                           
  6840  0000' 0805'              	movf	___fladd@b+3,w
  6841  0001' 3980               	andlw	128
  6842  0002' 0140               	movlb	0	; select bank0
  6843  0003' 0088'              	movwf	___fladd@signs
  6844  0004'                    l2530:
  6845  0004' 3505'              	lslf	___fladd@b+3,w
  6846  0005' 008A'              	movwf	___fladd@bexp
  6847  0006'                    l2532:
  6848  0006' 1F84'              	btfss	___fladd@b+2,7
  6849  0007' 2800'              	goto	u2741
  6850  0008' 2800'              	goto	u2740
  6851  0009'                    u2741:
  6852  0009' 2800'              	goto	l2536
  6853  000A'                    u2740:
  6854  000A'                    l2534:
  6855  000A' 140A'              	bsf	___fladd@bexp,0
  6856  000B'                    l2536:
  6857  000B' 080A'              	movf	___fladd@bexp,w
  6858  000C' 1903               	btfsc	3,2
  6859  000D' 2800'              	goto	u2751
  6860  000E' 2800'              	goto	u2750
  6861  000F'                    u2751:
  6862  000F' 2800'              	goto	l2546
  6863  0010'                    u2750:
  6864  0010'                    l2538:
  6865  0010' 0A0A'              	incf	___fladd@bexp,w
  6866  0011' 1D03               	btfss	3,2
  6867  0012' 2800'              	goto	u2761
  6868  0013' 2800'              	goto	u2760
  6869  0014'                    u2761:
  6870  0014' 2800'              	goto	l2542
  6871  0015'                    u2760:
  6872  0015'                    l2540:
  6873  0015' 3000               	movlw	0
  6874  0016' 0085'              	movwf	___fladd@b+3
  6875  0017' 3000               	movlw	0
  6876  0018' 0084'              	movwf	___fladd@b+2
  6877  0019' 3000               	movlw	0
  6878  001A' 0083'              	movwf	___fladd@b+1
  6879  001B' 3000               	movlw	0
  6880  001C' 0082'              	movwf	___fladd@b
  6881  001D'                    l2542:
  6882  001D' 1784'              	bsf	___fladd@b+2,7
  6883  001E'                    l2544:
  6884  001E' 0185'              	clrf	___fladd@b+3
  6885  001F' 2800'              	goto	l2548
  6886  0020'                    l2546:
  6887  0020' 3000               	movlw	0
  6888  0021' 0085'              	movwf	___fladd@b+3
  6889  0022' 3000               	movlw	0
  6890  0023' 0084'              	movwf	___fladd@b+2
  6891  0024' 3000               	movlw	0
  6892  0025' 0083'              	movwf	___fladd@b+1
  6893  0026' 3000               	movlw	0
  6894  0027' 0082'              	movwf	___fladd@b
  6895  0028'                    l2548:
  6896  0028' 0809'              	movf	___fladd@a+3,w
  6897  0029' 3980               	andlw	128
  6898  002A' 0089'              	movwf	___fladd@aexp
  6899  002B'                    l2550:
  6900  002B' 0809'              	movf	___fladd@aexp,w
  6901  002C' 0608'              	xorwf	___fladd@signs,w
  6902  002D' 1903               	skipnz
  6903  002E' 2800'              	goto	u2771
  6904  002F' 2800'              	goto	u2770
  6905  0030'                    u2771:
  6906  0030' 2800'              	goto	l2554
  6907  0031'                    u2770:
  6908  0031'                    l2552:
  6909  0031' 1708'              	bsf	___fladd@signs,6
  6910  0032'                    l2554:
  6911  0032' 3509'              	lslf	___fladd@a+3,w
  6912  0033' 0089'              	movwf	___fladd@aexp
  6913  0034'                    l2556:
  6914  0034' 1F88'              	btfss	___fladd@a+2,7
  6915  0035' 2800'              	goto	u2781
  6916  0036' 2800'              	goto	u2780
  6917  0037'                    u2781:
  6918  0037' 2800'              	goto	l2560
  6919  0038'                    u2780:
  6920  0038'                    l2558:
  6921  0038' 1409'              	bsf	___fladd@aexp,0
  6922  0039'                    l2560:
  6923  0039' 0809'              	movf	___fladd@aexp,w
  6924  003A' 1903               	btfsc	3,2
  6925  003B' 2800'              	goto	u2791
  6926  003C' 2800'              	goto	u2790
  6927  003D'                    u2791:
  6928  003D' 2800'              	goto	l2570
  6929  003E'                    u2790:
  6930  003E'                    l2562:
  6931  003E' 0A09'              	incf	___fladd@aexp,w
  6932  003F' 1D03               	btfss	3,2
  6933  0040' 2800'              	goto	u2801
  6934  0041' 2800'              	goto	u2800
  6935  0042'                    u2801:
  6936  0042' 2800'              	goto	l2566
  6937  0043'                    u2800:
  6938  0043'                    l2564:
  6939  0043' 3000               	movlw	0
  6940  0044' 0089'              	movwf	___fladd@a+3
  6941  0045' 3000               	movlw	0
  6942  0046' 0088'              	movwf	___fladd@a+2
  6943  0047' 3000               	movlw	0
  6944  0048' 0087'              	movwf	___fladd@a+1
  6945  0049' 3000               	movlw	0
  6946  004A' 0086'              	movwf	___fladd@a
  6947  004B'                    l2566:
  6948  004B' 1788'              	bsf	___fladd@a+2,7
  6949  004C'                    l2568:
  6950  004C' 0189'              	clrf	___fladd@a+3
  6951  004D' 2800'              	goto	l600
  6952  004E'                    l2570:
  6953  004E' 3000               	movlw	0
  6954  004F' 0089'              	movwf	___fladd@a+3
  6955  0050' 3000               	movlw	0
  6956  0051' 0088'              	movwf	___fladd@a+2
  6957  0052' 3000               	movlw	0
  6958  0053' 0087'              	movwf	___fladd@a+1
  6959  0054' 3000               	movlw	0
  6960  0055' 0086'              	movwf	___fladd@a
  6961  0056'                    l600:
  6962  0056' 080A'              	movf	___fladd@bexp,w
  6963  0057' 0209'              	subwf	___fladd@aexp,w
  6964  0058' 1803               	skipnc
  6965  0059' 2800'              	goto	u2811
  6966  005A' 2800'              	goto	u2810
  6967  005B'                    u2811:
  6968  005B' 2800'              	goto	l2606
  6969  005C'                    u2810:
  6970  005C'                    l2572:
  6971  005C' 1F08'              	btfss	___fladd@signs,6
  6972  005D' 2800'              	goto	u2821
  6973  005E' 2800'              	goto	u2820
  6974  005F'                    u2821:
  6975  005F' 2800'              	goto	l2576
  6976  0060'                    u2820:
  6977  0060'                    l2574:
  6978  0060' 3080               	movlw	128
  6979  0061' 0688'              	xorwf	___fladd@signs,f
  6980  0062'                    l2576:
  6981  0062' 080A'              	movf	___fladd@bexp,w
  6982  0063' 008B'              	movwf	___fladd@grs
  6983  0064'                    l2578:
  6984  0064' 0809'              	movf	___fladd@aexp,w
  6985  0065' 008A'              	movwf	___fladd@bexp
  6986  0066'                    l2580:
  6987  0066' 080B'              	movf	___fladd@grs,w
  6988  0067' 0089'              	movwf	___fladd@aexp
  6989  0068'                    l2582:
  6990  0068' 0802'              	movf	___fladd@b,w
  6991  0069' 008B'              	movwf	___fladd@grs
  6992  006A'                    l2584:
  6993  006A' 0806'              	movf	___fladd@a,w
  6994  006B' 0082'              	movwf	___fladd@b
  6995  006C'                    l2586:
  6996  006C' 080B'              	movf	___fladd@grs,w
  6997  006D' 0086'              	movwf	___fladd@a
  6998  006E'                    l2588:
  6999  006E' 0803'              	movf	___fladd@b+1,w
  7000  006F' 008B'              	movwf	___fladd@grs
  7001  0070'                    l2590:
  7002  0070' 0807'              	movf	___fladd@a+1,w
  7003  0071' 0083'              	movwf	___fladd@b+1
  7004  0072'                    l2592:
  7005  0072' 080B'              	movf	___fladd@grs,w
  7006  0073' 0087'              	movwf	___fladd@a+1
  7007  0074'                    l2594:
  7008  0074' 0804'              	movf	___fladd@b+2,w
  7009  0075' 008B'              	movwf	___fladd@grs
  7010  0076'                    l2596:
  7011  0076' 0808'              	movf	___fladd@a+2,w
  7012  0077' 0084'              	movwf	___fladd@b+2
  7013  0078'                    l2598:
  7014  0078' 080B'              	movf	___fladd@grs,w
  7015  0079' 0088'              	movwf	___fladd@a+2
  7016  007A'                    l2600:
  7017  007A' 0805'              	movf	___fladd@b+3,w
  7018  007B' 008B'              	movwf	___fladd@grs
  7019  007C'                    l2602:
  7020  007C' 0809'              	movf	___fladd@a+3,w
  7021  007D' 0085'              	movwf	___fladd@b+3
  7022  007E'                    l2604:
  7023  007E' 080B'              	movf	___fladd@grs,w
  7024  007F' 0089'              	movwf	___fladd@a+3
  7025  0080'                    l2606:
  7026  0080' 018B'              	clrf	___fladd@grs
  7027  0081'                    l2608:
  7028  0081' 0809'              	movf	___fladd@aexp,w
  7029  0082' 0080'              	movwf	??___fladd
  7030  0083' 0181'              	clrf	??___fladd+1
  7031  0084' 0801'              	movf	??___fladd+1,w
  7032  0085' 0083'              	movwf	??___fladd+3
  7033  0086' 080A'              	movf	___fladd@bexp,w
  7034  0087' 0200'              	subwf	??___fladd,w
  7035  0088' 0082'              	movwf	??___fladd+2
  7036  0089' 1C03               	skipc
  7037  008A' 0383'              	decf	??___fladd+3,f
  7038  008B' 0803'              	movf	??___fladd+3,w
  7039  008C' 3A80               	xorlw	128
  7040  008D' 0084'              	movwf	??___fladd+4
  7041  008E' 3080               	movlw	128
  7042  008F' 0204'              	subwf	??___fladd+4,w
  7043  0090' 1D03               	skipz
  7044  0091' 2800'              	goto	u2835
  7045  0092' 301A               	movlw	26
  7046  0093' 0202'              	subwf	??___fladd+2,w
  7047  0094'                    u2835:
  7048  0094' 1C03               	skipc
  7049  0095' 2800'              	goto	u2831
  7050  0096' 2800'              	goto	u2830
  7051  0097'                    u2831:
  7052  0097' 2800'              	goto	l2624
  7053  0098'                    u2830:
  7054  0098'                    l2610:
  7055  0098' 0805'              	movf	___fladd@b+3,w
  7056  0099' 0404'              	iorwf	___fladd@b+2,w
  7057  009A' 0403'              	iorwf	___fladd@b+1,w
  7058  009B' 0402'              	iorwf	___fladd@b,w
  7059  009C' 1D03               	skipz
  7060  009D' 2800'              	goto	u2841
  7061  009E' 2800'              	goto	u2840
  7062  009F'                    u2841:
  7063  009F' 3001               	movlw	1
  7064  00A0' 2800'              	goto	u2850
  7065  00A1'                    u2840:
  7066  00A1' 3000               	movlw	0
  7067  00A2'                    u2850:
  7068  00A2' 0140               	movlb	0	; select bank0
  7069  00A3' 008B'              	movwf	___fladd@grs
  7070  00A4' 3000               	movlw	0
  7071  00A5' 0085'              	movwf	___fladd@b+3
  7072  00A6' 3000               	movlw	0
  7073  00A7' 0084'              	movwf	___fladd@b+2
  7074  00A8' 3000               	movlw	0
  7075  00A9' 0083'              	movwf	___fladd@b+1
  7076  00AA' 3000               	movlw	0
  7077  00AB' 0082'              	movwf	___fladd@b
  7078  00AC' 0809'              	movf	___fladd@aexp,w
  7079  00AD' 008A'              	movwf	___fladd@bexp
  7080  00AE' 2800'              	goto	l604
  7081  00AF'                    l606:
  7082  00AF' 1C0B'              	btfss	___fladd@grs,0
  7083  00B0' 2800'              	goto	u2861
  7084  00B1' 2800'              	goto	u2860
  7085  00B2'                    u2861:
  7086  00B2' 2800'              	goto	l2614
  7087  00B3'                    u2860:
  7088  00B3'                    l2612:
  7089  00B3' 080B'              	movf	___fladd@grs,w
  7090  00B4' 0080'              	movwf	??___fladd
  7091  00B5' 3001               	movlw	1
  7092  00B6'                    u2875:
  7093  00B6' 3680'              	lsrf	??___fladd,f
  7094  00B7' 0B89               	decfsz	9,f
  7095  00B8' 2800'              	goto	u2875
  7096  00B9' 0800'              	movf	??___fladd,w
  7097  00BA' 3801               	iorlw	1
  7098  00BB' 008B'              	movwf	___fladd@grs
  7099  00BC' 2800'              	goto	l2616
  7100  00BD'                    l2614:
  7101  00BD' 1003               	clrc
  7102  00BE' 0C8B'              	rrf	___fladd@grs,f
  7103  00BF'                    l2616:
  7104  00BF' 1C02'              	btfss	___fladd@b,0
  7105  00C0' 2800'              	goto	u2881
  7106  00C1' 2800'              	goto	u2880
  7107  00C2'                    u2881:
  7108  00C2' 2800'              	goto	l2620
  7109  00C3'                    u2880:
  7110  00C3'                    l2618:
  7111  00C3' 178B'              	bsf	___fladd@grs,7
  7112  00C4'                    l2620:
  7113  00C4' 3001               	movlw	1
  7114  00C5' 0080'              	movwf	??___fladd
  7115  00C6'                    u2895:
  7116  00C6' 3785'              	asrf	___fladd@b+3,f
  7117  00C7' 0C84'              	rrf	___fladd@b+2,f
  7118  00C8' 0C83'              	rrf	___fladd@b+1,f
  7119  00C9' 0C82'              	rrf	___fladd@b,f
  7120  00CA' 0B80'              	decfsz	??___fladd& (0+127),f
  7121  00CB' 2800'              	goto	u2895
  7122  00CC'                    l2622:
  7123  00CC' 3001               	movlw	1
  7124  00CD' 078A'              	addwf	___fladd@bexp,f
  7125  00CE'                    l2624:
  7126  00CE' 0140               	movlb	0	; select bank0
  7127  00CF' 0809'              	movf	___fladd@aexp,w
  7128  00D0' 020A'              	subwf	___fladd@bexp,w
  7129  00D1' 1C03               	skipc
  7130  00D2' 2800'              	goto	u2901
  7131  00D3' 2800'              	goto	u2900
  7132  00D4'                    u2901:
  7133  00D4' 2800'              	goto	l606
  7134  00D5'                    u2900:
  7135  00D5'                    l604:
  7136  00D5' 1B08'              	btfsc	___fladd@signs,6
  7137  00D6' 2800'              	goto	u2911
  7138  00D7' 2800'              	goto	u2910
  7139  00D8'                    u2911:
  7140  00D8' 2800'              	goto	l2650
  7141  00D9'                    u2910:
  7142  00D9'                    l2626:
  7143  00D9' 080A'              	movf	___fladd@bexp,w
  7144  00DA' 1D03               	btfss	3,2
  7145  00DB' 2800'              	goto	u2921
  7146  00DC' 2800'              	goto	u2920
  7147  00DD'                    u2921:
  7148  00DD' 2800'              	goto	l2632
  7149  00DE'                    u2920:
  7150  00DE'                    l2628:
  7151  00DE' 3000               	movlw	0
  7152  00DF' 0085'              	movwf	?___fladd+3
  7153  00E0' 3000               	movlw	0
  7154  00E1' 0084'              	movwf	?___fladd+2
  7155  00E2' 3000               	movlw	0
  7156  00E3' 0083'              	movwf	?___fladd+1
  7157  00E4' 3000               	movlw	0
  7158  00E5' 0082'              	movwf	?___fladd
  7159  00E6' 2800'              	goto	l613
  7160  00E7'                    l2632:
  7161  00E7' 0806'              	movf	___fladd@a,w
  7162  00E8' 0782'              	addwf	___fladd@b,f
  7163  00E9' 0807'              	movf	___fladd@a+1,w
  7164  00EA' 3D83'              	addwfc	___fladd@b+1,f
  7165  00EB' 0808'              	movf	___fladd@a+2,w
  7166  00EC' 3D84'              	addwfc	___fladd@b+2,f
  7167  00ED' 0809'              	movf	___fladd@a+3,w
  7168  00EE' 3D85'              	addwfc	___fladd@b+3,f
  7169  00EF'                    l2634:
  7170  00EF' 1C05'              	btfss	___fladd@b+3,0
  7171  00F0' 2800'              	goto	u2931
  7172  00F1' 2800'              	goto	u2930
  7173  00F2'                    u2931:
  7174  00F2' 2800'              	goto	l2686
  7175  00F3'                    u2930:
  7176  00F3'                    l2636:
  7177  00F3' 1C0B'              	btfss	___fladd@grs,0
  7178  00F4' 2800'              	goto	u2941
  7179  00F5' 2800'              	goto	u2940
  7180  00F6'                    u2941:
  7181  00F6' 2800'              	goto	l2640
  7182  00F7'                    u2940:
  7183  00F7'                    l2638:
  7184  00F7' 080B'              	movf	___fladd@grs,w
  7185  00F8' 0080'              	movwf	??___fladd
  7186  00F9' 3001               	movlw	1
  7187  00FA'                    u2955:
  7188  00FA' 3680'              	lsrf	??___fladd,f
  7189  00FB' 0B89               	decfsz	9,f
  7190  00FC' 2800'              	goto	u2955
  7191  00FD' 0800'              	movf	??___fladd,w
  7192  00FE' 3801               	iorlw	1
  7193  00FF' 008B'              	movwf	___fladd@grs
  7194  0100' 2800'              	goto	l2642
  7195  0101'                    l2640:
  7196  0101' 1003               	clrc
  7197  0102' 0C8B'              	rrf	___fladd@grs,f
  7198  0103'                    l2642:
  7199  0103' 1C02'              	btfss	___fladd@b,0
  7200  0104' 2800'              	goto	u2961
  7201  0105' 2800'              	goto	u2960
  7202  0106'                    u2961:
  7203  0106' 2800'              	goto	l2646
  7204  0107'                    u2960:
  7205  0107'                    l2644:
  7206  0107' 178B'              	bsf	___fladd@grs,7
  7207  0108'                    l2646:
  7208  0108' 3001               	movlw	1
  7209  0109' 0080'              	movwf	??___fladd
  7210  010A'                    u2975:
  7211  010A' 3785'              	asrf	___fladd@b+3,f
  7212  010B' 0C84'              	rrf	___fladd@b+2,f
  7213  010C' 0C83'              	rrf	___fladd@b+1,f
  7214  010D' 0C82'              	rrf	___fladd@b,f
  7215  010E' 0B80'              	decfsz	??___fladd& (0+127),f
  7216  010F' 2800'              	goto	u2975
  7217  0110'                    l2648:
  7218  0110' 3001               	movlw	1
  7219  0111' 078A'              	addwf	___fladd@bexp,f
  7220  0112' 2800'              	goto	l2686
  7221  0113'                    l2650:
  7222  0113' 0805'              	movf	___fladd@b+3,w
  7223  0114' 3A80               	xorlw	128
  7224  0115' 0080'              	movwf	??___fladd
  7225  0116' 0809'              	movf	___fladd@a+3,w
  7226  0117' 3A80               	xorlw	128
  7227  0118' 0200'              	subwf	??___fladd,w
  7228  0119' 1D03               	skipz
  7229  011A' 2800'              	goto	u2983
  7230  011B' 0808'              	movf	___fladd@a+2,w
  7231  011C' 0204'              	subwf	___fladd@b+2,w
  7232  011D' 1D03               	skipz
  7233  011E' 2800'              	goto	u2983
  7234  011F' 0807'              	movf	___fladd@a+1,w
  7235  0120' 0203'              	subwf	___fladd@b+1,w
  7236  0121' 1D03               	skipz
  7237  0122' 2800'              	goto	u2983
  7238  0123' 0806'              	movf	___fladd@a,w
  7239  0124' 0202'              	subwf	___fladd@b,w
  7240  0125'                    u2983:
  7241  0125' 1803               	skipnc
  7242  0126' 2800'              	goto	u2981
  7243  0127' 2800'              	goto	u2980
  7244  0128'                    u2981:
  7245  0128' 2800'              	goto	l2662
  7246  0129'                    u2980:
  7247  0129'                    l2652:
  7248  0129' 30FF               	movlw	255
  7249  012A' 0080'              	movwf	??___fladd
  7250  012B' 30FF               	movlw	255
  7251  012C' 0081'              	movwf	??___fladd+1
  7252  012D' 30FF               	movlw	255
  7253  012E' 0082'              	movwf	??___fladd+2
  7254  012F' 30FF               	movlw	255
  7255  0130' 0083'              	movwf	??___fladd+3
  7256  0131' 0802'              	movf	___fladd@b,w
  7257  0132' 0206'              	subwf	___fladd@a,w
  7258  0133' 0084'              	movwf	??___fladd+4
  7259  0134' 0803'              	movf	___fladd@b+1,w
  7260  0135' 3B07'              	subwfb	___fladd@a+1,w
  7261  0136' 0085'              	movwf	??___fladd+5
  7262  0137' 0804'              	movf	___fladd@b+2,w
  7263  0138' 3B08'              	subwfb	___fladd@a+2,w
  7264  0139' 0086'              	movwf	??___fladd+6
  7265  013A' 0805'              	movf	___fladd@b+3,w
  7266  013B' 3B09'              	subwfb	___fladd@a+3,w
  7267  013C' 0087'              	movwf	??___fladd+7
  7268  013D' 0804'              	movf	??___fladd+4,w
  7269  013E' 0780'              	addwf	??___fladd,f
  7270  013F' 0805'              	movf	??___fladd+5,w
  7271  0140' 3D81'              	addwfc	??___fladd+1,f
  7272  0141' 0806'              	movf	??___fladd+6,w
  7273  0142' 3D82'              	addwfc	??___fladd+2,f
  7274  0143' 0807'              	movf	??___fladd+7,w
  7275  0144' 3D83'              	addwfc	??___fladd+3,f
  7276  0145' 0803'              	movf	??___fladd+3,w
  7277  0146' 0085'              	movwf	___fladd@b+3
  7278  0147' 0802'              	movf	??___fladd+2,w
  7279  0148' 0084'              	movwf	___fladd@b+2
  7280  0149' 0801'              	movf	??___fladd+1,w
  7281  014A' 0083'              	movwf	___fladd@b+1
  7282  014B' 0800'              	movf	??___fladd,w
  7283  014C' 0082'              	movwf	___fladd@b
  7284  014D'                    l2654:
  7285  014D' 3080               	movlw	128
  7286  014E' 0688'              	xorwf	___fladd@signs,f
  7287  014F'                    l2656:
  7288  014F' 030B'              	decf	___fladd@grs,w
  7289  0150' 3AFF               	xorlw	255
  7290  0151' 008B'              	movwf	___fladd@grs
  7291  0152'                    l2658:
  7292  0152' 080B'              	movf	___fladd@grs,w
  7293  0153' 1D03               	btfss	3,2
  7294  0154' 2800'              	goto	u2991
  7295  0155' 2800'              	goto	u2990
  7296  0156'                    u2991:
  7297  0156' 2800'              	goto	l621
  7298  0157'                    u2990:
  7299  0157'                    l2660:
  7300  0157' 3001               	movlw	1
  7301  0158' 0782'              	addwf	___fladd@b,f
  7302  0159' 3000               	movlw	0
  7303  015A' 3D83'              	addwfc	___fladd@b+1,f
  7304  015B' 3D84'              	addwfc	___fladd@b+2,f
  7305  015C' 3D85'              	addwfc	___fladd@b+3,f
  7306  015D' 2800'              	goto	l621
  7307  015E'                    l2662:
  7308  015E' 0806'              	movf	___fladd@a,w
  7309  015F' 0282'              	subwf	___fladd@b,f
  7310  0160' 0807'              	movf	___fladd@a+1,w
  7311  0161' 3B83'              	subwfb	___fladd@b+1,f
  7312  0162' 0808'              	movf	___fladd@a+2,w
  7313  0163' 3B84'              	subwfb	___fladd@b+2,f
  7314  0164' 0809'              	movf	___fladd@a+3,w
  7315  0165' 3B85'              	subwfb	___fladd@b+3,f
  7316  0166'                    l621:
  7317  0166' 0805'              	movf	___fladd@b+3,w
  7318  0167' 0404'              	iorwf	___fladd@b+2,w
  7319  0168' 0403'              	iorwf	___fladd@b+1,w
  7320  0169' 0402'              	iorwf	___fladd@b,w
  7321  016A' 1D03               	skipz
  7322  016B' 2800'              	goto	u3001
  7323  016C' 2800'              	goto	u3000
  7324  016D'                    u3001:
  7325  016D' 2800'              	goto	l2684
  7326  016E'                    u3000:
  7327  016E'                    l2664:
  7328  016E' 080B'              	movf	___fladd@grs,w
  7329  016F' 1D03               	btfss	3,2
  7330  0170' 2800'              	goto	u3011
  7331  0171' 2800'              	goto	u3010
  7332  0172'                    u3011:
  7333  0172' 2800'              	goto	l2684
  7334  0173'                    u3010:
  7335  0173'                    l2666:
  7336  0173' 3000               	movlw	0
  7337  0174' 0085'              	movwf	?___fladd+3
  7338  0175' 3000               	movlw	0
  7339  0176' 0084'              	movwf	?___fladd+2
  7340  0177' 3000               	movlw	0
  7341  0178' 0083'              	movwf	?___fladd+1
  7342  0179' 3000               	movlw	0
  7343  017A' 0082'              	movwf	?___fladd
  7344  017B' 2800'              	goto	l613
  7345  017C'                    l2670:
  7346  017C' 3001               	movlw	1
  7347  017D'                    u3025:
  7348  017D' 3582'              	lslf	___fladd@b,f
  7349  017E' 0D83'              	rlf	___fladd@b+1,f
  7350  017F' 0D84'              	rlf	___fladd@b+2,f
  7351  0180' 0D85'              	rlf	___fladd@b+3,f
  7352  0181' 0B89               	decfsz	9,f
  7353  0182' 2800'              	goto	u3025
  7354  0183'                    l2672:
  7355  0183' 1F8B'              	btfss	___fladd@grs,7
  7356  0184' 2800'              	goto	u3031
  7357  0185' 2800'              	goto	u3030
  7358  0186'                    u3031:
  7359  0186' 2800'              	goto	l625
  7360  0187'                    u3030:
  7361  0187'                    l2674:
  7362  0187' 1402'              	bsf	___fladd@b,0
  7363  0188'                    l625:
  7364  0188' 1C0B'              	btfss	___fladd@grs,0
  7365  0189' 2800'              	goto	u3041
  7366  018A' 2800'              	goto	u3040
  7367  018B'                    u3041:
  7368  018B' 2800'              	goto	l2678
  7369  018C'                    u3040:
  7370  018C'                    l2676:
  7371  018C' 1403               	setc
  7372  018D' 0D0B'              	rlf	___fladd@grs,w
  7373  018E' 008B'              	movwf	___fladd@grs
  7374  018F' 2800'              	goto	l2680
  7375  0190'                    l2678:
  7376  0190' 1003               	clrc
  7377  0191' 0D8B'              	rlf	___fladd@grs,f
  7378  0192'                    l2680:
  7379  0192' 080A'              	movf	___fladd@bexp,w
  7380  0193' 1903               	btfsc	3,2
  7381  0194' 2800'              	goto	u3051
  7382  0195' 2800'              	goto	u3050
  7383  0196'                    u3051:
  7384  0196' 2800'              	goto	l2684
  7385  0197'                    u3050:
  7386  0197'                    l2682:
  7387  0197' 3001               	movlw	1
  7388  0198' 028A'              	subwf	___fladd@bexp,f
  7389  0199'                    l2684:
  7390  0199' 1F84'              	btfss	___fladd@b+2,7
  7391  019A' 2800'              	goto	u3061
  7392  019B' 2800'              	goto	u3060
  7393  019C'                    u3061:
  7394  019C' 2800'              	goto	l2670
  7395  019D'                    u3060:
  7396  019D'                    l2686:
  7397  019D' 0189'              	clrf	___fladd@aexp
  7398  019E'                    l2688:
  7399  019E' 1F8B'              	btfss	___fladd@grs,7
  7400  019F' 2800'              	goto	u3071
  7401  01A0' 2800'              	goto	u3070
  7402  01A1'                    u3071:
  7403  01A1' 2800'              	goto	l2696
  7404  01A2'                    u3070:
  7405  01A2'                    l2690:
  7406  01A2' 080B'              	movf	___fladd@grs,w
  7407  01A3' 397F               	andlw	127
  7408  01A4' 1903               	btfsc	3,2
  7409  01A5' 2800'              	goto	u3081
  7410  01A6' 2800'              	goto	u3080
  7411  01A7'                    u3081:
  7412  01A7' 2800'              	goto	l631
  7413  01A8'                    u3080:
  7414  01A8'                    l2692:
  7415  01A8' 3001               	movlw	1
  7416  01A9' 0089'              	movwf	___fladd@aexp
  7417  01AA' 2800'              	goto	l2696
  7418  01AB'                    l631:
  7419  01AB' 1C02'              	btfss	___fladd@b,0
  7420  01AC' 2800'              	goto	u3091
  7421  01AD' 2800'              	goto	u3090
  7422  01AE'                    u3091:
  7423  01AE' 2800'              	goto	l2696
  7424  01AF'                    u3090:
  7425  01AF' 2800'              	goto	l2692
  7426  01B0'                    l2696:
  7427  01B0' 0809'              	movf	___fladd@aexp,w
  7428  01B1' 1903               	btfsc	3,2
  7429  01B2' 2800'              	goto	u3101
  7430  01B3' 2800'              	goto	u3100
  7431  01B4'                    u3101:
  7432  01B4' 2800'              	goto	l634
  7433  01B5'                    u3100:
  7434  01B5'                    l2698:
  7435  01B5' 3001               	movlw	1
  7436  01B6' 0782'              	addwf	___fladd@b,f
  7437  01B7' 3000               	movlw	0
  7438  01B8' 3D83'              	addwfc	___fladd@b+1,f
  7439  01B9' 3D84'              	addwfc	___fladd@b+2,f
  7440  01BA' 3D85'              	addwfc	___fladd@b+3,f
  7441  01BB'                    l2700:
  7442  01BB' 1C05'              	btfss	___fladd@b+3,0
  7443  01BC' 2800'              	goto	u3111
  7444  01BD' 2800'              	goto	u3110
  7445  01BE'                    u3111:
  7446  01BE' 2800'              	goto	l634
  7447  01BF'                    u3110:
  7448  01BF'                    l2702:
  7449  01BF' 0802'              	movf	___fladd@b,w
  7450  01C0' 0080'              	movwf	??___fladd
  7451  01C1' 0803'              	movf	___fladd@b+1,w
  7452  01C2' 0081'              	movwf	??___fladd+1
  7453  01C3' 0804'              	movf	___fladd@b+2,w
  7454  01C4' 0082'              	movwf	??___fladd+2
  7455  01C5' 0805'              	movf	___fladd@b+3,w
  7456  01C6' 0083'              	movwf	??___fladd+3
  7457  01C7' 3001               	movlw	1
  7458  01C8' 0084'              	movwf	??___fladd+4
  7459  01C9'                    u3125:
  7460  01C9' 3783'              	asrf	??___fladd+3,f
  7461  01CA' 0C82'              	rrf	??___fladd+2,f
  7462  01CB' 0C81'              	rrf	??___fladd+1,f
  7463  01CC' 0C80'              	rrf	??___fladd,f
  7464  01CD'                    u3120:
  7465  01CD' 0B84'              	decfsz	??___fladd+4,f
  7466  01CE' 2800'              	goto	u3125
  7467  01CF' 0803'              	movf	??___fladd+3,w
  7468  01D0' 0085'              	movwf	___fladd@b+3
  7469  01D1' 0802'              	movf	??___fladd+2,w
  7470  01D2' 0084'              	movwf	___fladd@b+2
  7471  01D3' 0801'              	movf	??___fladd+1,w
  7472  01D4' 0083'              	movwf	___fladd@b+1
  7473  01D5' 0800'              	movf	??___fladd,w
  7474  01D6' 0082'              	movwf	___fladd@b
  7475  01D7' 0A0A'              	incf	___fladd@bexp,w
  7476  01D8' 1903               	btfsc	3,2
  7477  01D9' 2800'              	goto	u3131
  7478  01DA' 2800'              	goto	u3130
  7479  01DB'                    u3131:
  7480  01DB' 2800'              	goto	l634
  7481  01DC'                    u3130:
  7482  01DC'                    l2704:
  7483  01DC' 3001               	movlw	1
  7484  01DD' 078A'              	addwf	___fladd@bexp,f
  7485  01DE'                    l634:
  7486  01DE' 0A0A'              	incf	___fladd@bexp,w
  7487  01DF' 1903               	btfsc	3,2
  7488  01E0' 2800'              	goto	u3141
  7489  01E1' 2800'              	goto	u3140
  7490  01E2'                    u3141:
  7491  01E2' 2800'              	goto	l2708
  7492  01E3'                    u3140:
  7493  01E3'                    l2706:
  7494  01E3' 080A'              	movf	___fladd@bexp,w
  7495  01E4' 1D03               	btfss	3,2
  7496  01E5' 2800'              	goto	u3151
  7497  01E6' 2800'              	goto	u3150
  7498  01E7'                    u3151:
  7499  01E7' 2800'              	goto	l2714
  7500  01E8'                    u3150:
  7501  01E8'                    l2708:
  7502  01E8' 3000               	movlw	0
  7503  01E9' 0085'              	movwf	___fladd@b+3
  7504  01EA' 3000               	movlw	0
  7505  01EB' 0084'              	movwf	___fladd@b+2
  7506  01EC' 3000               	movlw	0
  7507  01ED' 0083'              	movwf	___fladd@b+1
  7508  01EE' 3000               	movlw	0
  7509  01EF' 0082'              	movwf	___fladd@b
  7510  01F0'                    l2710:
  7511  01F0' 080A'              	movf	___fladd@bexp,w
  7512  01F1' 1D03               	btfss	3,2
  7513  01F2' 2800'              	goto	u3161
  7514  01F3' 2800'              	goto	u3160
  7515  01F4'                    u3161:
  7516  01F4' 2800'              	goto	l2714
  7517  01F5'                    u3160:
  7518  01F5'                    l2712:
  7519  01F5' 0188'              	clrf	___fladd@signs
  7520  01F6'                    l2714:
  7521  01F6' 1C0A'              	btfss	___fladd@bexp,0
  7522  01F7' 2800'              	goto	u3171
  7523  01F8' 2800'              	goto	u3170
  7524  01F9'                    u3171:
  7525  01F9' 2800'              	goto	l2718
  7526  01FA'                    u3170:
  7527  01FA'                    l2716:
  7528  01FA' 1784'              	bsf	___fladd@b+2,7
  7529  01FB' 2800'              	goto	l642
  7530  01FC'                    l2718:
  7531  01FC' 307F               	movlw	127
  7532  01FD' 0584'              	andwf	___fladd@b+2,f
  7533  01FE'                    l642:
  7534  01FE' 080A'              	movf	___fladd@bexp,w
  7535  01FF' 0080'              	movwf	??___fladd
  7536  0200' 3001               	movlw	1
  7537  0201'                    u3185:
  7538  0201' 3680'              	lsrf	??___fladd,f
  7539  0202' 0B89               	decfsz	9,f
  7540  0203' 2800'              	goto	u3185
  7541  0204' 0800'              	movf	??___fladd,w
  7542  0205' 0085'              	movwf	___fladd@b+3
  7543  0206'                    l2720:
  7544  0206' 1F88'              	btfss	___fladd@signs,7
  7545  0207' 2800'              	goto	u3191
  7546  0208' 2800'              	goto	u3190
  7547  0209'                    u3191:
  7548  0209' 2800'              	goto	l643
  7549  020A'                    u3190:
  7550  020A'                    l2722:
  7551  020A' 1785'              	bsf	___fladd@b+3,7
  7552  020B'                    l643:
  7553  020B'                    l613:
  7554  020B' 0008               	return
  7555  020C'                    __end_of___fladd:
  7556                           
  7557                           	psect	text22
  7558  0000'                    __ptext22:	
  7559 ;; *************** function ___flneg *****************
  7560 ;; Defined at:
  7561 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  f1              4    2[COMMON] unsigned char 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  4    2[COMMON] unsigned char 
  7568 ;; Registers used:
  7569 ;;		wreg
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7575 ;;      Params:         4       0       0       0       0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0
  7577 ;;      Temps:          0       0       0       0       0       0       0       0
  7578 ;;      Totals:         4       0       0       0       0       0       0       0
  7579 ;;Total ram usage:        4 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 1
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_efgtoa
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589  0000'                    ___flneg:	
  7590                           ;psect for function ___flneg
  7591                           
  7592  0000'                    l2792:	
  7593                           ;incstack = 0
  7594                           ; Regs used in ___flneg: [wreg]
  7595                           
  7596  0000' 0805'              	movf	___flneg@f1+3,w
  7597  0001' 0404'              	iorwf	___flneg@f1+2,w
  7598  0002' 0403'              	iorwf	___flneg@f1+1,w
  7599  0003' 0402'              	iorwf	___flneg@f1,w
  7600  0004' 1903               	skipnz
  7601  0005' 2800'              	goto	u3361
  7602  0006' 2800'              	goto	u3360
  7603  0007'                    u3361:
  7604  0007' 2800'              	goto	l2796
  7605  0008'                    u3360:
  7606  0008'                    l2794:
  7607  0008' 3080               	movlw	128
  7608  0009' 0685'              	xorwf	___flneg@f1+3,f
  7609  000A'                    l2796:
  7610  000A'                    l489:
  7611  000A' 0008               	return
  7612  000B'                    __end_of___flneg:
  7613                           
  7614                           	psect	text23
  7615  0000'                    __ptext23:	
  7616 ;; *************** function ___flmul *****************
  7617 ;; Defined at:
  7618 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;  b               4    6[BANK0 ] unsigned char 
  7621 ;;  a               4   10[BANK0 ] unsigned char 
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  prod            4   26[BANK0 ] struct .
  7624 ;;  grs             4   21[BANK0 ] unsigned long 
  7625 ;;  temp            2   30[BANK0 ] struct .
  7626 ;;  bexp            1   25[BANK0 ] unsigned char 
  7627 ;;  aexp            1   20[BANK0 ] unsigned char 
  7628 ;;  sign            1   19[BANK0 ] unsigned char 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  4    6[BANK0 ] unsigned char 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0, pclath, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7638 ;;      Params:         0       8       0       0       0       0       0       0
  7639 ;;      Locals:         0      13       0       0       0       0       0       0
  7640 ;;      Temps:          0       5       0       0       0       0       0       0
  7641 ;;      Totals:         0      26       0       0       0       0       0       0
  7642 ;;Total ram usage:       26 bytes
  7643 ;; Hardware stack levels used: 1
  7644 ;; Hardware stack levels required when called: 2
  7645 ;; This function calls:
  7646 ;;		__Umul8_16
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;;		_efgtoa
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653  0000'                    ___flmul:	
  7654                           ;psect for function ___flmul
  7655                           
  7656  0000'                    l4122:	
  7657                           ;incstack = 0
  7658                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  7659                           
  7660  0000' 0140               	movlb	0	; select bank0
  7661  0001' 0809'              	movf	___flmul@b+3,w
  7662  0002' 3980               	andlw	128
  7663  0003' 0093'              	movwf	___flmul@sign
  7664  0004'                    l4124:
  7665  0004' 3509'              	lslf	___flmul@b+3,w
  7666  0005' 0099'              	movwf	___flmul@bexp
  7667  0006'                    l4126:
  7668  0006' 1F88'              	btfss	___flmul@b+2,7
  7669  0007' 2800'              	goto	u5561
  7670  0008' 2800'              	goto	u5560
  7671  0009'                    u5561:
  7672  0009' 2800'              	goto	l4130
  7673  000A'                    u5560:
  7674  000A'                    l4128:
  7675  000A' 1419'              	bsf	___flmul@bexp,0
  7676  000B'                    l4130:
  7677  000B' 0819'              	movf	___flmul@bexp,w
  7678  000C' 1903               	btfsc	3,2
  7679  000D' 2800'              	goto	u5571
  7680  000E' 2800'              	goto	u5570
  7681  000F'                    u5571:
  7682  000F' 2800'              	goto	l4138
  7683  0010'                    u5570:
  7684  0010'                    l4132:
  7685  0010' 0A19'              	incf	___flmul@bexp,w
  7686  0011' 1D03               	btfss	3,2
  7687  0012' 2800'              	goto	u5581
  7688  0013' 2800'              	goto	u5580
  7689  0014'                    u5581:
  7690  0014' 2800'              	goto	l4136
  7691  0015'                    u5580:
  7692  0015'                    l4134:
  7693  0015' 3000               	movlw	0
  7694  0016' 0089'              	movwf	___flmul@b+3
  7695  0017' 3000               	movlw	0
  7696  0018' 0088'              	movwf	___flmul@b+2
  7697  0019' 3000               	movlw	0
  7698  001A' 0087'              	movwf	___flmul@b+1
  7699  001B' 3000               	movlw	0
  7700  001C' 0086'              	movwf	___flmul@b
  7701  001D'                    l4136:
  7702  001D' 1788'              	bsf	___flmul@b+2,7
  7703  001E' 2800'              	goto	l4140
  7704  001F'                    l4138:
  7705  001F' 3000               	movlw	0
  7706  0020' 0089'              	movwf	___flmul@b+3
  7707  0021' 3000               	movlw	0
  7708  0022' 0088'              	movwf	___flmul@b+2
  7709  0023' 3000               	movlw	0
  7710  0024' 0087'              	movwf	___flmul@b+1
  7711  0025' 3000               	movlw	0
  7712  0026' 0086'              	movwf	___flmul@b
  7713  0027'                    l4140:
  7714  0027' 080D'              	movf	___flmul@a+3,w
  7715  0028' 3980               	andlw	128
  7716  0029' 0693'              	xorwf	___flmul@sign,f
  7717  002A'                    l4142:
  7718  002A' 350D'              	lslf	___flmul@a+3,w
  7719  002B' 0094'              	movwf	___flmul@aexp
  7720  002C'                    l4144:
  7721  002C' 1F8C'              	btfss	___flmul@a+2,7
  7722  002D' 2800'              	goto	u5591
  7723  002E' 2800'              	goto	u5590
  7724  002F'                    u5591:
  7725  002F' 2800'              	goto	l4148
  7726  0030'                    u5590:
  7727  0030'                    l4146:
  7728  0030' 1414'              	bsf	___flmul@aexp,0
  7729  0031'                    l4148:
  7730  0031' 0814'              	movf	___flmul@aexp,w
  7731  0032' 1903               	btfsc	3,2
  7732  0033' 2800'              	goto	u5601
  7733  0034' 2800'              	goto	u5600
  7734  0035'                    u5601:
  7735  0035' 2800'              	goto	l4156
  7736  0036'                    u5600:
  7737  0036'                    l4150:
  7738  0036' 0A14'              	incf	___flmul@aexp,w
  7739  0037' 1D03               	btfss	3,2
  7740  0038' 2800'              	goto	u5611
  7741  0039' 2800'              	goto	u5610
  7742  003A'                    u5611:
  7743  003A' 2800'              	goto	l4154
  7744  003B'                    u5610:
  7745  003B'                    l4152:
  7746  003B' 3000               	movlw	0
  7747  003C' 008D'              	movwf	___flmul@a+3
  7748  003D' 3000               	movlw	0
  7749  003E' 008C'              	movwf	___flmul@a+2
  7750  003F' 3000               	movlw	0
  7751  0040' 008B'              	movwf	___flmul@a+1
  7752  0041' 3000               	movlw	0
  7753  0042' 008A'              	movwf	___flmul@a
  7754  0043'                    l4154:
  7755  0043' 178C'              	bsf	___flmul@a+2,7
  7756  0044' 2800'              	goto	l4158
  7757  0045'                    l4156:
  7758  0045' 3000               	movlw	0
  7759  0046' 008D'              	movwf	___flmul@a+3
  7760  0047' 3000               	movlw	0
  7761  0048' 008C'              	movwf	___flmul@a+2
  7762  0049' 3000               	movlw	0
  7763  004A' 008B'              	movwf	___flmul@a+1
  7764  004B' 3000               	movlw	0
  7765  004C' 008A'              	movwf	___flmul@a
  7766  004D'                    l4158:
  7767  004D' 0814'              	movf	___flmul@aexp,w
  7768  004E' 1903               	btfsc	3,2
  7769  004F' 2800'              	goto	u5621
  7770  0050' 2800'              	goto	u5620
  7771  0051'                    u5621:
  7772  0051' 2800'              	goto	l4162
  7773  0052'                    u5620:
  7774  0052'                    l4160:
  7775  0052' 0819'              	movf	___flmul@bexp,w
  7776  0053' 1D03               	btfss	3,2
  7777  0054' 2800'              	goto	u5631
  7778  0055' 2800'              	goto	u5630
  7779  0056'                    u5631:
  7780  0056' 2800'              	goto	l4166
  7781  0057'                    u5630:
  7782  0057'                    l4162:
  7783  0057' 3000               	movlw	0
  7784  0058' 0089'              	movwf	?___flmul+3
  7785  0059' 3000               	movlw	0
  7786  005A' 0088'              	movwf	?___flmul+2
  7787  005B' 3000               	movlw	0
  7788  005C' 0087'              	movwf	?___flmul+1
  7789  005D' 3000               	movlw	0
  7790  005E' 0086'              	movwf	?___flmul
  7791  005F' 2800'              	goto	l696
  7792  0060'                    l4166:
  7793  0060' 0806'              	movf	___flmul@b,w
  7794  0061' 0082'              	movwf	__Umul8_16@multiplicand
  7795  0062' 080C'              	movf	___flmul@a+2,w
  7796  0063' 3180' 2000' 3180'  	fcall	__Umul8_16
  7797  0066' 0803'              	movf	?__Umul8_16+1,w
  7798  0067' 0140               	movlb	0	; select bank0
  7799  0068' 009F'              	movwf	___flmul@temp+1
  7800  0069' 0802'              	movf	?__Umul8_16,w
  7801  006A' 009E'              	movwf	___flmul@temp
  7802  006B'                    l4168:
  7803  006B' 081E'              	movf	___flmul@temp,w
  7804  006C' 008E'              	movwf	??___flmul
  7805  006D' 018F'              	clrf	??___flmul+1
  7806  006E' 0190'              	clrf	??___flmul+2
  7807  006F' 0191'              	clrf	??___flmul+3
  7808  0070' 0811'              	movf	??___flmul+3,w
  7809  0071' 0098'              	movwf	___flmul@grs+3
  7810  0072' 0810'              	movf	??___flmul+2,w
  7811  0073' 0097'              	movwf	___flmul@grs+2
  7812  0074' 080F'              	movf	??___flmul+1,w
  7813  0075' 0096'              	movwf	___flmul@grs+1
  7814  0076' 080E'              	movf	??___flmul,w
  7815  0077' 0095'              	movwf	___flmul@grs
  7816  0078'                    l4170:
  7817  0078' 081F'              	movf	___flmul@temp+1,w
  7818  0079' 008E'              	movwf	??___flmul
  7819  007A' 018F'              	clrf	??___flmul+1
  7820  007B' 0190'              	clrf	??___flmul+2
  7821  007C' 0191'              	clrf	??___flmul+3
  7822  007D' 0811'              	movf	??___flmul+3,w
  7823  007E' 009D'              	movwf	___flmul@prod+3
  7824  007F' 0810'              	movf	??___flmul+2,w
  7825  0080' 009C'              	movwf	___flmul@prod+2
  7826  0081' 080F'              	movf	??___flmul+1,w
  7827  0082' 009B'              	movwf	___flmul@prod+1
  7828  0083' 080E'              	movf	??___flmul,w
  7829  0084' 009A'              	movwf	___flmul@prod
  7830  0085' 0807'              	movf	___flmul@b+1,w
  7831  0086' 0082'              	movwf	__Umul8_16@multiplicand
  7832  0087' 080B'              	movf	___flmul@a+1,w
  7833  0088' 3180' 2000' 3180'  	fcall	__Umul8_16
  7834  008B' 0803'              	movf	?__Umul8_16+1,w
  7835  008C' 0140               	movlb	0	; select bank0
  7836  008D' 009F'              	movwf	___flmul@temp+1
  7837  008E' 0802'              	movf	?__Umul8_16,w
  7838  008F' 009E'              	movwf	___flmul@temp
  7839  0090'                    l4172:
  7840  0090' 081E'              	movf	___flmul@temp,w
  7841  0091' 008E'              	movwf	??___flmul
  7842  0092' 018F'              	clrf	??___flmul+1
  7843  0093' 0190'              	clrf	??___flmul+2
  7844  0094' 0191'              	clrf	??___flmul+3
  7845  0095' 080E'              	movf	??___flmul,w
  7846  0096' 0795'              	addwf	___flmul@grs,f
  7847  0097' 080F'              	movf	??___flmul+1,w
  7848  0098' 3D96'              	addwfc	___flmul@grs+1,f
  7849  0099' 0810'              	movf	??___flmul+2,w
  7850  009A' 3D97'              	addwfc	___flmul@grs+2,f
  7851  009B' 0811'              	movf	??___flmul+3,w
  7852  009C' 3D98'              	addwfc	___flmul@grs+3,f
  7853  009D'                    l4174:
  7854  009D' 081F'              	movf	___flmul@temp+1,w
  7855  009E' 008E'              	movwf	??___flmul
  7856  009F' 018F'              	clrf	??___flmul+1
  7857  00A0' 0190'              	clrf	??___flmul+2
  7858  00A1' 0191'              	clrf	??___flmul+3
  7859  00A2' 080E'              	movf	??___flmul,w
  7860  00A3' 079A'              	addwf	___flmul@prod,f
  7861  00A4' 080F'              	movf	??___flmul+1,w
  7862  00A5' 3D9B'              	addwfc	___flmul@prod+1,f
  7863  00A6' 0810'              	movf	??___flmul+2,w
  7864  00A7' 3D9C'              	addwfc	___flmul@prod+2,f
  7865  00A8' 0811'              	movf	??___flmul+3,w
  7866  00A9' 3D9D'              	addwfc	___flmul@prod+3,f
  7867  00AA' 0808'              	movf	___flmul@b+2,w
  7868  00AB' 0082'              	movwf	__Umul8_16@multiplicand
  7869  00AC' 080A'              	movf	___flmul@a,w
  7870  00AD' 3180' 2000' 3180'  	fcall	__Umul8_16
  7871  00B0' 0803'              	movf	?__Umul8_16+1,w
  7872  00B1' 0140               	movlb	0	; select bank0
  7873  00B2' 009F'              	movwf	___flmul@temp+1
  7874  00B3' 0802'              	movf	?__Umul8_16,w
  7875  00B4' 009E'              	movwf	___flmul@temp
  7876  00B5'                    l4176:
  7877  00B5' 081E'              	movf	___flmul@temp,w
  7878  00B6' 008E'              	movwf	??___flmul
  7879  00B7' 018F'              	clrf	??___flmul+1
  7880  00B8' 0190'              	clrf	??___flmul+2
  7881  00B9' 0191'              	clrf	??___flmul+3
  7882  00BA' 080E'              	movf	??___flmul,w
  7883  00BB' 0795'              	addwf	___flmul@grs,f
  7884  00BC' 080F'              	movf	??___flmul+1,w
  7885  00BD' 3D96'              	addwfc	___flmul@grs+1,f
  7886  00BE' 0810'              	movf	??___flmul+2,w
  7887  00BF' 3D97'              	addwfc	___flmul@grs+2,f
  7888  00C0' 0811'              	movf	??___flmul+3,w
  7889  00C1' 3D98'              	addwfc	___flmul@grs+3,f
  7890  00C2'                    l4178:
  7891  00C2' 081F'              	movf	___flmul@temp+1,w
  7892  00C3' 008E'              	movwf	??___flmul
  7893  00C4' 018F'              	clrf	??___flmul+1
  7894  00C5' 0190'              	clrf	??___flmul+2
  7895  00C6' 0191'              	clrf	??___flmul+3
  7896  00C7' 080E'              	movf	??___flmul,w
  7897  00C8' 079A'              	addwf	___flmul@prod,f
  7898  00C9' 080F'              	movf	??___flmul+1,w
  7899  00CA' 3D9B'              	addwfc	___flmul@prod+1,f
  7900  00CB' 0810'              	movf	??___flmul+2,w
  7901  00CC' 3D9C'              	addwfc	___flmul@prod+2,f
  7902  00CD' 0811'              	movf	??___flmul+3,w
  7903  00CE' 3D9D'              	addwfc	___flmul@prod+3,f
  7904  00CF'                    l4180:
  7905  00CF' 3008               	movlw	8
  7906  00D0'                    u5645:
  7907  00D0' 3595'              	lslf	___flmul@grs,f
  7908  00D1' 0D96'              	rlf	___flmul@grs+1,f
  7909  00D2' 0D97'              	rlf	___flmul@grs+2,f
  7910  00D3' 0D98'              	rlf	___flmul@grs+3,f
  7911  00D4' 0B89               	decfsz	9,f
  7912  00D5' 2800'              	goto	u5645
  7913  00D6'                    l4182:
  7914  00D6' 0807'              	movf	___flmul@b+1,w
  7915  00D7' 0082'              	movwf	__Umul8_16@multiplicand
  7916  00D8' 080A'              	movf	___flmul@a,w
  7917  00D9' 3180' 2000' 3180'  	fcall	__Umul8_16
  7918  00DC' 0803'              	movf	?__Umul8_16+1,w
  7919  00DD' 0140               	movlb	0	; select bank0
  7920  00DE' 009F'              	movwf	___flmul@temp+1
  7921  00DF' 0802'              	movf	?__Umul8_16,w
  7922  00E0' 009E'              	movwf	___flmul@temp
  7923  00E1'                    l4184:
  7924  00E1' 081E'              	movf	___flmul@temp,w
  7925  00E2' 0795'              	addwf	___flmul@grs,f
  7926  00E3' 081F'              	movf	___flmul@temp+1,w
  7927  00E4' 3D96'              	addwfc	___flmul@grs+1,f
  7928  00E5' 3000               	movlw	0
  7929  00E6' 3D97'              	addwfc	___flmul@grs+2,f
  7930  00E7' 3D98'              	addwfc	___flmul@grs+3,f
  7931  00E8'                    l4186:
  7932  00E8' 0806'              	movf	___flmul@b,w
  7933  00E9' 0082'              	movwf	__Umul8_16@multiplicand
  7934  00EA' 080B'              	movf	___flmul@a+1,w
  7935  00EB' 3180' 2000' 3180'  	fcall	__Umul8_16
  7936  00EE' 0803'              	movf	?__Umul8_16+1,w
  7937  00EF' 0140               	movlb	0	; select bank0
  7938  00F0' 009F'              	movwf	___flmul@temp+1
  7939  00F1' 0802'              	movf	?__Umul8_16,w
  7940  00F2' 009E'              	movwf	___flmul@temp
  7941  00F3'                    l4188:
  7942  00F3' 081E'              	movf	___flmul@temp,w
  7943  00F4' 0795'              	addwf	___flmul@grs,f
  7944  00F5' 081F'              	movf	___flmul@temp+1,w
  7945  00F6' 3D96'              	addwfc	___flmul@grs+1,f
  7946  00F7' 3000               	movlw	0
  7947  00F8' 3D97'              	addwfc	___flmul@grs+2,f
  7948  00F9' 3D98'              	addwfc	___flmul@grs+3,f
  7949  00FA'                    l4190:
  7950  00FA' 3008               	movlw	8
  7951  00FB'                    u5655:
  7952  00FB' 3595'              	lslf	___flmul@grs,f
  7953  00FC' 0D96'              	rlf	___flmul@grs+1,f
  7954  00FD' 0D97'              	rlf	___flmul@grs+2,f
  7955  00FE' 0D98'              	rlf	___flmul@grs+3,f
  7956  00FF' 0B89               	decfsz	9,f
  7957  0100' 2800'              	goto	u5655
  7958  0101' 0806'              	movf	___flmul@b,w
  7959  0102' 0082'              	movwf	__Umul8_16@multiplicand
  7960  0103' 080A'              	movf	___flmul@a,w
  7961  0104' 3180' 2000' 3180'  	fcall	__Umul8_16
  7962  0107' 0803'              	movf	?__Umul8_16+1,w
  7963  0108' 0140               	movlb	0	; select bank0
  7964  0109' 009F'              	movwf	___flmul@temp+1
  7965  010A' 0802'              	movf	?__Umul8_16,w
  7966  010B' 009E'              	movwf	___flmul@temp
  7967  010C'                    l4192:
  7968  010C' 081E'              	movf	___flmul@temp,w
  7969  010D' 0795'              	addwf	___flmul@grs,f
  7970  010E' 081F'              	movf	___flmul@temp+1,w
  7971  010F' 3D96'              	addwfc	___flmul@grs+1,f
  7972  0110' 3000               	movlw	0
  7973  0111' 3D97'              	addwfc	___flmul@grs+2,f
  7974  0112' 3D98'              	addwfc	___flmul@grs+3,f
  7975  0113'                    l4194:
  7976  0113' 0807'              	movf	___flmul@b+1,w
  7977  0114' 0082'              	movwf	__Umul8_16@multiplicand
  7978  0115' 080C'              	movf	___flmul@a+2,w
  7979  0116' 3180' 2000' 3180'  	fcall	__Umul8_16
  7980  0119' 0803'              	movf	?__Umul8_16+1,w
  7981  011A' 0140               	movlb	0	; select bank0
  7982  011B' 009F'              	movwf	___flmul@temp+1
  7983  011C' 0802'              	movf	?__Umul8_16,w
  7984  011D' 009E'              	movwf	___flmul@temp
  7985  011E' 081E'              	movf	___flmul@temp,w
  7986  011F' 079A'              	addwf	___flmul@prod,f
  7987  0120' 081F'              	movf	___flmul@temp+1,w
  7988  0121' 3D9B'              	addwfc	___flmul@prod+1,f
  7989  0122' 3000               	movlw	0
  7990  0123' 3D9C'              	addwfc	___flmul@prod+2,f
  7991  0124' 3D9D'              	addwfc	___flmul@prod+3,f
  7992  0125'                    l4196:
  7993  0125' 0808'              	movf	___flmul@b+2,w
  7994  0126' 0082'              	movwf	__Umul8_16@multiplicand
  7995  0127' 080B'              	movf	___flmul@a+1,w
  7996  0128' 3180' 2000' 3180'  	fcall	__Umul8_16
  7997  012B' 0803'              	movf	?__Umul8_16+1,w
  7998  012C' 0140               	movlb	0	; select bank0
  7999  012D' 009F'              	movwf	___flmul@temp+1
  8000  012E' 0802'              	movf	?__Umul8_16,w
  8001  012F' 009E'              	movwf	___flmul@temp
  8002  0130'                    l4198:
  8003  0130' 081E'              	movf	___flmul@temp,w
  8004  0131' 079A'              	addwf	___flmul@prod,f
  8005  0132' 081F'              	movf	___flmul@temp+1,w
  8006  0133' 3D9B'              	addwfc	___flmul@prod+1,f
  8007  0134' 3000               	movlw	0
  8008  0135' 3D9C'              	addwfc	___flmul@prod+2,f
  8009  0136' 3D9D'              	addwfc	___flmul@prod+3,f
  8010  0137' 0808'              	movf	___flmul@b+2,w
  8011  0138' 0082'              	movwf	__Umul8_16@multiplicand
  8012  0139' 080C'              	movf	___flmul@a+2,w
  8013  013A' 3180' 2000' 3180'  	fcall	__Umul8_16
  8014  013D' 0803'              	movf	?__Umul8_16+1,w
  8015  013E' 0140               	movlb	0	; select bank0
  8016  013F' 009F'              	movwf	___flmul@temp+1
  8017  0140' 0802'              	movf	?__Umul8_16,w
  8018  0141' 009E'              	movwf	___flmul@temp
  8019  0142'                    l4200:
  8020  0142' 081E'              	movf	___flmul@temp,w
  8021  0143' 008E'              	movwf	??___flmul
  8022  0144' 081F'              	movf	___flmul@temp+1,w
  8023  0145' 008F'              	movwf	??___flmul+1
  8024  0146' 0190'              	clrf	??___flmul+2
  8025  0147' 0191'              	clrf	??___flmul+3
  8026  0148' 3008               	movlw	8
  8027  0149'                    u5665:
  8028  0149' 358E'              	lslf	??___flmul,f
  8029  014A' 0D8F'              	rlf	??___flmul+1,f
  8030  014B' 0D90'              	rlf	??___flmul+2,f
  8031  014C' 0D91'              	rlf	??___flmul+3,f
  8032  014D'                    u5660:
  8033  014D' 0B89               	decfsz	9,f
  8034  014E' 2800'              	goto	u5665
  8035  014F' 080E'              	movf	??___flmul,w
  8036  0150' 079A'              	addwf	___flmul@prod,f
  8037  0151' 080F'              	movf	??___flmul+1,w
  8038  0152' 3D9B'              	addwfc	___flmul@prod+1,f
  8039  0153' 0810'              	movf	??___flmul+2,w
  8040  0154' 3D9C'              	addwfc	___flmul@prod+2,f
  8041  0155' 0811'              	movf	??___flmul+3,w
  8042  0156' 3D9D'              	addwfc	___flmul@prod+3,f
  8043  0157'                    l4202:
  8044  0157' 0815'              	movf	___flmul@grs,w
  8045  0158' 008E'              	movwf	??___flmul
  8046  0159' 0816'              	movf	___flmul@grs+1,w
  8047  015A' 008F'              	movwf	??___flmul+1
  8048  015B' 0817'              	movf	___flmul@grs+2,w
  8049  015C' 0090'              	movwf	??___flmul+2
  8050  015D' 0818'              	movf	___flmul@grs+3,w
  8051  015E' 0091'              	movwf	??___flmul+3
  8052  015F' 3018               	movlw	24
  8053  0160'                    u5675:
  8054  0160' 3691'              	lsrf	??___flmul+3,f
  8055  0161' 0C90'              	rrf	??___flmul+2,f
  8056  0162' 0C8F'              	rrf	??___flmul+1,f
  8057  0163' 0C8E'              	rrf	??___flmul,f
  8058  0164'                    u5670:
  8059  0164' 0B89               	decfsz	9,f
  8060  0165' 2800'              	goto	u5675
  8061  0166' 080E'              	movf	??___flmul,w
  8062  0167' 079A'              	addwf	___flmul@prod,f
  8063  0168' 080F'              	movf	??___flmul+1,w
  8064  0169' 3D9B'              	addwfc	___flmul@prod+1,f
  8065  016A' 0810'              	movf	??___flmul+2,w
  8066  016B' 3D9C'              	addwfc	___flmul@prod+2,f
  8067  016C' 0811'              	movf	??___flmul+3,w
  8068  016D' 3D9D'              	addwfc	___flmul@prod+3,f
  8069  016E'                    l4204:
  8070  016E' 3008               	movlw	8
  8071  016F'                    u5685:
  8072  016F' 3595'              	lslf	___flmul@grs,f
  8073  0170' 0D96'              	rlf	___flmul@grs+1,f
  8074  0171' 0D97'              	rlf	___flmul@grs+2,f
  8075  0172' 0D98'              	rlf	___flmul@grs+3,f
  8076  0173' 0B89               	decfsz	9,f
  8077  0174' 2800'              	goto	u5685
  8078  0175'                    l4206:
  8079  0175' 0819'              	movf	___flmul@bexp,w
  8080  0176' 0714'              	addwf	___flmul@aexp,w
  8081  0177' 008E'              	movwf	??___flmul
  8082  0178' 018F'              	clrf	??___flmul+1
  8083  0179' 0D8F'              	rlf	??___flmul+1,f
  8084  017A' 080E'              	movf	??___flmul,w
  8085  017B' 3E82               	addlw	130
  8086  017C' 009E'              	movwf	___flmul@temp
  8087  017D' 30FF               	movlw	255
  8088  017E' 3D0F'              	addwfc	??___flmul+1,w
  8089  017F' 009F'              	movwf	___flmul@temp+1
  8090  0180' 2800'              	goto	l4218
  8091  0181'                    l4208:
  8092  0181' 3001               	movlw	1
  8093  0182'                    u5695:
  8094  0182' 359A'              	lslf	___flmul@prod,f
  8095  0183' 0D9B'              	rlf	___flmul@prod+1,f
  8096  0184' 0D9C'              	rlf	___flmul@prod+2,f
  8097  0185' 0D9D'              	rlf	___flmul@prod+3,f
  8098  0186' 0B89               	decfsz	9,f
  8099  0187' 2800'              	goto	u5695
  8100  0188'                    l4210:
  8101  0188' 1F98'              	btfss	___flmul@grs+3,7
  8102  0189' 2800'              	goto	u5701
  8103  018A' 2800'              	goto	u5700
  8104  018B'                    u5701:
  8105  018B' 2800'              	goto	l4214
  8106  018C'                    u5700:
  8107  018C'                    l4212:
  8108  018C' 141A'              	bsf	___flmul@prod,0
  8109  018D'                    l4214:
  8110  018D' 3001               	movlw	1
  8111  018E'                    u5715:
  8112  018E' 3595'              	lslf	___flmul@grs,f
  8113  018F' 0D96'              	rlf	___flmul@grs+1,f
  8114  0190' 0D97'              	rlf	___flmul@grs+2,f
  8115  0191' 0D98'              	rlf	___flmul@grs+3,f
  8116  0192' 0B89               	decfsz	9,f
  8117  0193' 2800'              	goto	u5715
  8118  0194'                    l4216:
  8119  0194' 30FF               	movlw	255
  8120  0195' 079E'              	addwf	___flmul@temp,f
  8121  0196' 30FF               	movlw	255
  8122  0197' 3D9F'              	addwfc	___flmul@temp+1,f
  8123  0198'                    l4218:
  8124  0198' 1F9C'              	btfss	___flmul@prod+2,7
  8125  0199' 2800'              	goto	u5721
  8126  019A' 2800'              	goto	u5720
  8127  019B'                    u5721:
  8128  019B' 2800'              	goto	l4208
  8129  019C'                    u5720:
  8130  019C'                    l4220:
  8131  019C' 0194'              	clrf	___flmul@aexp
  8132  019D'                    l4222:
  8133  019D' 1F98'              	btfss	___flmul@grs+3,7
  8134  019E' 2800'              	goto	u5731
  8135  019F' 2800'              	goto	u5730
  8136  01A0'                    u5731:
  8137  01A0' 2800'              	goto	l4230
  8138  01A1'                    u5730:
  8139  01A1'                    l4224:
  8140  01A1' 30FF               	movlw	255
  8141  01A2' 0515'              	andwf	___flmul@grs,w
  8142  01A3' 008E'              	movwf	??___flmul
  8143  01A4' 30FF               	movlw	255
  8144  01A5' 0516'              	andwf	___flmul@grs+1,w
  8145  01A6' 008F'              	movwf	??___flmul+1
  8146  01A7' 30FF               	movlw	255
  8147  01A8' 0517'              	andwf	___flmul@grs+2,w
  8148  01A9' 0090'              	movwf	??___flmul+2
  8149  01AA' 307F               	movlw	127
  8150  01AB' 0518'              	andwf	___flmul@grs+3,w
  8151  01AC' 0091'              	movwf	??___flmul+3
  8152  01AD' 0811'              	movf	??___flmul+3,w
  8153  01AE' 0410'              	iorwf	??___flmul+2,w
  8154  01AF' 040F'              	iorwf	??___flmul+1,w
  8155  01B0' 040E'              	iorwf	??___flmul,w
  8156  01B1' 1903               	skipnz
  8157  01B2' 2800'              	goto	u5741
  8158  01B3' 2800'              	goto	u5740
  8159  01B4'                    u5741:
  8160  01B4' 2800'              	goto	l702
  8161  01B5'                    u5740:
  8162  01B5'                    l4226:
  8163  01B5' 3001               	movlw	1
  8164  01B6' 0094'              	movwf	___flmul@aexp
  8165  01B7' 2800'              	goto	l4230
  8166  01B8'                    l702:
  8167  01B8' 1C1A'              	btfss	___flmul@prod,0
  8168  01B9' 2800'              	goto	u5751
  8169  01BA' 2800'              	goto	u5750
  8170  01BB'                    u5751:
  8171  01BB' 2800'              	goto	l4230
  8172  01BC'                    u5750:
  8173  01BC' 2800'              	goto	l4226
  8174  01BD'                    l4230:
  8175  01BD' 0814'              	movf	___flmul@aexp,w
  8176  01BE' 1903               	btfsc	3,2
  8177  01BF' 2800'              	goto	u5761
  8178  01C0' 2800'              	goto	u5760
  8179  01C1'                    u5761:
  8180  01C1' 2800'              	goto	l4240
  8181  01C2'                    u5760:
  8182  01C2'                    l4232:
  8183  01C2' 3001               	movlw	1
  8184  01C3' 079A'              	addwf	___flmul@prod,f
  8185  01C4' 3000               	movlw	0
  8186  01C5' 3D9B'              	addwfc	___flmul@prod+1,f
  8187  01C6' 3D9C'              	addwfc	___flmul@prod+2,f
  8188  01C7' 3D9D'              	addwfc	___flmul@prod+3,f
  8189  01C8'                    l4234:
  8190  01C8' 1C1D'              	btfss	___flmul@prod+3,0
  8191  01C9' 2800'              	goto	u5771
  8192  01CA' 2800'              	goto	u5770
  8193  01CB'                    u5771:
  8194  01CB' 2800'              	goto	l4240
  8195  01CC'                    u5770:
  8196  01CC'                    l4236:
  8197  01CC' 081A'              	movf	___flmul@prod,w
  8198  01CD' 008E'              	movwf	??___flmul
  8199  01CE' 081B'              	movf	___flmul@prod+1,w
  8200  01CF' 008F'              	movwf	??___flmul+1
  8201  01D0' 081C'              	movf	___flmul@prod+2,w
  8202  01D1' 0090'              	movwf	??___flmul+2
  8203  01D2' 081D'              	movf	___flmul@prod+3,w
  8204  01D3' 0091'              	movwf	??___flmul+3
  8205  01D4' 3001               	movlw	1
  8206  01D5' 0092'              	movwf	??___flmul+4
  8207  01D6'                    u5785:
  8208  01D6' 3791'              	asrf	??___flmul+3,f
  8209  01D7' 0C90'              	rrf	??___flmul+2,f
  8210  01D8' 0C8F'              	rrf	??___flmul+1,f
  8211  01D9' 0C8E'              	rrf	??___flmul,f
  8212  01DA'                    u5780:
  8213  01DA' 0B92'              	decfsz	??___flmul+4,f
  8214  01DB' 2800'              	goto	u5785
  8215  01DC' 0811'              	movf	??___flmul+3,w
  8216  01DD' 009D'              	movwf	___flmul@prod+3
  8217  01DE' 0810'              	movf	??___flmul+2,w
  8218  01DF' 009C'              	movwf	___flmul@prod+2
  8219  01E0' 080F'              	movf	??___flmul+1,w
  8220  01E1' 009B'              	movwf	___flmul@prod+1
  8221  01E2' 080E'              	movf	??___flmul,w
  8222  01E3' 009A'              	movwf	___flmul@prod
  8223  01E4'                    l4238:
  8224  01E4' 3001               	movlw	1
  8225  01E5' 079E'              	addwf	___flmul@temp,f
  8226  01E6' 3000               	movlw	0
  8227  01E7' 3D9F'              	addwfc	___flmul@temp+1,f
  8228  01E8'                    l4240:
  8229  01E8' 081F'              	movf	___flmul@temp+1,w
  8230  01E9' 3A80               	xorlw	128
  8231  01EA' 008E'              	movwf	??___flmul
  8232  01EB' 3080               	movlw	128
  8233  01EC' 020E'              	subwf	??___flmul,w
  8234  01ED' 1D03               	skipz
  8235  01EE' 2800'              	goto	u5795
  8236  01EF' 30FF               	movlw	255
  8237  01F0' 021E'              	subwf	___flmul@temp,w
  8238  01F1'                    u5795:
  8239  01F1' 1C03               	skipc
  8240  01F2' 2800'              	goto	u5791
  8241  01F3' 2800'              	goto	u5790
  8242  01F4'                    u5791:
  8243  01F4' 2800'              	goto	l4244
  8244  01F5'                    u5790:
  8245  01F5'                    l4242:
  8246  01F5' 307F               	movlw	127
  8247  01F6' 0140               	movlb	0	; select bank0
  8248  01F7' 009D'              	movwf	___flmul@prod+3
  8249  01F8' 3080               	movlw	128
  8250  01F9' 009C'              	movwf	___flmul@prod+2
  8251  01FA' 3000               	movlw	0
  8252  01FB' 009B'              	movwf	___flmul@prod+1
  8253  01FC' 3000               	movlw	0
  8254  01FD' 009A'              	movwf	___flmul@prod
  8255  01FE' 2800'              	goto	l708
  8256  01FF'                    l4244:
  8257  01FF' 0140               	movlb	0	; select bank0
  8258  0200' 081F'              	movf	___flmul@temp+1,w
  8259  0201' 3A80               	xorlw	128
  8260  0202' 008E'              	movwf	??___flmul
  8261  0203' 3080               	movlw	128
  8262  0204' 020E'              	subwf	??___flmul,w
  8263  0205' 1D03               	skipz
  8264  0206' 2800'              	goto	u5805
  8265  0207' 3001               	movlw	1
  8266  0208' 021E'              	subwf	___flmul@temp,w
  8267  0209'                    u5805:
  8268  0209' 1803               	skipnc
  8269  020A' 2800'              	goto	u5801
  8270  020B' 2800'              	goto	u5800
  8271  020C'                    u5801:
  8272  020C' 2800'              	goto	l4250
  8273  020D'                    u5800:
  8274  020D'                    l4246:
  8275  020D' 3000               	movlw	0
  8276  020E' 0140               	movlb	0	; select bank0
  8277  020F' 009D'              	movwf	___flmul@prod+3
  8278  0210' 3000               	movlw	0
  8279  0211' 009C'              	movwf	___flmul@prod+2
  8280  0212' 3000               	movlw	0
  8281  0213' 009B'              	movwf	___flmul@prod+1
  8282  0214' 3000               	movlw	0
  8283  0215' 009A'              	movwf	___flmul@prod
  8284  0216'                    l4248:
  8285  0216' 0193'              	clrf	___flmul@sign
  8286  0217' 2800'              	goto	l708
  8287  0218'                    l4250:
  8288  0218' 0140               	movlb	0	; select bank0
  8289  0219' 081E'              	movf	___flmul@temp,w
  8290  021A' 0099'              	movwf	___flmul@bexp
  8291  021B' 30FF               	movlw	255
  8292  021C' 059A'              	andwf	___flmul@prod,f
  8293  021D' 30FF               	movlw	255
  8294  021E' 059B'              	andwf	___flmul@prod+1,f
  8295  021F' 307F               	movlw	127
  8296  0220' 059C'              	andwf	___flmul@prod+2,f
  8297  0221' 3000               	movlw	0
  8298  0222' 059D'              	andwf	___flmul@prod+3,f
  8299  0223'                    l4252:
  8300  0223' 1C19'              	btfss	___flmul@bexp,0
  8301  0224' 2800'              	goto	u5811
  8302  0225' 2800'              	goto	u5810
  8303  0226'                    u5811:
  8304  0226' 2800'              	goto	l4256
  8305  0227'                    u5810:
  8306  0227'                    l4254:
  8307  0227' 179C'              	bsf	___flmul@prod+2,7
  8308  0228'                    l4256:
  8309  0228' 0819'              	movf	___flmul@bexp,w
  8310  0229' 008E'              	movwf	??___flmul
  8311  022A' 3001               	movlw	1
  8312  022B'                    u5825:
  8313  022B' 368E'              	lsrf	??___flmul,f
  8314  022C' 0B89               	decfsz	9,f
  8315  022D' 2800'              	goto	u5825
  8316  022E' 080E'              	movf	??___flmul,w
  8317  022F' 009D'              	movwf	___flmul@prod+3
  8318  0230'                    l708:
  8319  0230' 0813'              	movf	___flmul@sign,w
  8320  0231' 049D'              	iorwf	___flmul@prod+3,f
  8321  0232'                    l4258:
  8322  0232' 081D'              	movf	___flmul@prod+3,w
  8323  0233' 0089'              	movwf	?___flmul+3
  8324  0234' 081C'              	movf	___flmul@prod+2,w
  8325  0235' 0088'              	movwf	?___flmul+2
  8326  0236' 081B'              	movf	___flmul@prod+1,w
  8327  0237' 0087'              	movwf	?___flmul+1
  8328  0238' 081A'              	movf	___flmul@prod,w
  8329  0239' 0086'              	movwf	?___flmul
  8330  023A'                    l696:
  8331  023A' 0008               	return
  8332  023B'                    __end_of___flmul:
  8333                           
  8334                           	psect	text24
  8335  0000'                    __ptext24:	
  8336 ;; *************** function __Umul8_16 *****************
  8337 ;; Defined at:
  8338 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  multiplier      1    wreg     unsigned char 
  8341 ;;  multiplicand    1    2[COMMON] unsigned char 
  8342 ;; Auto vars:     Size  Location     Type
  8343 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8344 ;;  word_mpld       2    2[BANK0 ] unsigned short 
  8345 ;;  product         2    0[BANK0 ] unsigned short 
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  2    2[COMMON] unsigned int 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8355 ;;      Params:         2       0       0       0       0       0       0       0
  8356 ;;      Locals:         0       5       0       0       0       0       0       0
  8357 ;;      Temps:          2       0       0       0       0       0       0       0
  8358 ;;      Totals:         4       5       0       0       0       0       0       0
  8359 ;;Total ram usage:        9 bytes
  8360 ;; Hardware stack levels used: 1
  8361 ;; Hardware stack levels required when called: 1
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		___flmul
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369  0000'                    __Umul8_16:	
  8370                           ;psect for function __Umul8_16
  8371                           
  8372                           
  8373                           ;incstack = 0
  8374                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8375                           ;__Umul8_16@multiplier stored from wreg
  8376  0000' 0140               	movlb	0	; select bank0
  8377  0001' 0084'              	movwf	__Umul8_16@multiplier
  8378  0002'                    l4064:
  8379  0002' 0180'              	clrf	__Umul8_16@product
  8380  0003' 0181'              	clrf	__Umul8_16@product+1
  8381  0004'                    l4066:
  8382  0004' 0802'              	movf	__Umul8_16@multiplicand,w
  8383  0005' 0084'              	movwf	??__Umul8_16
  8384  0006' 0185'              	clrf	??__Umul8_16+1
  8385  0007' 0804'              	movf	??__Umul8_16,w
  8386  0008' 0082'              	movwf	__Umul8_16@word_mpld
  8387  0009' 0805'              	movf	??__Umul8_16+1,w
  8388  000A' 0083'              	movwf	__Umul8_16@word_mpld+1
  8389  000B'                    l4068:
  8390  000B' 1C04'              	btfss	__Umul8_16@multiplier,0
  8391  000C' 2800'              	goto	u5421
  8392  000D' 2800'              	goto	u5420
  8393  000E'                    u5421:
  8394  000E' 2800'              	goto	l715
  8395  000F'                    u5420:
  8396  000F'                    l4070:
  8397  000F' 0802'              	movf	__Umul8_16@word_mpld,w
  8398  0010' 0780'              	addwf	__Umul8_16@product,f
  8399  0011' 0803'              	movf	__Umul8_16@word_mpld+1,w
  8400  0012' 3D81'              	addwfc	__Umul8_16@product+1,f
  8401  0013'                    l715:
  8402  0013' 3001               	movlw	1
  8403  0014'                    u5435:
  8404  0014' 3582'              	lslf	__Umul8_16@word_mpld,f
  8405  0015' 0D83'              	rlf	__Umul8_16@word_mpld+1,f
  8406  0016' 0B89               	decfsz	9,f
  8407  0017' 2800'              	goto	u5435
  8408  0018' 1003               	clrc
  8409  0019' 0C84'              	rrf	__Umul8_16@multiplier,f
  8410  001A'                    l4072:
  8411  001A' 0804'              	movf	__Umul8_16@multiplier,w
  8412  001B' 1D03               	btfss	3,2
  8413  001C' 2800'              	goto	u5441
  8414  001D' 2800'              	goto	u5440
  8415  001E'                    u5441:
  8416  001E' 2800'              	goto	l4068
  8417  001F'                    u5440:
  8418  001F'                    l4074:
  8419  001F' 0801'              	movf	__Umul8_16@product+1,w
  8420  0020' 0083'              	movwf	?__Umul8_16+1
  8421  0021' 0800'              	movf	__Umul8_16@product,w
  8422  0022' 0082'              	movwf	?__Umul8_16
  8423  0023'                    l717:
  8424  0023' 0008               	return
  8425  0024'                    __end_of__Umul8_16:
  8426                           
  8427                           	psect	text25
  8428  0000'                    __ptext25:	
  8429 ;; *************** function ___flge *****************
  8430 ;; Defined at:
  8431 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  ff1             4   32[BANK0 ] unsigned int 
  8434 ;;  ff2             4   36[BANK0 ] unsigned int 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;		None               void
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8446 ;;      Params:         0       8       0       0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0
  8448 ;;      Temps:          0       4       0       0       0       0       0       0
  8449 ;;      Totals:         0      12       0       0       0       0       0       0
  8450 ;;Total ram usage:       12 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; Hardware stack levels required when called: 1
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_efgtoa
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460  0000'                    ___flge:	
  8461                           ;psect for function ___flge
  8462                           
  8463  0000'                    l2772:	
  8464                           ;incstack = 0
  8465                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8466                           
  8467  0000' 3000               	movlw	0
  8468  0001' 0140               	movlb	0	; select bank0
  8469  0002' 0520'              	andwf	___flge@ff1,w
  8470  0003' 00A8'              	movwf	??___flge
  8471  0004' 3000               	movlw	0
  8472  0005' 0521'              	andwf	___flge@ff1+1,w
  8473  0006' 00A9'              	movwf	??___flge+1
  8474  0007' 3080               	movlw	128
  8475  0008' 0522'              	andwf	___flge@ff1+2,w
  8476  0009' 00AA'              	movwf	??___flge+2
  8477  000A' 307F               	movlw	127
  8478  000B' 0523'              	andwf	___flge@ff1+3,w
  8479  000C' 00AB'              	movwf	??___flge+3
  8480  000D' 082B'              	movf	??___flge+3,w
  8481  000E' 042A'              	iorwf	??___flge+2,w
  8482  000F' 0429'              	iorwf	??___flge+1,w
  8483  0010' 0428'              	iorwf	??___flge,w
  8484  0011' 1D03               	skipz
  8485  0012' 2800'              	goto	u3311
  8486  0013' 2800'              	goto	u3310
  8487  0014'                    u3311:
  8488  0014' 2800'              	goto	l477
  8489  0015'                    u3310:
  8490  0015'                    l2774:
  8491  0015' 3000               	movlw	0
  8492  0016' 00A3'              	movwf	___flge@ff1+3
  8493  0017' 3000               	movlw	0
  8494  0018' 00A2'              	movwf	___flge@ff1+2
  8495  0019' 3000               	movlw	0
  8496  001A' 00A1'              	movwf	___flge@ff1+1
  8497  001B' 3000               	movlw	0
  8498  001C' 00A0'              	movwf	___flge@ff1
  8499  001D'                    l477:
  8500  001D' 3000               	movlw	0
  8501  001E' 0524'              	andwf	___flge@ff2,w
  8502  001F' 00A8'              	movwf	??___flge
  8503  0020' 3000               	movlw	0
  8504  0021' 0525'              	andwf	___flge@ff2+1,w
  8505  0022' 00A9'              	movwf	??___flge+1
  8506  0023' 3080               	movlw	128
  8507  0024' 0526'              	andwf	___flge@ff2+2,w
  8508  0025' 00AA'              	movwf	??___flge+2
  8509  0026' 307F               	movlw	127
  8510  0027' 0527'              	andwf	___flge@ff2+3,w
  8511  0028' 00AB'              	movwf	??___flge+3
  8512  0029' 082B'              	movf	??___flge+3,w
  8513  002A' 042A'              	iorwf	??___flge+2,w
  8514  002B' 0429'              	iorwf	??___flge+1,w
  8515  002C' 0428'              	iorwf	??___flge,w
  8516  002D' 1D03               	skipz
  8517  002E' 2800'              	goto	u3321
  8518  002F' 2800'              	goto	u3320
  8519  0030'                    u3321:
  8520  0030' 2800'              	goto	l2778
  8521  0031'                    u3320:
  8522  0031'                    l2776:
  8523  0031' 3000               	movlw	0
  8524  0032' 00A7'              	movwf	___flge@ff2+3
  8525  0033' 3000               	movlw	0
  8526  0034' 00A6'              	movwf	___flge@ff2+2
  8527  0035' 3000               	movlw	0
  8528  0036' 00A5'              	movwf	___flge@ff2+1
  8529  0037' 3000               	movlw	0
  8530  0038' 00A4'              	movwf	___flge@ff2
  8531  0039'                    l2778:
  8532  0039' 1FA3'              	btfss	___flge@ff1+3,7
  8533  003A' 2800'              	goto	u3331
  8534  003B' 2800'              	goto	u3330
  8535  003C'                    u3331:
  8536  003C' 2800'              	goto	l2782
  8537  003D'                    u3330:
  8538  003D'                    l2780:
  8539  003D' 3000               	movlw	0
  8540  003E' 00A8'              	movwf	??___flge
  8541  003F' 3000               	movlw	0
  8542  0040' 00A9'              	movwf	??___flge+1
  8543  0041' 3000               	movlw	0
  8544  0042' 00AA'              	movwf	??___flge+2
  8545  0043' 3080               	movlw	128
  8546  0044' 00AB'              	movwf	??___flge+3
  8547  0045' 0820'              	movf	___flge@ff1,w
  8548  0046' 02A8'              	subwf	??___flge,f
  8549  0047' 0821'              	movf	___flge@ff1+1,w
  8550  0048' 3BA9'              	subwfb	??___flge+1,f
  8551  0049' 0822'              	movf	___flge@ff1+2,w
  8552  004A' 3BAA'              	subwfb	??___flge+2,f
  8553  004B' 0823'              	movf	___flge@ff1+3,w
  8554  004C' 3BAB'              	subwfb	??___flge+3,f
  8555  004D' 082B'              	movf	??___flge+3,w
  8556  004E' 00A3'              	movwf	___flge@ff1+3
  8557  004F' 082A'              	movf	??___flge+2,w
  8558  0050' 00A2'              	movwf	___flge@ff1+2
  8559  0051' 0829'              	movf	??___flge+1,w
  8560  0052' 00A1'              	movwf	___flge@ff1+1
  8561  0053' 0828'              	movf	??___flge,w
  8562  0054' 00A0'              	movwf	___flge@ff1
  8563  0055'                    l2782:
  8564  0055' 1FA7'              	btfss	___flge@ff2+3,7
  8565  0056' 2800'              	goto	u3341
  8566  0057' 2800'              	goto	u3340
  8567  0058'                    u3341:
  8568  0058' 2800'              	goto	l480
  8569  0059'                    u3340:
  8570  0059'                    l2784:
  8571  0059' 3000               	movlw	0
  8572  005A' 00A8'              	movwf	??___flge
  8573  005B' 3000               	movlw	0
  8574  005C' 00A9'              	movwf	??___flge+1
  8575  005D' 3000               	movlw	0
  8576  005E' 00AA'              	movwf	??___flge+2
  8577  005F' 3080               	movlw	128
  8578  0060' 00AB'              	movwf	??___flge+3
  8579  0061' 0824'              	movf	___flge@ff2,w
  8580  0062' 02A8'              	subwf	??___flge,f
  8581  0063' 0825'              	movf	___flge@ff2+1,w
  8582  0064' 3BA9'              	subwfb	??___flge+1,f
  8583  0065' 0826'              	movf	___flge@ff2+2,w
  8584  0066' 3BAA'              	subwfb	??___flge+2,f
  8585  0067' 0827'              	movf	___flge@ff2+3,w
  8586  0068' 3BAB'              	subwfb	??___flge+3,f
  8587  0069' 082B'              	movf	??___flge+3,w
  8588  006A' 00A7'              	movwf	___flge@ff2+3
  8589  006B' 082A'              	movf	??___flge+2,w
  8590  006C' 00A6'              	movwf	___flge@ff2+2
  8591  006D' 0829'              	movf	??___flge+1,w
  8592  006E' 00A5'              	movwf	___flge@ff2+1
  8593  006F' 0828'              	movf	??___flge,w
  8594  0070' 00A4'              	movwf	___flge@ff2
  8595  0071'                    l480:
  8596  0071' 3080               	movlw	128
  8597  0072' 06A3'              	xorwf	___flge@ff1+3,f
  8598  0073' 3080               	movlw	128
  8599  0074' 06A7'              	xorwf	___flge@ff2+3,f
  8600  0075' 0827'              	movf	___flge@ff2+3,w
  8601  0076' 0223'              	subwf	___flge@ff1+3,w
  8602  0077' 1D03               	skipz
  8603  0078' 2800'              	goto	u3355
  8604  0079' 0826'              	movf	___flge@ff2+2,w
  8605  007A' 0222'              	subwf	___flge@ff1+2,w
  8606  007B' 1D03               	skipz
  8607  007C' 2800'              	goto	u3355
  8608  007D' 0825'              	movf	___flge@ff2+1,w
  8609  007E' 0221'              	subwf	___flge@ff1+1,w
  8610  007F' 1D03               	skipz
  8611  0080' 2800'              	goto	u3355
  8612  0081' 0824'              	movf	___flge@ff2,w
  8613  0082' 0220'              	subwf	___flge@ff1,w
  8614  0083'                    u3355:
  8615  0083' 1803               	skipnc
  8616  0084' 2800'              	goto	u3351
  8617  0085' 2800'              	goto	u3350
  8618  0086'                    u3351:
  8619  0086' 2800'              	goto	l2788
  8620  0087'                    u3350:
  8621  0087'                    l2786:
  8622  0087' 1003               	clrc
  8623  0088' 2800'              	goto	l485
  8624  0089'                    l2788:
  8625  0089' 1403               	setc
  8626  008A'                    l485:
  8627  008A' 0008               	return
  8628  008B'                    __end_of___flge:
  8629                           
  8630                           	psect	text26
  8631  0000'                    __ptext26:	
  8632 ;; *************** function ___fleq *****************
  8633 ;; Defined at:
  8634 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  ff1             4    2[COMMON] unsigned int 
  8637 ;;  ff2             4    6[COMMON] unsigned int 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;		None               void
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8649 ;;      Params:         8       0       0       0       0       0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0
  8651 ;;      Temps:          0       4       0       0       0       0       0       0
  8652 ;;      Totals:         8       4       0       0       0       0       0       0
  8653 ;;Total ram usage:       12 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 1
  8656 ;; This function calls:
  8657 ;;		Nothing
  8658 ;; This function is called by:
  8659 ;;		_efgtoa
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663  0000'                    ___fleq:	
  8664                           ;psect for function ___fleq
  8665                           
  8666  0000'                    l2760:	
  8667                           ;incstack = 0
  8668                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8669                           
  8670  0000' 3000               	movlw	0
  8671  0001' 0502'              	andwf	___fleq@ff1,w
  8672  0002' 0140               	movlb	0	; select bank0
  8673  0003' 0080'              	movwf	??___fleq
  8674  0004' 3000               	movlw	0
  8675  0005' 0503'              	andwf	___fleq@ff1+1,w
  8676  0006' 0081'              	movwf	??___fleq+1
  8677  0007' 3080               	movlw	128
  8678  0008' 0504'              	andwf	___fleq@ff1+2,w
  8679  0009' 0082'              	movwf	??___fleq+2
  8680  000A' 307F               	movlw	127
  8681  000B' 0505'              	andwf	___fleq@ff1+3,w
  8682  000C' 0083'              	movwf	??___fleq+3
  8683  000D' 0803'              	movf	??___fleq+3,w
  8684  000E' 0402'              	iorwf	??___fleq+2,w
  8685  000F' 0401'              	iorwf	??___fleq+1,w
  8686  0010' 0400'              	iorwf	??___fleq,w
  8687  0011' 1D03               	skipz
  8688  0012' 2800'              	goto	u3281
  8689  0013' 2800'              	goto	u3280
  8690  0014'                    u3281:
  8691  0014' 2800'              	goto	l468
  8692  0015'                    u3280:
  8693  0015'                    l2762:
  8694  0015' 3000               	movlw	0
  8695  0016' 0085'              	movwf	___fleq@ff1+3
  8696  0017' 3000               	movlw	0
  8697  0018' 0084'              	movwf	___fleq@ff1+2
  8698  0019' 3000               	movlw	0
  8699  001A' 0083'              	movwf	___fleq@ff1+1
  8700  001B' 3000               	movlw	0
  8701  001C' 0082'              	movwf	___fleq@ff1
  8702  001D'                    l468:
  8703  001D' 3000               	movlw	0
  8704  001E' 0506'              	andwf	___fleq@ff2,w
  8705  001F' 0080'              	movwf	??___fleq
  8706  0020' 3000               	movlw	0
  8707  0021' 0507'              	andwf	___fleq@ff2+1,w
  8708  0022' 0081'              	movwf	??___fleq+1
  8709  0023' 3080               	movlw	128
  8710  0024' 0508'              	andwf	___fleq@ff2+2,w
  8711  0025' 0082'              	movwf	??___fleq+2
  8712  0026' 307F               	movlw	127
  8713  0027' 0509'              	andwf	___fleq@ff2+3,w
  8714  0028' 0083'              	movwf	??___fleq+3
  8715  0029' 0803'              	movf	??___fleq+3,w
  8716  002A' 0402'              	iorwf	??___fleq+2,w
  8717  002B' 0401'              	iorwf	??___fleq+1,w
  8718  002C' 0400'              	iorwf	??___fleq,w
  8719  002D' 1D03               	skipz
  8720  002E' 2800'              	goto	u3291
  8721  002F' 2800'              	goto	u3290
  8722  0030'                    u3291:
  8723  0030' 2800'              	goto	l469
  8724  0031'                    u3290:
  8725  0031'                    l2764:
  8726  0031' 3000               	movlw	0
  8727  0032' 0089'              	movwf	___fleq@ff2+3
  8728  0033' 3000               	movlw	0
  8729  0034' 0088'              	movwf	___fleq@ff2+2
  8730  0035' 3000               	movlw	0
  8731  0036' 0087'              	movwf	___fleq@ff2+1
  8732  0037' 3000               	movlw	0
  8733  0038' 0086'              	movwf	___fleq@ff2
  8734  0039'                    l469:
  8735  0039' 0809'              	movf	___fleq@ff2+3,w
  8736  003A' 0605'              	xorwf	___fleq@ff1+3,w
  8737  003B' 1D03               	skipz
  8738  003C' 2800'              	goto	u3305
  8739  003D' 0808'              	movf	___fleq@ff2+2,w
  8740  003E' 0604'              	xorwf	___fleq@ff1+2,w
  8741  003F' 1D03               	skipz
  8742  0040' 2800'              	goto	u3305
  8743  0041' 0807'              	movf	___fleq@ff2+1,w
  8744  0042' 0603'              	xorwf	___fleq@ff1+1,w
  8745  0043' 1D03               	skipz
  8746  0044' 2800'              	goto	u3305
  8747  0045' 0806'              	movf	___fleq@ff2,w
  8748  0046' 0602'              	xorwf	___fleq@ff1,w
  8749  0047'                    u3305:
  8750  0047' 1903               	skipnz
  8751  0048' 2800'              	goto	u3301
  8752  0049' 2800'              	goto	u3300
  8753  004A'                    u3301:
  8754  004A' 2800'              	goto	l2768
  8755  004B'                    u3300:
  8756  004B'                    l2766:
  8757  004B' 1003               	clrc
  8758  004C' 2800'              	goto	l474
  8759  004D'                    l2768:
  8760  004D' 1403               	setc
  8761  004E'                    l474:
  8762  004E' 0008               	return
  8763  004F'                    __end_of___fleq:
  8764                           
  8765                           	psect	text27
  8766  0000'                    __ptext27:	
  8767 ;; *************** function ___fldiv *****************
  8768 ;; Defined at:
  8769 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  a               4    2[COMMON] unsigned int 
  8772 ;;  b               4    6[COMMON] unsigned int 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  grs             4   12[BANK0 ] unsigned long 
  8775 ;;  rem             4    5[BANK0 ] unsigned long 
  8776 ;;  new_exp         2   10[BANK0 ] short 
  8777 ;;  aexp            1   17[BANK0 ] unsigned char 
  8778 ;;  bexp            1   16[BANK0 ] unsigned char 
  8779 ;;  sign            1    9[BANK0 ] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  4    2[COMMON] unsigned char 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8789 ;;      Params:         8       0       0       0       0       0       0       0
  8790 ;;      Locals:         0      13       0       0       0       0       0       0
  8791 ;;      Temps:          0       5       0       0       0       0       0       0
  8792 ;;      Totals:         8      18       0       0       0       0       0       0
  8793 ;;Total ram usage:       26 bytes
  8794 ;; Hardware stack levels used: 1
  8795 ;; Hardware stack levels required when called: 1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_efgtoa
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803  0000'                    ___fldiv:	
  8804                           ;psect for function ___fldiv
  8805                           
  8806  0000'                    l2890:	
  8807                           ;incstack = 0
  8808                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  8809                           
  8810  0000' 0809'              	movf	___fldiv@b+3,w
  8811  0001' 3980               	andlw	128
  8812  0002' 0140               	movlb	0	; select bank0
  8813  0003' 0089'              	movwf	___fldiv@sign
  8814  0004'                    l2892:
  8815  0004' 3509'              	lslf	___fldiv@b+3,w
  8816  0005' 0090'              	movwf	___fldiv@bexp
  8817  0006'                    l2894:
  8818  0006' 1F88'              	btfss	___fldiv@b+2,7
  8819  0007' 2800'              	goto	u3601
  8820  0008' 2800'              	goto	u3600
  8821  0009'                    u3601:
  8822  0009' 2800'              	goto	l2898
  8823  000A'                    u3600:
  8824  000A'                    l2896:
  8825  000A' 1410'              	bsf	___fldiv@bexp,0
  8826  000B'                    l2898:
  8827  000B' 0810'              	movf	___fldiv@bexp,w
  8828  000C' 1903               	btfsc	3,2
  8829  000D' 2800'              	goto	u3611
  8830  000E' 2800'              	goto	u3610
  8831  000F'                    u3611:
  8832  000F' 2800'              	goto	l2908
  8833  0010'                    u3610:
  8834  0010'                    l2900:
  8835  0010' 0A10'              	incf	___fldiv@bexp,w
  8836  0011' 1D03               	btfss	3,2
  8837  0012' 2800'              	goto	u3621
  8838  0013' 2800'              	goto	u3620
  8839  0014'                    u3621:
  8840  0014' 2800'              	goto	l2904
  8841  0015'                    u3620:
  8842  0015'                    l2902:
  8843  0015' 3000               	movlw	0
  8844  0016' 0089'              	movwf	___fldiv@b+3
  8845  0017' 3000               	movlw	0
  8846  0018' 0088'              	movwf	___fldiv@b+2
  8847  0019' 3000               	movlw	0
  8848  001A' 0087'              	movwf	___fldiv@b+1
  8849  001B' 3000               	movlw	0
  8850  001C' 0086'              	movwf	___fldiv@b
  8851  001D'                    l2904:
  8852  001D' 1788'              	bsf	___fldiv@b+2,7
  8853  001E'                    l2906:
  8854  001E' 0189'              	clrf	___fldiv@b+3
  8855  001F' 2800'              	goto	l2910
  8856  0020'                    l2908:
  8857  0020' 3000               	movlw	0
  8858  0021' 0089'              	movwf	___fldiv@b+3
  8859  0022' 3000               	movlw	0
  8860  0023' 0088'              	movwf	___fldiv@b+2
  8861  0024' 3000               	movlw	0
  8862  0025' 0087'              	movwf	___fldiv@b+1
  8863  0026' 3000               	movlw	0
  8864  0027' 0086'              	movwf	___fldiv@b
  8865  0028'                    l2910:
  8866  0028' 0805'              	movf	___fldiv@a+3,w
  8867  0029' 3980               	andlw	128
  8868  002A' 0689'              	xorwf	___fldiv@sign,f
  8869  002B'                    l2912:
  8870  002B' 3505'              	lslf	___fldiv@a+3,w
  8871  002C' 0091'              	movwf	___fldiv@aexp
  8872  002D'                    l2914:
  8873  002D' 1F84'              	btfss	___fldiv@a+2,7
  8874  002E' 2800'              	goto	u3631
  8875  002F' 2800'              	goto	u3630
  8876  0030'                    u3631:
  8877  0030' 2800'              	goto	l2918
  8878  0031'                    u3630:
  8879  0031'                    l2916:
  8880  0031' 1411'              	bsf	___fldiv@aexp,0
  8881  0032'                    l2918:
  8882  0032' 0811'              	movf	___fldiv@aexp,w
  8883  0033' 1903               	btfsc	3,2
  8884  0034' 2800'              	goto	u3641
  8885  0035' 2800'              	goto	u3640
  8886  0036'                    u3641:
  8887  0036' 2800'              	goto	l2928
  8888  0037'                    u3640:
  8889  0037'                    l2920:
  8890  0037' 0A11'              	incf	___fldiv@aexp,w
  8891  0038' 1D03               	btfss	3,2
  8892  0039' 2800'              	goto	u3651
  8893  003A' 2800'              	goto	u3650
  8894  003B'                    u3651:
  8895  003B' 2800'              	goto	l2924
  8896  003C'                    u3650:
  8897  003C'                    l2922:
  8898  003C' 3000               	movlw	0
  8899  003D' 0085'              	movwf	___fldiv@a+3
  8900  003E' 3000               	movlw	0
  8901  003F' 0084'              	movwf	___fldiv@a+2
  8902  0040' 3000               	movlw	0
  8903  0041' 0083'              	movwf	___fldiv@a+1
  8904  0042' 3000               	movlw	0
  8905  0043' 0082'              	movwf	___fldiv@a
  8906  0044'                    l2924:
  8907  0044' 1784'              	bsf	___fldiv@a+2,7
  8908  0045'                    l2926:
  8909  0045' 0185'              	clrf	___fldiv@a+3
  8910  0046' 2800'              	goto	l656
  8911  0047'                    l2928:
  8912  0047' 3000               	movlw	0
  8913  0048' 0085'              	movwf	___fldiv@a+3
  8914  0049' 3000               	movlw	0
  8915  004A' 0084'              	movwf	___fldiv@a+2
  8916  004B' 3000               	movlw	0
  8917  004C' 0083'              	movwf	___fldiv@a+1
  8918  004D' 3000               	movlw	0
  8919  004E' 0082'              	movwf	___fldiv@a
  8920  004F'                    l656:
  8921  004F' 0805'              	movf	___fldiv@a+3,w
  8922  0050' 0404'              	iorwf	___fldiv@a+2,w
  8923  0051' 0403'              	iorwf	___fldiv@a+1,w
  8924  0052' 0402'              	iorwf	___fldiv@a,w
  8925  0053' 1D03               	skipz
  8926  0054' 2800'              	goto	u3661
  8927  0055' 2800'              	goto	u3660
  8928  0056'                    u3661:
  8929  0056' 2800'              	goto	l2938
  8930  0057'                    u3660:
  8931  0057'                    l2930:
  8932  0057' 3000               	movlw	0
  8933  0058' 0089'              	movwf	___fldiv@b+3
  8934  0059' 3000               	movlw	0
  8935  005A' 0088'              	movwf	___fldiv@b+2
  8936  005B' 3000               	movlw	0
  8937  005C' 0087'              	movwf	___fldiv@b+1
  8938  005D' 3000               	movlw	0
  8939  005E' 0086'              	movwf	___fldiv@b
  8940  005F' 3080               	movlw	128
  8941  0060' 0488'              	iorwf	___fldiv@b+2,f
  8942  0061' 307F               	movlw	127
  8943  0062' 0489'              	iorwf	___fldiv@b+3,f
  8944  0063'                    l2932:
  8945  0063' 0809'              	movf	___fldiv@sign,w
  8946  0064' 0489'              	iorwf	___fldiv@b+3,f
  8947  0065'                    l2934:
  8948  0065' 0809'              	movf	___fldiv@b+3,w
  8949  0066' 0085'              	movwf	?___fldiv+3
  8950  0067' 0808'              	movf	___fldiv@b+2,w
  8951  0068' 0084'              	movwf	?___fldiv+2
  8952  0069' 0807'              	movf	___fldiv@b+1,w
  8953  006A' 0083'              	movwf	?___fldiv+1
  8954  006B' 0806'              	movf	___fldiv@b,w
  8955  006C' 0082'              	movwf	?___fldiv
  8956  006D' 2800'              	goto	l658
  8957  006E'                    l2938:
  8958  006E' 0810'              	movf	___fldiv@bexp,w
  8959  006F' 1D03               	btfss	3,2
  8960  0070' 2800'              	goto	u3671
  8961  0071' 2800'              	goto	u3670
  8962  0072'                    u3671:
  8963  0072' 2800'              	goto	l2944
  8964  0073'                    u3670:
  8965  0073'                    l2940:
  8966  0073' 3000               	movlw	0
  8967  0074' 0085'              	movwf	?___fldiv+3
  8968  0075' 3000               	movlw	0
  8969  0076' 0084'              	movwf	?___fldiv+2
  8970  0077' 3000               	movlw	0
  8971  0078' 0083'              	movwf	?___fldiv+1
  8972  0079' 3000               	movlw	0
  8973  007A' 0082'              	movwf	?___fldiv
  8974  007B' 2800'              	goto	l658
  8975  007C'                    l2944:
  8976  007C' 0810'              	movf	___fldiv@bexp,w
  8977  007D' 0080'              	movwf	??___fldiv
  8978  007E' 0181'              	clrf	??___fldiv+1
  8979  007F' 0801'              	movf	??___fldiv+1,w
  8980  0080' 0083'              	movwf	??___fldiv+3
  8981  0081' 0811'              	movf	___fldiv@aexp,w
  8982  0082' 0200'              	subwf	??___fldiv,w
  8983  0083' 0082'              	movwf	??___fldiv+2
  8984  0084' 1C03               	skipc
  8985  0085' 0383'              	decf	??___fldiv+3,f
  8986  0086' 0802'              	movf	??___fldiv+2,w
  8987  0087' 3E7F               	addlw	127
  8988  0088' 008A'              	movwf	___fldiv@new_exp
  8989  0089' 3000               	movlw	0
  8990  008A' 3D03'              	addwfc	??___fldiv+3,w
  8991  008B' 008B'              	movwf	___fldiv@new_exp+1
  8992  008C'                    l2946:
  8993  008C' 0809'              	movf	___fldiv@b+3,w
  8994  008D' 0088'              	movwf	___fldiv@rem+3
  8995  008E' 0808'              	movf	___fldiv@b+2,w
  8996  008F' 0087'              	movwf	___fldiv@rem+2
  8997  0090' 0807'              	movf	___fldiv@b+1,w
  8998  0091' 0086'              	movwf	___fldiv@rem+1
  8999  0092' 0806'              	movf	___fldiv@b,w
  9000  0093' 0085'              	movwf	___fldiv@rem
  9001  0094'                    l2948:
  9002  0094' 3000               	movlw	0
  9003  0095' 0089'              	movwf	___fldiv@b+3
  9004  0096' 3000               	movlw	0
  9005  0097' 0088'              	movwf	___fldiv@b+2
  9006  0098' 3000               	movlw	0
  9007  0099' 0087'              	movwf	___fldiv@b+1
  9008  009A' 3000               	movlw	0
  9009  009B' 0086'              	movwf	___fldiv@b
  9010  009C'                    l2950:
  9011  009C' 3000               	movlw	0
  9012  009D' 008F'              	movwf	___fldiv@grs+3
  9013  009E' 3000               	movlw	0
  9014  009F' 008E'              	movwf	___fldiv@grs+2
  9015  00A0' 3000               	movlw	0
  9016  00A1' 008D'              	movwf	___fldiv@grs+1
  9017  00A2' 3000               	movlw	0
  9018  00A3' 008C'              	movwf	___fldiv@grs
  9019  00A4'                    l2952:
  9020  00A4' 0191'              	clrf	___fldiv@aexp
  9021  00A5' 2800'              	goto	l2972
  9022  00A6'                    l2954:
  9023  00A6' 0811'              	movf	___fldiv@aexp,w
  9024  00A7' 1903               	btfsc	3,2
  9025  00A8' 2800'              	goto	u3681
  9026  00A9' 2800'              	goto	u3680
  9027  00AA'                    u3681:
  9028  00AA' 2800'              	goto	l2964
  9029  00AB'                    u3680:
  9030  00AB'                    l2956:
  9031  00AB' 3001               	movlw	1
  9032  00AC'                    u3695:
  9033  00AC' 3585'              	lslf	___fldiv@rem,f
  9034  00AD' 0D86'              	rlf	___fldiv@rem+1,f
  9035  00AE' 0D87'              	rlf	___fldiv@rem+2,f
  9036  00AF' 0D88'              	rlf	___fldiv@rem+3,f
  9037  00B0' 0B89               	decfsz	9,f
  9038  00B1' 2800'              	goto	u3695
  9039  00B2' 3001               	movlw	1
  9040  00B3'                    u3705:
  9041  00B3' 3586'              	lslf	___fldiv@b,f
  9042  00B4' 0D87'              	rlf	___fldiv@b+1,f
  9043  00B5' 0D88'              	rlf	___fldiv@b+2,f
  9044  00B6' 0D89'              	rlf	___fldiv@b+3,f
  9045  00B7' 0B89               	decfsz	9,f
  9046  00B8' 2800'              	goto	u3705
  9047  00B9'                    l2958:
  9048  00B9' 1F8F'              	btfss	___fldiv@grs+3,7
  9049  00BA' 2800'              	goto	u3711
  9050  00BB' 2800'              	goto	u3710
  9051  00BC'                    u3711:
  9052  00BC' 2800'              	goto	l2962
  9053  00BD'                    u3710:
  9054  00BD'                    l2960:
  9055  00BD' 1406'              	bsf	___fldiv@b,0
  9056  00BE'                    l2962:
  9057  00BE' 3001               	movlw	1
  9058  00BF'                    u3725:
  9059  00BF' 358C'              	lslf	___fldiv@grs,f
  9060  00C0' 0D8D'              	rlf	___fldiv@grs+1,f
  9061  00C1' 0D8E'              	rlf	___fldiv@grs+2,f
  9062  00C2' 0D8F'              	rlf	___fldiv@grs+3,f
  9063  00C3' 0B89               	decfsz	9,f
  9064  00C4' 2800'              	goto	u3725
  9065  00C5'                    l2964:
  9066  00C5' 0805'              	movf	___fldiv@a+3,w
  9067  00C6' 0208'              	subwf	___fldiv@rem+3,w
  9068  00C7' 1D03               	skipz
  9069  00C8' 2800'              	goto	u3735
  9070  00C9' 0804'              	movf	___fldiv@a+2,w
  9071  00CA' 0207'              	subwf	___fldiv@rem+2,w
  9072  00CB' 1D03               	skipz
  9073  00CC' 2800'              	goto	u3735
  9074  00CD' 0803'              	movf	___fldiv@a+1,w
  9075  00CE' 0206'              	subwf	___fldiv@rem+1,w
  9076  00CF' 1D03               	skipz
  9077  00D0' 2800'              	goto	u3735
  9078  00D1' 0802'              	movf	___fldiv@a,w
  9079  00D2' 0205'              	subwf	___fldiv@rem,w
  9080  00D3'                    u3735:
  9081  00D3' 1C03               	skipc
  9082  00D4' 2800'              	goto	u3731
  9083  00D5' 2800'              	goto	u3730
  9084  00D6'                    u3731:
  9085  00D6' 2800'              	goto	l2970
  9086  00D7'                    u3730:
  9087  00D7'                    l2966:
  9088  00D7' 170F'              	bsf	___fldiv@grs+3,6
  9089  00D8'                    l2968:
  9090  00D8' 0802'              	movf	___fldiv@a,w
  9091  00D9' 0285'              	subwf	___fldiv@rem,f
  9092  00DA' 0803'              	movf	___fldiv@a+1,w
  9093  00DB' 3B86'              	subwfb	___fldiv@rem+1,f
  9094  00DC' 0804'              	movf	___fldiv@a+2,w
  9095  00DD' 3B87'              	subwfb	___fldiv@rem+2,f
  9096  00DE' 0805'              	movf	___fldiv@a+3,w
  9097  00DF' 3B88'              	subwfb	___fldiv@rem+3,f
  9098  00E0'                    l2970:
  9099  00E0' 3001               	movlw	1
  9100  00E1' 0791'              	addwf	___fldiv@aexp,f
  9101  00E2'                    l2972:
  9102  00E2' 301A               	movlw	26
  9103  00E3' 0211'              	subwf	___fldiv@aexp,w
  9104  00E4' 1C03               	skipc
  9105  00E5' 2800'              	goto	u3741
  9106  00E6' 2800'              	goto	u3740
  9107  00E7'                    u3741:
  9108  00E7' 2800'              	goto	l2954
  9109  00E8'                    u3740:
  9110  00E8'                    l2974:
  9111  00E8' 0808'              	movf	___fldiv@rem+3,w
  9112  00E9' 0407'              	iorwf	___fldiv@rem+2,w
  9113  00EA' 0406'              	iorwf	___fldiv@rem+1,w
  9114  00EB' 0405'              	iorwf	___fldiv@rem,w
  9115  00EC' 1903               	skipnz
  9116  00ED' 2800'              	goto	u3751
  9117  00EE' 2800'              	goto	u3750
  9118  00EF'                    u3751:
  9119  00EF' 2800'              	goto	l2988
  9120  00F0'                    u3750:
  9121  00F0'                    l2976:
  9122  00F0' 140C'              	bsf	___fldiv@grs,0
  9123  00F1' 2800'              	goto	l2988
  9124  00F2'                    l2978:
  9125  00F2' 3001               	movlw	1
  9126  00F3'                    u3765:
  9127  00F3' 3586'              	lslf	___fldiv@b,f
  9128  00F4' 0D87'              	rlf	___fldiv@b+1,f
  9129  00F5' 0D88'              	rlf	___fldiv@b+2,f
  9130  00F6' 0D89'              	rlf	___fldiv@b+3,f
  9131  00F7' 0B89               	decfsz	9,f
  9132  00F8' 2800'              	goto	u3765
  9133  00F9'                    l2980:
  9134  00F9' 1F8F'              	btfss	___fldiv@grs+3,7
  9135  00FA' 2800'              	goto	u3771
  9136  00FB' 2800'              	goto	u3770
  9137  00FC'                    u3771:
  9138  00FC' 2800'              	goto	l2984
  9139  00FD'                    u3770:
  9140  00FD'                    l2982:
  9141  00FD' 1406'              	bsf	___fldiv@b,0
  9142  00FE'                    l2984:
  9143  00FE' 3001               	movlw	1
  9144  00FF'                    u3785:
  9145  00FF' 358C'              	lslf	___fldiv@grs,f
  9146  0100' 0D8D'              	rlf	___fldiv@grs+1,f
  9147  0101' 0D8E'              	rlf	___fldiv@grs+2,f
  9148  0102' 0D8F'              	rlf	___fldiv@grs+3,f
  9149  0103' 0B89               	decfsz	9,f
  9150  0104' 2800'              	goto	u3785
  9151  0105'                    l2986:
  9152  0105' 30FF               	movlw	255
  9153  0106' 078A'              	addwf	___fldiv@new_exp,f
  9154  0107' 30FF               	movlw	255
  9155  0108' 3D8B'              	addwfc	___fldiv@new_exp+1,f
  9156  0109'                    l2988:
  9157  0109' 1F88'              	btfss	___fldiv@b+2,7
  9158  010A' 2800'              	goto	u3791
  9159  010B' 2800'              	goto	u3790
  9160  010C'                    u3791:
  9161  010C' 2800'              	goto	l2978
  9162  010D'                    u3790:
  9163  010D'                    l2990:
  9164  010D' 0191'              	clrf	___fldiv@aexp
  9165  010E'                    l2992:
  9166  010E' 1F8F'              	btfss	___fldiv@grs+3,7
  9167  010F' 2800'              	goto	u3801
  9168  0110' 2800'              	goto	u3800
  9169  0111'                    u3801:
  9170  0111' 2800'              	goto	l3000
  9171  0112'                    u3800:
  9172  0112'                    l2994:
  9173  0112' 30FF               	movlw	255
  9174  0113' 050C'              	andwf	___fldiv@grs,w
  9175  0114' 0080'              	movwf	??___fldiv
  9176  0115' 30FF               	movlw	255
  9177  0116' 050D'              	andwf	___fldiv@grs+1,w
  9178  0117' 0081'              	movwf	??___fldiv+1
  9179  0118' 30FF               	movlw	255
  9180  0119' 050E'              	andwf	___fldiv@grs+2,w
  9181  011A' 0082'              	movwf	??___fldiv+2
  9182  011B' 307F               	movlw	127
  9183  011C' 050F'              	andwf	___fldiv@grs+3,w
  9184  011D' 0083'              	movwf	??___fldiv+3
  9185  011E' 0803'              	movf	??___fldiv+3,w
  9186  011F' 0402'              	iorwf	??___fldiv+2,w
  9187  0120' 0401'              	iorwf	??___fldiv+1,w
  9188  0121' 0400'              	iorwf	??___fldiv,w
  9189  0122' 1903               	skipnz
  9190  0123' 2800'              	goto	u3811
  9191  0124' 2800'              	goto	u3810
  9192  0125'                    u3811:
  9193  0125' 2800'              	goto	l672
  9194  0126'                    u3810:
  9195  0126'                    l2996:
  9196  0126' 3001               	movlw	1
  9197  0127' 0091'              	movwf	___fldiv@aexp
  9198  0128' 2800'              	goto	l3000
  9199  0129'                    l672:
  9200  0129' 1C06'              	btfss	___fldiv@b,0
  9201  012A' 2800'              	goto	u3821
  9202  012B' 2800'              	goto	u3820
  9203  012C'                    u3821:
  9204  012C' 2800'              	goto	l3000
  9205  012D'                    u3820:
  9206  012D' 2800'              	goto	l2996
  9207  012E'                    l3000:
  9208  012E' 0811'              	movf	___fldiv@aexp,w
  9209  012F' 1903               	btfsc	3,2
  9210  0130' 2800'              	goto	u3831
  9211  0131' 2800'              	goto	u3830
  9212  0132'                    u3831:
  9213  0132' 2800'              	goto	l3010
  9214  0133'                    u3830:
  9215  0133'                    l3002:
  9216  0133' 3001               	movlw	1
  9217  0134' 0786'              	addwf	___fldiv@b,f
  9218  0135' 3000               	movlw	0
  9219  0136' 3D87'              	addwfc	___fldiv@b+1,f
  9220  0137' 3D88'              	addwfc	___fldiv@b+2,f
  9221  0138' 3D89'              	addwfc	___fldiv@b+3,f
  9222  0139'                    l3004:
  9223  0139' 1C09'              	btfss	___fldiv@b+3,0
  9224  013A' 2800'              	goto	u3841
  9225  013B' 2800'              	goto	u3840
  9226  013C'                    u3841:
  9227  013C' 2800'              	goto	l3010
  9228  013D'                    u3840:
  9229  013D'                    l3006:
  9230  013D' 0806'              	movf	___fldiv@b,w
  9231  013E' 0080'              	movwf	??___fldiv
  9232  013F' 0807'              	movf	___fldiv@b+1,w
  9233  0140' 0081'              	movwf	??___fldiv+1
  9234  0141' 0808'              	movf	___fldiv@b+2,w
  9235  0142' 0082'              	movwf	??___fldiv+2
  9236  0143' 0809'              	movf	___fldiv@b+3,w
  9237  0144' 0083'              	movwf	??___fldiv+3
  9238  0145' 3001               	movlw	1
  9239  0146' 0084'              	movwf	??___fldiv+4
  9240  0147'                    u3855:
  9241  0147' 3783'              	asrf	??___fldiv+3,f
  9242  0148' 0C82'              	rrf	??___fldiv+2,f
  9243  0149' 0C81'              	rrf	??___fldiv+1,f
  9244  014A' 0C80'              	rrf	??___fldiv,f
  9245  014B'                    u3850:
  9246  014B' 0B84'              	decfsz	??___fldiv+4,f
  9247  014C' 2800'              	goto	u3855
  9248  014D' 0803'              	movf	??___fldiv+3,w
  9249  014E' 0089'              	movwf	___fldiv@b+3
  9250  014F' 0802'              	movf	??___fldiv+2,w
  9251  0150' 0088'              	movwf	___fldiv@b+2
  9252  0151' 0801'              	movf	??___fldiv+1,w
  9253  0152' 0087'              	movwf	___fldiv@b+1
  9254  0153' 0800'              	movf	??___fldiv,w
  9255  0154' 0086'              	movwf	___fldiv@b
  9256  0155'                    l3008:
  9257  0155' 3001               	movlw	1
  9258  0156' 078A'              	addwf	___fldiv@new_exp,f
  9259  0157' 3000               	movlw	0
  9260  0158' 3D8B'              	addwfc	___fldiv@new_exp+1,f
  9261  0159'                    l3010:
  9262  0159' 080B'              	movf	___fldiv@new_exp+1,w
  9263  015A' 3A80               	xorlw	128
  9264  015B' 0080'              	movwf	??___fldiv
  9265  015C' 3080               	movlw	128
  9266  015D' 0200'              	subwf	??___fldiv,w
  9267  015E' 1D03               	skipz
  9268  015F' 2800'              	goto	u3865
  9269  0160' 30FF               	movlw	255
  9270  0161' 020A'              	subwf	___fldiv@new_exp,w
  9271  0162'                    u3865:
  9272  0162' 1C03               	skipc
  9273  0163' 2800'              	goto	u3861
  9274  0164' 2800'              	goto	u3860
  9275  0165'                    u3861:
  9276  0165' 2800'              	goto	l677
  9277  0166'                    u3860:
  9278  0166'                    l3012:
  9279  0166' 30FF               	movlw	255
  9280  0167' 0140               	movlb	0	; select bank0
  9281  0168' 008A'              	movwf	___fldiv@new_exp
  9282  0169' 3000               	movlw	0
  9283  016A' 008B'              	movwf	___fldiv@new_exp+1
  9284  016B' 3000               	movlw	0
  9285  016C' 0089'              	movwf	___fldiv@b+3
  9286  016D' 3000               	movlw	0
  9287  016E' 0088'              	movwf	___fldiv@b+2
  9288  016F' 3000               	movlw	0
  9289  0170' 0087'              	movwf	___fldiv@b+1
  9290  0171' 3000               	movlw	0
  9291  0172' 0086'              	movwf	___fldiv@b
  9292  0173'                    l677:
  9293  0173' 0140               	movlb	0	; select bank0
  9294  0174' 080B'              	movf	___fldiv@new_exp+1,w
  9295  0175' 3A80               	xorlw	128
  9296  0176' 0080'              	movwf	??___fldiv
  9297  0177' 3080               	movlw	128
  9298  0178' 0200'              	subwf	??___fldiv,w
  9299  0179' 1D03               	skipz
  9300  017A' 2800'              	goto	u3875
  9301  017B' 3001               	movlw	1
  9302  017C' 020A'              	subwf	___fldiv@new_exp,w
  9303  017D'                    u3875:
  9304  017D' 1803               	skipnc
  9305  017E' 2800'              	goto	u3871
  9306  017F' 2800'              	goto	u3870
  9307  0180'                    u3871:
  9308  0180' 2800'              	goto	l678
  9309  0181'                    u3870:
  9310  0181'                    l3014:
  9311  0181' 0140               	movlb	0	; select bank0
  9312  0182' 018A'              	clrf	___fldiv@new_exp
  9313  0183' 018B'              	clrf	___fldiv@new_exp+1
  9314  0184'                    l3016:
  9315  0184' 3000               	movlw	0
  9316  0185' 0089'              	movwf	___fldiv@b+3
  9317  0186' 3000               	movlw	0
  9318  0187' 0088'              	movwf	___fldiv@b+2
  9319  0188' 3000               	movlw	0
  9320  0189' 0087'              	movwf	___fldiv@b+1
  9321  018A' 3000               	movlw	0
  9322  018B' 0086'              	movwf	___fldiv@b
  9323  018C'                    l3018:
  9324  018C' 0189'              	clrf	___fldiv@sign
  9325  018D'                    l678:
  9326  018D' 0140               	movlb	0	; select bank0
  9327  018E' 080A'              	movf	___fldiv@new_exp,w
  9328  018F' 0090'              	movwf	___fldiv@bexp
  9329  0190'                    l3020:
  9330  0190' 1C10'              	btfss	___fldiv@bexp,0
  9331  0191' 2800'              	goto	u3881
  9332  0192' 2800'              	goto	u3880
  9333  0193'                    u3881:
  9334  0193' 2800'              	goto	l3024
  9335  0194'                    u3880:
  9336  0194'                    l3022:
  9337  0194' 1788'              	bsf	___fldiv@b+2,7
  9338  0195' 2800'              	goto	l680
  9339  0196'                    l3024:
  9340  0196' 307F               	movlw	127
  9341  0197' 0588'              	andwf	___fldiv@b+2,f
  9342  0198'                    l680:
  9343  0198' 0810'              	movf	___fldiv@bexp,w
  9344  0199' 0080'              	movwf	??___fldiv
  9345  019A' 3001               	movlw	1
  9346  019B'                    u3895:
  9347  019B' 3680'              	lsrf	??___fldiv,f
  9348  019C' 0B89               	decfsz	9,f
  9349  019D' 2800'              	goto	u3895
  9350  019E' 0800'              	movf	??___fldiv,w
  9351  019F' 0089'              	movwf	___fldiv@b+3
  9352  01A0' 0809'              	movf	___fldiv@sign,w
  9353  01A1' 0489'              	iorwf	___fldiv@b+3,f
  9354  01A2' 2800'              	goto	l2934
  9355  01A3'                    l658:
  9356  01A3' 0008               	return
  9357  01A4'                    __end_of___fldiv:
  9358                           
  9359                           	psect	text28
  9360  0000'                    __ptext28:	
  9361 ;; *************** function _get_TMR0L_from_voltage *****************
  9362 ;; Defined at:
  9363 ;;		line 194 in file "vtg_main.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  voltage         1    wreg     unsigned char 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  voltage         1    2[COMMON] unsigned char 
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      unsigned char 
  9370 ;; Registers used:
  9371 ;;		wreg
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9377 ;;      Params:         0       0       0       0       0       0       0       0
  9378 ;;      Locals:         1       0       0       0       0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0
  9380 ;;      Totals:         1       0       0       0       0       0       0       0
  9381 ;;Total ram usage:        1 bytes
  9382 ;; Hardware stack levels used: 1
  9383 ;; Hardware stack levels required when called: 1
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_main
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391  0000'                    _get_TMR0L_from_voltage:	
  9392                           ;psect for function _get_TMR0L_from_voltage
  9393                           
  9394                           
  9395                           ;incstack = 0
  9396                           ; Regs used in _get_TMR0L_from_voltage: [wreg]
  9397                           ;get_TMR0L_from_voltage@voltage stored from wreg
  9398  0000' 0082'              	movwf	get_TMR0L_from_voltage@voltage
  9399  0001'                    l3606:
  9400                           
  9401                           ;vtg_main.c: 194: uint8_t get_TMR0L_from_voltage(uint8_t voltage);vtg_main.c: 195: {;vtg
      +                          _main.c: 196:     if(voltage <= 5){
  9402  0001' 3006               	movlw	6
  9403  0002' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9404  0003' 1803               	skipnc
  9405  0004' 2800'              	goto	u4861
  9406  0005' 2800'              	goto	u4860
  9407  0006'                    u4861:
  9408  0006' 2800'              	goto	l3614
  9409  0007'                    u4860:
  9410  0007'                    l3608:
  9411                           
  9412                           ;vtg_main.c: 197:         return 149;
  9413  0007' 3095               	movlw	149
  9414  0008' 2800'              	goto	l147
  9415  0009'                    l3614:
  9416  0009' 300B               	movlw	11
  9417  000A' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9418  000B' 1803               	skipnc
  9419  000C' 2800'              	goto	u4871
  9420  000D' 2800'              	goto	u4870
  9421  000E'                    u4871:
  9422  000E' 2800'              	goto	l3622
  9423  000F'                    u4870:
  9424  000F' 2800'              	goto	l3608
  9425  0010'                    l3622:
  9426  0010' 3010               	movlw	16
  9427  0011' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9428  0012' 1803               	skipnc
  9429  0013' 2800'              	goto	u4881
  9430  0014' 2800'              	goto	u4880
  9431  0015'                    u4881:
  9432  0015' 2800'              	goto	l3630
  9433  0016'                    u4880:
  9434  0016' 2800'              	goto	l3608
  9435  0017'                    l3630:
  9436  0017' 3015               	movlw	21
  9437  0018' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9438  0019' 1803               	skipnc
  9439  001A' 2800'              	goto	u4891
  9440  001B' 2800'              	goto	u4890
  9441  001C'                    u4891:
  9442  001C' 2800'              	goto	l3638
  9443  001D'                    u4890:
  9444  001D' 2800'              	goto	l3608
  9445  001E'                    l3638:
  9446  001E' 301F               	movlw	31
  9447  001F' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9448  0020' 1803               	skipnc
  9449  0021' 2800'              	goto	u4901
  9450  0022' 2800'              	goto	u4900
  9451  0023'                    u4901:
  9452  0023' 2800'              	goto	l3646
  9453  0024'                    u4900:
  9454  0024' 2800'              	goto	l3608
  9455  0025'                    l3646:
  9456  0025' 3024               	movlw	36
  9457  0026' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9458  0027' 1803               	skipnc
  9459  0028' 2800'              	goto	u4911
  9460  0029' 2800'              	goto	u4910
  9461  002A'                    u4911:
  9462  002A' 2800'              	goto	l3654
  9463  002B'                    u4910:
  9464  002B' 2800'              	goto	l3608
  9465  002C'                    l3654:
  9466  002C' 3029               	movlw	41
  9467  002D' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9468  002E' 1803               	skipnc
  9469  002F' 2800'              	goto	u4921
  9470  0030' 2800'              	goto	u4920
  9471  0031'                    u4921:
  9472  0031' 2800'              	goto	l3662
  9473  0032'                    u4920:
  9474  0032' 2800'              	goto	l3608
  9475  0033'                    l3662:
  9476  0033' 3033               	movlw	51
  9477  0034' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9478  0035' 1803               	skipnc
  9479  0036' 2800'              	goto	u4931
  9480  0037' 2800'              	goto	u4930
  9481  0038'                    u4931:
  9482  0038' 2800'              	goto	l3670
  9483  0039'                    u4930:
  9484  0039'                    l3664:
  9485                           
  9486                           ;vtg_main.c: 218:         return 156;
  9487  0039' 309C               	movlw	156
  9488  003A' 2800'              	goto	l147
  9489  003B'                    l3670:
  9490  003B' 303D               	movlw	61
  9491  003C' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9492  003D' 1803               	skipnc
  9493  003E' 2800'              	goto	u4941
  9494  003F' 2800'              	goto	u4940
  9495  0040'                    u4941:
  9496  0040' 2800'              	goto	l3678
  9497  0041'                    u4940:
  9498  0041'                    l3672:
  9499                           
  9500                           ;vtg_main.c: 221:         return 164;
  9501  0041' 30A4               	movlw	164
  9502  0042' 2800'              	goto	l147
  9503  0043'                    l3678:
  9504  0043' 3046               	movlw	70
  9505  0044' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9506  0045' 1803               	skipnc
  9507  0046' 2800'              	goto	u4951
  9508  0047' 2800'              	goto	u4950
  9509  0048'                    u4951:
  9510  0048' 2800'              	goto	l3686
  9511  0049'                    u4950:
  9512  0049'                    l3680:
  9513                           
  9514                           ;vtg_main.c: 224:         return 172;
  9515  0049' 30AC               	movlw	172
  9516  004A' 2800'              	goto	l147
  9517  004B'                    l3686:
  9518  004B' 304F               	movlw	79
  9519  004C' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9520  004D' 1803               	skipnc
  9521  004E' 2800'              	goto	u4961
  9522  004F' 2800'              	goto	u4960
  9523  0050'                    u4961:
  9524  0050' 2800'              	goto	l3694
  9525  0051'                    u4960:
  9526  0051'                    l3688:
  9527                           
  9528                           ;vtg_main.c: 227:         return 180;
  9529  0051' 30B4               	movlw	180
  9530  0052' 2800'              	goto	l147
  9531  0053'                    l3694:
  9532  0053' 3074               	movlw	116
  9533  0054' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9534  0055' 1803               	skipnc
  9535  0056' 2800'              	goto	u4971
  9536  0057' 2800'              	goto	u4970
  9537  0058'                    u4971:
  9538  0058' 2800'              	goto	l3702
  9539  0059'                    u4970:
  9540  0059'                    l3696:
  9541                           
  9542                           ;vtg_main.c: 230:         return 187;
  9543  0059' 30BB               	movlw	187
  9544  005A' 2800'              	goto	l147
  9545  005B'                    l3702:
  9546  005B' 308D               	movlw	141
  9547  005C' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9548  005D' 1803               	skipnc
  9549  005E' 2800'              	goto	u4981
  9550  005F' 2800'              	goto	u4980
  9551  0060'                    u4981:
  9552  0060' 2800'              	goto	l3710
  9553  0061'                    u4980:
  9554  0061'                    l3704:
  9555                           
  9556                           ;vtg_main.c: 233:         return 195;
  9557  0061' 30C3               	movlw	195
  9558  0062' 2800'              	goto	l147
  9559  0063'                    l3710:
  9560  0063' 30A1               	movlw	161
  9561  0064' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9562  0065' 1803               	skipnc
  9563  0066' 2800'              	goto	u4991
  9564  0067' 2800'              	goto	u4990
  9565  0068'                    u4991:
  9566  0068' 2800'              	goto	l3718
  9567  0069'                    u4990:
  9568  0069'                    l3712:
  9569                           
  9570                           ;vtg_main.c: 236:         return 203;
  9571  0069' 30CB               	movlw	203
  9572  006A' 2800'              	goto	l147
  9573  006B'                    l3718:
  9574  006B' 30AB               	movlw	171
  9575  006C' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9576  006D' 1803               	skipnc
  9577  006E' 2800'              	goto	u5001
  9578  006F' 2800'              	goto	u5000
  9579  0070'                    u5001:
  9580  0070' 2800'              	goto	l3726
  9581  0071'                    u5000:
  9582  0071'                    l3720:
  9583                           
  9584                           ;vtg_main.c: 239:         return 210;
  9585  0071' 30D2               	movlw	210
  9586  0072' 2800'              	goto	l147
  9587  0073'                    l3726:
  9588  0073' 30B5               	movlw	181
  9589  0074' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9590  0075' 1803               	skipnc
  9591  0076' 2800'              	goto	u5011
  9592  0077' 2800'              	goto	u5010
  9593  0078'                    u5011:
  9594  0078' 2800'              	goto	l3734
  9595  0079'                    u5010:
  9596  0079'                    l3728:
  9597                           
  9598                           ;vtg_main.c: 242:         return 218;
  9599  0079' 30DA               	movlw	218
  9600  007A' 2800'              	goto	l147
  9601  007B'                    l3734:
  9602  007B' 30BF               	movlw	191
  9603  007C' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9604  007D' 1803               	skipnc
  9605  007E' 2800'              	goto	u5021
  9606  007F' 2800'              	goto	u5020
  9607  0080'                    u5021:
  9608  0080' 2800'              	goto	l3742
  9609  0081'                    u5020:
  9610  0081'                    l3736:
  9611                           
  9612                           ;vtg_main.c: 245:         return 226;
  9613  0081' 30E2               	movlw	226
  9614  0082' 2800'              	goto	l147
  9615  0083'                    l3742:
  9616  0083' 30C9               	movlw	201
  9617  0084' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9618  0085' 1803               	skipnc
  9619  0086' 2800'              	goto	u5031
  9620  0087' 2800'              	goto	u5030
  9621  0088'                    u5031:
  9622  0088' 2800'              	goto	l3750
  9623  0089'                    u5030:
  9624  0089'                    l3744:
  9625                           
  9626                           ;vtg_main.c: 248:         return 235;
  9627  0089' 30EB               	movlw	235
  9628  008A' 2800'              	goto	l147
  9629  008B'                    l3750:
  9630  008B' 30D3               	movlw	211
  9631  008C' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9632  008D' 1803               	skipnc
  9633  008E' 2800'              	goto	u5041
  9634  008F' 2800'              	goto	u5040
  9635  0090'                    u5041:
  9636  0090' 2800'              	goto	l3758
  9637  0091'                    u5040:
  9638  0091'                    l3752:
  9639                           
  9640                           ;vtg_main.c: 251:         return 242;
  9641  0091' 30F2               	movlw	242
  9642  0092' 2800'              	goto	l147
  9643  0093'                    l3758:
  9644  0093' 30DD               	movlw	221
  9645  0094' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9646  0095' 1803               	skipnc
  9647  0096' 2800'              	goto	u5051
  9648  0097' 2800'              	goto	u5050
  9649  0098'                    u5051:
  9650  0098' 2800'              	goto	l3766
  9651  0099'                    u5050:
  9652  0099'                    l3760:
  9653                           
  9654                           ;vtg_main.c: 254:         return 248;
  9655  0099' 30F8               	movlw	248
  9656  009A' 2800'              	goto	l147
  9657  009B'                    l3766:
  9658  009B' 30E7               	movlw	231
  9659  009C' 0202'              	subwf	get_TMR0L_from_voltage@voltage,w
  9660  009D' 1803               	skipnc
  9661  009E' 2800'              	goto	u5061
  9662  009F' 2800'              	goto	u5060
  9663  00A0'                    u5061:
  9664  00A0' 2800'              	goto	l182
  9665  00A1'                    u5060:
  9666  00A1'                    l3768:
  9667                           
  9668                           ;vtg_main.c: 257:         return 252;
  9669  00A1' 30FC               	movlw	252
  9670  00A2' 2800'              	goto	l147
  9671  00A3'                    l182:
  9672  00A3'                    l147:
  9673  00A3' 0008               	return
  9674  00A4'                    __end_of_get_TMR0L_from_voltage:
  9675                           
  9676                           	psect	text29
  9677  0000'                    __ptext29:	
  9678 ;; *************** function ___xxtofl *****************
  9679 ;; Defined at:
  9680 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  sign            1    wreg     unsigned char 
  9683 ;;  val             4    2[COMMON] long 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;  sign            1    0[BANK0 ] unsigned char 
  9686 ;;  arg             4    2[BANK0 ] unsigned long 
  9687 ;;  exp             1    1[BANK0 ] unsigned char 
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  4    2[COMMON] unsigned char 
  9690 ;; Registers used:
  9691 ;;		wreg, status,2, status,0
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9697 ;;      Params:         4       0       0       0       0       0       0       0
  9698 ;;      Locals:         0       6       0       0       0       0       0       0
  9699 ;;      Temps:          4       0       0       0       0       0       0       0
  9700 ;;      Totals:         8       6       0       0       0       0       0       0
  9701 ;;Total ram usage:       14 bytes
  9702 ;; Hardware stack levels used: 1
  9703 ;; Hardware stack levels required when called: 1
  9704 ;; This function calls:
  9705 ;;		Nothing
  9706 ;; This function is called by:
  9707 ;;		_main
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711  0000'                    ___xxtofl:	
  9712                           ;psect for function ___xxtofl
  9713                           
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9717                           ;___xxtofl@sign stored from wreg
  9718  0000' 0140               	movlb	0	; select bank0
  9719  0001' 0080'              	movwf	___xxtofl@sign
  9720  0002'                    l3784:
  9721  0002' 0800'              	movf	___xxtofl@sign,w
  9722  0003' 1903               	btfsc	3,2
  9723  0004' 2800'              	goto	u5071
  9724  0005' 2800'              	goto	u5070
  9725  0006'                    u5071:
  9726  0006' 2800'              	goto	l3790
  9727  0007'                    u5070:
  9728  0007'                    l3786:
  9729  0007' 1F85'              	btfss	___xxtofl@val+3,7
  9730  0008' 2800'              	goto	u5081
  9731  0009' 2800'              	goto	u5080
  9732  000A'                    u5081:
  9733  000A' 2800'              	goto	l3790
  9734  000B'                    u5080:
  9735  000B'                    l3788:
  9736  000B' 0902'              	comf	___xxtofl@val,w
  9737  000C' 0082'              	movwf	___xxtofl@arg
  9738  000D' 0903'              	comf	___xxtofl@val+1,w
  9739  000E' 0083'              	movwf	___xxtofl@arg+1
  9740  000F' 0904'              	comf	___xxtofl@val+2,w
  9741  0010' 0084'              	movwf	___xxtofl@arg+2
  9742  0011' 0905'              	comf	___xxtofl@val+3,w
  9743  0012' 0085'              	movwf	___xxtofl@arg+3
  9744  0013' 0A82'              	incf	___xxtofl@arg,f
  9745  0014' 1903               	skipnz
  9746  0015' 0A83'              	incf	___xxtofl@arg+1,f
  9747  0016' 1903               	skipnz
  9748  0017' 0A84'              	incf	___xxtofl@arg+2,f
  9749  0018' 1903               	skipnz
  9750  0019' 0A85'              	incf	___xxtofl@arg+3,f
  9751  001A' 2800'              	goto	l740
  9752  001B'                    l3790:
  9753  001B' 0805'              	movf	___xxtofl@val+3,w
  9754  001C' 0085'              	movwf	___xxtofl@arg+3
  9755  001D' 0804'              	movf	___xxtofl@val+2,w
  9756  001E' 0084'              	movwf	___xxtofl@arg+2
  9757  001F' 0803'              	movf	___xxtofl@val+1,w
  9758  0020' 0083'              	movwf	___xxtofl@arg+1
  9759  0021' 0802'              	movf	___xxtofl@val,w
  9760  0022' 0082'              	movwf	___xxtofl@arg
  9761  0023'                    l740:
  9762  0023' 0805'              	movf	___xxtofl@val+3,w
  9763  0024' 0404'              	iorwf	___xxtofl@val+2,w
  9764  0025' 0403'              	iorwf	___xxtofl@val+1,w
  9765  0026' 0402'              	iorwf	___xxtofl@val,w
  9766  0027' 1D03               	skipz
  9767  0028' 2800'              	goto	u5091
  9768  0029' 2800'              	goto	u5090
  9769  002A'                    u5091:
  9770  002A' 2800'              	goto	l741
  9771  002B'                    u5090:
  9772  002B'                    l3792:
  9773  002B' 3000               	movlw	0
  9774  002C' 0085'              	movwf	?___xxtofl+3
  9775  002D' 3000               	movlw	0
  9776  002E' 0084'              	movwf	?___xxtofl+2
  9777  002F' 3000               	movlw	0
  9778  0030' 0083'              	movwf	?___xxtofl+1
  9779  0031' 3000               	movlw	0
  9780  0032' 0082'              	movwf	?___xxtofl
  9781  0033' 2800'              	goto	l742
  9782  0034'                    l741:
  9783  0034' 3096               	movlw	150
  9784  0035' 0081'              	movwf	___xxtofl@exp
  9785  0036' 2800'              	goto	l3798
  9786  0037'                    l3796:
  9787  0037' 3001               	movlw	1
  9788  0038' 0781'              	addwf	___xxtofl@exp,f
  9789  0039' 3001               	movlw	1
  9790  003A'                    u5105:
  9791  003A' 3685'              	lsrf	___xxtofl@arg+3,f
  9792  003B' 0C84'              	rrf	___xxtofl@arg+2,f
  9793  003C' 0C83'              	rrf	___xxtofl@arg+1,f
  9794  003D' 0C82'              	rrf	___xxtofl@arg,f
  9795  003E' 0B89               	decfsz	9,f
  9796  003F' 2800'              	goto	u5105
  9797  0040'                    l3798:
  9798  0040' 30FE               	movlw	254
  9799  0041' 0505'              	andwf	___xxtofl@arg+3,w
  9800  0042' 1D03               	btfss	3,2
  9801  0043' 2800'              	goto	u5111
  9802  0044' 2800'              	goto	u5110
  9803  0045'                    u5111:
  9804  0045' 2800'              	goto	l3796
  9805  0046'                    u5110:
  9806  0046' 2800'              	goto	l3802
  9807  0047'                    l3800:
  9808  0047' 3001               	movlw	1
  9809  0048' 0781'              	addwf	___xxtofl@exp,f
  9810  0049' 3001               	movlw	1
  9811  004A' 0782'              	addwf	___xxtofl@arg,f
  9812  004B' 3000               	movlw	0
  9813  004C' 3D83'              	addwfc	___xxtofl@arg+1,f
  9814  004D' 3D84'              	addwfc	___xxtofl@arg+2,f
  9815  004E' 3D85'              	addwfc	___xxtofl@arg+3,f
  9816  004F' 3001               	movlw	1
  9817  0050'                    u5125:
  9818  0050' 3685'              	lsrf	___xxtofl@arg+3,f
  9819  0051' 0C84'              	rrf	___xxtofl@arg+2,f
  9820  0052' 0C83'              	rrf	___xxtofl@arg+1,f
  9821  0053' 0C82'              	rrf	___xxtofl@arg,f
  9822  0054' 0B89               	decfsz	9,f
  9823  0055' 2800'              	goto	u5125
  9824  0056'                    l3802:
  9825  0056' 30FF               	movlw	255
  9826  0057' 0505'              	andwf	___xxtofl@arg+3,w
  9827  0058' 1D03               	btfss	3,2
  9828  0059' 2800'              	goto	u5131
  9829  005A' 2800'              	goto	u5130
  9830  005B'                    u5131:
  9831  005B' 2800'              	goto	l3800
  9832  005C'                    u5130:
  9833  005C' 2800'              	goto	l3806
  9834  005D'                    l3804:
  9835  005D' 3001               	movlw	1
  9836  005E' 0281'              	subwf	___xxtofl@exp,f
  9837  005F' 3001               	movlw	1
  9838  0060'                    u5145:
  9839  0060' 3582'              	lslf	___xxtofl@arg,f
  9840  0061' 0D83'              	rlf	___xxtofl@arg+1,f
  9841  0062' 0D84'              	rlf	___xxtofl@arg+2,f
  9842  0063' 0D85'              	rlf	___xxtofl@arg+3,f
  9843  0064' 0B89               	decfsz	9,f
  9844  0065' 2800'              	goto	u5145
  9845  0066'                    l3806:
  9846  0066' 1B84'              	btfsc	___xxtofl@arg+2,7
  9847  0067' 2800'              	goto	u5151
  9848  0068' 2800'              	goto	u5150
  9849  0069'                    u5151:
  9850  0069' 2800'              	goto	l753
  9851  006A'                    u5150:
  9852  006A'                    l3808:
  9853  006A' 3002               	movlw	2
  9854  006B' 0201'              	subwf	___xxtofl@exp,w
  9855  006C' 1803               	skipnc
  9856  006D' 2800'              	goto	u5161
  9857  006E' 2800'              	goto	u5160
  9858  006F'                    u5161:
  9859  006F' 2800'              	goto	l3804
  9860  0070'                    u5160:
  9861  0070'                    l753:
  9862  0070' 1801'              	btfsc	___xxtofl@exp,0
  9863  0071' 2800'              	goto	u5171
  9864  0072' 2800'              	goto	u5170
  9865  0073'                    u5171:
  9866  0073' 2800'              	goto	l754
  9867  0074'                    u5170:
  9868  0074'                    l3810:
  9869  0074' 30FF               	movlw	255
  9870  0075' 0582'              	andwf	___xxtofl@arg,f
  9871  0076' 30FF               	movlw	255
  9872  0077' 0583'              	andwf	___xxtofl@arg+1,f
  9873  0078' 307F               	movlw	127
  9874  0079' 0584'              	andwf	___xxtofl@arg+2,f
  9875  007A' 30FF               	movlw	255
  9876  007B' 0585'              	andwf	___xxtofl@arg+3,f
  9877  007C'                    l754:
  9878  007C' 1003               	clrc
  9879  007D' 0C81'              	rrf	___xxtofl@exp,f
  9880  007E'                    l3812:
  9881  007E' 0801'              	movf	___xxtofl@exp,w
  9882  007F' 0086'              	movwf	??___xxtofl
  9883  0080' 0187'              	clrf	??___xxtofl+1
  9884  0081' 0188'              	clrf	??___xxtofl+2
  9885  0082' 0189'              	clrf	??___xxtofl+3
  9886  0083' 3018               	movlw	24
  9887  0084'                    u5185:
  9888  0084' 3586'              	lslf	??___xxtofl,f
  9889  0085' 0D87'              	rlf	??___xxtofl+1,f
  9890  0086' 0D88'              	rlf	??___xxtofl+2,f
  9891  0087' 0D89'              	rlf	??___xxtofl+3,f
  9892  0088'                    u5180:
  9893  0088' 0B89               	decfsz	9,f
  9894  0089' 2800'              	goto	u5185
  9895  008A' 0806'              	movf	??___xxtofl,w
  9896  008B' 0482'              	iorwf	___xxtofl@arg,f
  9897  008C' 0807'              	movf	??___xxtofl+1,w
  9898  008D' 0483'              	iorwf	___xxtofl@arg+1,f
  9899  008E' 0808'              	movf	??___xxtofl+2,w
  9900  008F' 0484'              	iorwf	___xxtofl@arg+2,f
  9901  0090' 0809'              	movf	??___xxtofl+3,w
  9902  0091' 0485'              	iorwf	___xxtofl@arg+3,f
  9903  0092'                    l3814:
  9904  0092' 0800'              	movf	___xxtofl@sign,w
  9905  0093' 1903               	btfsc	3,2
  9906  0094' 2800'              	goto	u5191
  9907  0095' 2800'              	goto	u5190
  9908  0096'                    u5191:
  9909  0096' 2800'              	goto	l3820
  9910  0097'                    u5190:
  9911  0097'                    l3816:
  9912  0097' 1F85'              	btfss	___xxtofl@val+3,7
  9913  0098' 2800'              	goto	u5201
  9914  0099' 2800'              	goto	u5200
  9915  009A'                    u5201:
  9916  009A' 2800'              	goto	l3820
  9917  009B'                    u5200:
  9918  009B'                    l3818:
  9919  009B' 1785'              	bsf	___xxtofl@arg+3,7
  9920  009C'                    l3820:
  9921  009C' 0805'              	movf	___xxtofl@arg+3,w
  9922  009D' 0085'              	movwf	?___xxtofl+3
  9923  009E' 0804'              	movf	___xxtofl@arg+2,w
  9924  009F' 0084'              	movwf	?___xxtofl+2
  9925  00A0' 0803'              	movf	___xxtofl@arg+1,w
  9926  00A1' 0083'              	movwf	?___xxtofl+1
  9927  00A2' 0802'              	movf	___xxtofl@arg,w
  9928  00A3' 0082'              	movwf	?___xxtofl
  9929  00A4'                    l742:
  9930  00A4' 0008               	return
  9931  00A5'                    __end_of___xxtofl:
  9932                           
  9933                           	psect	text30
  9934  0000'                    __ptext30:	
  9935 ;; *************** function _UART_Write_Text *****************
  9936 ;; Defined at:
  9937 ;;		line 129 in file "vtg_main.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  text            1    3[COMMON] PTR const unsigned char 
  9940 ;;		 -> buffer(64), 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;		None
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      void 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9952 ;;      Params:         1       0       0       0       0       0       0       0
  9953 ;;      Locals:         0       0       0       0       0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0
  9955 ;;      Totals:         1       0       0       0       0       0       0       0
  9956 ;;Total ram usage:        1 bytes
  9957 ;; Hardware stack levels used: 1
  9958 ;; Hardware stack levels required when called: 2
  9959 ;; This function calls:
  9960 ;;		_EUSART1_Write
  9961 ;; This function is called by:
  9962 ;;		_main
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966  0000'                    _UART_Write_Text:	
  9967                           ;psect for function _UART_Write_Text
  9968                           
  9969  0000'                    l3598:	
  9970                           ;incstack = 0
  9971                           ; Regs used in _UART_Write_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9972                           
  9973                           
  9974                           ;vtg_main.c: 130:     while (*text != '\0') {
  9975  0000' 2800'              	goto	l3604
  9976  0001'                    l3600:
  9977                           
  9978                           ;vtg_main.c: 131:         EUSART1_Write(*text);
  9979  0001' 0803'              	movf	UART_Write_Text@text,w
  9980  0002' 0086               	movwf	6
  9981  0003' 3002               	movlw	2	; select bank4/5
  9982  0004' 0087               	movwf	7
  9983  0005' 0801               	movf	1,w
  9984  0006' 3180' 2000' 3180'  	fcall	_EUSART1_Write
  9985  0009'                    l3602:
  9986                           
  9987                           ;vtg_main.c: 132:         text++;
  9988  0009' 3001               	movlw	1
  9989  000A' 0783'              	addwf	UART_Write_Text@text,f
  9990  000B'                    l3604:
  9991                           
  9992                           ;vtg_main.c: 130:     while (*text != '\0') {
  9993  000B' 0803'              	movf	UART_Write_Text@text,w
  9994  000C' 0086               	movwf	6
  9995  000D' 3002               	movlw	2	; select bank4/5
  9996  000E' 0087               	movwf	7
  9997  000F' 0801               	movf	1,w
  9998  0010' 1D03               	btfss	3,2
  9999  0011' 2800'              	goto	u4851
 10000  0012' 2800'              	goto	u4850
 10001  0013'                    u4851:
 10002  0013' 2800'              	goto	l3600
 10003  0014'                    u4850:
 10004  0014'                    l137:
 10005  0014' 0008               	return
 10006  0015'                    __end_of_UART_Write_Text:
 10007                           
 10008                           	psect	text31
 10009  0000'                    __ptext31:	
 10010 ;; *************** function _EUSART1_Write *****************
 10011 ;; Defined at:
 10012 ;;		line 123 in file "vtg_main.c"
 10013 ;; Parameters:    Size  Location     Type
 10014 ;;  txData          1    wreg     unsigned char 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;  txData          1    2[COMMON] unsigned char 
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      void 
 10019 ;; Registers used:
 10020 ;;		wreg
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10026 ;;      Params:         0       0       0       0       0       0       0       0
 10027 ;;      Locals:         1       0       0       0       0       0       0       0
 10028 ;;      Temps:          0       0       0       0       0       0       0       0
 10029 ;;      Totals:         1       0       0       0       0       0       0       0
 10030 ;;Total ram usage:        1 bytes
 10031 ;; Hardware stack levels used: 1
 10032 ;; Hardware stack levels required when called: 1
 10033 ;; This function calls:
 10034 ;;		Nothing
 10035 ;; This function is called by:
 10036 ;;		_UART_Write_Text
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040  0000'                    _EUSART1_Write:	
 10041                           ;psect for function _EUSART1_Write
 10042                           
 10043                           
 10044                           ;incstack = 0
 10045                           ; Regs used in _EUSART1_Write: [wreg]
 10046                           ;EUSART1_Write@txData stored from wreg
 10047  0000' 0082'              	movwf	EUSART1_Write@txData
 10048  0001'                    l3576:
 10049  0001'                    l128:	
 10050                           ;vtg_main.c: 123: void EUSART1_Write(uint8_t txData);vtg_main.c: 124: {;vtg_main.c: 125:
      +                               while (!PIR1bits.TX1IF);
 10051                           
 10052  0001' 014E               	movlb	14	; select bank14
 10053  0002' 1D8D               	btfss	13,3	;volatile
 10054  0003' 2800'              	goto	u4831
 10055  0004' 2800'              	goto	u4830
 10056  0005'                    u4831:
 10057  0005' 2800'              	goto	l128
 10058  0006'                    u4830:
 10059  0006'                    l3578:
 10060                           
 10061                           ;vtg_main.c: 126:     TX1REG = txData;
 10062  0006' 0802'              	movf	EUSART1_Write@txData,w
 10063  0007' 0142               	movlb	2	; select bank2
 10064  0008' 009A               	movwf	26	;volatile
 10065  0009'                    l131:
 10066  0009' 0008               	return
 10067  000A'                    __end_of_EUSART1_Write:
 10068                           
 10069                           	psect	text32
 10070  0000'                    __ptext32:	
 10071 ;; *************** function _UART_Init *****************
 10072 ;; Defined at:
 10073 ;;		line 99 in file "vtg_main.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;		None
 10076 ;; Auto vars:     Size  Location     Type
 10077 ;;		None
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  1    wreg      void 
 10080 ;; Registers used:
 10081 ;;		status,2
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10087 ;;      Params:         0       0       0       0       0       0       0       0
 10088 ;;      Locals:         0       0       0       0       0       0       0       0
 10089 ;;      Temps:          0       0       0       0       0       0       0       0
 10090 ;;      Totals:         0       0       0       0       0       0       0       0
 10091 ;;Total ram usage:        0 bytes
 10092 ;; Hardware stack levels used: 1
 10093 ;; Hardware stack levels required when called: 1
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		_main
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101  0000'                    _UART_Init:	
 10102                           ;psect for function _UART_Init
 10103                           
 10104  0000'                    l3590:	
 10105                           ;incstack = 0
 10106                           ; Regs used in _UART_Init: [status,2]
 10107                           
 10108                           
 10109                           ;vtg_main.c: 100:     RX1PPS = 0x14;
 10110  0000' 3014               	movlw	20
 10111  0001' 017D               	movlb	61	; select bank61
 10112  0002' 00CB               	movwf	75	;volatile
 10113                           
 10114                           ;vtg_main.c: 101:     RC3PPS = 0x05;
 10115  0003' 3005               	movlw	5
 10116  0004' 017E               	movlb	62	; select bank62
 10117  0005' 00A3               	movwf	35	;volatile
 10118                           
 10119                           ;vtg_main.c: 102:     ANSELA = 0x17;
 10120  0006' 3017               	movlw	23
 10121  0007' 00B8               	movwf	56	;volatile
 10122                           
 10123                           ;vtg_main.c: 103:     ANSELC = 0x27;
 10124  0008' 3027               	movlw	39
 10125  0009' 00CE               	movwf	78	;volatile
 10126                           
 10127                           ;vtg_main.c: 104:     ANSELCbits.ANSC3= 0;
 10128  000A' 11CE               	bcf	78,3	;volatile
 10129                           
 10130                           ;vtg_main.c: 105:     ANSELCbits.ANSC4 = 0;
 10131  000B' 124E               	bcf	78,4	;volatile
 10132                           
 10133                           ;vtg_main.c: 107:     BAUD1CON = 0x58;
 10134  000C' 3058               	movlw	88
 10135  000D' 0142               	movlb	2	; select bank2
 10136  000E' 009F               	movwf	31	;volatile
 10137                           
 10138                           ;vtg_main.c: 109:     RC1STA = 0x90;
 10139  000F' 3090               	movlw	144
 10140  0010' 009D               	movwf	29	;volatile
 10141                           
 10142                           ;vtg_main.c: 111:     TX1STA = 0x26;
 10143  0011' 3026               	movlw	38
 10144  0012' 009E               	movwf	30	;volatile
 10145                           
 10146                           ;vtg_main.c: 113:     SP1BRGL = 0xD0;
 10147  0013' 30D0               	movlw	208
 10148  0014' 009B               	movwf	27	;volatile
 10149  0015'                    l3592:
 10150                           
 10151                           ;vtg_main.c: 115:     SP1BRGH = 0x0;
 10152  0015' 019C               	clrf	28	;volatile
 10153  0016'                    l3594:
 10154                           
 10155                           ;vtg_main.c: 117:     PIE1bits.RC1IE = 1;
 10156  0016' 014E               	movlb	14	; select bank14
 10157  0017' 1617               	bsf	23,4	;volatile
 10158  0018'                    l3596:
 10159                           
 10160                           ;vtg_main.c: 118:     PIR1bits.RC1IF = 0;
 10161  0018' 120D               	bcf	13,4	;volatile
 10162  0019'                    l125:
 10163  0019' 0008               	return
 10164  001A'                    __end_of_UART_Init:
 10165                           
 10166                           	psect	intentry
 10167  0000'                    __pintentry:	
 10168 ;; *************** function _ISR *****************
 10169 ;; Defined at:
 10170 ;;		line 390 in file "vtg_main.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;		None
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;  adc_result      2    0[COMMON] unsigned short 
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10184 ;;      Params:         0       0       0       0       0       0       0       0
 10185 ;;      Locals:         2       0       0       0       0       0       0       0
 10186 ;;      Temps:          0       0       0       0       0       0       0       0
 10187 ;;      Totals:         2       0       0       0       0       0       0       0
 10188 ;;Total ram usage:        2 bytes
 10189 ;; Hardware stack levels used: 1
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		Interrupt level 1
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197  0000'                    _ISR:
 10198                           
 10199                           ;incstack = 0
 10200  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10201                           
 10202                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0]
 10203  0001' 3180'              	pagesel	$
 10204  0002'                    i1l3934:
 10205                           
 10206                           ;vtg_main.c: 392:   if (IOCCFbits.IOCCF0) {
 10207  0002' 017E               	movlb	62	; select bank62
 10208  0003' 1C55               	btfss	85,0	;volatile
 10209  0004' 2800'              	goto	u523_21
 10210  0005' 2800'              	goto	u523_20
 10211  0006'                    u523_21:
 10212  0006' 2800'              	goto	i1l207
 10213  0007'                    u523_20:
 10214  0007'                    i1l3936:
 10215                           
 10216                           ;vtg_main.c: 396:         timer_counter++;
 10217  0007' 3001               	movlw	1
 10218  0008' 0142               	movlb	2	; select bank2
 10219  0009' 0780'              	addwf	_timer_counter^(0+256),f	;volatile
 10220  000A' 3000               	movlw	0
 10221  000B' 3D80'              	addwfc	(_timer_counter+1)^(0+256),f	;volatile
 10222  000C'                    i1l3938:
 10223                           
 10224                           ;vtg_main.c: 398:         if(rcv_FREQUENCY == 1){
 10225  000C' 0140               	movlb	0	; select bank0
 10226  000D' 0305'              	decf	_rcv_FREQUENCY,w
 10227  000E' 1D03               	btfss	3,2
 10228  000F' 2800'              	goto	u524_21
 10229  0010' 2800'              	goto	u524_20
 10230  0011'                    u524_21:
 10231  0011' 2800'              	goto	i1l3964
 10232  0012'                    u524_20:
 10233  0012'                    i1l3940:
 10234                           
 10235                           ;vtg_main.c: 399:             if (edge == 0) {
 10236  0012' 0801'              	movf	_edge,w	;volatile
 10237  0013' 1D03               	btfss	3,2
 10238  0014' 2800'              	goto	u525_21
 10239  0015' 2800'              	goto	u525_20
 10240  0016'                    u525_21:
 10241  0016' 2800'              	goto	i1l3952
 10242  0017'                    u525_20:
 10243  0017'                    i1l3942:
 10244                           
 10245                           ;vtg_main.c: 400:                 LATAbits.LATA5 = 1;
 10246  0017' 1698               	bsf	24,5	;volatile
 10247  0018'                    i1l3944:
 10248                           
 10249                           ;vtg_main.c: 401:                 TMR0H = 0;
 10250  0018' 014B               	movlb	11	; select bank11
 10251  0019' 019D               	clrf	29	;volatile
 10252  001A'                    i1l3946:
 10253                           
 10254                           ;vtg_main.c: 402:                 TMR0L = timer_value;
 10255  001A' 0140               	movlb	0	; select bank0
 10256  001B' 0800'              	movf	_timer_value,w
 10257  001C' 014B               	movlb	11	; select bank11
 10258  001D' 009C               	movwf	28	;volatile
 10259  001E'                    i1l3948:
 10260                           
 10261                           ;vtg_main.c: 403:                 T0CON0bits.EN = 1;
 10262  001E' 179E               	bsf	30,7	;volatile
 10263  001F'                    i1l3950:
 10264                           
 10265                           ;vtg_main.c: 404:                 edge = 1;
 10266  001F' 3001               	movlw	1
 10267  0020' 0081'              	movwf	_edge	;volatile
 10268                           
 10269                           ;vtg_main.c: 405:             }
 10270  0021' 2800'              	goto	i1l3986
 10271  0022'                    i1l3952:
 10272  0022' 0301'              	decf	_edge,w	;volatile
 10273  0023' 1D03               	btfss	3,2
 10274  0024' 2800'              	goto	u526_21
 10275  0025' 2800'              	goto	u526_20
 10276  0026'                    u526_21:
 10277  0026' 2800'              	goto	i1l3986
 10278  0027'                    u526_20:
 10279  0027'                    i1l3954:
 10280                           
 10281                           ;vtg_main.c: 407:                 LATAbits.LATA5 = 1;
 10282  0027' 1698               	bsf	24,5	;volatile
 10283  0028'                    i1l3956:
 10284                           
 10285                           ;vtg_main.c: 408:                 TMR0H = 0;
 10286  0028' 014B               	movlb	11	; select bank11
 10287  0029' 019D               	clrf	29	;volatile
 10288  002A'                    i1l3958:
 10289                           
 10290                           ;vtg_main.c: 409:                 TMR0L = timer_value;
 10291  002A' 0140               	movlb	0	; select bank0
 10292  002B' 0800'              	movf	_timer_value,w
 10293  002C' 014B               	movlb	11	; select bank11
 10294  002D' 009C               	movwf	28	;volatile
 10295  002E'                    i1l3960:
 10296                           
 10297                           ;vtg_main.c: 410:                 T0CON0bits.EN = 1;
 10298  002E' 179E               	bsf	30,7	;volatile
 10299  002F'                    i1l3962:
 10300                           
 10301                           ;vtg_main.c: 411:                 edge = 0;
 10302  002F' 0181'              	clrf	_edge	;volatile
 10303  0030' 2800'              	goto	i1l3986
 10304  0031'                    i1l3964:
 10305  0031' 0805'              	movf	_rcv_FREQUENCY,w
 10306  0032' 1D03               	btfss	3,2
 10307  0033' 2800'              	goto	u527_21
 10308  0034' 2800'              	goto	u527_20
 10309  0035'                    u527_21:
 10310  0035' 2800'              	goto	i1l3986
 10311  0036'                    u527_20:
 10312  0036'                    i1l3966:
 10313                           
 10314                           ;vtg_main.c: 415:             if (edge == 0) {
 10315  0036' 0801'              	movf	_edge,w	;volatile
 10316  0037' 1D03               	btfss	3,2
 10317  0038' 2800'              	goto	u528_21
 10318  0039' 2800'              	goto	u528_20
 10319  003A'                    u528_21:
 10320  003A' 2800'              	goto	i1l3978
 10321  003B'                    u528_20:
 10322  003B'                    i1l3968:
 10323                           
 10324                           ;vtg_main.c: 416:                 LATAbits.LATA5 = 1;
 10325  003B' 1698               	bsf	24,5	;volatile
 10326  003C'                    i1l3970:
 10327                           
 10328                           ;vtg_main.c: 417:                 TMR0H = 0;
 10329  003C' 014B               	movlb	11	; select bank11
 10330  003D' 019D               	clrf	29	;volatile
 10331  003E'                    i1l3972:
 10332                           
 10333                           ;vtg_main.c: 418:                 TMR0L = timer_value;
 10334  003E' 0140               	movlb	0	; select bank0
 10335  003F' 0800'              	movf	_timer_value,w
 10336  0040' 014B               	movlb	11	; select bank11
 10337  0041' 009C               	movwf	28	;volatile
 10338  0042'                    i1l3974:
 10339                           
 10340                           ;vtg_main.c: 419:                 T0CON0bits.EN = 1;
 10341  0042' 179E               	bsf	30,7	;volatile
 10342  0043'                    i1l3976:
 10343                           
 10344                           ;vtg_main.c: 420:                 edge++;
 10345  0043' 3001               	movlw	1
 10346  0044' 0781'              	addwf	_edge,f	;volatile
 10347                           
 10348                           ;vtg_main.c: 421:             }
 10349  0045' 2800'              	goto	i1l3986
 10350  0046'                    i1l3978:
 10351  0046' 0301'              	decf	_edge,w	;volatile
 10352  0047' 1D03               	btfss	3,2
 10353  0048' 2800'              	goto	u529_21
 10354  0049' 2800'              	goto	u529_20
 10355  004A'                    u529_21:
 10356  004A' 2800'              	goto	i1l3986
 10357  004B'                    u529_20:
 10358  004B'                    i1l3980:
 10359                           
 10360                           ;vtg_main.c: 423:                 LATAbits.LATA5 = 1;
 10361  004B' 1698               	bsf	24,5	;volatile
 10362  004C'                    i1l3982:
 10363                           
 10364                           ;vtg_main.c: 424:                 TMR0H = 0;
 10365  004C' 014B               	movlb	11	; select bank11
 10366  004D' 019D               	clrf	29	;volatile
 10367                           
 10368                           ;vtg_main.c: 425:                 TMR0L = 0;
 10369  004E' 019C               	clrf	28	;volatile
 10370  004F'                    i1l3984:
 10371                           
 10372                           ;vtg_main.c: 426:                 T0CON0bits.EN = 0;
 10373  004F' 139E               	bcf	30,7	;volatile
 10374                           
 10375                           ;vtg_main.c: 427:                 edge = 0;
 10376  0050' 0181'              	clrf	_edge	;volatile
 10377  0051'                    i1l3986:
 10378                           
 10379                           ;vtg_main.c: 432:         IOCCFbits.IOCCF0 = 0;
 10380  0051' 017E               	movlb	62	; select bank62
 10381  0052' 1055               	bcf	85,0	;volatile
 10382                           
 10383                           ;vtg_main.c: 433:     }
 10384  0053' 2800'              	goto	i1l4010
 10385  0054'                    i1l207:	
 10386                           ;vtg_main.c: 435:   else if (PIR0bits.TMR0IF) {
 10387                           
 10388  0054' 014E               	movlb	14	; select bank14
 10389  0055' 1E8C               	btfss	12,5	;volatile
 10390  0056' 2800'              	goto	u530_21
 10391  0057' 2800'              	goto	u530_20
 10392  0058'                    u530_21:
 10393  0058' 2800'              	goto	i1l4010
 10394  0059'                    u530_20:
 10395  0059'                    i1l3988:
 10396                           
 10397                           ;vtg_main.c: 436:         if (count == 0) {
 10398  0059' 0140               	movlb	0	; select bank0
 10399  005A' 0809'              	movf	_count,w	;volatile
 10400  005B' 1D03               	btfss	3,2
 10401  005C' 2800'              	goto	u531_21
 10402  005D' 2800'              	goto	u531_20
 10403  005E'                    u531_21:
 10404  005E' 2800'              	goto	i1l4000
 10405  005F'                    u531_20:
 10406  005F'                    i1l3990:
 10407                           
 10408                           ;vtg_main.c: 437:             LATAbits.LATA5 = 0;
 10409  005F' 1298               	bcf	24,5	;volatile
 10410  0060'                    i1l3992:
 10411                           
 10412                           ;vtg_main.c: 438:             TMR0H = 0;
 10413  0060' 014B               	movlb	11	; select bank11
 10414  0061' 019D               	clrf	29	;volatile
 10415  0062'                    i1l3994:
 10416                           
 10417                           ;vtg_main.c: 439:             TMR0L = 242;
 10418  0062' 30F2               	movlw	242
 10419  0063' 009C               	movwf	28	;volatile
 10420  0064'                    i1l3996:
 10421                           
 10422                           ;vtg_main.c: 440:             T0CON0bits.EN = 1;
 10423  0064' 179E               	bsf	30,7	;volatile
 10424  0065'                    i1l3998:
 10425                           
 10426                           ;vtg_main.c: 441:             count = 1;
 10427  0065' 3001               	movlw	1
 10428  0066' 0140               	movlb	0	; select bank0
 10429  0067' 0089'              	movwf	_count	;volatile
 10430                           
 10431                           ;vtg_main.c: 442:         }
 10432  0068' 2800'              	goto	i1l4008
 10433  0069'                    i1l4000:
 10434  0069' 0309'              	decf	_count,w	;volatile
 10435  006A' 1D03               	btfss	3,2
 10436  006B' 2800'              	goto	u532_21
 10437  006C' 2800'              	goto	u532_20
 10438  006D'                    u532_21:
 10439  006D' 2800'              	goto	i1l4008
 10440  006E'                    u532_20:
 10441  006E'                    i1l4002:
 10442                           
 10443                           ;vtg_main.c: 444:             LATAbits.LATA5 = 1;
 10444  006E' 1698               	bsf	24,5	;volatile
 10445  006F'                    i1l4004:
 10446                           
 10447                           ;vtg_main.c: 445:             TMR0H = 0;
 10448  006F' 014B               	movlb	11	; select bank11
 10449  0070' 019D               	clrf	29	;volatile
 10450                           
 10451                           ;vtg_main.c: 446:             TMR0L = 0;
 10452  0071' 019C               	clrf	28	;volatile
 10453  0072'                    i1l4006:
 10454                           
 10455                           ;vtg_main.c: 447:             T0CON0bits.EN = 0;
 10456  0072' 139E               	bcf	30,7	;volatile
 10457                           
 10458                           ;vtg_main.c: 448:             count = 0;
 10459  0073' 0140               	movlb	0	; select bank0
 10460  0074' 0189'              	clrf	_count	;volatile
 10461  0075'                    i1l4008:
 10462                           
 10463                           ;vtg_main.c: 450:         PIR0bits.TMR0IF = 0;
 10464  0075' 014E               	movlb	14	; select bank14
 10465  0076' 128C               	bcf	12,5	;volatile
 10466  0077'                    i1l4010:
 10467                           
 10468                           ;vtg_main.c: 452:    if (PIR1bits.RC1IF) {
 10469  0077' 014E               	movlb	14	; select bank14
 10470  0078' 1E0D               	btfss	13,4	;volatile
 10471  0079' 2800'              	goto	u533_21
 10472  007A' 2800'              	goto	u533_20
 10473  007B'                    u533_21:
 10474  007B' 2800'              	goto	i1l4032
 10475  007C'                    u533_20:
 10476  007C'                    i1l4012:
 10477                           
 10478                           ;vtg_main.c: 453:         PIR1bits.RC1IF = 0;
 10479  007C' 120D               	bcf	13,4	;volatile
 10480  007D'                    i1l4014:
 10481                           
 10482                           ;vtg_main.c: 454:         byte = RC1REG;
 10483  007D' 0142               	movlb	2	; select bank2
 10484  007E' 0819               	movf	25,w	;volatile
 10485  007F' 0140               	movlb	0	; select bank0
 10486  0080' 0086'              	movwf	_byte
 10487  0081'                    i1l4016:
 10488                           
 10489                           ;vtg_main.c: 466:         if (cnt == 0 && byte != 0xAA) {
 10490  0081' 0804'              	movf	_cnt,w
 10491  0082' 1D03               	btfss	3,2
 10492  0083' 2800'              	goto	u534_21
 10493  0084' 2800'              	goto	u534_20
 10494  0085'                    u534_21:
 10495  0085' 2800'              	goto	i1l4022
 10496  0086'                    u534_20:
 10497  0086'                    i1l4018:
 10498  0086' 30AA               	movlw	170
 10499  0087' 0606'              	xorwf	_byte,w
 10500  0088' 1903               	btfsc	3,2
 10501  0089' 2800'              	goto	u535_21
 10502  008A' 2800'              	goto	u535_20
 10503  008B'                    u535_21:
 10504  008B' 2800'              	goto	i1l4022
 10505  008C'                    u535_20:
 10506  008C' 2800'              	goto	i1l224
 10507  008D'                    i1l4022:
 10508                           
 10509                           ;vtg_main.c: 471:         rx_buffer[cnt++] = byte;
 10510  008D' 0804'              	movf	_cnt,w
 10511  008E' 3E00'              	addlw	(low (_rx_buffer| (0+256)))& (0+255)
 10512  008F' 0086               	movwf	6
 10513  0090' 3001               	movlw	1	; select bank2/3
 10514  0091' 0087               	movwf	7
 10515  0092' 0806'              	movf	_byte,w
 10516  0093' 0081               	movwf	1
 10517  0094'                    i1l4024:
 10518  0094' 3001               	movlw	1
 10519  0095' 0784'              	addwf	_cnt,f
 10520  0096'                    i1l4026:
 10521                           
 10522                           ;vtg_main.c: 473:         if (cnt >= 3) {
 10523  0096' 3003               	movlw	3
 10524  0097' 0204'              	subwf	_cnt,w
 10525  0098' 1C03               	skipc
 10526  0099' 2800'              	goto	u536_21
 10527  009A' 2800'              	goto	u536_20
 10528  009B'                    u536_21:
 10529  009B' 2800'              	goto	i1l4032
 10530  009C'                    u536_20:
 10531  009C'                    i1l4028:
 10532                           
 10533                           ;vtg_main.c: 475:             rcv_current_value = rx_buffer[1];
 10534  009C' 0142               	movlb	2	; select bank2
 10535  009D' 0801'              	movf	(_rx_buffer^(0+256)+1),w	;volatile
 10536  009E' 0140               	movlb	0	; select bank0
 10537  009F' 0087'              	movwf	_rcv_current_value
 10538                           
 10539                           ;vtg_main.c: 476:             rcv_FREQUENCY = rx_buffer[2];
 10540  00A0' 0142               	movlb	2	; select bank2
 10541  00A1' 0802'              	movf	(_rx_buffer^(0+256)+2),w	;volatile
 10542  00A2' 0140               	movlb	0	; select bank0
 10543  00A3' 0085'              	movwf	_rcv_FREQUENCY
 10544  00A4'                    i1l4030:
 10545                           
 10546                           ;vtg_main.c: 477:             cnt = 0;
 10547  00A4' 0184'              	clrf	_cnt
 10548  00A5'                    i1l4032:
 10549                           
 10550                           ;vtg_main.c: 488:         if (PIR1bits.ADIF) {
 10551  00A5' 014E               	movlb	14	; select bank14
 10552  00A6' 1C0D               	btfss	13,0	;volatile
 10553  00A7' 2800'              	goto	u537_21
 10554  00A8' 2800'              	goto	u537_20
 10555  00A9'                    u537_21:
 10556  00A9' 2800'              	goto	i1l224
 10557  00AA'                    u537_20:
 10558  00AA'                    i1l4034:
 10559                           
 10560                           ;vtg_main.c: 489:             PIR1bits.ADIF = 0;
 10561  00AA' 100D               	bcf	13,0	;volatile
 10562  00AB'                    i1l4036:
 10563                           
 10564                           ;vtg_main.c: 490:             uint16_t adc_result = (ADRESH << 8) | ADRESL;
 10565  00AB' 0141               	movlb	1	; select bank1
 10566  00AC' 081C               	movf	28,w	;volatile
 10567  00AD' 0081'              	movwf	ISR@adc_result+1
 10568  00AE' 081B               	movf	27,w	;volatile
 10569  00AF' 0080'              	movwf	ISR@adc_result
 10570                           
 10571                           ;vtg_main.c: 493:             switch (adc_channel_index) {
 10572  00B0' 2800'              	goto	i1l4046
 10573  00B1'                    i1l4038:
 10574                           
 10575                           ;vtg_main.c: 495:                     voltage_val = adc_result;
 10576  00B1' 0801'              	movf	ISR@adc_result+1,w
 10577  00B2' 0080'              	movwf	(_voltage_val+1)^(0+128)	;volatile
 10578  00B3' 0800'              	movf	ISR@adc_result,w
 10579  00B4' 0080'              	movwf	_voltage_val^(0+128)	;volatile
 10580                           
 10581                           ;vtg_main.c: 496:                     break;
 10582  00B5' 2800'              	goto	i1l229
 10583  00B6'                    i1l4040:
 10584                           
 10585                           ;vtg_main.c: 498:                     current_val = adc_result;
 10586  00B6' 0801'              	movf	ISR@adc_result+1,w
 10587  00B7' 0142               	movlb	2	; select bank2
 10588  00B8' 0080'              	movwf	(_current_val+1)^(0+256)	;volatile
 10589  00B9' 0800'              	movf	ISR@adc_result,w
 10590  00BA' 0080'              	movwf	_current_val^(0+256)	;volatile
 10591                           
 10592                           ;vtg_main.c: 499:                     break;
 10593  00BB' 2800'              	goto	i1l229
 10594  00BC'                    i1l4042:
 10595                           
 10596                           ;vtg_main.c: 501:                     temperature_val = adc_result;
 10597  00BC' 0801'              	movf	ISR@adc_result+1,w
 10598  00BD' 0142               	movlb	2	; select bank2
 10599  00BE' 0080'              	movwf	(_temperature_val+1)^(0+256)	;volatile
 10600  00BF' 0800'              	movf	ISR@adc_result,w
 10601  00C0' 0080'              	movwf	_temperature_val^(0+256)	;volatile
 10602                           
 10603                           ;vtg_main.c: 502:                     break;
 10604  00C1' 2800'              	goto	i1l229
 10605  00C2'                    i1l4046:
 10606  00C2' 0800'              	movf	_adc_channel_index,w	;volatile
 10607                           
 10608                           ; Switch size 1, requested type "simple"
 10609                           ; Number of cases is 3, Range of values is 0 to 2
 10610                           ; switch strategies available:
 10611                           ; Name         Instructions Cycles
 10612                           ; simple_byte           10     6 (average)
 10613                           ; direct_byte           12     6 (fixed)
 10614                           ; jumptable            260     6 (fixed)
 10615                           ;	Chosen strategy is simple_byte
 10616  00C3' 3A00               	xorlw	0	; case 0
 10617  00C4' 1903               	skipnz
 10618  00C5' 2800'              	goto	i1l4038
 10619  00C6' 3A01               	xorlw	1	; case 1
 10620  00C7' 1903               	skipnz
 10621  00C8' 2800'              	goto	i1l4040
 10622  00C9' 3A03               	xorlw	3	; case 2
 10623  00CA' 1903               	skipnz
 10624  00CB' 2800'              	goto	i1l4042
 10625  00CC' 2800'              	goto	i1l229
 10626  00CD'                    i1l229:
 10627                           
 10628                           ;vtg_main.c: 506:             ADCON0bits.GO = 1;
 10629  00CD' 0141               	movlb	1	; select bank1
 10630  00CE' 149D               	bsf	29,1	;volatile
 10631  00CF'                    i1l224:
 10632  00CF' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10633  00D0' 0009               	retfie
 10634  00D1'                    __end_of_ISR:
 10635  0001                     ___latbits      equ	1
 10636  007E                     btemp           set	126	;btemp
 10637  007E                     int$flags       set	126
 10638  007E                     wtemp0          set	126
 10639                           
 10640                           	psect	config
 10641                           
 10642                           ;Config register CONFIG1 @ 0x8007
 10643                           ;	External Oscillator Mode Selection bits
 10644                           ;	FEXTOSC = OFF, Oscillator not enabled
 10645                           ;	Power-up Default Value for COSC bits
 10646                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
 10647                           ;	Clock Out Enable bit
 10648                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
 10649                           ;	VDD Range Analog Calibration Selection bit
 10650                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
 10651  8007                     	org	32775
 10652  8007  3FED               	dw	16365
 10653                           
 10654                           ;Config register CONFIG2 @ 0x8008
 10655                           ;	Master Clear Enable bit
 10656                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
 10657                           ;	Power-up Timer Selection bits
 10658                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10659                           ;	WDT Operating Mode bits
 10660                           ;	WDTE = OFF, WDT disabled; SEN is ignored
 10661                           ;	Brown-out Reset Enable bits
 10662                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 10663                           ;	Brown-out Reset Voltage Selection bit
 10664                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
 10665                           ;	PPSLOCKED One-Way Set Enable bit
 10666                           ;	PPS1WAY = OFF, The PPSLOCKED bit can be set and cleared as needed (unlocking sequence 
      +                          is required)
 10667                           ;	Stack Overflow/Underflow Reset Enable bit
 10668                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a reset
 10669  8008                     	org	32776
 10670  8008  27E7               	dw	10215
 10671                           
 10672                           ;Config register CONFIG4 @ 0x800A
 10673                           ;	Boot Block Size Selection bits
 10674                           ;	BBSIZE = BB512, 512 words boot block size
 10675                           ;	Boot Block Enable bit
 10676                           ;	BBEN = OFF, Boot Block is disabled
 10677                           ;	SAF Enable bit
 10678                           ;	SAFEN = OFF, SAF is disabled
 10679                           ;	Application Block Write Protection bit
 10680                           ;	WRTAPP = OFF, Application Block is not write-protected
 10681                           ;	Boot Block Write Protection bit
 10682                           ;	WRTB = OFF, Boot Block is not write-protected
 10683                           ;	Configuration Registers Write Protection bit
 10684                           ;	WRTC = OFF, Configuration Registers are not write-protected
 10685                           ;	Storage Area Flash (SAF) Write Protection bit
 10686                           ;	WRTSAF = OFF, SAF is not write-protected
 10687                           ;	Low Voltage Programming Enable bit
 10688                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
 10689  800A                     	org	32778
 10690  800A  3FFF               	dw	16383
 10691                           
 10692                           ;Config register CONFIG5 @ 0x800B
 10693                           ;	User Program Flash Memory Code Protection bit
 10694                           ;	CP = OFF, User Program Flash Memory code protection is disabled
 10695  800B                     	org	32779
 10696  800B  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    332
    Data        4
    BSS         194
    Persistent  33
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     69      80
    BANK1            80     78      80
    BANK2            80      0      40
    BANK3            80      0      80
    BANK4            80      0      64
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(BANK4[64]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(BANK4[64]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S855$buffer	PTR unsigned char  size(2) Largest target is 64
		 -> buffer(BANK4[64]), 

    S855$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 64
		 -> buffer(BANK4[64]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 64
		 -> buffer(BANK4[64]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_1(CODE[25]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _vfpfcnvrt->_read_prec_or_width
    _vfpfcnvrt->_utoa
    _utoa->___lwdiv
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->___fladd
    _efgtoa->___fldiv
    _efgtoa->___fleq
    _efgtoa->___fltol
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___flmul->___xxtofl
    _UART_Write_Text->_EUSART1_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   20831
                          _UART_Init
                    _UART_Write_Text
                            ___flmul
                           ___xxtofl
             _get_TMR0L_from_voltage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    14     13   17336
                                             53 BANK1     25    12     13
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     3      5   17006
                                             66 BANK0      3     3      0
                                             48 BANK1      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           16    12      4   16770
                                             55 BANK0     11    11      0
                                             44 BANK1      4     0      4
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                11     7      4    1712
                                              9 COMMON     1     1      0
                                             18 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     161
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     164
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   8     6      2     276
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      94
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              56    49      7   13450
                                             44 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3      77
                                              2 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1047
                                              8 COMMON     1     1      0
                                             11 BANK0      7     2      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     5      3     481
                                              6 COMMON     2     2      0
                                              5 BANK0      6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     335
                                              2 COMMON     4     0      4
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4      69
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             18 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     201
                                              2 COMMON     4     0      4
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     346
                                              2 COMMON     8     4      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2037
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    1988
                                              2 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    2473
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     232
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     192
                                             32 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1131
                                              2 COMMON     8     0      8
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (1) _get_TMR0L_from_voltage                               1     1      0     609
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      1     0      1      75
                                              3 COMMON     1     0      1
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Write                                        1     1      0      29
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  2     2      0      67
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_Write_Text
     _EUSART1_Write
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _get_TMR0L_from_voltage
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            16      0       0      0.0%
BIGRAM             496      0       0      0.0%
COMMON              14     10      12     85.7%
BANK0               80     69      80    100.0%
BANK1               80     78      80    100.0%
BANK2               80      0      40     50.0%
BANK3               80      0      80    100.0%
BANK4               80      0      64     80.0%
BANK5               80      0       0      0.0%
BANK6               16      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     358      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 12 19:06:41 2025

                  ___fldiv@aexp 0011                    ___fldiv@bexp 0010                    ___fldiv@sign 0009  
           ___wmul@multiplicand 0004             __Umul8_16@word_mpld 0002                             l131 0009  
                           l125 0019                             l301 001E                             l128 0001  
                           l137 0014                             l147 00A3                             l500 0059  
                           l182 00A3                             l503 006E                             l600 0056  
                           l604 00D5                             l196 007B                             l621 0166  
                           l613 020B                             l702 01B8                             l606 00AF  
                           l631 01AB                             l480 0071                             l625 0188  
                           l801 0065                             l474 004E                             l642 01FE  
                           l634 01DE                             l715 0013                             l643 020B  
                           l299 000A                             l740 0023                             l468 001D  
                           l708 0230                             l820 0257                             l804 060D  
                           l741 0034                             l469 0039                             l485 008A  
                           l477 001D                             l717 0023                             l493 006E  
                           l742 00A4                             l646 001F                             l830 0463  
                           l680 0198                             l672 0129                             l656 004F  
                           l753 0070                             l489 000A                             l754 007C  
                           l658 01A3                             l914 0041                             l762 001F  
                           l915 00EA                             l579 0039                             l851 000E  
                           l908 007E                             l932 0015                             l677 0173  
                           l589 0031                             l678 018D                             l919 00E2  
                           l935 0021                             l696 023A                             l929 0014  
                           l793 0033                             l865 005B                             l857 0077  
                           l881 00AD                             l947 0058                             l955 0023  
                           l875 0150                             l964 0019                             l789 0007  
                           l958 0000                             l898 0022                             _ARR 0000  
                           _ISR 0000                             _cnt 0004                             _pad 0000  
                           wreg 0009                    ___flmul@aexp 0014                    ___flmul@bexp 0019  
                  ___flmul@sign 0013                    ___flmul@temp 001E                    ___flmul@prod 001A  
                 ISR@adc_result 0000                            ?_ISR 0000                    ___fltol@exp1 0001  
                          l3000 012E                            l3002 0133                            l3010 0159  
                          l3020 0190                            l3012 0166                            l3004 0139  
                          l3022 0194                            l3014 0181                            l3006 013D  
                          l3024 0196                            l3016 0184                            l3008 0155  
                          l3018 018C                            l3210 0000                            l4100 002F  
                          l3220 0018                            l3212 0004                            l4102 0033  
                          l4110 0049                            l3222 0033                            l3214 0005  
                          l3206 0000                            l4200 0142                            l2600 007A  
                          l4120 0063                            l3240 00BA                            l3232 0073  
                          l3224 0040                            l3208 0002                            l4210 0188  
                          l4202 0157                            l4130 000B                            l4122 0000  
                          l2610 0098                            l2602 007C                            l2530 0004  
                          l3242 00C3                            l3234 008A                            l3226 0046  
                          l3218 0000                            l3250 0005                            l4050 0006  
                          l4220 019C                            l4212 018C                            l4204 016E  
                          l4140 0027                            l4132 0010                            l4124 0004  
                          l2700 01BB                            l2620 00C4                            l2612 00B3  
                          l2604 007E                            l2540 0015                            l2532 0006  
                          l4116 0050                            l4108 003B                            l3244 00DA  
                          l3236 0092                            l3228 005E                            l3252 000B  
                          l4060 004F                            l4052 000C                            l4300 0002  
                          l3500 0057                            l4070 000F                            l4230 01BD  
                          l4222 019D                            l4214 018D                            l4206 0175  
                          l4150 0036                            l4142 002A                            l4134 0015  
                          l4126 0006                            l2710 01F0                            l2702 01BF  
                          l2622 00CC                            l2614 00BD                            l2606 0080  
                          l2550 002B                            l2542 001D                            l2534 000A  
                          l4118 005E                            l3238 00A3                            l3254 000D  
                          l4054 0011                            l4310 004A                            l4302 0012  
                          l3600 0001                            l4072 001A                            l4064 0002  
                          l4232 01C2                            l4240 01E8                            l4224 01A1  
                          l4216 0194                            l4208 0181                            l4160 0052  
                          l4152 003B                            l4144 002C                            l4136 001D  
                          l4128 000A                            l2720 0206                            l2712 01F5  
                          l2704 01DC                            l2640 0101                            l2632 00E7  
                          l2616 00BF                            l2624 00CE                            l2608 0081  
                          l2560 0039                            l2552 0031                            l2544 001E  
                          l2536 000B                            l2528 0000                            l3248 0000  
                          l4056 001B                            l4048 0000                            l4080 0004  
                          l4400 0290                            l4320 0067                            l4312 0052  
                          l4304 0030                            l3602 0009                            l4074 001F  
                          l4066 0004                            l4250 0218                            l4242 01F5  
                          l4234 01C8                            l4226 01B5                            l4218 0198  
                          l4170 0078                            l4162 0057                            l4154 0043  
                          l4146 0030                            l4138 001F                            l2722 020A  
                          l2714 01F6                            l2706 01E3                            l2642 0103  
                          l2634 00EF                            l2626 00D9                            l2650 0113  
                          l2618 00C3                            l2562 003E                            l2570 004E  
                          l2554 0032                            l2538 0010                            l2546 0020  
                          l4058 003A                            l4082 0012                            l4410 03AC  
                          l4402 033A                            l4322 0078                            l4314 0057  
                          l4306 0033                            l3604 000B                            l2900 0010  
                          l4068 000B                            l4252 0223                            l4244 01FF  
                          l4236 01CC                            l4180 00CF                            l4172 0090  
                          l4156 0045                            l4148 0031                            l2716 01FA  
                          l2708 01E8                            l2660 0157                            l2652 0129  
                          l2644 0107                            l2636 00F3                            l2628 00DE  
                          l2580 0066                            l2572 005C                            l2564 0043  
                          l2556 0034                            l2548 0028                            l4092 0013  
                          l4084 0017                            l4420 0428                            l4412 03C4  
                          l4404 033E                            l4324 007E                            l4332 00AC  
                          l4316 005C                            l4308 0047                            l4500 0000  
                          l3710 0063                            l3702 005B                            l3630 0017  
                          l3622 0010                            l3614 0009                            l3606 0001  
                          l2910 0028                            l2902 0015                            l4254 0227  
                          l4246 020D                            l4238 01E4                            l4190 00FA  
                          l4182 00D6                            l4174 009D                            l4166 0060  
                          l4158 004D                            l2718 01FC                            l2670 017C  
                          l2654 014D                            l2662 015E                            l2646 0108  
                          l2638 00F7                            l2590 0070                            l2582 0068  
                          l2574 0060                            l2566 004B                            l2558 0038  
                          l4094 0024                            l4086 0000                            l4078 0000  
                          l4270 001B                            l4262 0000                            l4430 0471  
                          l4422 042D                            l4414 03C9                            l4406 0350  
                          l4334 00BE                            l4326 008A                            l4318 0061  
                          l2750 0006                            l4510 0022                            l4502 0005  
                          l3800 0047                            l3720 0071                            l3712 0069  
                          l3704 0061                            l3608 0007                            l2920 0037  
                          l2912 002B                            l2904 001D                            l2760 0000  
                          l4256 0228                            l4248 0216                            l4192 010C  
                          l4184 00E1                            l4176 00B5                            l4168 006B  
                          l2680 0192                            l2672 0183                            l2664 016E  
                          l2656 014F                            l2648 0110                            l2592 0072  
                          l2584 006A                            l2576 0062                            l2568 004C  
                          l4096 0025                            l4088 000A                            l4280 0033  
                          l4272 0029                            l4264 0005                            l4440 04D6  
                          l4432 0473                            l4424 0459                            l4416 03D1  
                          l4408 03A2                            l4360 018D                            l4352 00FE  
                          l4336 00C4                            l4344 00DB                            l4328 0094  
                          l2752 000F                            l2840 0008                            l4520 0055  
                          l4512 0035                            l4504 000A                            l4600 0000  
                          l3810 0074                            l3802 0056                            l2930 0057  
                          l2922 003C                            l2914 002D                            l2906 001E  
                          l2762 0015                            l4258 0232                            l4194 0113  
                          l4186 00E8                            l4178 00C2                            l2690 01A2  
                          l2682 0197                            l2674 0187                            l2666 0173  
                          l2658 0152                            l2594 0074                            l2586 006C  
                          l2578 0064                            l4098 002D                            l4290 005A  
                          l4282 004A                            l4274 0000                            l4266 000A  
                          l4450 04EE                            l4442 04DB                            l4434 0476  
                          l4426 045F                            l4418 03EE                            l4362 01BD  
                          l4354 010B                            l4346 00E4                            l4338 00D0  
                          l2754 0014                            l2746 0000                            l3490 0014  
                          l2850 0025                            l2842 000B                            l4522 005B  
                          l4514 003A                            l4506 001A                            l4530 0013  
                          l4602 0009                            l4610 0000                            l3820 009C  
                          l3812 007E                            l3804 005D                            l2940 0073  
                          l2932 0063                            l2924 0044                            l2916 0031  
                          l2908 0020                            l2764 0031                            l2780 003D  
                          l2772 0000                            l4196 0125                            l4188 00F3  
                          l2692 01A8                            l2676 018C                            l2684 0199  
                          l2596 0076                            l2588 006E                            l4284 004F  
                          l4276 0018                            l4268 0016                            l4452 04F1  
                          l4444 04DF                            l4460 0504                            l4436 04BF  
                          l4428 0470                            l4380 0252                            l4364 01C7  
                          l4372 0218                            l4356 0137                            l4348 00E6  
                          l2756 001A                            l2748 0002                            l3492 001C  
                          l2852 0029                            l2844 0010                            l2836 0000  
                          l4524 0068                            l4516 003E                            l4508 001D  
                          l4540 0042                            l4532 001C                            l4604 0015  
                          l4612 0007                            l4700 0051                            l3590 0000  
                          l3814 0092                            l3806 0066                            l3750 008B  
                          l3742 0083                            l3734 007B                            l3726 0073  
                          l3718 006B                            l3670 003B                            l3662 0033  
                          l3654 002C                            l3646 0025                            l3638 001E  
                          l2950 009C                            l2934 0065                            l2926 0045  
                          l2918 0032                            l2766 004B                            l2782 0055  
                          l2774 0015                            l4198 0130                            l2678 0190  
                          l2686 019D                            l2598 0078                            l4294 007A  
                          l4278 002D                            l4470 0568                            l4462 050A  
                          l4454 04F8                            l4446 04E6                            l4438 04D1  
                          l4390 0273                            l4382 025F                            l4366 01E4  
                          l4358 0166                            l4374 023F                            l3494 0029  
                          l3486 0000                            l2854 002A                            l2846 0012  
                          l2838 0002                            l2870 0010                            l2862 0000  
                          l4518 004E                            l4550 007F                            l4542 004E  
                          l4534 0022                            l4606 001F                            l4614 0009  
                          l4702 005B                            l4630 000E                            l4622 0000  
                          ?_pad 000B                            l3592 0015                            l3576 0001  
                          l3816 0097                            l3808 006A                            l3760 0099  
                          l3752 0091                            l3744 0089                            l3736 0081  
                          l3728 0079                            l3680 0049                            l3672 0041  
                          l3664 0039                            l2960 00BD                            l2952 00A4  
                          l2944 007C                            l2928 0047                            l2768 004D  
                          l2784 0059                            l2776 0031                            l2792 0000  
                          l2696 01B0                            l2688 019E                            l4288 0054  
                          l4480 05AE                            l4472 0584                            l4464 0512  
                          l4456 04FC                            l4448 04EA                            l4392 0279  
                          l4384 0265                            l4376 0245                            l4368 01E8  
                          l3496 003B                            l3488 0003                            l2856 002F  
                          l2848 0016                            l2872 0014                            l2864 0006  
                          l2880 002D                            l4560 00A1                            l4544 0057  
                          l4536 0026                            l4528 0000                            l4616 000B  
                          l4704 005E                            l4712 0070                            l4720 0086  
                          l4640 0014                            l4632 000F                            l4624 0009  
                          l3594 0016                            l3578 0006                            l3818 009B  
                          l2970 00E0                            l2962 00BE                            l2954 00A6  
                          l2946 008C                            l2938 006E                            l2890 0000  
                          l2786 0087                            l2778 0039                            l2794 0008  
                          l2698 01B5                            l4490 05E4                            l4482 05B3  
                          l4474 0588                            l4466 0516                            l4458 0500  
                          l4386 0269                            l4394 027D                            l4378 024A  
                          l4298 0000                            l3498 0043                            l2858 0035  
                          l2874 001E                            l2866 0009                            l4570 00BD  
                          l4562 00A8                            l4546 0061                            l4538 0039  
                          l4618 0018                            l4730 012E                            l4722 0090  
                          l4714 007D                            l4706 0064                            l4650 001A  
                          l4642 0015                            l4634 0011                            l4626 000B  
                          l3596 0018                            l2980 00F9                            l2956 00AB  
                          l2964 00C5                            l2972 00E2                            l2948 0094  
                          l2892 0004                            l2788 0089                            l2796 000A  
                          l2884 0000                            l4492 05E9                            l4484 05B9  
                          l4468 051A                            l4476 058C                            l4396 027F  
                          l4388 0271                            l2876 0022                            l2868 000E  
                          l4580 00F6                            l4572 00C8                            l4564 00B0  
                          l4556 008F                            l4548 006F                            l4724 0096  
                          l4716 007F                            l4708 006A                            l4660 0024  
                          l4652 001C                            l4644 0017                            l4636 0012  
                          l4628 000D                            l3598 0000                            l3790 001B  
                          l3766 009B                            l3758 0093                            l3694 0053  
                          l3686 004B                            l3678 0043                            l2990 010D  
                          l2982 00FD                            l2974 00E8                            l2966 00D7  
                          l2958 00B9                            l2894 0006                            l2886 0003  
                          l4494 05F4                            l4486 05CC                            l4478 059E  
                          l4398 0287                            l2878 0027                            l4582 0106  
                          l4574 00DB                            l4590 0129                            l4558 0098  
                          l4726 00C9                            l4718 0085                            l4670 002F  
                          l4662 0026                            l4654 001E                            l4646 0018  
                          l4638 0013                            l3792 002B                            l3784 0002  
                          l3768 00A1                            l3696 0059                            l3688 0051  
                          l2992 010E                            l2984 00FE                            l2976 00F0  
                          l2968 00D8                            l2896 000A                            l4496 05F8  
                          l4488 05D3                            l4568 00B2                            l4728 00FC  
                          l4680 0037                            l4672 0030                            l4664 0028  
                          l4656 0020                            l4648 0019                            l3786 0007  
                          l2994 0112                            l2986 0105                            l2978 00F2  
                          l2898 000B                            l4578 00EE                            l4594 0133  
                          l4690 0042                            l4682 0038                            l4674 0032  
                          l4666 002B                            l4658 0022                            l3796 0037  
                          l3788 000B                            l2996 0126                            l2988 0109  
                          l4588 0120                            l4692 0044                            l4684 003C  
                          l4676 0033                            l4668 002D                            l3798 0040  
                          l4694 0045                            l4686 0040                            l4678 0035  
                          l4696 0047                            l4688 0041                            l4698 004A  
                          STR_1 0000                            STR_2 0000                            STR_5 0000  
                          u3000 016E                            u3001 016D                            u3010 0173  
                          u3011 0172                            u3100 01B5                            u3101 01B4  
                          u3110 01BF                            u3030 0187                            u3111 01BE  
                          u3031 0186                            u3120 01CD                            u3040 018C  
                          u3041 018B                            u3025 017D                            u3130 01DC  
                          u3050 0197                            u3131 01DB                            u3051 0196  
                          u3300 004B                            u3140 01E3                            u3060 019D  
                          u3301 004A                            u3141 01E2                            u3125 01C9  
                          u3061 019C                            u3310 0015                            u3150 01E8  
                          u3070 01A2                            u3311 0014                            u3151 01E7  
                          u3071 01A1                            u5000 0071                            u3320 0031  
                          u3160 01F5                            u3080 01A8                            u3240 0006  
                          u5001 0070                            u3305 0047                            u3321 0030  
                          u3161 01F4                            u3081 01A7                            u3241 0005  
                          u5010 0079                            u3330 003D                            u3170 01FA  
                          u3090 01AF                            u5011 0078                            u3331 003C  
                          u3171 01F9                            u3091 01AE                            u5020 0081  
                          u3340 0059                            u4300 0040                            u5021 0080  
                          u3341 0058                            u4301 003F                            u5110 0046  
                          u5030 0089                            u3350 0087                            u3190 020A  
                          u4310 0046                            u3270 001A                            u3510 0025  
                          u5111 0045                            u5031 0088                            u3351 0086  
                          u3191 0209                            u4311 0045                            u3271 0019  
                          u3255 000B                            u3511 0024                            u5200 009B  
                          u5040 0091                            u3600 000A                            u3280 0015  
                          u3360 0008                            u2800 0043                            u4320 0054  
                          u4400 0021                            u6000 00FD                            u5201 009A  
                          u5105 003A                            u5041 0090                            u3601 0009  
                          u3281 0014                            u3361 0007                            u3185 0201  
                          u2801 0042                            u4305 003C                            u4401 0020  
                          u6001 00FC                            u3265 0010                            u3505 0017  
                          u5130 005C                            u5050 0099                            u3610 0010  
                          u3290 0031                            u2810 005C                            u4330 0072  
                          u6010 0166                            u3530 0035                            u5131 005B  
                          u5051 0098                            u3611 000F                            u3291 0030  
                          u3355 0083                            u2811 005B                            u4331 0071  
                          u6011 0165                            u3531 0034                            u3515 0021  
                          u5060 00A1                            u3620 0015                            u2900 00D5  
                          u2820 0060                            u2740 000A                            u4340 0080  
                          u6100 0350                            u6020 018D                            u3540 0006  
                          u5125 0050                            u5061 00A0                            u3621 0014  
                          u2901 00D4                            u2821 005F                            u2741 0009  
                          u4325 0050                            u6101 034F                            u6021 018C  
                          u3525 002B                            u3541 0005                            u5150 006A  
                          u5070 0007                            u3710 00BD                            u3630 0031  
                          u2910 00D9                            u2830 0098                            u2750 0010  
                          u4350 008A                            u4270 0019                            u6110 03A2  
                          u6030 01BD                            u3470 0008                            u5151 0069  
                          u5071 0006                            u3711 00BC                            u3631 0030  
                          u2911 00D8                            u2831 0097                            u2751 000F  
                          u4351 0089                            u4271 0018                            u6111 03A1  
                          u6031 01BC                            u3471 0007                            u5160 0070  
                          u5080 000B                            u3800 0112                            u3640 0037  
                          u2920 00DE                            u2840 00A1                            u2760 0015  
                          u4360 00B0                            u4280 0004                            u5400 001B  
                          u6200 059E                            u6120 03C4                            u6040 0217  
                          u3560 0014                            u5161 006F                            u5145 0060  
                          u5081 000A                            u3801 0111                            u3705 00B3  
                          u3641 0036                            u2921 00DD                            u2841 009F  
                          u2761 0014                            u4345 007C                            u4281 0003  
                          u5401 001A                            u6201 059D                            u6121 03C3  
                          u6105 034C                            u6041 0216                            u3561 0013  
                          u5170 0074                            u5090 002B                            u3810 0126  
                          u3730 00D7                            u3650 003C                            u2930 00F3  
                          u2850 00A2                            u2770 0031                            u4370 00BA  
                          u4290 0025                            u5410 003A                            u6210 05AE  
                          u6130 03C9                            u6050 023F                            u3490 0016  
                          u3570 001E                            u5171 0073                            u5091 002A  
                          u3811 0125                            u3731 00D6                            u3651 003B  
                          u2931 00F2                            u2835 0094                            u2771 0030  
                          u4371 00B9                            u5411 0039                            u6211 05AD  
                          u6131 03C8                            u6051 023E                            u3491 0015  
                          u3571 001D                            u3555 000A                            u5180 0088  
                          u3820 012D                            u3740 00E8                            u3660 0057  
                          u5420 000F                            u2940 00F7                            u2860 00B3  
                          u2780 0038                            u4380 00D0                            u6220 05D9  
                          u6140 0428                            u6060 024A                            u6300 0039  
                          u3821 012C                            u3741 00E7                            u3725 00BF  
                          u3661 0056                            u5421 000E                            u2941 00F6  
                          u2861 00B2                            u2781 0037                            u4365 00AC  
                          u6221 05D7                            u6205 059A                            u6141 0427  
                          u6061 0249                            u3485 000C                            u6301 0038  
                          u5190 0097                            u3830 0133                            u3750 00F0  
                          u3670 0073                            u2790 003E                            u5510 0048  
                          u4390 00DA                            u6230 05DA                            u6150 045F  
                          u6070 0265                            u3590 002D                            u6310 0061  
                          u5191 0096                            u3831 0132                            u3751 00EF  
                          u3735 00D3                            u3671 0072                            u2791 003D  
                          u5511 0047                            u4391 00D9                            u4295 0021  
                          u5415 0036                            u6215 05AA                            u6151 045E  
                          u6071 0264                            u3591 002C                            u3575 001A  
                          u6311 0060                            u3840 013D                            u3680 00AB  
                          u5440 001F                            u5600 0036                            u2960 0107  
                          u2880 00C3                            u5520 004F                            u6240 05E9  
                          u6160 04BF                            u6080 0269                            u6320 00C7  
                          u5185 0084                            u3841 013C                            u3681 00AA  
                          u5441 001E                            u5601 0035                            u2961 0106  
                          u2881 00C2                            u5521 004E                            u5505 003C  
                          u4385 00CC                            u6241 05E8                            u6161 04BE  
                          u6081 0268                            u3585 0023                            u6321 00C6  
                          u3850 014B                            u3770 00FD                            u5610 003B  
                          u5450 0023                            u6170 04DB                            u6090 0279  
                          u6250 0005                            u6330 001F                            u3771 00FC  
                          u5435 0014                            u5611 003A                            u2955 00FA  
                          u2875 00B6                            u5451 0022                            u6171 04DA  
                          u6091 0278                            u6251 0004                            u6331 001E  
                          u4900 0024                            u3860 0166                            u5700 018C  
                          u5620 0052                            u2980 0129                            u5540 005E  
                          u5460 000A                            u5380 0006                            u6180 04DF  
                          u6260 0055                            u6340 005B                            u4901 0023  
                          u3861 0165                            u3765 00F3                            u5701 018B  
                          u5621 0051                            u2981 0128                            u5541 005D  
                          u5461 0009                            u5381 0005                            u6181 04DE  
                          u6165 04BB                            u6261 0054                            u6341 005A  
                          u4830 0006                            u4910 002B                            u3870 0181  
                          u3790 010D                            u5630 0057                            u2990 0157  
                          u5550 0063                            u5470 0020                            u5390 000C  
                          u6190 050A                            u6270 005B                            u6350 0085  
                          u4831 0005                            u4911 002A                            u3871 0180  
                          u3855 0147                            u3791 010C                            u3695 00AC  
                          u5631 0056                            u2991 0156                            u2983 0125  
                          u2975 010A                            u2895 00C6                            u5551 0062  
                          u5535 0051                            u5391 000B                            u6191 0509  
                          u6271 005A                            u6351 0084                            u4920 0032  
                          u3880 0194                            u5800 020D                            u5720 019C  
                          u5560 000A                            u5480 0033                            u6280 0068  
                          u4921 0031                            u3881 0193                            u3865 0162  
                          u3785 00FF                            u5801 020C                            u5721 019B  
                          u5561 0009                            u5481 0032                            u6281 0067  
                          u4850 0014                            u4930 0039                            u5810 0227  
                          u5730 01A1                            u5570 0010                            u5490 003A  
                          u4770 0014                            u6290 0013                            u4851 0013  
                          u4931 0038                            u3875 017D                            u5811 0226  
                          u5731 01A0                            u5715 018E                            u5571 000F  
                          u5491 0039                            u5475 001C                            u4771 0013  
                          u6291 0012                            u4940 0041                            u4860 0007  
                          u5740 01B5                            u5660 014D                            u5580 0015  
                          u5900 0067                            u4780 0057                            u4941 0040  
                          u4861 0006                            u5805 0209                            u5741 01B4  
                          u5645 00D0                            u5581 0014                            u4781 0056  
                          u6285 0064                            u4950 0049                            u4870 000F  
                          u5750 01BC                            u5670 0164                            u5590 0030  
                          u5910 0072                            u5830 0005                            u4951 0048  
                          u4871 000E                            u3895 019B                            u5751 01BB  
                          u5655 00FB                            u5591 002F                            u5911 0070  
                          u5831 0004                            u4960 0051                            u4880 0016  
                          u5760 01C2                            u5920 0073                            u5840 0029  
                          u4961 0050                            u4881 0015                            u5825 022B  
                          u5761 01C1                            u5665 0149                            u5905 0063  
                          u5841 0028                            u4970 0059                            u4890 001D  
                          u5770 01CC                            u5850 0025                            u5930 0030  
                          u4971 0058                            u4891 001C                            u5771 01CB  
                          u5675 0160                            u5931 002F                            u4980 0061  
                          u5780 01DA                            u5860 0033                            u5940 0057  
                          u4981 0060                            u5685 016F                            u5861 0032  
                          u5845 0025                            u5941 0056                            u4990 0069  
                          u5790 01F5                            u5870 0040                            u5950 005C  
                          u4991 0068                            u5791 01F4                            u5695 0182  
                          u5855 0021                            u5951 005B                            u5880 004A  
                          u5960 0078                            u5785 01D6                            u5881 0049  
                          u5961 0077                            u5890 005A                            u5970 007E  
                          u5795 01F1                            u5891 0059                            u5875 003C  
                          u5971 007D                            u5980 00BE                            u5981 00BD  
                          u5990 00C4                            u5991 00C3                   _EUSART1_Write 0000  
                          _Trip 0003                            _edge 0001                            _dbuf 0000  
                          _labs 0000                            _main 0000                            _byte 0006  
                          _prec 0000                            pad@i 0010                            pad@p 000E  
                          fsr0h 0005                            fsr1h 0007                            indf0 0000  
                          fsr0l 0004                            indf1 0001                            fsr1l 0006  
                          btemp 007E                            _utoa 0000              _input_peak_current 000E  
                 ___fpclassifyf 0000                            start 0000*                ___fldiv@new_exp 000A  
                   _voltage_val 0000                 __end_of_Max_RC5 0002              _input_peak_voltage 0012  
       __end_of_UART_Write_Text 0015                           ??_ISR 0000                           ??_pad 0008  
                 ___fltol@sign1 0000                           ?_labs 0002                 __end_of___fladd 020C  
                         ?_main 0000                 __end_of___fldiv 01A4                 __end_of___flneg 000B  
               __end_of___flmul 023B                 __end_of___flsub 0020                 __end_of___fltol 006F  
                         ?_utoa 0012                 __end_of___lwdiv 003A                           i1l207 0054  
                         i1l224 00CF                           i1l229 00CD                 __end_of___lwmod 0032  
                  vfpfcnvrt@fmt 002E                           _TMR0H 059D                           _TMR0L 059C  
                         _flags 0002                           _count 0009             read_prec_or_width@c 0003  
           read_prec_or_width@n 0004                           _fputc 0000                           _fputs 0000  
                         labs@a 0002                           pad@fp 000B                           _width 0016  
                         _putch 0000                  ?_EUSART1_Write 0000                           utoa@d 0014  
                         utoa@i 001A                           utoa@p 0018                           utoa@w 0016  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 0020  
                ?___fpclassifyf 0002                    _voltage_diff 001A                 __initialization 0000  
                  __end_of_labs 0015                    __end_of_main 0136                    __end_of_utoa 0078  
                        ??_labs 0006                          ??_main 000A                          ??_utoa 0009  
    __end_of_read_prec_or_width 005C                          _ADCON0 009D                          _ADCON1 009E  
                        ?_fputc 0002                          ?_fputs 0005                          _ADRESH 009C  
                        _ADRESL 009B                          _ANSELA 1F38                          ?_putch 0000  
                        _ANSELC 1F4E                          _RC1REG 0119                          _RC1STA 011D  
                        _RC3PPS 1F23                          i1l4000 0069                          i1l4002 006E  
                        i1l4010 0077                          i1l4012 007C                          i1l4004 006F  
                        i1l4030 00A4                          i1l4022 008D                          i1l4014 007D  
                        i1l4006 0072                          i1l4040 00B6                          i1l4024 0094  
                        i1l4016 0081                          i1l4032 00A5                          i1l4008 0075  
                        i1l4042 00BC                          i1l4034 00AA                          i1l4026 0096  
                        i1l4018 0086                          i1l4036 00AB                          i1l4028 009C  
                        i1l4038 00B1                          i1l4046 00C2                          i1l3940 0012  
                        i1l3950 001F                          i1l3942 0017                          i1l3934 0002  
                        i1l3960 002E                          i1l3944 0018                          i1l3952 0022  
                        i1l3936 0007                          i1l3970 003C                          i1l3962 002F  
                        i1l3954 0027                          i1l3946 001A                          i1l3938 000C  
                        i1l3980 004B                          i1l3972 003E                          i1l3956 0028  
                        i1l3948 001E                          i1l3964 0031                          i1l3990 005F  
                        i1l3982 004C                          i1l3974 0042                          i1l3966 0036  
                        i1l3958 002A                          i1l3992 0060                          i1l3984 004F  
                        i1l3976 0043                          i1l3968 003B                          i1l3994 0062  
                        i1l3978 0046                          i1l3986 0051                          i1l3996 0064  
                        i1l3988 0059                          i1l3998 0065                          u530_20 0059  
                        u530_21 0058                          u531_20 005F                          u523_20 0007  
                        u531_21 005E                          u523_21 0006          _get_TMR0L_from_voltage 0000  
                        u532_20 006E                          u524_20 0012                          u532_21 006D  
                        u524_21 0011                          u533_20 007C                          u525_20 0017  
                        u533_21 007B                          u525_21 0016                          u534_20 0086  
                        u526_20 0027                          u534_21 0085                          u526_21 0026  
                        u535_20 008C                          u527_20 0036                          u535_21 008B  
                        u527_21 0035                          u536_20 009C                          u528_20 003B  
                        u536_21 009B                          u528_21 003A                          u537_20 00AA  
                        u529_20 004B                          u537_21 00A9                          u529_21 004A  
                        _OSCCON 088E                          _RX1PPS 1ECB                          _TX1REG 011A  
                        _TX1STA 011E                __end_of___xxtofl 00A5                    vfprintf@cfmt 0043  
             __end_of_UART_Init 001A                          ___flge 0000                          ___fleq 0000  
                     ??___fladd 0000                          ___wmul 0000                       ??___fldiv 0000  
                     ??___flneg 0006                       ??___flmul 000E                ?_UART_Write_Text 0003  
                     ??___flsub 000A                       ??___fltol 0006                          _efgtoa 0000  
                     ??___lwdiv 0006                       ??___lwmod 0006                          _buffer 0000  
                        _floorf 0000                          _memcpy 0000            read_prec_or_width@ap 0009  
                        pad@buf 000D                          _strcpy 0000                          fputc@c 0002  
                        fputs@c 0008                          fputs@i 0009                          fputs@s 0005  
               ___fpclassifyf@e 0006                 ___fpclassifyf@u 0008                 ___fpclassifyf@x 0002  
                        putch@c 0000                __end_of_vfprintf 0023                 ??_EUSART1_Write 0002  
                        utoa@fp 0012                       ??_sprintf 000A               _rcv_current_value 0007  
                    ___flge@ff1 0020                      ___flge@ff2 0024                 ??___fpclassifyf 0000  
                  ___xxtofl@arg 0002                    ___xxtofl@exp 0001                    ___xxtofl@val 0002  
                    ___fleq@ff1 0002                      ___fleq@ff2 0006         __end_of__initialization 0036  
                    ___flneg@f1 0002                      ___fltol@f1 0002                  __pcstackCOMMON 0000  
                  __pidataBANK2 0000                   __end_of_fputc 0059                   __end_of_fputs 0024  
                 __end_of_putch 0001                 _temperature_val 0020                         ??_fputc 0000  
                       ??_fputs 0006                         ??_putch 0002                      __pbssBANK0 0000  
                    __pbssBANK1 0000                      __pbssBANK2 0000                      __pbssBANK3 0000  
                    __pbssBANK4 0000               __end_of__Umul8_16 0024                      _efgtoa$982 0006  
                    __pmaintext 0000                         ?___flge 0020                         ?___fleq 0002  
                       ?___wmul 0002                      __pintentry 0000                         ?_efgtoa 002C  
                       ?_floorf 0012                _SecondcycleDelay 0002                         ?_memcpy 0002  
                       ?_strcpy 0002                       ?___xxtofl 0002                         _SP1BRGH 011C  
                       _SP1BRGL 011B                   _rcv_FREQUENCY 0005                         _Max_RC5 0000  
 get_TMR0L_from_voltage@voltage 0002                         ___fladd 0000                         ___fldiv 0000  
                       ___flneg 0000                         ___flmul 0000                         ___flsub 0000  
                       ___fltol 0000                         _adc_val 001C                         ___lwdiv 0000  
                       ___lwmod 0000                       ?_vfprintf 0030                         __ptext1 0000  
                       __ptext2 0000                         __ptext3 0000                         __ptext4 0000  
                       __ptext5 0000                         __ptext6 0000                         __ptext7 0000  
                       __ptext8 0000                         __ptext9 0000                         _max_adc 0000  
         read_prec_or_width@fmt 0008                      ??___xxtofl 0006                       _IOCCFbits 1F55  
                       efgtoa@c 0032                         efgtoa@d 000B                         efgtoa@e 000F  
                       efgtoa@f 002E                         efgtoa@g 0022                         efgtoa@h 0019  
                       efgtoa@i 0017                         efgtoa@l 001D                         efgtoa@m 000D  
                       efgtoa@n 0026                         efgtoa@p 0002                         efgtoa@t 0004  
                       efgtoa@u 0028                         efgtoa@w 0011                       _IOCCNbits 1F54  
                     _IOCCPbits 1F53         ?_get_TMR0L_from_voltage 0000                         _sprintf 0000  
                       clrloop0 0001            end_of_initialization 0036                         floorf@e 0020  
                       floorf@m 001C                         floorf@u 0022                         floorf@x 0012  
                       memcpy@d 0007                         memcpy@n 0004                         memcpy@s 0008  
                       fputc@fp 0004                         fputs@fp 0006              _read_prec_or_width 0000  
             __end_of_vfpfcnvrt 0151                      efgtoa@mode 0009                      efgtoa@sign 0021  
             _adc_channel_index 0000             ?_read_prec_or_width 0008                vfpfcnvrt@convarg 003B  
                    ??_vfprintf 0042                         strcpy@d 0007                       _UART_Init 0000  
                   ___fladd@grs 000B                   ___xxtofl@sign 0000  __end_of_get_TMR0L_from_voltage 00A4  
                     _TRISAbits 0012                       _TRISCbits 0014            ??_read_prec_or_width 0000  
                   ___fldiv@grs 000C                     ___fldiv@rem 0005             EUSART1_Write@txData 0002  
                   ___flmul@grs 0015                  __end_of___flge 008B                  __end_of___fleq 004F  
                   vfpfcnvrt@ap 002F                     vfpfcnvrt@cp 0040                     vfpfcnvrt@fp 002C  
                __end_of___wmul 001F                      ?_UART_Init 0000                  __end_of_efgtoa 060E  
                __end_of_floorf 00EB                  __end_of_memcpy 0022                      floorf@F521 0006  
                __end_of_strcpy 001A             start_initialization 0000                     __end_of_ARR 014A  
                   __end_of_ISR 00D1                     __end_of_pad 0034           __end_of_EUSART1_Write 000A  
         __end_of___fpclassifyf 007F                _temperature_flag 0008                     vfprintf@fmt 0032  
                      ??___flge 0028                        ??___fleq 0000                        ??___wmul 0006  
                      ??_efgtoa 0033                       __Umul8_16 0000                     __pdataBANK2 0000  
                      ??_floorf 0016                        ??_memcpy 0006                        ??_strcpy 0005  
                     ___fladd@a 0006                       ___fladd@b 0002                       ___fldiv@a 0002  
                     ___fldiv@b 0006                       ___flmul@a 000A                       ___flmul@b 0006  
                   __pbssCOMMON 0000                       ___flsub@a 0020                       ___flsub@b 0024  
                     ___latbits 0001                   __pcstackBANK0 0000                   __pcstackBANK1 0000  
                  _current_diff 0018                       __pnvBANK0 0000                ___lwdiv@dividend 0004  
                      ?___fladd 0002                        ?___fldiv 0002                        ?___flneg 0002  
                      ?___flmul 0006                        ?___flsub 0020                        ?___fltol 0002  
                    ?__Umul8_16 0002                        ?___lwdiv 0002                        ?___lwmod 0002  
                   ??_UART_Init 0002                        _BAUD1CON 011F                ___lwdiv@quotient 0006  
                      ?_sprintf 0035               ??_UART_Write_Text 0004                  ___wmul@product 0006  
                      _LATAbits 0018                       clear_ram0 0000                        _PIE0bits 0716  
                      _PIE1bits 0717                        _PIR0bits 070C                        _PIR1bits 070D  
                     _vfpfcnvrt 0000                       _rx_buffer 0000                      _ADCON0bits 009D  
             ___wmul@multiplier 0002                      vfpfcnvrt@c 003F                       memcpy@tmp 0006  
                    vfprintf@ap 0034                      vfprintf@fp 0030                     ??__Umul8_16 0004  
                    ?_vfpfcnvrt 002C                      _ANSELAbits 1F38                      _ANSELCbits 1F4E  
            ___fpclassifyf@F465 000A                      sprintf@fmt 0036                        ___xxtofl 0000  
                   _current_val 0022                      _T0CON0bits 059E                      _T0CON1bits 059F  
               ___lwdiv@divisor 0002                 ___lwdiv@counter 0008                        __ptext10 0000  
                      __ptext11 0000                        __ptext20 0000                        __ptext12 0000  
                      __ptext21 0000                        __ptext13 0000                        __ptext30 0000  
                      __ptext22 0000                        __ptext14 0000                        __ptext31 0000  
                      __ptext23 0000                        __ptext15 0000                        __ptext32 0000  
                      __ptext24 0000                        __ptext16 0000                        __ptext25 0000  
                      __ptext17 0000                        __ptext26 0000                        __ptext18 0000  
                      __ptext27 0000                        __ptext19 0000                        __ptext28 0000  
                      __ptext29 0000                      strcpy@dest 0002             UART_Write_Text@text 0003  
                      efgtoa@fp 002C                        efgtoa@ne 0000                        efgtoa@pp 0008  
                      efgtoa@ou 0013                        int$flags 007E                        _vfprintf 0000  
                 _timer_counter 001E                      _INTCONbits 000B                        memcpy@d1 0002  
                      memcpy@s1 0003                        intlevel1 0000*                      sprintf@ap 0042  
              ___lwmod@dividend 0004                       strcpy@src 0003                     efgtoa@nmode 000A  
                   ??_vfpfcnvrt 0037        ??_get_TMR0L_from_voltage 0002                   __pstringtext1 0000  
                 __pstringtext2 0000                   __pstringtext3 0000                   __pstringtext4 0000  
                 __pstringtext5 0000                   __pstringtext6 0000          __Umul8_16@multiplicand 0002  
               _UART_Write_Text 0000                        sprintf@f 0043                        sprintf@s 0035  
               ___lwmod@divisor 0002                 ___lwmod@counter 0006                     _timer_value 0000  
                 ___fladd@signs 0008                    ___fladd@aexp 0009                    ___fladd@bexp 000A  
          __Umul8_16@multiplier 0004               __Umul8_16@product 0000  
