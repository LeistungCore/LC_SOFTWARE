

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Jun 27 13:55:18 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F15376
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,space=0,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,space=0,delta=2,noexec
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	stringtext3,global,class=STRCODE,space=0,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,space=0,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,space=0,delta=2
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    34                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,space=0,delta=2
    39                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=2
    48                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2
    49                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    50                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    51                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    52                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    53                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    54                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    55                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    56                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=3
    57                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=1
    58                           	psect	text33,local,class=CODE,space=0,merge=1,delta=2,group=1
    59                           	psect	text34,local,class=CODE,space=0,merge=1,delta=2,group=3
    60                           	psect	text35,local,class=CODE,space=0,merge=1,delta=2
    61                           	psect	text36,local,class=CODE,space=0,merge=1,delta=2
    62                           	psect	text37,local,class=CODE,space=0,merge=1,delta=2,group=2
    63                           	psect	text38,local,class=CODE,space=0,merge=1,delta=2,group=2
    64                           	psect	text39,local,class=CODE,space=0,merge=1,delta=2
    65                           	psect	text40,local,class=CODE,space=0,merge=1,delta=2
    66                           	psect	text41,local,class=CODE,space=0,merge=1,delta=2,group=2
    67                           	psect	text42,local,class=CODE,space=0,merge=1,delta=2
    68                           	psect	text43,local,class=CODE,space=0,merge=1,delta=2
    69                           	psect	text44,local,class=CODE,space=0,merge=1,delta=2
    70                           	psect	text45,local,class=CODE,space=0,merge=1,delta=2
    71                           	psect	text46,local,class=CODE,space=0,merge=1,delta=2
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0xCA0,32
    74                           	dabs	1,0xC20,80
    75                           	dabs	1,0xBA0,80
    76                           	dabs	1,0xB68,8
    77                           	dabs	1,0x2728,0,_buffer
    78                           	dabs	1,0x7E,2
    79     0000                     
    80                           ; Generated 11/01/2024 GMT
    81                           ; 
    82                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution. Publication is not required when
    96                           ;        this file is used in an embedded application.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC16F15376 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114     0008                     bsr             equ	8
   115     0005                     fsr0h           equ	5
   116     0004                     fsr0l           equ	4
   117     0007                     fsr1h           equ	7
   118     0006                     fsr1l           equ	6
   119     0000                     indf            equ	0
   120     0000                     indf0           equ	0
   121     0001                     indf1           equ	1
   122     000B                     intcon          equ	11
   123     0002                     pc              equ	2
   124     0002                     pcl             equ	2
   125     000A                     pclath          equ	10
   126     0003                     status          equ	3
   127     0009                     wreg            equ	9
   128     0000                     INDF0           equ	0	;# 
   129     0001                     INDF1           equ	1	;# 
   130     0002                     PCL             equ	2	;# 
   131     0003                     STATUS          equ	3	;# 
   132     0004                     FSR0L           equ	4	;# 
   133     0005                     FSR0H           equ	5	;# 
   134     0006                     FSR1L           equ	6	;# 
   135     0007                     FSR1H           equ	7	;# 
   136     0008                     BSR             equ	8	;# 
   137     0009                     WREG            equ	9	;# 
   138     000A                     PCLATH          equ	10	;# 
   139     000B                     INTCON          equ	11	;# 
   140     000C                     PORTA           equ	12	;# 
   141     000D                     PORTB           equ	13	;# 
   142     000E                     PORTC           equ	14	;# 
   143     000F                     PORTD           equ	15	;# 
   144     0010                     PORTE           equ	16	;# 
   145     0012                     TRISA           equ	18	;# 
   146     0013                     TRISB           equ	19	;# 
   147     0014                     TRISC           equ	20	;# 
   148     0015                     TRISD           equ	21	;# 
   149     0016                     TRISE           equ	22	;# 
   150     0018                     LATA            equ	24	;# 
   151     0019                     LATB            equ	25	;# 
   152     001A                     LATC            equ	26	;# 
   153     001B                     LATD            equ	27	;# 
   154     001C                     LATE            equ	28	;# 
   155     009B                     ADRES           equ	155	;# 
   156     009B                     ADRESL          equ	155	;# 
   157     009C                     ADRESH          equ	156	;# 
   158     009D                     ADCON0          equ	157	;# 
   159     009E                     ADCON1          equ	158	;# 
   160     009F                     ADACT           equ	159	;# 
   161     0119                     RC1REG          equ	281	;# 
   162     0119                     RCREG           equ	281	;# 
   163     0119                     RCREG1          equ	281	;# 
   164     011A                     TX1REG          equ	282	;# 
   165     011A                     TXREG1          equ	282	;# 
   166     011A                     TXREG           equ	282	;# 
   167     011B                     SP1BRG          equ	283	;# 
   168     011B                     SPBRG           equ	283	;# 
   169     011B                     SP1BRGL         equ	283	;# 
   170     011B                     SPBRG1          equ	283	;# 
   171     011B                     SPBRGL          equ	283	;# 
   172     011C                     SP1BRGH         equ	284	;# 
   173     011C                     SPBRGH          equ	284	;# 
   174     011C                     SPBRGH1         equ	284	;# 
   175     011D                     RC1STA          equ	285	;# 
   176     011D                     RCSTA1          equ	285	;# 
   177     011D                     RCSTA           equ	285	;# 
   178     011E                     TX1STA          equ	286	;# 
   179     011E                     TXSTA1          equ	286	;# 
   180     011E                     TXSTA           equ	286	;# 
   181     011F                     BAUD1CON        equ	287	;# 
   182     011F                     BAUDCON1        equ	287	;# 
   183     011F                     BAUDCTL1        equ	287	;# 
   184     011F                     BAUDCON         equ	287	;# 
   185     011F                     BAUDCTL         equ	287	;# 
   186     018C                     SSP1BUF         equ	396	;# 
   187     018D                     SSP1ADD         equ	397	;# 
   188     018E                     SSP1MSK         equ	398	;# 
   189     018F                     SSP1STAT        equ	399	;# 
   190     0190                     SSP1CON1        equ	400	;# 
   191     0191                     SSP1CON2        equ	401	;# 
   192     0192                     SSP1CON3        equ	402	;# 
   193     0196                     SSP2BUF         equ	406	;# 
   194     0197                     SSP2ADD         equ	407	;# 
   195     0198                     SSP2MSK         equ	408	;# 
   196     0199                     SSP2STAT        equ	409	;# 
   197     019A                     SSP2CON1        equ	410	;# 
   198     019B                     SSP2CON2        equ	411	;# 
   199     019C                     SSP2CON3        equ	412	;# 
   200     020C                     TMR1            equ	524	;# 
   201     020C                     TMR1L           equ	524	;# 
   202     020D                     TMR1H           equ	525	;# 
   203     020E                     T1CON           equ	526	;# 
   204     020F                     T1GCON          equ	527	;# 
   205     020F                     PR1             equ	527	;# 
   206     0210                     T1GATE          equ	528	;# 
   207     0210                     TMR1GATE        equ	528	;# 
   208     0211                     T1CLK           equ	529	;# 
   209     0211                     TMR1CLK         equ	529	;# 
   210     028C                     T2TMR           equ	652	;# 
   211     028C                     TMR2            equ	652	;# 
   212     028D                     T2PR            equ	653	;# 
   213     028D                     PR2             equ	653	;# 
   214     028E                     T2CON           equ	654	;# 
   215     028F                     T2HLT           equ	655	;# 
   216     0290                     T2CLKCON        equ	656	;# 
   217     0291                     T2RST           equ	657	;# 
   218     030C                     CCPR1           equ	780	;# 
   219     030C                     CCPR1L          equ	780	;# 
   220     030D                     CCPR1H          equ	781	;# 
   221     030E                     CCP1CON         equ	782	;# 
   222     030F                     CCP1CAP         equ	783	;# 
   223     0310                     CCPR2           equ	784	;# 
   224     0310                     CCPR2L          equ	784	;# 
   225     0311                     CCPR2H          equ	785	;# 
   226     0312                     CCP2CON         equ	786	;# 
   227     0313                     CCP2CAP         equ	787	;# 
   228     0314                     PWM3DC          equ	788	;# 
   229     0314                     PWM3DCL         equ	788	;# 
   230     0315                     PWM3DCH         equ	789	;# 
   231     0316                     PWM3CON         equ	790	;# 
   232     0318                     PWM4DC          equ	792	;# 
   233     0318                     PWM4DCL         equ	792	;# 
   234     0319                     PWM4DCH         equ	793	;# 
   235     031A                     PWM4CON         equ	794	;# 
   236     031C                     PWM5DC          equ	796	;# 
   237     031C                     PWM5DCL         equ	796	;# 
   238     031D                     PWM5DCH         equ	797	;# 
   239     031E                     PWM5CON         equ	798	;# 
   240     038C                     PWM6DC          equ	908	;# 
   241     038C                     PWM6DCL         equ	908	;# 
   242     038D                     PWM6DCH         equ	909	;# 
   243     038E                     PWM6CON         equ	910	;# 
   244     058C                     NCO1ACC         equ	1420	;# 
   245     058C                     NCO1ACCL        equ	1420	;# 
   246     058D                     NCO1ACCH        equ	1421	;# 
   247     058E                     NCO1ACCU        equ	1422	;# 
   248     058F                     NCO1INC         equ	1423	;# 
   249     058F                     NCO1INCL        equ	1423	;# 
   250     0590                     NCO1INCH        equ	1424	;# 
   251     0591                     NCO1INCU        equ	1425	;# 
   252     0592                     NCO1CON         equ	1426	;# 
   253     0593                     NCO1CLK         equ	1427	;# 
   254     059C                     TMR0L           equ	1436	;# 
   255     059C                     TMR0            equ	1436	;# 
   256     059D                     TMR0H           equ	1437	;# 
   257     059D                     PR0             equ	1437	;# 
   258     059E                     T0CON0          equ	1438	;# 
   259     059F                     T0CON1          equ	1439	;# 
   260     060C                     CWG1CLKCON      equ	1548	;# 
   261     060D                     CWG1DAT         equ	1549	;# 
   262     060E                     CWG1DBR         equ	1550	;# 
   263     060F                     CWG1DBF         equ	1551	;# 
   264     0610                     CWG1CON0        equ	1552	;# 
   265     0611                     CWG1CON1        equ	1553	;# 
   266     0612                     CWG1AS0         equ	1554	;# 
   267     0613                     CWG1AS1         equ	1555	;# 
   268     0614                     CWG1STR         equ	1556	;# 
   269     070C                     PIR0            equ	1804	;# 
   270     070D                     PIR1            equ	1805	;# 
   271     070E                     PIR2            equ	1806	;# 
   272     070F                     PIR3            equ	1807	;# 
   273     0710                     PIR4            equ	1808	;# 
   274     0711                     PIR5            equ	1809	;# 
   275     0712                     PIR6            equ	1810	;# 
   276     0713                     PIR7            equ	1811	;# 
   277     0716                     PIE0            equ	1814	;# 
   278     0717                     PIE1            equ	1815	;# 
   279     0718                     PIE2            equ	1816	;# 
   280     0719                     PIE3            equ	1817	;# 
   281     071A                     PIE4            equ	1818	;# 
   282     071B                     PIE5            equ	1819	;# 
   283     071C                     PIE6            equ	1820	;# 
   284     071D                     PIE7            equ	1821	;# 
   285     0796                     PMD0            equ	1942	;# 
   286     0797                     PMD1            equ	1943	;# 
   287     0798                     PMD2            equ	1944	;# 
   288     0799                     PMD3            equ	1945	;# 
   289     079A                     PMD4            equ	1946	;# 
   290     079B                     PMD5            equ	1947	;# 
   291     080C                     WDTCON0         equ	2060	;# 
   292     080D                     WDTCON1         equ	2061	;# 
   293     080E                     WDTPSL          equ	2062	;# 
   294     080F                     WDTPSH          equ	2063	;# 
   295     0810                     WDTTMR          equ	2064	;# 
   296     0811                     BORCON          equ	2065	;# 
   297     0812                     VREGCON         equ	2066	;# 
   298     0813                     PCON0           equ	2067	;# 
   299     0814                     PCON1           equ	2068	;# 
   300     081A                     NVMADR          equ	2074	;# 
   301     081A                     NVMADRL         equ	2074	;# 
   302     081B                     NVMADRH         equ	2075	;# 
   303     081C                     NVMDAT          equ	2076	;# 
   304     081C                     NVMDATL         equ	2076	;# 
   305     081D                     NVMDATH         equ	2077	;# 
   306     081E                     NVMCON1         equ	2078	;# 
   307     081F                     NVMCON2         equ	2079	;# 
   308     088C                     CPUDOZE         equ	2188	;# 
   309     088D                     OSCCON1         equ	2189	;# 
   310     088E                     OSCCON2         equ	2190	;# 
   311     088F                     OSCCON3         equ	2191	;# 
   312     0890                     OSCSTAT         equ	2192	;# 
   313     0891                     OSCEN           equ	2193	;# 
   314     0892                     OSCTUNE         equ	2194	;# 
   315     0893                     OSCFRQ          equ	2195	;# 
   316     0895                     CLKRCON         equ	2197	;# 
   317     0896                     CLKRCLK         equ	2198	;# 
   318     090C                     FVRCON          equ	2316	;# 
   319     090E                     DAC1CON0        equ	2318	;# 
   320     090F                     DAC1CON1        equ	2319	;# 
   321     091F                     ZCDCON          equ	2335	;# 
   322     098F                     CMOUT           equ	2447	;# 
   323     098F                     CMSTAT          equ	2447	;# 
   324     0990                     CM1CON0         equ	2448	;# 
   325     0991                     CM1CON1         equ	2449	;# 
   326     0992                     CM1NCH          equ	2450	;# 
   327     0993                     CM1PCH          equ	2451	;# 
   328     0994                     CM2CON0         equ	2452	;# 
   329     0995                     CM2CON1         equ	2453	;# 
   330     0996                     CM2NCH          equ	2454	;# 
   331     0997                     CM2PCH          equ	2455	;# 
   332     0A19                     RC2REG          equ	2585	;# 
   333     0A19                     RCREG2          equ	2585	;# 
   334     0A1A                     TX2REG          equ	2586	;# 
   335     0A1A                     TXREG2          equ	2586	;# 
   336     0A1B                     SP2BRG          equ	2587	;# 
   337     0A1B                     SP2BRGL         equ	2587	;# 
   338     0A1B                     SPBRG2          equ	2587	;# 
   339     0A1C                     SP2BRGH         equ	2588	;# 
   340     0A1C                     SPBRGH2         equ	2588	;# 
   341     0A1D                     RC2STA          equ	2589	;# 
   342     0A1D                     RCSTA2          equ	2589	;# 
   343     0A1E                     TX2STA          equ	2590	;# 
   344     0A1E                     TXSTA2          equ	2590	;# 
   345     0A1F                     BAUD2CON        equ	2591	;# 
   346     0A1F                     BAUDCON2        equ	2591	;# 
   347     0A1F                     BAUDCTL2        equ	2591	;# 
   348     1E0F                     CLCDATA         equ	7695	;# 
   349     1E10                     CLC1CON         equ	7696	;# 
   350     1E11                     CLC1POL         equ	7697	;# 
   351     1E12                     CLC1SEL0        equ	7698	;# 
   352     1E13                     CLC1SEL1        equ	7699	;# 
   353     1E14                     CLC1SEL2        equ	7700	;# 
   354     1E15                     CLC1SEL3        equ	7701	;# 
   355     1E16                     CLC1GLS0        equ	7702	;# 
   356     1E17                     CLC1GLS1        equ	7703	;# 
   357     1E18                     CLC1GLS2        equ	7704	;# 
   358     1E19                     CLC1GLS3        equ	7705	;# 
   359     1E1A                     CLC2CON         equ	7706	;# 
   360     1E1B                     CLC2POL         equ	7707	;# 
   361     1E1C                     CLC2SEL0        equ	7708	;# 
   362     1E1D                     CLC2SEL1        equ	7709	;# 
   363     1E1E                     CLC2SEL2        equ	7710	;# 
   364     1E1F                     CLC2SEL3        equ	7711	;# 
   365     1E20                     CLC2GLS0        equ	7712	;# 
   366     1E21                     CLC2GLS1        equ	7713	;# 
   367     1E22                     CLC2GLS2        equ	7714	;# 
   368     1E23                     CLC2GLS3        equ	7715	;# 
   369     1E24                     CLC3CON         equ	7716	;# 
   370     1E25                     CLC3POL         equ	7717	;# 
   371     1E26                     CLC3SEL0        equ	7718	;# 
   372     1E27                     CLC3SEL1        equ	7719	;# 
   373     1E28                     CLC3SEL2        equ	7720	;# 
   374     1E29                     CLC3SEL3        equ	7721	;# 
   375     1E2A                     CLC3GLS0        equ	7722	;# 
   376     1E2B                     CLC3GLS1        equ	7723	;# 
   377     1E2C                     CLC3GLS2        equ	7724	;# 
   378     1E2D                     CLC3GLS3        equ	7725	;# 
   379     1E2E                     CLC4CON         equ	7726	;# 
   380     1E2F                     CLC4POL         equ	7727	;# 
   381     1E30                     CLC4SEL0        equ	7728	;# 
   382     1E31                     CLC4SEL1        equ	7729	;# 
   383     1E32                     CLC4SEL2        equ	7730	;# 
   384     1E33                     CLC4SEL3        equ	7731	;# 
   385     1E34                     CLC4GLS0        equ	7732	;# 
   386     1E35                     CLC4GLS1        equ	7733	;# 
   387     1E36                     CLC4GLS2        equ	7734	;# 
   388     1E37                     CLC4GLS3        equ	7735	;# 
   389     1E8F                     PPSLOCK         equ	7823	;# 
   390     1E90                     INTPPS          equ	7824	;# 
   391     1E91                     T0CKIPPS        equ	7825	;# 
   392     1E92                     T1CKIPPS        equ	7826	;# 
   393     1E93                     T1GPPS          equ	7827	;# 
   394     1E9C                     T2INPPS         equ	7836	;# 
   395     1EA1                     CCP1PPS         equ	7841	;# 
   396     1EA2                     CCP2PPS         equ	7842	;# 
   397     1EB1                     CWG1PPS         equ	7857	;# 
   398     1EBB                     CLCIN0PPS       equ	7867	;# 
   399     1EBC                     CLCIN1PPS       equ	7868	;# 
   400     1EBD                     CLCIN2PPS       equ	7869	;# 
   401     1EBE                     CLCIN3PPS       equ	7870	;# 
   402     1EC3                     ADACTPPS        equ	7875	;# 
   403     1EC5                     SSP1CLKPPS      equ	7877	;# 
   404     1EC6                     SSP1DATPPS      equ	7878	;# 
   405     1EC7                     SSP1SSPPS       equ	7879	;# 
   406     1EC8                     SSP2CLKPPS      equ	7880	;# 
   407     1EC9                     SSP2DATPPS      equ	7881	;# 
   408     1ECA                     SSP2SSPPS       equ	7882	;# 
   409     1ECB                     RX1DTPPS        equ	7883	;# 
   410     1ECC                     TX1CKPPS        equ	7884	;# 
   411     1ECD                     RX2DTPPS        equ	7885	;# 
   412     1ECE                     TX2CKPPS        equ	7886	;# 
   413     1F10                     RA0PPS          equ	7952	;# 
   414     1F11                     RA1PPS          equ	7953	;# 
   415     1F12                     RA2PPS          equ	7954	;# 
   416     1F13                     RA3PPS          equ	7955	;# 
   417     1F14                     RA4PPS          equ	7956	;# 
   418     1F15                     RA5PPS          equ	7957	;# 
   419     1F16                     RA6PPS          equ	7958	;# 
   420     1F17                     RA7PPS          equ	7959	;# 
   421     1F18                     RB0PPS          equ	7960	;# 
   422     1F19                     RB1PPS          equ	7961	;# 
   423     1F1A                     RB2PPS          equ	7962	;# 
   424     1F1B                     RB3PPS          equ	7963	;# 
   425     1F1C                     RB4PPS          equ	7964	;# 
   426     1F1D                     RB5PPS          equ	7965	;# 
   427     1F1E                     RB6PPS          equ	7966	;# 
   428     1F1F                     RB7PPS          equ	7967	;# 
   429     1F20                     RC0PPS          equ	7968	;# 
   430     1F21                     RC1PPS          equ	7969	;# 
   431     1F22                     RC2PPS          equ	7970	;# 
   432     1F23                     RC3PPS          equ	7971	;# 
   433     1F24                     RC4PPS          equ	7972	;# 
   434     1F25                     RC5PPS          equ	7973	;# 
   435     1F26                     RC6PPS          equ	7974	;# 
   436     1F27                     RC7PPS          equ	7975	;# 
   437     1F28                     RD0PPS          equ	7976	;# 
   438     1F29                     RD1PPS          equ	7977	;# 
   439     1F2A                     RD2PPS          equ	7978	;# 
   440     1F2B                     RD3PPS          equ	7979	;# 
   441     1F2C                     RD4PPS          equ	7980	;# 
   442     1F2D                     RD5PPS          equ	7981	;# 
   443     1F2E                     RD6PPS          equ	7982	;# 
   444     1F2F                     RD7PPS          equ	7983	;# 
   445     1F30                     RE0PPS          equ	7984	;# 
   446     1F31                     RE1PPS          equ	7985	;# 
   447     1F32                     RE2PPS          equ	7986	;# 
   448     1F38                     ANSELA          equ	7992	;# 
   449     1F39                     WPUA            equ	7993	;# 
   450     1F3A                     ODCONA          equ	7994	;# 
   451     1F3B                     SLRCONA         equ	7995	;# 
   452     1F3C                     INLVLA          equ	7996	;# 
   453     1F3D                     IOCAP           equ	7997	;# 
   454     1F3E                     IOCAN           equ	7998	;# 
   455     1F3F                     IOCAF           equ	7999	;# 
   456     1F43                     ANSELB          equ	8003	;# 
   457     1F44                     WPUB            equ	8004	;# 
   458     1F45                     ODCONB          equ	8005	;# 
   459     1F46                     SLRCONB         equ	8006	;# 
   460     1F47                     INLVLB          equ	8007	;# 
   461     1F48                     IOCBP           equ	8008	;# 
   462     1F49                     IOCBN           equ	8009	;# 
   463     1F4A                     IOCBF           equ	8010	;# 
   464     1F4E                     ANSELC          equ	8014	;# 
   465     1F4F                     WPUC            equ	8015	;# 
   466     1F50                     ODCONC          equ	8016	;# 
   467     1F51                     SLRCONC         equ	8017	;# 
   468     1F52                     INLVLC          equ	8018	;# 
   469     1F53                     IOCCP           equ	8019	;# 
   470     1F54                     IOCCN           equ	8020	;# 
   471     1F55                     IOCCF           equ	8021	;# 
   472     1F59                     ANSELD          equ	8025	;# 
   473     1F5A                     WPUD            equ	8026	;# 
   474     1F5B                     ODCOND          equ	8027	;# 
   475     1F5C                     SLRCOND         equ	8028	;# 
   476     1F5D                     INLVLD          equ	8029	;# 
   477     1F64                     ANSELE          equ	8036	;# 
   478     1F65                     WPUE            equ	8037	;# 
   479     1F66                     ODCONE          equ	8038	;# 
   480     1F67                     SLRCONE         equ	8039	;# 
   481     1F68                     INLVLE          equ	8040	;# 
   482     1F69                     IOCEP           equ	8041	;# 
   483     1F6A                     IOCEN           equ	8042	;# 
   484     1F6B                     IOCEF           equ	8043	;# 
   485     1FE4                     STATUS_SHAD     equ	8164	;# 
   486     1FE5                     WREG_SHAD       equ	8165	;# 
   487     1FE6                     BSR_SHAD        equ	8166	;# 
   488     1FE7                     PCLATH_SHAD     equ	8167	;# 
   489     1FE8                     FSR0_SHAD       equ	8168	;# 
   490     1FE8                     FSR0L_SHAD      equ	8168	;# 
   491     1FE9                     FSR0H_SHAD      equ	8169	;# 
   492     1FEA                     FSR1L_SHAD      equ	8170	;# 
   493     1FEB                     FSR1H_SHAD      equ	8171	;# 
   494     1FED                     STKPTR          equ	8173	;# 
   495     1FEE                     TOSL            equ	8174	;# 
   496     1FEF                     TOSH            equ	8175	;# 
   497     0000                     INDF0           equ	0	;# 
   498     0001                     INDF1           equ	1	;# 
   499     0002                     PCL             equ	2	;# 
   500     0003                     STATUS          equ	3	;# 
   501     0004                     FSR0L           equ	4	;# 
   502     0005                     FSR0H           equ	5	;# 
   503     0006                     FSR1L           equ	6	;# 
   504     0007                     FSR1H           equ	7	;# 
   505     0008                     BSR             equ	8	;# 
   506     0009                     WREG            equ	9	;# 
   507     000A                     PCLATH          equ	10	;# 
   508     000B                     INTCON          equ	11	;# 
   509     000C                     PORTA           equ	12	;# 
   510     000D                     PORTB           equ	13	;# 
   511     000E                     PORTC           equ	14	;# 
   512     000F                     PORTD           equ	15	;# 
   513     0010                     PORTE           equ	16	;# 
   514     0012                     TRISA           equ	18	;# 
   515     0013                     TRISB           equ	19	;# 
   516     0014                     TRISC           equ	20	;# 
   517     0015                     TRISD           equ	21	;# 
   518     0016                     TRISE           equ	22	;# 
   519     0018                     LATA            equ	24	;# 
   520     0019                     LATB            equ	25	;# 
   521     001A                     LATC            equ	26	;# 
   522     001B                     LATD            equ	27	;# 
   523     001C                     LATE            equ	28	;# 
   524     009B                     ADRES           equ	155	;# 
   525     009B                     ADRESL          equ	155	;# 
   526     009C                     ADRESH          equ	156	;# 
   527     009D                     ADCON0          equ	157	;# 
   528     009E                     ADCON1          equ	158	;# 
   529     009F                     ADACT           equ	159	;# 
   530     0119                     RC1REG          equ	281	;# 
   531     0119                     RCREG           equ	281	;# 
   532     0119                     RCREG1          equ	281	;# 
   533     011A                     TX1REG          equ	282	;# 
   534     011A                     TXREG1          equ	282	;# 
   535     011A                     TXREG           equ	282	;# 
   536     011B                     SP1BRG          equ	283	;# 
   537     011B                     SPBRG           equ	283	;# 
   538     011B                     SP1BRGL         equ	283	;# 
   539     011B                     SPBRG1          equ	283	;# 
   540     011B                     SPBRGL          equ	283	;# 
   541     011C                     SP1BRGH         equ	284	;# 
   542     011C                     SPBRGH          equ	284	;# 
   543     011C                     SPBRGH1         equ	284	;# 
   544     011D                     RC1STA          equ	285	;# 
   545     011D                     RCSTA1          equ	285	;# 
   546     011D                     RCSTA           equ	285	;# 
   547     011E                     TX1STA          equ	286	;# 
   548     011E                     TXSTA1          equ	286	;# 
   549     011E                     TXSTA           equ	286	;# 
   550     011F                     BAUD1CON        equ	287	;# 
   551     011F                     BAUDCON1        equ	287	;# 
   552     011F                     BAUDCTL1        equ	287	;# 
   553     011F                     BAUDCON         equ	287	;# 
   554     011F                     BAUDCTL         equ	287	;# 
   555     018C                     SSP1BUF         equ	396	;# 
   556     018D                     SSP1ADD         equ	397	;# 
   557     018E                     SSP1MSK         equ	398	;# 
   558     018F                     SSP1STAT        equ	399	;# 
   559     0190                     SSP1CON1        equ	400	;# 
   560     0191                     SSP1CON2        equ	401	;# 
   561     0192                     SSP1CON3        equ	402	;# 
   562     0196                     SSP2BUF         equ	406	;# 
   563     0197                     SSP2ADD         equ	407	;# 
   564     0198                     SSP2MSK         equ	408	;# 
   565     0199                     SSP2STAT        equ	409	;# 
   566     019A                     SSP2CON1        equ	410	;# 
   567     019B                     SSP2CON2        equ	411	;# 
   568     019C                     SSP2CON3        equ	412	;# 
   569     020C                     TMR1            equ	524	;# 
   570     020C                     TMR1L           equ	524	;# 
   571     020D                     TMR1H           equ	525	;# 
   572     020E                     T1CON           equ	526	;# 
   573     020F                     T1GCON          equ	527	;# 
   574     020F                     PR1             equ	527	;# 
   575     0210                     T1GATE          equ	528	;# 
   576     0210                     TMR1GATE        equ	528	;# 
   577     0211                     T1CLK           equ	529	;# 
   578     0211                     TMR1CLK         equ	529	;# 
   579     028C                     T2TMR           equ	652	;# 
   580     028C                     TMR2            equ	652	;# 
   581     028D                     T2PR            equ	653	;# 
   582     028D                     PR2             equ	653	;# 
   583     028E                     T2CON           equ	654	;# 
   584     028F                     T2HLT           equ	655	;# 
   585     0290                     T2CLKCON        equ	656	;# 
   586     0291                     T2RST           equ	657	;# 
   587     030C                     CCPR1           equ	780	;# 
   588     030C                     CCPR1L          equ	780	;# 
   589     030D                     CCPR1H          equ	781	;# 
   590     030E                     CCP1CON         equ	782	;# 
   591     030F                     CCP1CAP         equ	783	;# 
   592     0310                     CCPR2           equ	784	;# 
   593     0310                     CCPR2L          equ	784	;# 
   594     0311                     CCPR2H          equ	785	;# 
   595     0312                     CCP2CON         equ	786	;# 
   596     0313                     CCP2CAP         equ	787	;# 
   597     0314                     PWM3DC          equ	788	;# 
   598     0314                     PWM3DCL         equ	788	;# 
   599     0315                     PWM3DCH         equ	789	;# 
   600     0316                     PWM3CON         equ	790	;# 
   601     0318                     PWM4DC          equ	792	;# 
   602     0318                     PWM4DCL         equ	792	;# 
   603     0319                     PWM4DCH         equ	793	;# 
   604     031A                     PWM4CON         equ	794	;# 
   605     031C                     PWM5DC          equ	796	;# 
   606     031C                     PWM5DCL         equ	796	;# 
   607     031D                     PWM5DCH         equ	797	;# 
   608     031E                     PWM5CON         equ	798	;# 
   609     038C                     PWM6DC          equ	908	;# 
   610     038C                     PWM6DCL         equ	908	;# 
   611     038D                     PWM6DCH         equ	909	;# 
   612     038E                     PWM6CON         equ	910	;# 
   613     058C                     NCO1ACC         equ	1420	;# 
   614     058C                     NCO1ACCL        equ	1420	;# 
   615     058D                     NCO1ACCH        equ	1421	;# 
   616     058E                     NCO1ACCU        equ	1422	;# 
   617     058F                     NCO1INC         equ	1423	;# 
   618     058F                     NCO1INCL        equ	1423	;# 
   619     0590                     NCO1INCH        equ	1424	;# 
   620     0591                     NCO1INCU        equ	1425	;# 
   621     0592                     NCO1CON         equ	1426	;# 
   622     0593                     NCO1CLK         equ	1427	;# 
   623     059C                     TMR0L           equ	1436	;# 
   624     059C                     TMR0            equ	1436	;# 
   625     059D                     TMR0H           equ	1437	;# 
   626     059D                     PR0             equ	1437	;# 
   627     059E                     T0CON0          equ	1438	;# 
   628     059F                     T0CON1          equ	1439	;# 
   629     060C                     CWG1CLKCON      equ	1548	;# 
   630     060D                     CWG1DAT         equ	1549	;# 
   631     060E                     CWG1DBR         equ	1550	;# 
   632     060F                     CWG1DBF         equ	1551	;# 
   633     0610                     CWG1CON0        equ	1552	;# 
   634     0611                     CWG1CON1        equ	1553	;# 
   635     0612                     CWG1AS0         equ	1554	;# 
   636     0613                     CWG1AS1         equ	1555	;# 
   637     0614                     CWG1STR         equ	1556	;# 
   638     070C                     PIR0            equ	1804	;# 
   639     070D                     PIR1            equ	1805	;# 
   640     070E                     PIR2            equ	1806	;# 
   641     070F                     PIR3            equ	1807	;# 
   642     0710                     PIR4            equ	1808	;# 
   643     0711                     PIR5            equ	1809	;# 
   644     0712                     PIR6            equ	1810	;# 
   645     0713                     PIR7            equ	1811	;# 
   646     0716                     PIE0            equ	1814	;# 
   647     0717                     PIE1            equ	1815	;# 
   648     0718                     PIE2            equ	1816	;# 
   649     0719                     PIE3            equ	1817	;# 
   650     071A                     PIE4            equ	1818	;# 
   651     071B                     PIE5            equ	1819	;# 
   652     071C                     PIE6            equ	1820	;# 
   653     071D                     PIE7            equ	1821	;# 
   654     0796                     PMD0            equ	1942	;# 
   655     0797                     PMD1            equ	1943	;# 
   656     0798                     PMD2            equ	1944	;# 
   657     0799                     PMD3            equ	1945	;# 
   658     079A                     PMD4            equ	1946	;# 
   659     079B                     PMD5            equ	1947	;# 
   660     080C                     WDTCON0         equ	2060	;# 
   661     080D                     WDTCON1         equ	2061	;# 
   662     080E                     WDTPSL          equ	2062	;# 
   663     080F                     WDTPSH          equ	2063	;# 
   664     0810                     WDTTMR          equ	2064	;# 
   665     0811                     BORCON          equ	2065	;# 
   666     0812                     VREGCON         equ	2066	;# 
   667     0813                     PCON0           equ	2067	;# 
   668     0814                     PCON1           equ	2068	;# 
   669     081A                     NVMADR          equ	2074	;# 
   670     081A                     NVMADRL         equ	2074	;# 
   671     081B                     NVMADRH         equ	2075	;# 
   672     081C                     NVMDAT          equ	2076	;# 
   673     081C                     NVMDATL         equ	2076	;# 
   674     081D                     NVMDATH         equ	2077	;# 
   675     081E                     NVMCON1         equ	2078	;# 
   676     081F                     NVMCON2         equ	2079	;# 
   677     088C                     CPUDOZE         equ	2188	;# 
   678     088D                     OSCCON1         equ	2189	;# 
   679     088E                     OSCCON2         equ	2190	;# 
   680     088F                     OSCCON3         equ	2191	;# 
   681     0890                     OSCSTAT         equ	2192	;# 
   682     0891                     OSCEN           equ	2193	;# 
   683     0892                     OSCTUNE         equ	2194	;# 
   684     0893                     OSCFRQ          equ	2195	;# 
   685     0895                     CLKRCON         equ	2197	;# 
   686     0896                     CLKRCLK         equ	2198	;# 
   687     090C                     FVRCON          equ	2316	;# 
   688     090E                     DAC1CON0        equ	2318	;# 
   689     090F                     DAC1CON1        equ	2319	;# 
   690     091F                     ZCDCON          equ	2335	;# 
   691     098F                     CMOUT           equ	2447	;# 
   692     098F                     CMSTAT          equ	2447	;# 
   693     0990                     CM1CON0         equ	2448	;# 
   694     0991                     CM1CON1         equ	2449	;# 
   695     0992                     CM1NCH          equ	2450	;# 
   696     0993                     CM1PCH          equ	2451	;# 
   697     0994                     CM2CON0         equ	2452	;# 
   698     0995                     CM2CON1         equ	2453	;# 
   699     0996                     CM2NCH          equ	2454	;# 
   700     0997                     CM2PCH          equ	2455	;# 
   701     0A19                     RC2REG          equ	2585	;# 
   702     0A19                     RCREG2          equ	2585	;# 
   703     0A1A                     TX2REG          equ	2586	;# 
   704     0A1A                     TXREG2          equ	2586	;# 
   705     0A1B                     SP2BRG          equ	2587	;# 
   706     0A1B                     SP2BRGL         equ	2587	;# 
   707     0A1B                     SPBRG2          equ	2587	;# 
   708     0A1C                     SP2BRGH         equ	2588	;# 
   709     0A1C                     SPBRGH2         equ	2588	;# 
   710     0A1D                     RC2STA          equ	2589	;# 
   711     0A1D                     RCSTA2          equ	2589	;# 
   712     0A1E                     TX2STA          equ	2590	;# 
   713     0A1E                     TXSTA2          equ	2590	;# 
   714     0A1F                     BAUD2CON        equ	2591	;# 
   715     0A1F                     BAUDCON2        equ	2591	;# 
   716     0A1F                     BAUDCTL2        equ	2591	;# 
   717     1E0F                     CLCDATA         equ	7695	;# 
   718     1E10                     CLC1CON         equ	7696	;# 
   719     1E11                     CLC1POL         equ	7697	;# 
   720     1E12                     CLC1SEL0        equ	7698	;# 
   721     1E13                     CLC1SEL1        equ	7699	;# 
   722     1E14                     CLC1SEL2        equ	7700	;# 
   723     1E15                     CLC1SEL3        equ	7701	;# 
   724     1E16                     CLC1GLS0        equ	7702	;# 
   725     1E17                     CLC1GLS1        equ	7703	;# 
   726     1E18                     CLC1GLS2        equ	7704	;# 
   727     1E19                     CLC1GLS3        equ	7705	;# 
   728     1E1A                     CLC2CON         equ	7706	;# 
   729     1E1B                     CLC2POL         equ	7707	;# 
   730     1E1C                     CLC2SEL0        equ	7708	;# 
   731     1E1D                     CLC2SEL1        equ	7709	;# 
   732     1E1E                     CLC2SEL2        equ	7710	;# 
   733     1E1F                     CLC2SEL3        equ	7711	;# 
   734     1E20                     CLC2GLS0        equ	7712	;# 
   735     1E21                     CLC2GLS1        equ	7713	;# 
   736     1E22                     CLC2GLS2        equ	7714	;# 
   737     1E23                     CLC2GLS3        equ	7715	;# 
   738     1E24                     CLC3CON         equ	7716	;# 
   739     1E25                     CLC3POL         equ	7717	;# 
   740     1E26                     CLC3SEL0        equ	7718	;# 
   741     1E27                     CLC3SEL1        equ	7719	;# 
   742     1E28                     CLC3SEL2        equ	7720	;# 
   743     1E29                     CLC3SEL3        equ	7721	;# 
   744     1E2A                     CLC3GLS0        equ	7722	;# 
   745     1E2B                     CLC3GLS1        equ	7723	;# 
   746     1E2C                     CLC3GLS2        equ	7724	;# 
   747     1E2D                     CLC3GLS3        equ	7725	;# 
   748     1E2E                     CLC4CON         equ	7726	;# 
   749     1E2F                     CLC4POL         equ	7727	;# 
   750     1E30                     CLC4SEL0        equ	7728	;# 
   751     1E31                     CLC4SEL1        equ	7729	;# 
   752     1E32                     CLC4SEL2        equ	7730	;# 
   753     1E33                     CLC4SEL3        equ	7731	;# 
   754     1E34                     CLC4GLS0        equ	7732	;# 
   755     1E35                     CLC4GLS1        equ	7733	;# 
   756     1E36                     CLC4GLS2        equ	7734	;# 
   757     1E37                     CLC4GLS3        equ	7735	;# 
   758     1E8F                     PPSLOCK         equ	7823	;# 
   759     1E90                     INTPPS          equ	7824	;# 
   760     1E91                     T0CKIPPS        equ	7825	;# 
   761     1E92                     T1CKIPPS        equ	7826	;# 
   762     1E93                     T1GPPS          equ	7827	;# 
   763     1E9C                     T2INPPS         equ	7836	;# 
   764     1EA1                     CCP1PPS         equ	7841	;# 
   765     1EA2                     CCP2PPS         equ	7842	;# 
   766     1EB1                     CWG1PPS         equ	7857	;# 
   767     1EBB                     CLCIN0PPS       equ	7867	;# 
   768     1EBC                     CLCIN1PPS       equ	7868	;# 
   769     1EBD                     CLCIN2PPS       equ	7869	;# 
   770     1EBE                     CLCIN3PPS       equ	7870	;# 
   771     1EC3                     ADACTPPS        equ	7875	;# 
   772     1EC5                     SSP1CLKPPS      equ	7877	;# 
   773     1EC6                     SSP1DATPPS      equ	7878	;# 
   774     1EC7                     SSP1SSPPS       equ	7879	;# 
   775     1EC8                     SSP2CLKPPS      equ	7880	;# 
   776     1EC9                     SSP2DATPPS      equ	7881	;# 
   777     1ECA                     SSP2SSPPS       equ	7882	;# 
   778     1ECB                     RX1DTPPS        equ	7883	;# 
   779     1ECC                     TX1CKPPS        equ	7884	;# 
   780     1ECD                     RX2DTPPS        equ	7885	;# 
   781     1ECE                     TX2CKPPS        equ	7886	;# 
   782     1F10                     RA0PPS          equ	7952	;# 
   783     1F11                     RA1PPS          equ	7953	;# 
   784     1F12                     RA2PPS          equ	7954	;# 
   785     1F13                     RA3PPS          equ	7955	;# 
   786     1F14                     RA4PPS          equ	7956	;# 
   787     1F15                     RA5PPS          equ	7957	;# 
   788     1F16                     RA6PPS          equ	7958	;# 
   789     1F17                     RA7PPS          equ	7959	;# 
   790     1F18                     RB0PPS          equ	7960	;# 
   791     1F19                     RB1PPS          equ	7961	;# 
   792     1F1A                     RB2PPS          equ	7962	;# 
   793     1F1B                     RB3PPS          equ	7963	;# 
   794     1F1C                     RB4PPS          equ	7964	;# 
   795     1F1D                     RB5PPS          equ	7965	;# 
   796     1F1E                     RB6PPS          equ	7966	;# 
   797     1F1F                     RB7PPS          equ	7967	;# 
   798     1F20                     RC0PPS          equ	7968	;# 
   799     1F21                     RC1PPS          equ	7969	;# 
   800     1F22                     RC2PPS          equ	7970	;# 
   801     1F23                     RC3PPS          equ	7971	;# 
   802     1F24                     RC4PPS          equ	7972	;# 
   803     1F25                     RC5PPS          equ	7973	;# 
   804     1F26                     RC6PPS          equ	7974	;# 
   805     1F27                     RC7PPS          equ	7975	;# 
   806     1F28                     RD0PPS          equ	7976	;# 
   807     1F29                     RD1PPS          equ	7977	;# 
   808     1F2A                     RD2PPS          equ	7978	;# 
   809     1F2B                     RD3PPS          equ	7979	;# 
   810     1F2C                     RD4PPS          equ	7980	;# 
   811     1F2D                     RD5PPS          equ	7981	;# 
   812     1F2E                     RD6PPS          equ	7982	;# 
   813     1F2F                     RD7PPS          equ	7983	;# 
   814     1F30                     RE0PPS          equ	7984	;# 
   815     1F31                     RE1PPS          equ	7985	;# 
   816     1F32                     RE2PPS          equ	7986	;# 
   817     1F38                     ANSELA          equ	7992	;# 
   818     1F39                     WPUA            equ	7993	;# 
   819     1F3A                     ODCONA          equ	7994	;# 
   820     1F3B                     SLRCONA         equ	7995	;# 
   821     1F3C                     INLVLA          equ	7996	;# 
   822     1F3D                     IOCAP           equ	7997	;# 
   823     1F3E                     IOCAN           equ	7998	;# 
   824     1F3F                     IOCAF           equ	7999	;# 
   825     1F43                     ANSELB          equ	8003	;# 
   826     1F44                     WPUB            equ	8004	;# 
   827     1F45                     ODCONB          equ	8005	;# 
   828     1F46                     SLRCONB         equ	8006	;# 
   829     1F47                     INLVLB          equ	8007	;# 
   830     1F48                     IOCBP           equ	8008	;# 
   831     1F49                     IOCBN           equ	8009	;# 
   832     1F4A                     IOCBF           equ	8010	;# 
   833     1F4E                     ANSELC          equ	8014	;# 
   834     1F4F                     WPUC            equ	8015	;# 
   835     1F50                     ODCONC          equ	8016	;# 
   836     1F51                     SLRCONC         equ	8017	;# 
   837     1F52                     INLVLC          equ	8018	;# 
   838     1F53                     IOCCP           equ	8019	;# 
   839     1F54                     IOCCN           equ	8020	;# 
   840     1F55                     IOCCF           equ	8021	;# 
   841     1F59                     ANSELD          equ	8025	;# 
   842     1F5A                     WPUD            equ	8026	;# 
   843     1F5B                     ODCOND          equ	8027	;# 
   844     1F5C                     SLRCOND         equ	8028	;# 
   845     1F5D                     INLVLD          equ	8029	;# 
   846     1F64                     ANSELE          equ	8036	;# 
   847     1F65                     WPUE            equ	8037	;# 
   848     1F66                     ODCONE          equ	8038	;# 
   849     1F67                     SLRCONE         equ	8039	;# 
   850     1F68                     INLVLE          equ	8040	;# 
   851     1F69                     IOCEP           equ	8041	;# 
   852     1F6A                     IOCEN           equ	8042	;# 
   853     1F6B                     IOCEF           equ	8043	;# 
   854     1FE4                     STATUS_SHAD     equ	8164	;# 
   855     1FE5                     WREG_SHAD       equ	8165	;# 
   856     1FE6                     BSR_SHAD        equ	8166	;# 
   857     1FE7                     PCLATH_SHAD     equ	8167	;# 
   858     1FE8                     FSR0_SHAD       equ	8168	;# 
   859     1FE8                     FSR0L_SHAD      equ	8168	;# 
   860     1FE9                     FSR0H_SHAD      equ	8169	;# 
   861     1FEA                     FSR1L_SHAD      equ	8170	;# 
   862     1FEB                     FSR1H_SHAD      equ	8171	;# 
   863     1FED                     STKPTR          equ	8173	;# 
   864     1FEE                     TOSL            equ	8174	;# 
   865     1FEF                     TOSH            equ	8175	;# 
   866     0000                     INDF0           equ	0	;# 
   867     0001                     INDF1           equ	1	;# 
   868     0002                     PCL             equ	2	;# 
   869     0003                     STATUS          equ	3	;# 
   870     0004                     FSR0L           equ	4	;# 
   871     0005                     FSR0H           equ	5	;# 
   872     0006                     FSR1L           equ	6	;# 
   873     0007                     FSR1H           equ	7	;# 
   874     0008                     BSR             equ	8	;# 
   875     0009                     WREG            equ	9	;# 
   876     000A                     PCLATH          equ	10	;# 
   877     000B                     INTCON          equ	11	;# 
   878     000C                     PORTA           equ	12	;# 
   879     000D                     PORTB           equ	13	;# 
   880     000E                     PORTC           equ	14	;# 
   881     000F                     PORTD           equ	15	;# 
   882     0010                     PORTE           equ	16	;# 
   883     0012                     TRISA           equ	18	;# 
   884     0013                     TRISB           equ	19	;# 
   885     0014                     TRISC           equ	20	;# 
   886     0015                     TRISD           equ	21	;# 
   887     0016                     TRISE           equ	22	;# 
   888     0018                     LATA            equ	24	;# 
   889     0019                     LATB            equ	25	;# 
   890     001A                     LATC            equ	26	;# 
   891     001B                     LATD            equ	27	;# 
   892     001C                     LATE            equ	28	;# 
   893     009B                     ADRES           equ	155	;# 
   894     009B                     ADRESL          equ	155	;# 
   895     009C                     ADRESH          equ	156	;# 
   896     009D                     ADCON0          equ	157	;# 
   897     009E                     ADCON1          equ	158	;# 
   898     009F                     ADACT           equ	159	;# 
   899     0119                     RC1REG          equ	281	;# 
   900     0119                     RCREG           equ	281	;# 
   901     0119                     RCREG1          equ	281	;# 
   902     011A                     TX1REG          equ	282	;# 
   903     011A                     TXREG1          equ	282	;# 
   904     011A                     TXREG           equ	282	;# 
   905     011B                     SP1BRG          equ	283	;# 
   906     011B                     SPBRG           equ	283	;# 
   907     011B                     SP1BRGL         equ	283	;# 
   908     011B                     SPBRG1          equ	283	;# 
   909     011B                     SPBRGL          equ	283	;# 
   910     011C                     SP1BRGH         equ	284	;# 
   911     011C                     SPBRGH          equ	284	;# 
   912     011C                     SPBRGH1         equ	284	;# 
   913     011D                     RC1STA          equ	285	;# 
   914     011D                     RCSTA1          equ	285	;# 
   915     011D                     RCSTA           equ	285	;# 
   916     011E                     TX1STA          equ	286	;# 
   917     011E                     TXSTA1          equ	286	;# 
   918     011E                     TXSTA           equ	286	;# 
   919     011F                     BAUD1CON        equ	287	;# 
   920     011F                     BAUDCON1        equ	287	;# 
   921     011F                     BAUDCTL1        equ	287	;# 
   922     011F                     BAUDCON         equ	287	;# 
   923     011F                     BAUDCTL         equ	287	;# 
   924     018C                     SSP1BUF         equ	396	;# 
   925     018D                     SSP1ADD         equ	397	;# 
   926     018E                     SSP1MSK         equ	398	;# 
   927     018F                     SSP1STAT        equ	399	;# 
   928     0190                     SSP1CON1        equ	400	;# 
   929     0191                     SSP1CON2        equ	401	;# 
   930     0192                     SSP1CON3        equ	402	;# 
   931     0196                     SSP2BUF         equ	406	;# 
   932     0197                     SSP2ADD         equ	407	;# 
   933     0198                     SSP2MSK         equ	408	;# 
   934     0199                     SSP2STAT        equ	409	;# 
   935     019A                     SSP2CON1        equ	410	;# 
   936     019B                     SSP2CON2        equ	411	;# 
   937     019C                     SSP2CON3        equ	412	;# 
   938     020C                     TMR1            equ	524	;# 
   939     020C                     TMR1L           equ	524	;# 
   940     020D                     TMR1H           equ	525	;# 
   941     020E                     T1CON           equ	526	;# 
   942     020F                     T1GCON          equ	527	;# 
   943     020F                     PR1             equ	527	;# 
   944     0210                     T1GATE          equ	528	;# 
   945     0210                     TMR1GATE        equ	528	;# 
   946     0211                     T1CLK           equ	529	;# 
   947     0211                     TMR1CLK         equ	529	;# 
   948     028C                     T2TMR           equ	652	;# 
   949     028C                     TMR2            equ	652	;# 
   950     028D                     T2PR            equ	653	;# 
   951     028D                     PR2             equ	653	;# 
   952     028E                     T2CON           equ	654	;# 
   953     028F                     T2HLT           equ	655	;# 
   954     0290                     T2CLKCON        equ	656	;# 
   955     0291                     T2RST           equ	657	;# 
   956     030C                     CCPR1           equ	780	;# 
   957     030C                     CCPR1L          equ	780	;# 
   958     030D                     CCPR1H          equ	781	;# 
   959     030E                     CCP1CON         equ	782	;# 
   960     030F                     CCP1CAP         equ	783	;# 
   961     0310                     CCPR2           equ	784	;# 
   962     0310                     CCPR2L          equ	784	;# 
   963     0311                     CCPR2H          equ	785	;# 
   964     0312                     CCP2CON         equ	786	;# 
   965     0313                     CCP2CAP         equ	787	;# 
   966     0314                     PWM3DC          equ	788	;# 
   967     0314                     PWM3DCL         equ	788	;# 
   968     0315                     PWM3DCH         equ	789	;# 
   969     0316                     PWM3CON         equ	790	;# 
   970     0318                     PWM4DC          equ	792	;# 
   971     0318                     PWM4DCL         equ	792	;# 
   972     0319                     PWM4DCH         equ	793	;# 
   973     031A                     PWM4CON         equ	794	;# 
   974     031C                     PWM5DC          equ	796	;# 
   975     031C                     PWM5DCL         equ	796	;# 
   976     031D                     PWM5DCH         equ	797	;# 
   977     031E                     PWM5CON         equ	798	;# 
   978     038C                     PWM6DC          equ	908	;# 
   979     038C                     PWM6DCL         equ	908	;# 
   980     038D                     PWM6DCH         equ	909	;# 
   981     038E                     PWM6CON         equ	910	;# 
   982     058C                     NCO1ACC         equ	1420	;# 
   983     058C                     NCO1ACCL        equ	1420	;# 
   984     058D                     NCO1ACCH        equ	1421	;# 
   985     058E                     NCO1ACCU        equ	1422	;# 
   986     058F                     NCO1INC         equ	1423	;# 
   987     058F                     NCO1INCL        equ	1423	;# 
   988     0590                     NCO1INCH        equ	1424	;# 
   989     0591                     NCO1INCU        equ	1425	;# 
   990     0592                     NCO1CON         equ	1426	;# 
   991     0593                     NCO1CLK         equ	1427	;# 
   992     059C                     TMR0L           equ	1436	;# 
   993     059C                     TMR0            equ	1436	;# 
   994     059D                     TMR0H           equ	1437	;# 
   995     059D                     PR0             equ	1437	;# 
   996     059E                     T0CON0          equ	1438	;# 
   997     059F                     T0CON1          equ	1439	;# 
   998     060C                     CWG1CLKCON      equ	1548	;# 
   999     060D                     CWG1DAT         equ	1549	;# 
  1000     060E                     CWG1DBR         equ	1550	;# 
  1001     060F                     CWG1DBF         equ	1551	;# 
  1002     0610                     CWG1CON0        equ	1552	;# 
  1003     0611                     CWG1CON1        equ	1553	;# 
  1004     0612                     CWG1AS0         equ	1554	;# 
  1005     0613                     CWG1AS1         equ	1555	;# 
  1006     0614                     CWG1STR         equ	1556	;# 
  1007     070C                     PIR0            equ	1804	;# 
  1008     070D                     PIR1            equ	1805	;# 
  1009     070E                     PIR2            equ	1806	;# 
  1010     070F                     PIR3            equ	1807	;# 
  1011     0710                     PIR4            equ	1808	;# 
  1012     0711                     PIR5            equ	1809	;# 
  1013     0712                     PIR6            equ	1810	;# 
  1014     0713                     PIR7            equ	1811	;# 
  1015     0716                     PIE0            equ	1814	;# 
  1016     0717                     PIE1            equ	1815	;# 
  1017     0718                     PIE2            equ	1816	;# 
  1018     0719                     PIE3            equ	1817	;# 
  1019     071A                     PIE4            equ	1818	;# 
  1020     071B                     PIE5            equ	1819	;# 
  1021     071C                     PIE6            equ	1820	;# 
  1022     071D                     PIE7            equ	1821	;# 
  1023     0796                     PMD0            equ	1942	;# 
  1024     0797                     PMD1            equ	1943	;# 
  1025     0798                     PMD2            equ	1944	;# 
  1026     0799                     PMD3            equ	1945	;# 
  1027     079A                     PMD4            equ	1946	;# 
  1028     079B                     PMD5            equ	1947	;# 
  1029     080C                     WDTCON0         equ	2060	;# 
  1030     080D                     WDTCON1         equ	2061	;# 
  1031     080E                     WDTPSL          equ	2062	;# 
  1032     080F                     WDTPSH          equ	2063	;# 
  1033     0810                     WDTTMR          equ	2064	;# 
  1034     0811                     BORCON          equ	2065	;# 
  1035     0812                     VREGCON         equ	2066	;# 
  1036     0813                     PCON0           equ	2067	;# 
  1037     0814                     PCON1           equ	2068	;# 
  1038     081A                     NVMADR          equ	2074	;# 
  1039     081A                     NVMADRL         equ	2074	;# 
  1040     081B                     NVMADRH         equ	2075	;# 
  1041     081C                     NVMDAT          equ	2076	;# 
  1042     081C                     NVMDATL         equ	2076	;# 
  1043     081D                     NVMDATH         equ	2077	;# 
  1044     081E                     NVMCON1         equ	2078	;# 
  1045     081F                     NVMCON2         equ	2079	;# 
  1046     088C                     CPUDOZE         equ	2188	;# 
  1047     088D                     OSCCON1         equ	2189	;# 
  1048     088E                     OSCCON2         equ	2190	;# 
  1049     088F                     OSCCON3         equ	2191	;# 
  1050     0890                     OSCSTAT         equ	2192	;# 
  1051     0891                     OSCEN           equ	2193	;# 
  1052     0892                     OSCTUNE         equ	2194	;# 
  1053     0893                     OSCFRQ          equ	2195	;# 
  1054     0895                     CLKRCON         equ	2197	;# 
  1055     0896                     CLKRCLK         equ	2198	;# 
  1056     090C                     FVRCON          equ	2316	;# 
  1057     090E                     DAC1CON0        equ	2318	;# 
  1058     090F                     DAC1CON1        equ	2319	;# 
  1059     091F                     ZCDCON          equ	2335	;# 
  1060     098F                     CMOUT           equ	2447	;# 
  1061     098F                     CMSTAT          equ	2447	;# 
  1062     0990                     CM1CON0         equ	2448	;# 
  1063     0991                     CM1CON1         equ	2449	;# 
  1064     0992                     CM1NCH          equ	2450	;# 
  1065     0993                     CM1PCH          equ	2451	;# 
  1066     0994                     CM2CON0         equ	2452	;# 
  1067     0995                     CM2CON1         equ	2453	;# 
  1068     0996                     CM2NCH          equ	2454	;# 
  1069     0997                     CM2PCH          equ	2455	;# 
  1070     0A19                     RC2REG          equ	2585	;# 
  1071     0A19                     RCREG2          equ	2585	;# 
  1072     0A1A                     TX2REG          equ	2586	;# 
  1073     0A1A                     TXREG2          equ	2586	;# 
  1074     0A1B                     SP2BRG          equ	2587	;# 
  1075     0A1B                     SP2BRGL         equ	2587	;# 
  1076     0A1B                     SPBRG2          equ	2587	;# 
  1077     0A1C                     SP2BRGH         equ	2588	;# 
  1078     0A1C                     SPBRGH2         equ	2588	;# 
  1079     0A1D                     RC2STA          equ	2589	;# 
  1080     0A1D                     RCSTA2          equ	2589	;# 
  1081     0A1E                     TX2STA          equ	2590	;# 
  1082     0A1E                     TXSTA2          equ	2590	;# 
  1083     0A1F                     BAUD2CON        equ	2591	;# 
  1084     0A1F                     BAUDCON2        equ	2591	;# 
  1085     0A1F                     BAUDCTL2        equ	2591	;# 
  1086     1E0F                     CLCDATA         equ	7695	;# 
  1087     1E10                     CLC1CON         equ	7696	;# 
  1088     1E11                     CLC1POL         equ	7697	;# 
  1089     1E12                     CLC1SEL0        equ	7698	;# 
  1090     1E13                     CLC1SEL1        equ	7699	;# 
  1091     1E14                     CLC1SEL2        equ	7700	;# 
  1092     1E15                     CLC1SEL3        equ	7701	;# 
  1093     1E16                     CLC1GLS0        equ	7702	;# 
  1094     1E17                     CLC1GLS1        equ	7703	;# 
  1095     1E18                     CLC1GLS2        equ	7704	;# 
  1096     1E19                     CLC1GLS3        equ	7705	;# 
  1097     1E1A                     CLC2CON         equ	7706	;# 
  1098     1E1B                     CLC2POL         equ	7707	;# 
  1099     1E1C                     CLC2SEL0        equ	7708	;# 
  1100     1E1D                     CLC2SEL1        equ	7709	;# 
  1101     1E1E                     CLC2SEL2        equ	7710	;# 
  1102     1E1F                     CLC2SEL3        equ	7711	;# 
  1103     1E20                     CLC2GLS0        equ	7712	;# 
  1104     1E21                     CLC2GLS1        equ	7713	;# 
  1105     1E22                     CLC2GLS2        equ	7714	;# 
  1106     1E23                     CLC2GLS3        equ	7715	;# 
  1107     1E24                     CLC3CON         equ	7716	;# 
  1108     1E25                     CLC3POL         equ	7717	;# 
  1109     1E26                     CLC3SEL0        equ	7718	;# 
  1110     1E27                     CLC3SEL1        equ	7719	;# 
  1111     1E28                     CLC3SEL2        equ	7720	;# 
  1112     1E29                     CLC3SEL3        equ	7721	;# 
  1113     1E2A                     CLC3GLS0        equ	7722	;# 
  1114     1E2B                     CLC3GLS1        equ	7723	;# 
  1115     1E2C                     CLC3GLS2        equ	7724	;# 
  1116     1E2D                     CLC3GLS3        equ	7725	;# 
  1117     1E2E                     CLC4CON         equ	7726	;# 
  1118     1E2F                     CLC4POL         equ	7727	;# 
  1119     1E30                     CLC4SEL0        equ	7728	;# 
  1120     1E31                     CLC4SEL1        equ	7729	;# 
  1121     1E32                     CLC4SEL2        equ	7730	;# 
  1122     1E33                     CLC4SEL3        equ	7731	;# 
  1123     1E34                     CLC4GLS0        equ	7732	;# 
  1124     1E35                     CLC4GLS1        equ	7733	;# 
  1125     1E36                     CLC4GLS2        equ	7734	;# 
  1126     1E37                     CLC4GLS3        equ	7735	;# 
  1127     1E8F                     PPSLOCK         equ	7823	;# 
  1128     1E90                     INTPPS          equ	7824	;# 
  1129     1E91                     T0CKIPPS        equ	7825	;# 
  1130     1E92                     T1CKIPPS        equ	7826	;# 
  1131     1E93                     T1GPPS          equ	7827	;# 
  1132     1E9C                     T2INPPS         equ	7836	;# 
  1133     1EA1                     CCP1PPS         equ	7841	;# 
  1134     1EA2                     CCP2PPS         equ	7842	;# 
  1135     1EB1                     CWG1PPS         equ	7857	;# 
  1136     1EBB                     CLCIN0PPS       equ	7867	;# 
  1137     1EBC                     CLCIN1PPS       equ	7868	;# 
  1138     1EBD                     CLCIN2PPS       equ	7869	;# 
  1139     1EBE                     CLCIN3PPS       equ	7870	;# 
  1140     1EC3                     ADACTPPS        equ	7875	;# 
  1141     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1142     1EC6                     SSP1DATPPS      equ	7878	;# 
  1143     1EC7                     SSP1SSPPS       equ	7879	;# 
  1144     1EC8                     SSP2CLKPPS      equ	7880	;# 
  1145     1EC9                     SSP2DATPPS      equ	7881	;# 
  1146     1ECA                     SSP2SSPPS       equ	7882	;# 
  1147     1ECB                     RX1DTPPS        equ	7883	;# 
  1148     1ECC                     TX1CKPPS        equ	7884	;# 
  1149     1ECD                     RX2DTPPS        equ	7885	;# 
  1150     1ECE                     TX2CKPPS        equ	7886	;# 
  1151     1F10                     RA0PPS          equ	7952	;# 
  1152     1F11                     RA1PPS          equ	7953	;# 
  1153     1F12                     RA2PPS          equ	7954	;# 
  1154     1F13                     RA3PPS          equ	7955	;# 
  1155     1F14                     RA4PPS          equ	7956	;# 
  1156     1F15                     RA5PPS          equ	7957	;# 
  1157     1F16                     RA6PPS          equ	7958	;# 
  1158     1F17                     RA7PPS          equ	7959	;# 
  1159     1F18                     RB0PPS          equ	7960	;# 
  1160     1F19                     RB1PPS          equ	7961	;# 
  1161     1F1A                     RB2PPS          equ	7962	;# 
  1162     1F1B                     RB3PPS          equ	7963	;# 
  1163     1F1C                     RB4PPS          equ	7964	;# 
  1164     1F1D                     RB5PPS          equ	7965	;# 
  1165     1F1E                     RB6PPS          equ	7966	;# 
  1166     1F1F                     RB7PPS          equ	7967	;# 
  1167     1F20                     RC0PPS          equ	7968	;# 
  1168     1F21                     RC1PPS          equ	7969	;# 
  1169     1F22                     RC2PPS          equ	7970	;# 
  1170     1F23                     RC3PPS          equ	7971	;# 
  1171     1F24                     RC4PPS          equ	7972	;# 
  1172     1F25                     RC5PPS          equ	7973	;# 
  1173     1F26                     RC6PPS          equ	7974	;# 
  1174     1F27                     RC7PPS          equ	7975	;# 
  1175     1F28                     RD0PPS          equ	7976	;# 
  1176     1F29                     RD1PPS          equ	7977	;# 
  1177     1F2A                     RD2PPS          equ	7978	;# 
  1178     1F2B                     RD3PPS          equ	7979	;# 
  1179     1F2C                     RD4PPS          equ	7980	;# 
  1180     1F2D                     RD5PPS          equ	7981	;# 
  1181     1F2E                     RD6PPS          equ	7982	;# 
  1182     1F2F                     RD7PPS          equ	7983	;# 
  1183     1F30                     RE0PPS          equ	7984	;# 
  1184     1F31                     RE1PPS          equ	7985	;# 
  1185     1F32                     RE2PPS          equ	7986	;# 
  1186     1F38                     ANSELA          equ	7992	;# 
  1187     1F39                     WPUA            equ	7993	;# 
  1188     1F3A                     ODCONA          equ	7994	;# 
  1189     1F3B                     SLRCONA         equ	7995	;# 
  1190     1F3C                     INLVLA          equ	7996	;# 
  1191     1F3D                     IOCAP           equ	7997	;# 
  1192     1F3E                     IOCAN           equ	7998	;# 
  1193     1F3F                     IOCAF           equ	7999	;# 
  1194     1F43                     ANSELB          equ	8003	;# 
  1195     1F44                     WPUB            equ	8004	;# 
  1196     1F45                     ODCONB          equ	8005	;# 
  1197     1F46                     SLRCONB         equ	8006	;# 
  1198     1F47                     INLVLB          equ	8007	;# 
  1199     1F48                     IOCBP           equ	8008	;# 
  1200     1F49                     IOCBN           equ	8009	;# 
  1201     1F4A                     IOCBF           equ	8010	;# 
  1202     1F4E                     ANSELC          equ	8014	;# 
  1203     1F4F                     WPUC            equ	8015	;# 
  1204     1F50                     ODCONC          equ	8016	;# 
  1205     1F51                     SLRCONC         equ	8017	;# 
  1206     1F52                     INLVLC          equ	8018	;# 
  1207     1F53                     IOCCP           equ	8019	;# 
  1208     1F54                     IOCCN           equ	8020	;# 
  1209     1F55                     IOCCF           equ	8021	;# 
  1210     1F59                     ANSELD          equ	8025	;# 
  1211     1F5A                     WPUD            equ	8026	;# 
  1212     1F5B                     ODCOND          equ	8027	;# 
  1213     1F5C                     SLRCOND         equ	8028	;# 
  1214     1F5D                     INLVLD          equ	8029	;# 
  1215     1F64                     ANSELE          equ	8036	;# 
  1216     1F65                     WPUE            equ	8037	;# 
  1217     1F66                     ODCONE          equ	8038	;# 
  1218     1F67                     SLRCONE         equ	8039	;# 
  1219     1F68                     INLVLE          equ	8040	;# 
  1220     1F69                     IOCEP           equ	8041	;# 
  1221     1F6A                     IOCEN           equ	8042	;# 
  1222     1F6B                     IOCEF           equ	8043	;# 
  1223     1FE4                     STATUS_SHAD     equ	8164	;# 
  1224     1FE5                     WREG_SHAD       equ	8165	;# 
  1225     1FE6                     BSR_SHAD        equ	8166	;# 
  1226     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1227     1FE8                     FSR0_SHAD       equ	8168	;# 
  1228     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1229     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1230     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1231     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1232     1FED                     STKPTR          equ	8173	;# 
  1233     1FEE                     TOSL            equ	8174	;# 
  1234     1FEF                     TOSH            equ	8175	;# 
  1235     0000                     INDF0           equ	0	;# 
  1236     0001                     INDF1           equ	1	;# 
  1237     0002                     PCL             equ	2	;# 
  1238     0003                     STATUS          equ	3	;# 
  1239     0004                     FSR0L           equ	4	;# 
  1240     0005                     FSR0H           equ	5	;# 
  1241     0006                     FSR1L           equ	6	;# 
  1242     0007                     FSR1H           equ	7	;# 
  1243     0008                     BSR             equ	8	;# 
  1244     0009                     WREG            equ	9	;# 
  1245     000A                     PCLATH          equ	10	;# 
  1246     000B                     INTCON          equ	11	;# 
  1247     000C                     PORTA           equ	12	;# 
  1248     000D                     PORTB           equ	13	;# 
  1249     000E                     PORTC           equ	14	;# 
  1250     000F                     PORTD           equ	15	;# 
  1251     0010                     PORTE           equ	16	;# 
  1252     0012                     TRISA           equ	18	;# 
  1253     0013                     TRISB           equ	19	;# 
  1254     0014                     TRISC           equ	20	;# 
  1255     0015                     TRISD           equ	21	;# 
  1256     0016                     TRISE           equ	22	;# 
  1257     0018                     LATA            equ	24	;# 
  1258     0019                     LATB            equ	25	;# 
  1259     001A                     LATC            equ	26	;# 
  1260     001B                     LATD            equ	27	;# 
  1261     001C                     LATE            equ	28	;# 
  1262     009B                     ADRES           equ	155	;# 
  1263     009B                     ADRESL          equ	155	;# 
  1264     009C                     ADRESH          equ	156	;# 
  1265     009D                     ADCON0          equ	157	;# 
  1266     009E                     ADCON1          equ	158	;# 
  1267     009F                     ADACT           equ	159	;# 
  1268     0119                     RC1REG          equ	281	;# 
  1269     0119                     RCREG           equ	281	;# 
  1270     0119                     RCREG1          equ	281	;# 
  1271     011A                     TX1REG          equ	282	;# 
  1272     011A                     TXREG1          equ	282	;# 
  1273     011A                     TXREG           equ	282	;# 
  1274     011B                     SP1BRG          equ	283	;# 
  1275     011B                     SPBRG           equ	283	;# 
  1276     011B                     SP1BRGL         equ	283	;# 
  1277     011B                     SPBRG1          equ	283	;# 
  1278     011B                     SPBRGL          equ	283	;# 
  1279     011C                     SP1BRGH         equ	284	;# 
  1280     011C                     SPBRGH          equ	284	;# 
  1281     011C                     SPBRGH1         equ	284	;# 
  1282     011D                     RC1STA          equ	285	;# 
  1283     011D                     RCSTA1          equ	285	;# 
  1284     011D                     RCSTA           equ	285	;# 
  1285     011E                     TX1STA          equ	286	;# 
  1286     011E                     TXSTA1          equ	286	;# 
  1287     011E                     TXSTA           equ	286	;# 
  1288     011F                     BAUD1CON        equ	287	;# 
  1289     011F                     BAUDCON1        equ	287	;# 
  1290     011F                     BAUDCTL1        equ	287	;# 
  1291     011F                     BAUDCON         equ	287	;# 
  1292     011F                     BAUDCTL         equ	287	;# 
  1293     018C                     SSP1BUF         equ	396	;# 
  1294     018D                     SSP1ADD         equ	397	;# 
  1295     018E                     SSP1MSK         equ	398	;# 
  1296     018F                     SSP1STAT        equ	399	;# 
  1297     0190                     SSP1CON1        equ	400	;# 
  1298     0191                     SSP1CON2        equ	401	;# 
  1299     0192                     SSP1CON3        equ	402	;# 
  1300     0196                     SSP2BUF         equ	406	;# 
  1301     0197                     SSP2ADD         equ	407	;# 
  1302     0198                     SSP2MSK         equ	408	;# 
  1303     0199                     SSP2STAT        equ	409	;# 
  1304     019A                     SSP2CON1        equ	410	;# 
  1305     019B                     SSP2CON2        equ	411	;# 
  1306     019C                     SSP2CON3        equ	412	;# 
  1307     020C                     TMR1            equ	524	;# 
  1308     020C                     TMR1L           equ	524	;# 
  1309     020D                     TMR1H           equ	525	;# 
  1310     020E                     T1CON           equ	526	;# 
  1311     020F                     T1GCON          equ	527	;# 
  1312     020F                     PR1             equ	527	;# 
  1313     0210                     T1GATE          equ	528	;# 
  1314     0210                     TMR1GATE        equ	528	;# 
  1315     0211                     T1CLK           equ	529	;# 
  1316     0211                     TMR1CLK         equ	529	;# 
  1317     028C                     T2TMR           equ	652	;# 
  1318     028C                     TMR2            equ	652	;# 
  1319     028D                     T2PR            equ	653	;# 
  1320     028D                     PR2             equ	653	;# 
  1321     028E                     T2CON           equ	654	;# 
  1322     028F                     T2HLT           equ	655	;# 
  1323     0290                     T2CLKCON        equ	656	;# 
  1324     0291                     T2RST           equ	657	;# 
  1325     030C                     CCPR1           equ	780	;# 
  1326     030C                     CCPR1L          equ	780	;# 
  1327     030D                     CCPR1H          equ	781	;# 
  1328     030E                     CCP1CON         equ	782	;# 
  1329     030F                     CCP1CAP         equ	783	;# 
  1330     0310                     CCPR2           equ	784	;# 
  1331     0310                     CCPR2L          equ	784	;# 
  1332     0311                     CCPR2H          equ	785	;# 
  1333     0312                     CCP2CON         equ	786	;# 
  1334     0313                     CCP2CAP         equ	787	;# 
  1335     0314                     PWM3DC          equ	788	;# 
  1336     0314                     PWM3DCL         equ	788	;# 
  1337     0315                     PWM3DCH         equ	789	;# 
  1338     0316                     PWM3CON         equ	790	;# 
  1339     0318                     PWM4DC          equ	792	;# 
  1340     0318                     PWM4DCL         equ	792	;# 
  1341     0319                     PWM4DCH         equ	793	;# 
  1342     031A                     PWM4CON         equ	794	;# 
  1343     031C                     PWM5DC          equ	796	;# 
  1344     031C                     PWM5DCL         equ	796	;# 
  1345     031D                     PWM5DCH         equ	797	;# 
  1346     031E                     PWM5CON         equ	798	;# 
  1347     038C                     PWM6DC          equ	908	;# 
  1348     038C                     PWM6DCL         equ	908	;# 
  1349     038D                     PWM6DCH         equ	909	;# 
  1350     038E                     PWM6CON         equ	910	;# 
  1351     058C                     NCO1ACC         equ	1420	;# 
  1352     058C                     NCO1ACCL        equ	1420	;# 
  1353     058D                     NCO1ACCH        equ	1421	;# 
  1354     058E                     NCO1ACCU        equ	1422	;# 
  1355     058F                     NCO1INC         equ	1423	;# 
  1356     058F                     NCO1INCL        equ	1423	;# 
  1357     0590                     NCO1INCH        equ	1424	;# 
  1358     0591                     NCO1INCU        equ	1425	;# 
  1359     0592                     NCO1CON         equ	1426	;# 
  1360     0593                     NCO1CLK         equ	1427	;# 
  1361     059C                     TMR0L           equ	1436	;# 
  1362     059C                     TMR0            equ	1436	;# 
  1363     059D                     TMR0H           equ	1437	;# 
  1364     059D                     PR0             equ	1437	;# 
  1365     059E                     T0CON0          equ	1438	;# 
  1366     059F                     T0CON1          equ	1439	;# 
  1367     060C                     CWG1CLKCON      equ	1548	;# 
  1368     060D                     CWG1DAT         equ	1549	;# 
  1369     060E                     CWG1DBR         equ	1550	;# 
  1370     060F                     CWG1DBF         equ	1551	;# 
  1371     0610                     CWG1CON0        equ	1552	;# 
  1372     0611                     CWG1CON1        equ	1553	;# 
  1373     0612                     CWG1AS0         equ	1554	;# 
  1374     0613                     CWG1AS1         equ	1555	;# 
  1375     0614                     CWG1STR         equ	1556	;# 
  1376     070C                     PIR0            equ	1804	;# 
  1377     070D                     PIR1            equ	1805	;# 
  1378     070E                     PIR2            equ	1806	;# 
  1379     070F                     PIR3            equ	1807	;# 
  1380     0710                     PIR4            equ	1808	;# 
  1381     0711                     PIR5            equ	1809	;# 
  1382     0712                     PIR6            equ	1810	;# 
  1383     0713                     PIR7            equ	1811	;# 
  1384     0716                     PIE0            equ	1814	;# 
  1385     0717                     PIE1            equ	1815	;# 
  1386     0718                     PIE2            equ	1816	;# 
  1387     0719                     PIE3            equ	1817	;# 
  1388     071A                     PIE4            equ	1818	;# 
  1389     071B                     PIE5            equ	1819	;# 
  1390     071C                     PIE6            equ	1820	;# 
  1391     071D                     PIE7            equ	1821	;# 
  1392     0796                     PMD0            equ	1942	;# 
  1393     0797                     PMD1            equ	1943	;# 
  1394     0798                     PMD2            equ	1944	;# 
  1395     0799                     PMD3            equ	1945	;# 
  1396     079A                     PMD4            equ	1946	;# 
  1397     079B                     PMD5            equ	1947	;# 
  1398     080C                     WDTCON0         equ	2060	;# 
  1399     080D                     WDTCON1         equ	2061	;# 
  1400     080E                     WDTPSL          equ	2062	;# 
  1401     080F                     WDTPSH          equ	2063	;# 
  1402     0810                     WDTTMR          equ	2064	;# 
  1403     0811                     BORCON          equ	2065	;# 
  1404     0812                     VREGCON         equ	2066	;# 
  1405     0813                     PCON0           equ	2067	;# 
  1406     0814                     PCON1           equ	2068	;# 
  1407     081A                     NVMADR          equ	2074	;# 
  1408     081A                     NVMADRL         equ	2074	;# 
  1409     081B                     NVMADRH         equ	2075	;# 
  1410     081C                     NVMDAT          equ	2076	;# 
  1411     081C                     NVMDATL         equ	2076	;# 
  1412     081D                     NVMDATH         equ	2077	;# 
  1413     081E                     NVMCON1         equ	2078	;# 
  1414     081F                     NVMCON2         equ	2079	;# 
  1415     088C                     CPUDOZE         equ	2188	;# 
  1416     088D                     OSCCON1         equ	2189	;# 
  1417     088E                     OSCCON2         equ	2190	;# 
  1418     088F                     OSCCON3         equ	2191	;# 
  1419     0890                     OSCSTAT         equ	2192	;# 
  1420     0891                     OSCEN           equ	2193	;# 
  1421     0892                     OSCTUNE         equ	2194	;# 
  1422     0893                     OSCFRQ          equ	2195	;# 
  1423     0895                     CLKRCON         equ	2197	;# 
  1424     0896                     CLKRCLK         equ	2198	;# 
  1425     090C                     FVRCON          equ	2316	;# 
  1426     090E                     DAC1CON0        equ	2318	;# 
  1427     090F                     DAC1CON1        equ	2319	;# 
  1428     091F                     ZCDCON          equ	2335	;# 
  1429     098F                     CMOUT           equ	2447	;# 
  1430     098F                     CMSTAT          equ	2447	;# 
  1431     0990                     CM1CON0         equ	2448	;# 
  1432     0991                     CM1CON1         equ	2449	;# 
  1433     0992                     CM1NCH          equ	2450	;# 
  1434     0993                     CM1PCH          equ	2451	;# 
  1435     0994                     CM2CON0         equ	2452	;# 
  1436     0995                     CM2CON1         equ	2453	;# 
  1437     0996                     CM2NCH          equ	2454	;# 
  1438     0997                     CM2PCH          equ	2455	;# 
  1439     0A19                     RC2REG          equ	2585	;# 
  1440     0A19                     RCREG2          equ	2585	;# 
  1441     0A1A                     TX2REG          equ	2586	;# 
  1442     0A1A                     TXREG2          equ	2586	;# 
  1443     0A1B                     SP2BRG          equ	2587	;# 
  1444     0A1B                     SP2BRGL         equ	2587	;# 
  1445     0A1B                     SPBRG2          equ	2587	;# 
  1446     0A1C                     SP2BRGH         equ	2588	;# 
  1447     0A1C                     SPBRGH2         equ	2588	;# 
  1448     0A1D                     RC2STA          equ	2589	;# 
  1449     0A1D                     RCSTA2          equ	2589	;# 
  1450     0A1E                     TX2STA          equ	2590	;# 
  1451     0A1E                     TXSTA2          equ	2590	;# 
  1452     0A1F                     BAUD2CON        equ	2591	;# 
  1453     0A1F                     BAUDCON2        equ	2591	;# 
  1454     0A1F                     BAUDCTL2        equ	2591	;# 
  1455     1E0F                     CLCDATA         equ	7695	;# 
  1456     1E10                     CLC1CON         equ	7696	;# 
  1457     1E11                     CLC1POL         equ	7697	;# 
  1458     1E12                     CLC1SEL0        equ	7698	;# 
  1459     1E13                     CLC1SEL1        equ	7699	;# 
  1460     1E14                     CLC1SEL2        equ	7700	;# 
  1461     1E15                     CLC1SEL3        equ	7701	;# 
  1462     1E16                     CLC1GLS0        equ	7702	;# 
  1463     1E17                     CLC1GLS1        equ	7703	;# 
  1464     1E18                     CLC1GLS2        equ	7704	;# 
  1465     1E19                     CLC1GLS3        equ	7705	;# 
  1466     1E1A                     CLC2CON         equ	7706	;# 
  1467     1E1B                     CLC2POL         equ	7707	;# 
  1468     1E1C                     CLC2SEL0        equ	7708	;# 
  1469     1E1D                     CLC2SEL1        equ	7709	;# 
  1470     1E1E                     CLC2SEL2        equ	7710	;# 
  1471     1E1F                     CLC2SEL3        equ	7711	;# 
  1472     1E20                     CLC2GLS0        equ	7712	;# 
  1473     1E21                     CLC2GLS1        equ	7713	;# 
  1474     1E22                     CLC2GLS2        equ	7714	;# 
  1475     1E23                     CLC2GLS3        equ	7715	;# 
  1476     1E24                     CLC3CON         equ	7716	;# 
  1477     1E25                     CLC3POL         equ	7717	;# 
  1478     1E26                     CLC3SEL0        equ	7718	;# 
  1479     1E27                     CLC3SEL1        equ	7719	;# 
  1480     1E28                     CLC3SEL2        equ	7720	;# 
  1481     1E29                     CLC3SEL3        equ	7721	;# 
  1482     1E2A                     CLC3GLS0        equ	7722	;# 
  1483     1E2B                     CLC3GLS1        equ	7723	;# 
  1484     1E2C                     CLC3GLS2        equ	7724	;# 
  1485     1E2D                     CLC3GLS3        equ	7725	;# 
  1486     1E2E                     CLC4CON         equ	7726	;# 
  1487     1E2F                     CLC4POL         equ	7727	;# 
  1488     1E30                     CLC4SEL0        equ	7728	;# 
  1489     1E31                     CLC4SEL1        equ	7729	;# 
  1490     1E32                     CLC4SEL2        equ	7730	;# 
  1491     1E33                     CLC4SEL3        equ	7731	;# 
  1492     1E34                     CLC4GLS0        equ	7732	;# 
  1493     1E35                     CLC4GLS1        equ	7733	;# 
  1494     1E36                     CLC4GLS2        equ	7734	;# 
  1495     1E37                     CLC4GLS3        equ	7735	;# 
  1496     1E8F                     PPSLOCK         equ	7823	;# 
  1497     1E90                     INTPPS          equ	7824	;# 
  1498     1E91                     T0CKIPPS        equ	7825	;# 
  1499     1E92                     T1CKIPPS        equ	7826	;# 
  1500     1E93                     T1GPPS          equ	7827	;# 
  1501     1E9C                     T2INPPS         equ	7836	;# 
  1502     1EA1                     CCP1PPS         equ	7841	;# 
  1503     1EA2                     CCP2PPS         equ	7842	;# 
  1504     1EB1                     CWG1PPS         equ	7857	;# 
  1505     1EBB                     CLCIN0PPS       equ	7867	;# 
  1506     1EBC                     CLCIN1PPS       equ	7868	;# 
  1507     1EBD                     CLCIN2PPS       equ	7869	;# 
  1508     1EBE                     CLCIN3PPS       equ	7870	;# 
  1509     1EC3                     ADACTPPS        equ	7875	;# 
  1510     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1511     1EC6                     SSP1DATPPS      equ	7878	;# 
  1512     1EC7                     SSP1SSPPS       equ	7879	;# 
  1513     1EC8                     SSP2CLKPPS      equ	7880	;# 
  1514     1EC9                     SSP2DATPPS      equ	7881	;# 
  1515     1ECA                     SSP2SSPPS       equ	7882	;# 
  1516     1ECB                     RX1DTPPS        equ	7883	;# 
  1517     1ECC                     TX1CKPPS        equ	7884	;# 
  1518     1ECD                     RX2DTPPS        equ	7885	;# 
  1519     1ECE                     TX2CKPPS        equ	7886	;# 
  1520     1F10                     RA0PPS          equ	7952	;# 
  1521     1F11                     RA1PPS          equ	7953	;# 
  1522     1F12                     RA2PPS          equ	7954	;# 
  1523     1F13                     RA3PPS          equ	7955	;# 
  1524     1F14                     RA4PPS          equ	7956	;# 
  1525     1F15                     RA5PPS          equ	7957	;# 
  1526     1F16                     RA6PPS          equ	7958	;# 
  1527     1F17                     RA7PPS          equ	7959	;# 
  1528     1F18                     RB0PPS          equ	7960	;# 
  1529     1F19                     RB1PPS          equ	7961	;# 
  1530     1F1A                     RB2PPS          equ	7962	;# 
  1531     1F1B                     RB3PPS          equ	7963	;# 
  1532     1F1C                     RB4PPS          equ	7964	;# 
  1533     1F1D                     RB5PPS          equ	7965	;# 
  1534     1F1E                     RB6PPS          equ	7966	;# 
  1535     1F1F                     RB7PPS          equ	7967	;# 
  1536     1F20                     RC0PPS          equ	7968	;# 
  1537     1F21                     RC1PPS          equ	7969	;# 
  1538     1F22                     RC2PPS          equ	7970	;# 
  1539     1F23                     RC3PPS          equ	7971	;# 
  1540     1F24                     RC4PPS          equ	7972	;# 
  1541     1F25                     RC5PPS          equ	7973	;# 
  1542     1F26                     RC6PPS          equ	7974	;# 
  1543     1F27                     RC7PPS          equ	7975	;# 
  1544     1F28                     RD0PPS          equ	7976	;# 
  1545     1F29                     RD1PPS          equ	7977	;# 
  1546     1F2A                     RD2PPS          equ	7978	;# 
  1547     1F2B                     RD3PPS          equ	7979	;# 
  1548     1F2C                     RD4PPS          equ	7980	;# 
  1549     1F2D                     RD5PPS          equ	7981	;# 
  1550     1F2E                     RD6PPS          equ	7982	;# 
  1551     1F2F                     RD7PPS          equ	7983	;# 
  1552     1F30                     RE0PPS          equ	7984	;# 
  1553     1F31                     RE1PPS          equ	7985	;# 
  1554     1F32                     RE2PPS          equ	7986	;# 
  1555     1F38                     ANSELA          equ	7992	;# 
  1556     1F39                     WPUA            equ	7993	;# 
  1557     1F3A                     ODCONA          equ	7994	;# 
  1558     1F3B                     SLRCONA         equ	7995	;# 
  1559     1F3C                     INLVLA          equ	7996	;# 
  1560     1F3D                     IOCAP           equ	7997	;# 
  1561     1F3E                     IOCAN           equ	7998	;# 
  1562     1F3F                     IOCAF           equ	7999	;# 
  1563     1F43                     ANSELB          equ	8003	;# 
  1564     1F44                     WPUB            equ	8004	;# 
  1565     1F45                     ODCONB          equ	8005	;# 
  1566     1F46                     SLRCONB         equ	8006	;# 
  1567     1F47                     INLVLB          equ	8007	;# 
  1568     1F48                     IOCBP           equ	8008	;# 
  1569     1F49                     IOCBN           equ	8009	;# 
  1570     1F4A                     IOCBF           equ	8010	;# 
  1571     1F4E                     ANSELC          equ	8014	;# 
  1572     1F4F                     WPUC            equ	8015	;# 
  1573     1F50                     ODCONC          equ	8016	;# 
  1574     1F51                     SLRCONC         equ	8017	;# 
  1575     1F52                     INLVLC          equ	8018	;# 
  1576     1F53                     IOCCP           equ	8019	;# 
  1577     1F54                     IOCCN           equ	8020	;# 
  1578     1F55                     IOCCF           equ	8021	;# 
  1579     1F59                     ANSELD          equ	8025	;# 
  1580     1F5A                     WPUD            equ	8026	;# 
  1581     1F5B                     ODCOND          equ	8027	;# 
  1582     1F5C                     SLRCOND         equ	8028	;# 
  1583     1F5D                     INLVLD          equ	8029	;# 
  1584     1F64                     ANSELE          equ	8036	;# 
  1585     1F65                     WPUE            equ	8037	;# 
  1586     1F66                     ODCONE          equ	8038	;# 
  1587     1F67                     SLRCONE         equ	8039	;# 
  1588     1F68                     INLVLE          equ	8040	;# 
  1589     1F69                     IOCEP           equ	8041	;# 
  1590     1F6A                     IOCEN           equ	8042	;# 
  1591     1F6B                     IOCEF           equ	8043	;# 
  1592     1FE4                     STATUS_SHAD     equ	8164	;# 
  1593     1FE5                     WREG_SHAD       equ	8165	;# 
  1594     1FE6                     BSR_SHAD        equ	8166	;# 
  1595     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1596     1FE8                     FSR0_SHAD       equ	8168	;# 
  1597     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1598     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1599     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1600     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1601     1FED                     STKPTR          equ	8173	;# 
  1602     1FEE                     TOSL            equ	8174	;# 
  1603     1FEF                     TOSH            equ	8175	;# 
  1604     0000                     INDF0           equ	0	;# 
  1605     0001                     INDF1           equ	1	;# 
  1606     0002                     PCL             equ	2	;# 
  1607     0003                     STATUS          equ	3	;# 
  1608     0004                     FSR0L           equ	4	;# 
  1609     0005                     FSR0H           equ	5	;# 
  1610     0006                     FSR1L           equ	6	;# 
  1611     0007                     FSR1H           equ	7	;# 
  1612     0008                     BSR             equ	8	;# 
  1613     0009                     WREG            equ	9	;# 
  1614     000A                     PCLATH          equ	10	;# 
  1615     000B                     INTCON          equ	11	;# 
  1616     000C                     PORTA           equ	12	;# 
  1617     000D                     PORTB           equ	13	;# 
  1618     000E                     PORTC           equ	14	;# 
  1619     000F                     PORTD           equ	15	;# 
  1620     0010                     PORTE           equ	16	;# 
  1621     0012                     TRISA           equ	18	;# 
  1622     0013                     TRISB           equ	19	;# 
  1623     0014                     TRISC           equ	20	;# 
  1624     0015                     TRISD           equ	21	;# 
  1625     0016                     TRISE           equ	22	;# 
  1626     0018                     LATA            equ	24	;# 
  1627     0019                     LATB            equ	25	;# 
  1628     001A                     LATC            equ	26	;# 
  1629     001B                     LATD            equ	27	;# 
  1630     001C                     LATE            equ	28	;# 
  1631     009B                     ADRES           equ	155	;# 
  1632     009B                     ADRESL          equ	155	;# 
  1633     009C                     ADRESH          equ	156	;# 
  1634     009D                     ADCON0          equ	157	;# 
  1635     009E                     ADCON1          equ	158	;# 
  1636     009F                     ADACT           equ	159	;# 
  1637     0119                     RC1REG          equ	281	;# 
  1638     0119                     RCREG           equ	281	;# 
  1639     0119                     RCREG1          equ	281	;# 
  1640     011A                     TX1REG          equ	282	;# 
  1641     011A                     TXREG1          equ	282	;# 
  1642     011A                     TXREG           equ	282	;# 
  1643     011B                     SP1BRG          equ	283	;# 
  1644     011B                     SPBRG           equ	283	;# 
  1645     011B                     SP1BRGL         equ	283	;# 
  1646     011B                     SPBRG1          equ	283	;# 
  1647     011B                     SPBRGL          equ	283	;# 
  1648     011C                     SP1BRGH         equ	284	;# 
  1649     011C                     SPBRGH          equ	284	;# 
  1650     011C                     SPBRGH1         equ	284	;# 
  1651     011D                     RC1STA          equ	285	;# 
  1652     011D                     RCSTA1          equ	285	;# 
  1653     011D                     RCSTA           equ	285	;# 
  1654     011E                     TX1STA          equ	286	;# 
  1655     011E                     TXSTA1          equ	286	;# 
  1656     011E                     TXSTA           equ	286	;# 
  1657     011F                     BAUD1CON        equ	287	;# 
  1658     011F                     BAUDCON1        equ	287	;# 
  1659     011F                     BAUDCTL1        equ	287	;# 
  1660     011F                     BAUDCON         equ	287	;# 
  1661     011F                     BAUDCTL         equ	287	;# 
  1662     018C                     SSP1BUF         equ	396	;# 
  1663     018D                     SSP1ADD         equ	397	;# 
  1664     018E                     SSP1MSK         equ	398	;# 
  1665     018F                     SSP1STAT        equ	399	;# 
  1666     0190                     SSP1CON1        equ	400	;# 
  1667     0191                     SSP1CON2        equ	401	;# 
  1668     0192                     SSP1CON3        equ	402	;# 
  1669     0196                     SSP2BUF         equ	406	;# 
  1670     0197                     SSP2ADD         equ	407	;# 
  1671     0198                     SSP2MSK         equ	408	;# 
  1672     0199                     SSP2STAT        equ	409	;# 
  1673     019A                     SSP2CON1        equ	410	;# 
  1674     019B                     SSP2CON2        equ	411	;# 
  1675     019C                     SSP2CON3        equ	412	;# 
  1676     020C                     TMR1            equ	524	;# 
  1677     020C                     TMR1L           equ	524	;# 
  1678     020D                     TMR1H           equ	525	;# 
  1679     020E                     T1CON           equ	526	;# 
  1680     020F                     T1GCON          equ	527	;# 
  1681     020F                     PR1             equ	527	;# 
  1682     0210                     T1GATE          equ	528	;# 
  1683     0210                     TMR1GATE        equ	528	;# 
  1684     0211                     T1CLK           equ	529	;# 
  1685     0211                     TMR1CLK         equ	529	;# 
  1686     028C                     T2TMR           equ	652	;# 
  1687     028C                     TMR2            equ	652	;# 
  1688     028D                     T2PR            equ	653	;# 
  1689     028D                     PR2             equ	653	;# 
  1690     028E                     T2CON           equ	654	;# 
  1691     028F                     T2HLT           equ	655	;# 
  1692     0290                     T2CLKCON        equ	656	;# 
  1693     0291                     T2RST           equ	657	;# 
  1694     030C                     CCPR1           equ	780	;# 
  1695     030C                     CCPR1L          equ	780	;# 
  1696     030D                     CCPR1H          equ	781	;# 
  1697     030E                     CCP1CON         equ	782	;# 
  1698     030F                     CCP1CAP         equ	783	;# 
  1699     0310                     CCPR2           equ	784	;# 
  1700     0310                     CCPR2L          equ	784	;# 
  1701     0311                     CCPR2H          equ	785	;# 
  1702     0312                     CCP2CON         equ	786	;# 
  1703     0313                     CCP2CAP         equ	787	;# 
  1704     0314                     PWM3DC          equ	788	;# 
  1705     0314                     PWM3DCL         equ	788	;# 
  1706     0315                     PWM3DCH         equ	789	;# 
  1707     0316                     PWM3CON         equ	790	;# 
  1708     0318                     PWM4DC          equ	792	;# 
  1709     0318                     PWM4DCL         equ	792	;# 
  1710     0319                     PWM4DCH         equ	793	;# 
  1711     031A                     PWM4CON         equ	794	;# 
  1712     031C                     PWM5DC          equ	796	;# 
  1713     031C                     PWM5DCL         equ	796	;# 
  1714     031D                     PWM5DCH         equ	797	;# 
  1715     031E                     PWM5CON         equ	798	;# 
  1716     038C                     PWM6DC          equ	908	;# 
  1717     038C                     PWM6DCL         equ	908	;# 
  1718     038D                     PWM6DCH         equ	909	;# 
  1719     038E                     PWM6CON         equ	910	;# 
  1720     058C                     NCO1ACC         equ	1420	;# 
  1721     058C                     NCO1ACCL        equ	1420	;# 
  1722     058D                     NCO1ACCH        equ	1421	;# 
  1723     058E                     NCO1ACCU        equ	1422	;# 
  1724     058F                     NCO1INC         equ	1423	;# 
  1725     058F                     NCO1INCL        equ	1423	;# 
  1726     0590                     NCO1INCH        equ	1424	;# 
  1727     0591                     NCO1INCU        equ	1425	;# 
  1728     0592                     NCO1CON         equ	1426	;# 
  1729     0593                     NCO1CLK         equ	1427	;# 
  1730     059C                     TMR0L           equ	1436	;# 
  1731     059C                     TMR0            equ	1436	;# 
  1732     059D                     TMR0H           equ	1437	;# 
  1733     059D                     PR0             equ	1437	;# 
  1734     059E                     T0CON0          equ	1438	;# 
  1735     059F                     T0CON1          equ	1439	;# 
  1736     060C                     CWG1CLKCON      equ	1548	;# 
  1737     060D                     CWG1DAT         equ	1549	;# 
  1738     060E                     CWG1DBR         equ	1550	;# 
  1739     060F                     CWG1DBF         equ	1551	;# 
  1740     0610                     CWG1CON0        equ	1552	;# 
  1741     0611                     CWG1CON1        equ	1553	;# 
  1742     0612                     CWG1AS0         equ	1554	;# 
  1743     0613                     CWG1AS1         equ	1555	;# 
  1744     0614                     CWG1STR         equ	1556	;# 
  1745     070C                     PIR0            equ	1804	;# 
  1746     070D                     PIR1            equ	1805	;# 
  1747     070E                     PIR2            equ	1806	;# 
  1748     070F                     PIR3            equ	1807	;# 
  1749     0710                     PIR4            equ	1808	;# 
  1750     0711                     PIR5            equ	1809	;# 
  1751     0712                     PIR6            equ	1810	;# 
  1752     0713                     PIR7            equ	1811	;# 
  1753     0716                     PIE0            equ	1814	;# 
  1754     0717                     PIE1            equ	1815	;# 
  1755     0718                     PIE2            equ	1816	;# 
  1756     0719                     PIE3            equ	1817	;# 
  1757     071A                     PIE4            equ	1818	;# 
  1758     071B                     PIE5            equ	1819	;# 
  1759     071C                     PIE6            equ	1820	;# 
  1760     071D                     PIE7            equ	1821	;# 
  1761     0796                     PMD0            equ	1942	;# 
  1762     0797                     PMD1            equ	1943	;# 
  1763     0798                     PMD2            equ	1944	;# 
  1764     0799                     PMD3            equ	1945	;# 
  1765     079A                     PMD4            equ	1946	;# 
  1766     079B                     PMD5            equ	1947	;# 
  1767     080C                     WDTCON0         equ	2060	;# 
  1768     080D                     WDTCON1         equ	2061	;# 
  1769     080E                     WDTPSL          equ	2062	;# 
  1770     080F                     WDTPSH          equ	2063	;# 
  1771     0810                     WDTTMR          equ	2064	;# 
  1772     0811                     BORCON          equ	2065	;# 
  1773     0812                     VREGCON         equ	2066	;# 
  1774     0813                     PCON0           equ	2067	;# 
  1775     0814                     PCON1           equ	2068	;# 
  1776     081A                     NVMADR          equ	2074	;# 
  1777     081A                     NVMADRL         equ	2074	;# 
  1778     081B                     NVMADRH         equ	2075	;# 
  1779     081C                     NVMDAT          equ	2076	;# 
  1780     081C                     NVMDATL         equ	2076	;# 
  1781     081D                     NVMDATH         equ	2077	;# 
  1782     081E                     NVMCON1         equ	2078	;# 
  1783     081F                     NVMCON2         equ	2079	;# 
  1784     088C                     CPUDOZE         equ	2188	;# 
  1785     088D                     OSCCON1         equ	2189	;# 
  1786     088E                     OSCCON2         equ	2190	;# 
  1787     088F                     OSCCON3         equ	2191	;# 
  1788     0890                     OSCSTAT         equ	2192	;# 
  1789     0891                     OSCEN           equ	2193	;# 
  1790     0892                     OSCTUNE         equ	2194	;# 
  1791     0893                     OSCFRQ          equ	2195	;# 
  1792     0895                     CLKRCON         equ	2197	;# 
  1793     0896                     CLKRCLK         equ	2198	;# 
  1794     090C                     FVRCON          equ	2316	;# 
  1795     090E                     DAC1CON0        equ	2318	;# 
  1796     090F                     DAC1CON1        equ	2319	;# 
  1797     091F                     ZCDCON          equ	2335	;# 
  1798     098F                     CMOUT           equ	2447	;# 
  1799     098F                     CMSTAT          equ	2447	;# 
  1800     0990                     CM1CON0         equ	2448	;# 
  1801     0991                     CM1CON1         equ	2449	;# 
  1802     0992                     CM1NCH          equ	2450	;# 
  1803     0993                     CM1PCH          equ	2451	;# 
  1804     0994                     CM2CON0         equ	2452	;# 
  1805     0995                     CM2CON1         equ	2453	;# 
  1806     0996                     CM2NCH          equ	2454	;# 
  1807     0997                     CM2PCH          equ	2455	;# 
  1808     0A19                     RC2REG          equ	2585	;# 
  1809     0A19                     RCREG2          equ	2585	;# 
  1810     0A1A                     TX2REG          equ	2586	;# 
  1811     0A1A                     TXREG2          equ	2586	;# 
  1812     0A1B                     SP2BRG          equ	2587	;# 
  1813     0A1B                     SP2BRGL         equ	2587	;# 
  1814     0A1B                     SPBRG2          equ	2587	;# 
  1815     0A1C                     SP2BRGH         equ	2588	;# 
  1816     0A1C                     SPBRGH2         equ	2588	;# 
  1817     0A1D                     RC2STA          equ	2589	;# 
  1818     0A1D                     RCSTA2          equ	2589	;# 
  1819     0A1E                     TX2STA          equ	2590	;# 
  1820     0A1E                     TXSTA2          equ	2590	;# 
  1821     0A1F                     BAUD2CON        equ	2591	;# 
  1822     0A1F                     BAUDCON2        equ	2591	;# 
  1823     0A1F                     BAUDCTL2        equ	2591	;# 
  1824     1E0F                     CLCDATA         equ	7695	;# 
  1825     1E10                     CLC1CON         equ	7696	;# 
  1826     1E11                     CLC1POL         equ	7697	;# 
  1827     1E12                     CLC1SEL0        equ	7698	;# 
  1828     1E13                     CLC1SEL1        equ	7699	;# 
  1829     1E14                     CLC1SEL2        equ	7700	;# 
  1830     1E15                     CLC1SEL3        equ	7701	;# 
  1831     1E16                     CLC1GLS0        equ	7702	;# 
  1832     1E17                     CLC1GLS1        equ	7703	;# 
  1833     1E18                     CLC1GLS2        equ	7704	;# 
  1834     1E19                     CLC1GLS3        equ	7705	;# 
  1835     1E1A                     CLC2CON         equ	7706	;# 
  1836     1E1B                     CLC2POL         equ	7707	;# 
  1837     1E1C                     CLC2SEL0        equ	7708	;# 
  1838     1E1D                     CLC2SEL1        equ	7709	;# 
  1839     1E1E                     CLC2SEL2        equ	7710	;# 
  1840     1E1F                     CLC2SEL3        equ	7711	;# 
  1841     1E20                     CLC2GLS0        equ	7712	;# 
  1842     1E21                     CLC2GLS1        equ	7713	;# 
  1843     1E22                     CLC2GLS2        equ	7714	;# 
  1844     1E23                     CLC2GLS3        equ	7715	;# 
  1845     1E24                     CLC3CON         equ	7716	;# 
  1846     1E25                     CLC3POL         equ	7717	;# 
  1847     1E26                     CLC3SEL0        equ	7718	;# 
  1848     1E27                     CLC3SEL1        equ	7719	;# 
  1849     1E28                     CLC3SEL2        equ	7720	;# 
  1850     1E29                     CLC3SEL3        equ	7721	;# 
  1851     1E2A                     CLC3GLS0        equ	7722	;# 
  1852     1E2B                     CLC3GLS1        equ	7723	;# 
  1853     1E2C                     CLC3GLS2        equ	7724	;# 
  1854     1E2D                     CLC3GLS3        equ	7725	;# 
  1855     1E2E                     CLC4CON         equ	7726	;# 
  1856     1E2F                     CLC4POL         equ	7727	;# 
  1857     1E30                     CLC4SEL0        equ	7728	;# 
  1858     1E31                     CLC4SEL1        equ	7729	;# 
  1859     1E32                     CLC4SEL2        equ	7730	;# 
  1860     1E33                     CLC4SEL3        equ	7731	;# 
  1861     1E34                     CLC4GLS0        equ	7732	;# 
  1862     1E35                     CLC4GLS1        equ	7733	;# 
  1863     1E36                     CLC4GLS2        equ	7734	;# 
  1864     1E37                     CLC4GLS3        equ	7735	;# 
  1865     1E8F                     PPSLOCK         equ	7823	;# 
  1866     1E90                     INTPPS          equ	7824	;# 
  1867     1E91                     T0CKIPPS        equ	7825	;# 
  1868     1E92                     T1CKIPPS        equ	7826	;# 
  1869     1E93                     T1GPPS          equ	7827	;# 
  1870     1E9C                     T2INPPS         equ	7836	;# 
  1871     1EA1                     CCP1PPS         equ	7841	;# 
  1872     1EA2                     CCP2PPS         equ	7842	;# 
  1873     1EB1                     CWG1PPS         equ	7857	;# 
  1874     1EBB                     CLCIN0PPS       equ	7867	;# 
  1875     1EBC                     CLCIN1PPS       equ	7868	;# 
  1876     1EBD                     CLCIN2PPS       equ	7869	;# 
  1877     1EBE                     CLCIN3PPS       equ	7870	;# 
  1878     1EC3                     ADACTPPS        equ	7875	;# 
  1879     1EC5                     SSP1CLKPPS      equ	7877	;# 
  1880     1EC6                     SSP1DATPPS      equ	7878	;# 
  1881     1EC7                     SSP1SSPPS       equ	7879	;# 
  1882     1EC8                     SSP2CLKPPS      equ	7880	;# 
  1883     1EC9                     SSP2DATPPS      equ	7881	;# 
  1884     1ECA                     SSP2SSPPS       equ	7882	;# 
  1885     1ECB                     RX1DTPPS        equ	7883	;# 
  1886     1ECC                     TX1CKPPS        equ	7884	;# 
  1887     1ECD                     RX2DTPPS        equ	7885	;# 
  1888     1ECE                     TX2CKPPS        equ	7886	;# 
  1889     1F10                     RA0PPS          equ	7952	;# 
  1890     1F11                     RA1PPS          equ	7953	;# 
  1891     1F12                     RA2PPS          equ	7954	;# 
  1892     1F13                     RA3PPS          equ	7955	;# 
  1893     1F14                     RA4PPS          equ	7956	;# 
  1894     1F15                     RA5PPS          equ	7957	;# 
  1895     1F16                     RA6PPS          equ	7958	;# 
  1896     1F17                     RA7PPS          equ	7959	;# 
  1897     1F18                     RB0PPS          equ	7960	;# 
  1898     1F19                     RB1PPS          equ	7961	;# 
  1899     1F1A                     RB2PPS          equ	7962	;# 
  1900     1F1B                     RB3PPS          equ	7963	;# 
  1901     1F1C                     RB4PPS          equ	7964	;# 
  1902     1F1D                     RB5PPS          equ	7965	;# 
  1903     1F1E                     RB6PPS          equ	7966	;# 
  1904     1F1F                     RB7PPS          equ	7967	;# 
  1905     1F20                     RC0PPS          equ	7968	;# 
  1906     1F21                     RC1PPS          equ	7969	;# 
  1907     1F22                     RC2PPS          equ	7970	;# 
  1908     1F23                     RC3PPS          equ	7971	;# 
  1909     1F24                     RC4PPS          equ	7972	;# 
  1910     1F25                     RC5PPS          equ	7973	;# 
  1911     1F26                     RC6PPS          equ	7974	;# 
  1912     1F27                     RC7PPS          equ	7975	;# 
  1913     1F28                     RD0PPS          equ	7976	;# 
  1914     1F29                     RD1PPS          equ	7977	;# 
  1915     1F2A                     RD2PPS          equ	7978	;# 
  1916     1F2B                     RD3PPS          equ	7979	;# 
  1917     1F2C                     RD4PPS          equ	7980	;# 
  1918     1F2D                     RD5PPS          equ	7981	;# 
  1919     1F2E                     RD6PPS          equ	7982	;# 
  1920     1F2F                     RD7PPS          equ	7983	;# 
  1921     1F30                     RE0PPS          equ	7984	;# 
  1922     1F31                     RE1PPS          equ	7985	;# 
  1923     1F32                     RE2PPS          equ	7986	;# 
  1924     1F38                     ANSELA          equ	7992	;# 
  1925     1F39                     WPUA            equ	7993	;# 
  1926     1F3A                     ODCONA          equ	7994	;# 
  1927     1F3B                     SLRCONA         equ	7995	;# 
  1928     1F3C                     INLVLA          equ	7996	;# 
  1929     1F3D                     IOCAP           equ	7997	;# 
  1930     1F3E                     IOCAN           equ	7998	;# 
  1931     1F3F                     IOCAF           equ	7999	;# 
  1932     1F43                     ANSELB          equ	8003	;# 
  1933     1F44                     WPUB            equ	8004	;# 
  1934     1F45                     ODCONB          equ	8005	;# 
  1935     1F46                     SLRCONB         equ	8006	;# 
  1936     1F47                     INLVLB          equ	8007	;# 
  1937     1F48                     IOCBP           equ	8008	;# 
  1938     1F49                     IOCBN           equ	8009	;# 
  1939     1F4A                     IOCBF           equ	8010	;# 
  1940     1F4E                     ANSELC          equ	8014	;# 
  1941     1F4F                     WPUC            equ	8015	;# 
  1942     1F50                     ODCONC          equ	8016	;# 
  1943     1F51                     SLRCONC         equ	8017	;# 
  1944     1F52                     INLVLC          equ	8018	;# 
  1945     1F53                     IOCCP           equ	8019	;# 
  1946     1F54                     IOCCN           equ	8020	;# 
  1947     1F55                     IOCCF           equ	8021	;# 
  1948     1F59                     ANSELD          equ	8025	;# 
  1949     1F5A                     WPUD            equ	8026	;# 
  1950     1F5B                     ODCOND          equ	8027	;# 
  1951     1F5C                     SLRCOND         equ	8028	;# 
  1952     1F5D                     INLVLD          equ	8029	;# 
  1953     1F64                     ANSELE          equ	8036	;# 
  1954     1F65                     WPUE            equ	8037	;# 
  1955     1F66                     ODCONE          equ	8038	;# 
  1956     1F67                     SLRCONE         equ	8039	;# 
  1957     1F68                     INLVLE          equ	8040	;# 
  1958     1F69                     IOCEP           equ	8041	;# 
  1959     1F6A                     IOCEN           equ	8042	;# 
  1960     1F6B                     IOCEF           equ	8043	;# 
  1961     1FE4                     STATUS_SHAD     equ	8164	;# 
  1962     1FE5                     WREG_SHAD       equ	8165	;# 
  1963     1FE6                     BSR_SHAD        equ	8166	;# 
  1964     1FE7                     PCLATH_SHAD     equ	8167	;# 
  1965     1FE8                     FSR0_SHAD       equ	8168	;# 
  1966     1FE8                     FSR0L_SHAD      equ	8168	;# 
  1967     1FE9                     FSR0H_SHAD      equ	8169	;# 
  1968     1FEA                     FSR1L_SHAD      equ	8170	;# 
  1969     1FEB                     FSR1H_SHAD      equ	8171	;# 
  1970     1FED                     STKPTR          equ	8173	;# 
  1971     1FEE                     TOSL            equ	8174	;# 
  1972     1FEF                     TOSH            equ	8175	;# 
  1973     0000                     INDF0           equ	0	;# 
  1974     0001                     INDF1           equ	1	;# 
  1975     0002                     PCL             equ	2	;# 
  1976     0003                     STATUS          equ	3	;# 
  1977     0004                     FSR0L           equ	4	;# 
  1978     0005                     FSR0H           equ	5	;# 
  1979     0006                     FSR1L           equ	6	;# 
  1980     0007                     FSR1H           equ	7	;# 
  1981     0008                     BSR             equ	8	;# 
  1982     0009                     WREG            equ	9	;# 
  1983     000A                     PCLATH          equ	10	;# 
  1984     000B                     INTCON          equ	11	;# 
  1985     000C                     PORTA           equ	12	;# 
  1986     000D                     PORTB           equ	13	;# 
  1987     000E                     PORTC           equ	14	;# 
  1988     000F                     PORTD           equ	15	;# 
  1989     0010                     PORTE           equ	16	;# 
  1990     0012                     TRISA           equ	18	;# 
  1991     0013                     TRISB           equ	19	;# 
  1992     0014                     TRISC           equ	20	;# 
  1993     0015                     TRISD           equ	21	;# 
  1994     0016                     TRISE           equ	22	;# 
  1995     0018                     LATA            equ	24	;# 
  1996     0019                     LATB            equ	25	;# 
  1997     001A                     LATC            equ	26	;# 
  1998     001B                     LATD            equ	27	;# 
  1999     001C                     LATE            equ	28	;# 
  2000     009B                     ADRES           equ	155	;# 
  2001     009B                     ADRESL          equ	155	;# 
  2002     009C                     ADRESH          equ	156	;# 
  2003     009D                     ADCON0          equ	157	;# 
  2004     009E                     ADCON1          equ	158	;# 
  2005     009F                     ADACT           equ	159	;# 
  2006     0119                     RC1REG          equ	281	;# 
  2007     0119                     RCREG           equ	281	;# 
  2008     0119                     RCREG1          equ	281	;# 
  2009     011A                     TX1REG          equ	282	;# 
  2010     011A                     TXREG1          equ	282	;# 
  2011     011A                     TXREG           equ	282	;# 
  2012     011B                     SP1BRG          equ	283	;# 
  2013     011B                     SPBRG           equ	283	;# 
  2014     011B                     SP1BRGL         equ	283	;# 
  2015     011B                     SPBRG1          equ	283	;# 
  2016     011B                     SPBRGL          equ	283	;# 
  2017     011C                     SP1BRGH         equ	284	;# 
  2018     011C                     SPBRGH          equ	284	;# 
  2019     011C                     SPBRGH1         equ	284	;# 
  2020     011D                     RC1STA          equ	285	;# 
  2021     011D                     RCSTA1          equ	285	;# 
  2022     011D                     RCSTA           equ	285	;# 
  2023     011E                     TX1STA          equ	286	;# 
  2024     011E                     TXSTA1          equ	286	;# 
  2025     011E                     TXSTA           equ	286	;# 
  2026     011F                     BAUD1CON        equ	287	;# 
  2027     011F                     BAUDCON1        equ	287	;# 
  2028     011F                     BAUDCTL1        equ	287	;# 
  2029     011F                     BAUDCON         equ	287	;# 
  2030     011F                     BAUDCTL         equ	287	;# 
  2031     018C                     SSP1BUF         equ	396	;# 
  2032     018D                     SSP1ADD         equ	397	;# 
  2033     018E                     SSP1MSK         equ	398	;# 
  2034     018F                     SSP1STAT        equ	399	;# 
  2035     0190                     SSP1CON1        equ	400	;# 
  2036     0191                     SSP1CON2        equ	401	;# 
  2037     0192                     SSP1CON3        equ	402	;# 
  2038     0196                     SSP2BUF         equ	406	;# 
  2039     0197                     SSP2ADD         equ	407	;# 
  2040     0198                     SSP2MSK         equ	408	;# 
  2041     0199                     SSP2STAT        equ	409	;# 
  2042     019A                     SSP2CON1        equ	410	;# 
  2043     019B                     SSP2CON2        equ	411	;# 
  2044     019C                     SSP2CON3        equ	412	;# 
  2045     020C                     TMR1            equ	524	;# 
  2046     020C                     TMR1L           equ	524	;# 
  2047     020D                     TMR1H           equ	525	;# 
  2048     020E                     T1CON           equ	526	;# 
  2049     020F                     T1GCON          equ	527	;# 
  2050     020F                     PR1             equ	527	;# 
  2051     0210                     T1GATE          equ	528	;# 
  2052     0210                     TMR1GATE        equ	528	;# 
  2053     0211                     T1CLK           equ	529	;# 
  2054     0211                     TMR1CLK         equ	529	;# 
  2055     028C                     T2TMR           equ	652	;# 
  2056     028C                     TMR2            equ	652	;# 
  2057     028D                     T2PR            equ	653	;# 
  2058     028D                     PR2             equ	653	;# 
  2059     028E                     T2CON           equ	654	;# 
  2060     028F                     T2HLT           equ	655	;# 
  2061     0290                     T2CLKCON        equ	656	;# 
  2062     0291                     T2RST           equ	657	;# 
  2063     030C                     CCPR1           equ	780	;# 
  2064     030C                     CCPR1L          equ	780	;# 
  2065     030D                     CCPR1H          equ	781	;# 
  2066     030E                     CCP1CON         equ	782	;# 
  2067     030F                     CCP1CAP         equ	783	;# 
  2068     0310                     CCPR2           equ	784	;# 
  2069     0310                     CCPR2L          equ	784	;# 
  2070     0311                     CCPR2H          equ	785	;# 
  2071     0312                     CCP2CON         equ	786	;# 
  2072     0313                     CCP2CAP         equ	787	;# 
  2073     0314                     PWM3DC          equ	788	;# 
  2074     0314                     PWM3DCL         equ	788	;# 
  2075     0315                     PWM3DCH         equ	789	;# 
  2076     0316                     PWM3CON         equ	790	;# 
  2077     0318                     PWM4DC          equ	792	;# 
  2078     0318                     PWM4DCL         equ	792	;# 
  2079     0319                     PWM4DCH         equ	793	;# 
  2080     031A                     PWM4CON         equ	794	;# 
  2081     031C                     PWM5DC          equ	796	;# 
  2082     031C                     PWM5DCL         equ	796	;# 
  2083     031D                     PWM5DCH         equ	797	;# 
  2084     031E                     PWM5CON         equ	798	;# 
  2085     038C                     PWM6DC          equ	908	;# 
  2086     038C                     PWM6DCL         equ	908	;# 
  2087     038D                     PWM6DCH         equ	909	;# 
  2088     038E                     PWM6CON         equ	910	;# 
  2089     058C                     NCO1ACC         equ	1420	;# 
  2090     058C                     NCO1ACCL        equ	1420	;# 
  2091     058D                     NCO1ACCH        equ	1421	;# 
  2092     058E                     NCO1ACCU        equ	1422	;# 
  2093     058F                     NCO1INC         equ	1423	;# 
  2094     058F                     NCO1INCL        equ	1423	;# 
  2095     0590                     NCO1INCH        equ	1424	;# 
  2096     0591                     NCO1INCU        equ	1425	;# 
  2097     0592                     NCO1CON         equ	1426	;# 
  2098     0593                     NCO1CLK         equ	1427	;# 
  2099     059C                     TMR0L           equ	1436	;# 
  2100     059C                     TMR0            equ	1436	;# 
  2101     059D                     TMR0H           equ	1437	;# 
  2102     059D                     PR0             equ	1437	;# 
  2103     059E                     T0CON0          equ	1438	;# 
  2104     059F                     T0CON1          equ	1439	;# 
  2105     060C                     CWG1CLKCON      equ	1548	;# 
  2106     060D                     CWG1DAT         equ	1549	;# 
  2107     060E                     CWG1DBR         equ	1550	;# 
  2108     060F                     CWG1DBF         equ	1551	;# 
  2109     0610                     CWG1CON0        equ	1552	;# 
  2110     0611                     CWG1CON1        equ	1553	;# 
  2111     0612                     CWG1AS0         equ	1554	;# 
  2112     0613                     CWG1AS1         equ	1555	;# 
  2113     0614                     CWG1STR         equ	1556	;# 
  2114     070C                     PIR0            equ	1804	;# 
  2115     070D                     PIR1            equ	1805	;# 
  2116     070E                     PIR2            equ	1806	;# 
  2117     070F                     PIR3            equ	1807	;# 
  2118     0710                     PIR4            equ	1808	;# 
  2119     0711                     PIR5            equ	1809	;# 
  2120     0712                     PIR6            equ	1810	;# 
  2121     0713                     PIR7            equ	1811	;# 
  2122     0716                     PIE0            equ	1814	;# 
  2123     0717                     PIE1            equ	1815	;# 
  2124     0718                     PIE2            equ	1816	;# 
  2125     0719                     PIE3            equ	1817	;# 
  2126     071A                     PIE4            equ	1818	;# 
  2127     071B                     PIE5            equ	1819	;# 
  2128     071C                     PIE6            equ	1820	;# 
  2129     071D                     PIE7            equ	1821	;# 
  2130     0796                     PMD0            equ	1942	;# 
  2131     0797                     PMD1            equ	1943	;# 
  2132     0798                     PMD2            equ	1944	;# 
  2133     0799                     PMD3            equ	1945	;# 
  2134     079A                     PMD4            equ	1946	;# 
  2135     079B                     PMD5            equ	1947	;# 
  2136     080C                     WDTCON0         equ	2060	;# 
  2137     080D                     WDTCON1         equ	2061	;# 
  2138     080E                     WDTPSL          equ	2062	;# 
  2139     080F                     WDTPSH          equ	2063	;# 
  2140     0810                     WDTTMR          equ	2064	;# 
  2141     0811                     BORCON          equ	2065	;# 
  2142     0812                     VREGCON         equ	2066	;# 
  2143     0813                     PCON0           equ	2067	;# 
  2144     0814                     PCON1           equ	2068	;# 
  2145     081A                     NVMADR          equ	2074	;# 
  2146     081A                     NVMADRL         equ	2074	;# 
  2147     081B                     NVMADRH         equ	2075	;# 
  2148     081C                     NVMDAT          equ	2076	;# 
  2149     081C                     NVMDATL         equ	2076	;# 
  2150     081D                     NVMDATH         equ	2077	;# 
  2151     081E                     NVMCON1         equ	2078	;# 
  2152     081F                     NVMCON2         equ	2079	;# 
  2153     088C                     CPUDOZE         equ	2188	;# 
  2154     088D                     OSCCON1         equ	2189	;# 
  2155     088E                     OSCCON2         equ	2190	;# 
  2156     088F                     OSCCON3         equ	2191	;# 
  2157     0890                     OSCSTAT         equ	2192	;# 
  2158     0891                     OSCEN           equ	2193	;# 
  2159     0892                     OSCTUNE         equ	2194	;# 
  2160     0893                     OSCFRQ          equ	2195	;# 
  2161     0895                     CLKRCON         equ	2197	;# 
  2162     0896                     CLKRCLK         equ	2198	;# 
  2163     090C                     FVRCON          equ	2316	;# 
  2164     090E                     DAC1CON0        equ	2318	;# 
  2165     090F                     DAC1CON1        equ	2319	;# 
  2166     091F                     ZCDCON          equ	2335	;# 
  2167     098F                     CMOUT           equ	2447	;# 
  2168     098F                     CMSTAT          equ	2447	;# 
  2169     0990                     CM1CON0         equ	2448	;# 
  2170     0991                     CM1CON1         equ	2449	;# 
  2171     0992                     CM1NCH          equ	2450	;# 
  2172     0993                     CM1PCH          equ	2451	;# 
  2173     0994                     CM2CON0         equ	2452	;# 
  2174     0995                     CM2CON1         equ	2453	;# 
  2175     0996                     CM2NCH          equ	2454	;# 
  2176     0997                     CM2PCH          equ	2455	;# 
  2177     0A19                     RC2REG          equ	2585	;# 
  2178     0A19                     RCREG2          equ	2585	;# 
  2179     0A1A                     TX2REG          equ	2586	;# 
  2180     0A1A                     TXREG2          equ	2586	;# 
  2181     0A1B                     SP2BRG          equ	2587	;# 
  2182     0A1B                     SP2BRGL         equ	2587	;# 
  2183     0A1B                     SPBRG2          equ	2587	;# 
  2184     0A1C                     SP2BRGH         equ	2588	;# 
  2185     0A1C                     SPBRGH2         equ	2588	;# 
  2186     0A1D                     RC2STA          equ	2589	;# 
  2187     0A1D                     RCSTA2          equ	2589	;# 
  2188     0A1E                     TX2STA          equ	2590	;# 
  2189     0A1E                     TXSTA2          equ	2590	;# 
  2190     0A1F                     BAUD2CON        equ	2591	;# 
  2191     0A1F                     BAUDCON2        equ	2591	;# 
  2192     0A1F                     BAUDCTL2        equ	2591	;# 
  2193     1E0F                     CLCDATA         equ	7695	;# 
  2194     1E10                     CLC1CON         equ	7696	;# 
  2195     1E11                     CLC1POL         equ	7697	;# 
  2196     1E12                     CLC1SEL0        equ	7698	;# 
  2197     1E13                     CLC1SEL1        equ	7699	;# 
  2198     1E14                     CLC1SEL2        equ	7700	;# 
  2199     1E15                     CLC1SEL3        equ	7701	;# 
  2200     1E16                     CLC1GLS0        equ	7702	;# 
  2201     1E17                     CLC1GLS1        equ	7703	;# 
  2202     1E18                     CLC1GLS2        equ	7704	;# 
  2203     1E19                     CLC1GLS3        equ	7705	;# 
  2204     1E1A                     CLC2CON         equ	7706	;# 
  2205     1E1B                     CLC2POL         equ	7707	;# 
  2206     1E1C                     CLC2SEL0        equ	7708	;# 
  2207     1E1D                     CLC2SEL1        equ	7709	;# 
  2208     1E1E                     CLC2SEL2        equ	7710	;# 
  2209     1E1F                     CLC2SEL3        equ	7711	;# 
  2210     1E20                     CLC2GLS0        equ	7712	;# 
  2211     1E21                     CLC2GLS1        equ	7713	;# 
  2212     1E22                     CLC2GLS2        equ	7714	;# 
  2213     1E23                     CLC2GLS3        equ	7715	;# 
  2214     1E24                     CLC3CON         equ	7716	;# 
  2215     1E25                     CLC3POL         equ	7717	;# 
  2216     1E26                     CLC3SEL0        equ	7718	;# 
  2217     1E27                     CLC3SEL1        equ	7719	;# 
  2218     1E28                     CLC3SEL2        equ	7720	;# 
  2219     1E29                     CLC3SEL3        equ	7721	;# 
  2220     1E2A                     CLC3GLS0        equ	7722	;# 
  2221     1E2B                     CLC3GLS1        equ	7723	;# 
  2222     1E2C                     CLC3GLS2        equ	7724	;# 
  2223     1E2D                     CLC3GLS3        equ	7725	;# 
  2224     1E2E                     CLC4CON         equ	7726	;# 
  2225     1E2F                     CLC4POL         equ	7727	;# 
  2226     1E30                     CLC4SEL0        equ	7728	;# 
  2227     1E31                     CLC4SEL1        equ	7729	;# 
  2228     1E32                     CLC4SEL2        equ	7730	;# 
  2229     1E33                     CLC4SEL3        equ	7731	;# 
  2230     1E34                     CLC4GLS0        equ	7732	;# 
  2231     1E35                     CLC4GLS1        equ	7733	;# 
  2232     1E36                     CLC4GLS2        equ	7734	;# 
  2233     1E37                     CLC4GLS3        equ	7735	;# 
  2234     1E8F                     PPSLOCK         equ	7823	;# 
  2235     1E90                     INTPPS          equ	7824	;# 
  2236     1E91                     T0CKIPPS        equ	7825	;# 
  2237     1E92                     T1CKIPPS        equ	7826	;# 
  2238     1E93                     T1GPPS          equ	7827	;# 
  2239     1E9C                     T2INPPS         equ	7836	;# 
  2240     1EA1                     CCP1PPS         equ	7841	;# 
  2241     1EA2                     CCP2PPS         equ	7842	;# 
  2242     1EB1                     CWG1PPS         equ	7857	;# 
  2243     1EBB                     CLCIN0PPS       equ	7867	;# 
  2244     1EBC                     CLCIN1PPS       equ	7868	;# 
  2245     1EBD                     CLCIN2PPS       equ	7869	;# 
  2246     1EBE                     CLCIN3PPS       equ	7870	;# 
  2247     1EC3                     ADACTPPS        equ	7875	;# 
  2248     1EC5                     SSP1CLKPPS      equ	7877	;# 
  2249     1EC6                     SSP1DATPPS      equ	7878	;# 
  2250     1EC7                     SSP1SSPPS       equ	7879	;# 
  2251     1EC8                     SSP2CLKPPS      equ	7880	;# 
  2252     1EC9                     SSP2DATPPS      equ	7881	;# 
  2253     1ECA                     SSP2SSPPS       equ	7882	;# 
  2254     1ECB                     RX1DTPPS        equ	7883	;# 
  2255     1ECC                     TX1CKPPS        equ	7884	;# 
  2256     1ECD                     RX2DTPPS        equ	7885	;# 
  2257     1ECE                     TX2CKPPS        equ	7886	;# 
  2258     1F10                     RA0PPS          equ	7952	;# 
  2259     1F11                     RA1PPS          equ	7953	;# 
  2260     1F12                     RA2PPS          equ	7954	;# 
  2261     1F13                     RA3PPS          equ	7955	;# 
  2262     1F14                     RA4PPS          equ	7956	;# 
  2263     1F15                     RA5PPS          equ	7957	;# 
  2264     1F16                     RA6PPS          equ	7958	;# 
  2265     1F17                     RA7PPS          equ	7959	;# 
  2266     1F18                     RB0PPS          equ	7960	;# 
  2267     1F19                     RB1PPS          equ	7961	;# 
  2268     1F1A                     RB2PPS          equ	7962	;# 
  2269     1F1B                     RB3PPS          equ	7963	;# 
  2270     1F1C                     RB4PPS          equ	7964	;# 
  2271     1F1D                     RB5PPS          equ	7965	;# 
  2272     1F1E                     RB6PPS          equ	7966	;# 
  2273     1F1F                     RB7PPS          equ	7967	;# 
  2274     1F20                     RC0PPS          equ	7968	;# 
  2275     1F21                     RC1PPS          equ	7969	;# 
  2276     1F22                     RC2PPS          equ	7970	;# 
  2277     1F23                     RC3PPS          equ	7971	;# 
  2278     1F24                     RC4PPS          equ	7972	;# 
  2279     1F25                     RC5PPS          equ	7973	;# 
  2280     1F26                     RC6PPS          equ	7974	;# 
  2281     1F27                     RC7PPS          equ	7975	;# 
  2282     1F28                     RD0PPS          equ	7976	;# 
  2283     1F29                     RD1PPS          equ	7977	;# 
  2284     1F2A                     RD2PPS          equ	7978	;# 
  2285     1F2B                     RD3PPS          equ	7979	;# 
  2286     1F2C                     RD4PPS          equ	7980	;# 
  2287     1F2D                     RD5PPS          equ	7981	;# 
  2288     1F2E                     RD6PPS          equ	7982	;# 
  2289     1F2F                     RD7PPS          equ	7983	;# 
  2290     1F30                     RE0PPS          equ	7984	;# 
  2291     1F31                     RE1PPS          equ	7985	;# 
  2292     1F32                     RE2PPS          equ	7986	;# 
  2293     1F38                     ANSELA          equ	7992	;# 
  2294     1F39                     WPUA            equ	7993	;# 
  2295     1F3A                     ODCONA          equ	7994	;# 
  2296     1F3B                     SLRCONA         equ	7995	;# 
  2297     1F3C                     INLVLA          equ	7996	;# 
  2298     1F3D                     IOCAP           equ	7997	;# 
  2299     1F3E                     IOCAN           equ	7998	;# 
  2300     1F3F                     IOCAF           equ	7999	;# 
  2301     1F43                     ANSELB          equ	8003	;# 
  2302     1F44                     WPUB            equ	8004	;# 
  2303     1F45                     ODCONB          equ	8005	;# 
  2304     1F46                     SLRCONB         equ	8006	;# 
  2305     1F47                     INLVLB          equ	8007	;# 
  2306     1F48                     IOCBP           equ	8008	;# 
  2307     1F49                     IOCBN           equ	8009	;# 
  2308     1F4A                     IOCBF           equ	8010	;# 
  2309     1F4E                     ANSELC          equ	8014	;# 
  2310     1F4F                     WPUC            equ	8015	;# 
  2311     1F50                     ODCONC          equ	8016	;# 
  2312     1F51                     SLRCONC         equ	8017	;# 
  2313     1F52                     INLVLC          equ	8018	;# 
  2314     1F53                     IOCCP           equ	8019	;# 
  2315     1F54                     IOCCN           equ	8020	;# 
  2316     1F55                     IOCCF           equ	8021	;# 
  2317     1F59                     ANSELD          equ	8025	;# 
  2318     1F5A                     WPUD            equ	8026	;# 
  2319     1F5B                     ODCOND          equ	8027	;# 
  2320     1F5C                     SLRCOND         equ	8028	;# 
  2321     1F5D                     INLVLD          equ	8029	;# 
  2322     1F64                     ANSELE          equ	8036	;# 
  2323     1F65                     WPUE            equ	8037	;# 
  2324     1F66                     ODCONE          equ	8038	;# 
  2325     1F67                     SLRCONE         equ	8039	;# 
  2326     1F68                     INLVLE          equ	8040	;# 
  2327     1F69                     IOCEP           equ	8041	;# 
  2328     1F6A                     IOCEN           equ	8042	;# 
  2329     1F6B                     IOCEF           equ	8043	;# 
  2330     1FE4                     STATUS_SHAD     equ	8164	;# 
  2331     1FE5                     WREG_SHAD       equ	8165	;# 
  2332     1FE6                     BSR_SHAD        equ	8166	;# 
  2333     1FE7                     PCLATH_SHAD     equ	8167	;# 
  2334     1FE8                     FSR0_SHAD       equ	8168	;# 
  2335     1FE8                     FSR0L_SHAD      equ	8168	;# 
  2336     1FE9                     FSR0H_SHAD      equ	8169	;# 
  2337     1FEA                     FSR1L_SHAD      equ	8170	;# 
  2338     1FEB                     FSR1H_SHAD      equ	8171	;# 
  2339     1FED                     STKPTR          equ	8173	;# 
  2340     1FEE                     TOSL            equ	8174	;# 
  2341     1FEF                     TOSH            equ	8175	;# 
  2342     0000                     INDF0           equ	0	;# 
  2343     0001                     INDF1           equ	1	;# 
  2344     0002                     PCL             equ	2	;# 
  2345     0003                     STATUS          equ	3	;# 
  2346     0004                     FSR0L           equ	4	;# 
  2347     0005                     FSR0H           equ	5	;# 
  2348     0006                     FSR1L           equ	6	;# 
  2349     0007                     FSR1H           equ	7	;# 
  2350     0008                     BSR             equ	8	;# 
  2351     0009                     WREG            equ	9	;# 
  2352     000A                     PCLATH          equ	10	;# 
  2353     000B                     INTCON          equ	11	;# 
  2354     000C                     PORTA           equ	12	;# 
  2355     000D                     PORTB           equ	13	;# 
  2356     000E                     PORTC           equ	14	;# 
  2357     000F                     PORTD           equ	15	;# 
  2358     0010                     PORTE           equ	16	;# 
  2359     0012                     TRISA           equ	18	;# 
  2360     0013                     TRISB           equ	19	;# 
  2361     0014                     TRISC           equ	20	;# 
  2362     0015                     TRISD           equ	21	;# 
  2363     0016                     TRISE           equ	22	;# 
  2364     0018                     LATA            equ	24	;# 
  2365     0019                     LATB            equ	25	;# 
  2366     001A                     LATC            equ	26	;# 
  2367     001B                     LATD            equ	27	;# 
  2368     001C                     LATE            equ	28	;# 
  2369     009B                     ADRES           equ	155	;# 
  2370     009B                     ADRESL          equ	155	;# 
  2371     009C                     ADRESH          equ	156	;# 
  2372     009D                     ADCON0          equ	157	;# 
  2373     009E                     ADCON1          equ	158	;# 
  2374     009F                     ADACT           equ	159	;# 
  2375     0119                     RC1REG          equ	281	;# 
  2376     0119                     RCREG           equ	281	;# 
  2377     0119                     RCREG1          equ	281	;# 
  2378     011A                     TX1REG          equ	282	;# 
  2379     011A                     TXREG1          equ	282	;# 
  2380     011A                     TXREG           equ	282	;# 
  2381     011B                     SP1BRG          equ	283	;# 
  2382     011B                     SPBRG           equ	283	;# 
  2383     011B                     SP1BRGL         equ	283	;# 
  2384     011B                     SPBRG1          equ	283	;# 
  2385     011B                     SPBRGL          equ	283	;# 
  2386     011C                     SP1BRGH         equ	284	;# 
  2387     011C                     SPBRGH          equ	284	;# 
  2388     011C                     SPBRGH1         equ	284	;# 
  2389     011D                     RC1STA          equ	285	;# 
  2390     011D                     RCSTA1          equ	285	;# 
  2391     011D                     RCSTA           equ	285	;# 
  2392     011E                     TX1STA          equ	286	;# 
  2393     011E                     TXSTA1          equ	286	;# 
  2394     011E                     TXSTA           equ	286	;# 
  2395     011F                     BAUD1CON        equ	287	;# 
  2396     011F                     BAUDCON1        equ	287	;# 
  2397     011F                     BAUDCTL1        equ	287	;# 
  2398     011F                     BAUDCON         equ	287	;# 
  2399     011F                     BAUDCTL         equ	287	;# 
  2400     018C                     SSP1BUF         equ	396	;# 
  2401     018D                     SSP1ADD         equ	397	;# 
  2402     018E                     SSP1MSK         equ	398	;# 
  2403     018F                     SSP1STAT        equ	399	;# 
  2404     0190                     SSP1CON1        equ	400	;# 
  2405     0191                     SSP1CON2        equ	401	;# 
  2406     0192                     SSP1CON3        equ	402	;# 
  2407     0196                     SSP2BUF         equ	406	;# 
  2408     0197                     SSP2ADD         equ	407	;# 
  2409     0198                     SSP2MSK         equ	408	;# 
  2410     0199                     SSP2STAT        equ	409	;# 
  2411     019A                     SSP2CON1        equ	410	;# 
  2412     019B                     SSP2CON2        equ	411	;# 
  2413     019C                     SSP2CON3        equ	412	;# 
  2414     020C                     TMR1            equ	524	;# 
  2415     020C                     TMR1L           equ	524	;# 
  2416     020D                     TMR1H           equ	525	;# 
  2417     020E                     T1CON           equ	526	;# 
  2418     020F                     T1GCON          equ	527	;# 
  2419     020F                     PR1             equ	527	;# 
  2420     0210                     T1GATE          equ	528	;# 
  2421     0210                     TMR1GATE        equ	528	;# 
  2422     0211                     T1CLK           equ	529	;# 
  2423     0211                     TMR1CLK         equ	529	;# 
  2424     028C                     T2TMR           equ	652	;# 
  2425     028C                     TMR2            equ	652	;# 
  2426     028D                     T2PR            equ	653	;# 
  2427     028D                     PR2             equ	653	;# 
  2428     028E                     T2CON           equ	654	;# 
  2429     028F                     T2HLT           equ	655	;# 
  2430     0290                     T2CLKCON        equ	656	;# 
  2431     0291                     T2RST           equ	657	;# 
  2432     030C                     CCPR1           equ	780	;# 
  2433     030C                     CCPR1L          equ	780	;# 
  2434     030D                     CCPR1H          equ	781	;# 
  2435     030E                     CCP1CON         equ	782	;# 
  2436     030F                     CCP1CAP         equ	783	;# 
  2437     0310                     CCPR2           equ	784	;# 
  2438     0310                     CCPR2L          equ	784	;# 
  2439     0311                     CCPR2H          equ	785	;# 
  2440     0312                     CCP2CON         equ	786	;# 
  2441     0313                     CCP2CAP         equ	787	;# 
  2442     0314                     PWM3DC          equ	788	;# 
  2443     0314                     PWM3DCL         equ	788	;# 
  2444     0315                     PWM3DCH         equ	789	;# 
  2445     0316                     PWM3CON         equ	790	;# 
  2446     0318                     PWM4DC          equ	792	;# 
  2447     0318                     PWM4DCL         equ	792	;# 
  2448     0319                     PWM4DCH         equ	793	;# 
  2449     031A                     PWM4CON         equ	794	;# 
  2450     031C                     PWM5DC          equ	796	;# 
  2451     031C                     PWM5DCL         equ	796	;# 
  2452     031D                     PWM5DCH         equ	797	;# 
  2453     031E                     PWM5CON         equ	798	;# 
  2454     038C                     PWM6DC          equ	908	;# 
  2455     038C                     PWM6DCL         equ	908	;# 
  2456     038D                     PWM6DCH         equ	909	;# 
  2457     038E                     PWM6CON         equ	910	;# 
  2458     058C                     NCO1ACC         equ	1420	;# 
  2459     058C                     NCO1ACCL        equ	1420	;# 
  2460     058D                     NCO1ACCH        equ	1421	;# 
  2461     058E                     NCO1ACCU        equ	1422	;# 
  2462     058F                     NCO1INC         equ	1423	;# 
  2463     058F                     NCO1INCL        equ	1423	;# 
  2464     0590                     NCO1INCH        equ	1424	;# 
  2465     0591                     NCO1INCU        equ	1425	;# 
  2466     0592                     NCO1CON         equ	1426	;# 
  2467     0593                     NCO1CLK         equ	1427	;# 
  2468     059C                     TMR0L           equ	1436	;# 
  2469     059C                     TMR0            equ	1436	;# 
  2470     059D                     TMR0H           equ	1437	;# 
  2471     059D                     PR0             equ	1437	;# 
  2472     059E                     T0CON0          equ	1438	;# 
  2473     059F                     T0CON1          equ	1439	;# 
  2474     060C                     CWG1CLKCON      equ	1548	;# 
  2475     060D                     CWG1DAT         equ	1549	;# 
  2476     060E                     CWG1DBR         equ	1550	;# 
  2477     060F                     CWG1DBF         equ	1551	;# 
  2478     0610                     CWG1CON0        equ	1552	;# 
  2479     0611                     CWG1CON1        equ	1553	;# 
  2480     0612                     CWG1AS0         equ	1554	;# 
  2481     0613                     CWG1AS1         equ	1555	;# 
  2482     0614                     CWG1STR         equ	1556	;# 
  2483     070C                     PIR0            equ	1804	;# 
  2484     070D                     PIR1            equ	1805	;# 
  2485     070E                     PIR2            equ	1806	;# 
  2486     070F                     PIR3            equ	1807	;# 
  2487     0710                     PIR4            equ	1808	;# 
  2488     0711                     PIR5            equ	1809	;# 
  2489     0712                     PIR6            equ	1810	;# 
  2490     0713                     PIR7            equ	1811	;# 
  2491     0716                     PIE0            equ	1814	;# 
  2492     0717                     PIE1            equ	1815	;# 
  2493     0718                     PIE2            equ	1816	;# 
  2494     0719                     PIE3            equ	1817	;# 
  2495     071A                     PIE4            equ	1818	;# 
  2496     071B                     PIE5            equ	1819	;# 
  2497     071C                     PIE6            equ	1820	;# 
  2498     071D                     PIE7            equ	1821	;# 
  2499     0796                     PMD0            equ	1942	;# 
  2500     0797                     PMD1            equ	1943	;# 
  2501     0798                     PMD2            equ	1944	;# 
  2502     0799                     PMD3            equ	1945	;# 
  2503     079A                     PMD4            equ	1946	;# 
  2504     079B                     PMD5            equ	1947	;# 
  2505     080C                     WDTCON0         equ	2060	;# 
  2506     080D                     WDTCON1         equ	2061	;# 
  2507     080E                     WDTPSL          equ	2062	;# 
  2508     080F                     WDTPSH          equ	2063	;# 
  2509     0810                     WDTTMR          equ	2064	;# 
  2510     0811                     BORCON          equ	2065	;# 
  2511     0812                     VREGCON         equ	2066	;# 
  2512     0813                     PCON0           equ	2067	;# 
  2513     0814                     PCON1           equ	2068	;# 
  2514     081A                     NVMADR          equ	2074	;# 
  2515     081A                     NVMADRL         equ	2074	;# 
  2516     081B                     NVMADRH         equ	2075	;# 
  2517     081C                     NVMDAT          equ	2076	;# 
  2518     081C                     NVMDATL         equ	2076	;# 
  2519     081D                     NVMDATH         equ	2077	;# 
  2520     081E                     NVMCON1         equ	2078	;# 
  2521     081F                     NVMCON2         equ	2079	;# 
  2522     088C                     CPUDOZE         equ	2188	;# 
  2523     088D                     OSCCON1         equ	2189	;# 
  2524     088E                     OSCCON2         equ	2190	;# 
  2525     088F                     OSCCON3         equ	2191	;# 
  2526     0890                     OSCSTAT         equ	2192	;# 
  2527     0891                     OSCEN           equ	2193	;# 
  2528     0892                     OSCTUNE         equ	2194	;# 
  2529     0893                     OSCFRQ          equ	2195	;# 
  2530     0895                     CLKRCON         equ	2197	;# 
  2531     0896                     CLKRCLK         equ	2198	;# 
  2532     090C                     FVRCON          equ	2316	;# 
  2533     090E                     DAC1CON0        equ	2318	;# 
  2534     090F                     DAC1CON1        equ	2319	;# 
  2535     091F                     ZCDCON          equ	2335	;# 
  2536     098F                     CMOUT           equ	2447	;# 
  2537     098F                     CMSTAT          equ	2447	;# 
  2538     0990                     CM1CON0         equ	2448	;# 
  2539     0991                     CM1CON1         equ	2449	;# 
  2540     0992                     CM1NCH          equ	2450	;# 
  2541     0993                     CM1PCH          equ	2451	;# 
  2542     0994                     CM2CON0         equ	2452	;# 
  2543     0995                     CM2CON1         equ	2453	;# 
  2544     0996                     CM2NCH          equ	2454	;# 
  2545     0997                     CM2PCH          equ	2455	;# 
  2546     0A19                     RC2REG          equ	2585	;# 
  2547     0A19                     RCREG2          equ	2585	;# 
  2548     0A1A                     TX2REG          equ	2586	;# 
  2549     0A1A                     TXREG2          equ	2586	;# 
  2550     0A1B                     SP2BRG          equ	2587	;# 
  2551     0A1B                     SP2BRGL         equ	2587	;# 
  2552     0A1B                     SPBRG2          equ	2587	;# 
  2553     0A1C                     SP2BRGH         equ	2588	;# 
  2554     0A1C                     SPBRGH2         equ	2588	;# 
  2555     0A1D                     RC2STA          equ	2589	;# 
  2556     0A1D                     RCSTA2          equ	2589	;# 
  2557     0A1E                     TX2STA          equ	2590	;# 
  2558     0A1E                     TXSTA2          equ	2590	;# 
  2559     0A1F                     BAUD2CON        equ	2591	;# 
  2560     0A1F                     BAUDCON2        equ	2591	;# 
  2561     0A1F                     BAUDCTL2        equ	2591	;# 
  2562     1E0F                     CLCDATA         equ	7695	;# 
  2563     1E10                     CLC1CON         equ	7696	;# 
  2564     1E11                     CLC1POL         equ	7697	;# 
  2565     1E12                     CLC1SEL0        equ	7698	;# 
  2566     1E13                     CLC1SEL1        equ	7699	;# 
  2567     1E14                     CLC1SEL2        equ	7700	;# 
  2568     1E15                     CLC1SEL3        equ	7701	;# 
  2569     1E16                     CLC1GLS0        equ	7702	;# 
  2570     1E17                     CLC1GLS1        equ	7703	;# 
  2571     1E18                     CLC1GLS2        equ	7704	;# 
  2572     1E19                     CLC1GLS3        equ	7705	;# 
  2573     1E1A                     CLC2CON         equ	7706	;# 
  2574     1E1B                     CLC2POL         equ	7707	;# 
  2575     1E1C                     CLC2SEL0        equ	7708	;# 
  2576     1E1D                     CLC2SEL1        equ	7709	;# 
  2577     1E1E                     CLC2SEL2        equ	7710	;# 
  2578     1E1F                     CLC2SEL3        equ	7711	;# 
  2579     1E20                     CLC2GLS0        equ	7712	;# 
  2580     1E21                     CLC2GLS1        equ	7713	;# 
  2581     1E22                     CLC2GLS2        equ	7714	;# 
  2582     1E23                     CLC2GLS3        equ	7715	;# 
  2583     1E24                     CLC3CON         equ	7716	;# 
  2584     1E25                     CLC3POL         equ	7717	;# 
  2585     1E26                     CLC3SEL0        equ	7718	;# 
  2586     1E27                     CLC3SEL1        equ	7719	;# 
  2587     1E28                     CLC3SEL2        equ	7720	;# 
  2588     1E29                     CLC3SEL3        equ	7721	;# 
  2589     1E2A                     CLC3GLS0        equ	7722	;# 
  2590     1E2B                     CLC3GLS1        equ	7723	;# 
  2591     1E2C                     CLC3GLS2        equ	7724	;# 
  2592     1E2D                     CLC3GLS3        equ	7725	;# 
  2593     1E2E                     CLC4CON         equ	7726	;# 
  2594     1E2F                     CLC4POL         equ	7727	;# 
  2595     1E30                     CLC4SEL0        equ	7728	;# 
  2596     1E31                     CLC4SEL1        equ	7729	;# 
  2597     1E32                     CLC4SEL2        equ	7730	;# 
  2598     1E33                     CLC4SEL3        equ	7731	;# 
  2599     1E34                     CLC4GLS0        equ	7732	;# 
  2600     1E35                     CLC4GLS1        equ	7733	;# 
  2601     1E36                     CLC4GLS2        equ	7734	;# 
  2602     1E37                     CLC4GLS3        equ	7735	;# 
  2603     1E8F                     PPSLOCK         equ	7823	;# 
  2604     1E90                     INTPPS          equ	7824	;# 
  2605     1E91                     T0CKIPPS        equ	7825	;# 
  2606     1E92                     T1CKIPPS        equ	7826	;# 
  2607     1E93                     T1GPPS          equ	7827	;# 
  2608     1E9C                     T2INPPS         equ	7836	;# 
  2609     1EA1                     CCP1PPS         equ	7841	;# 
  2610     1EA2                     CCP2PPS         equ	7842	;# 
  2611     1EB1                     CWG1PPS         equ	7857	;# 
  2612     1EBB                     CLCIN0PPS       equ	7867	;# 
  2613     1EBC                     CLCIN1PPS       equ	7868	;# 
  2614     1EBD                     CLCIN2PPS       equ	7869	;# 
  2615     1EBE                     CLCIN3PPS       equ	7870	;# 
  2616     1EC3                     ADACTPPS        equ	7875	;# 
  2617     1EC5                     SSP1CLKPPS      equ	7877	;# 
  2618     1EC6                     SSP1DATPPS      equ	7878	;# 
  2619     1EC7                     SSP1SSPPS       equ	7879	;# 
  2620     1EC8                     SSP2CLKPPS      equ	7880	;# 
  2621     1EC9                     SSP2DATPPS      equ	7881	;# 
  2622     1ECA                     SSP2SSPPS       equ	7882	;# 
  2623     1ECB                     RX1DTPPS        equ	7883	;# 
  2624     1ECC                     TX1CKPPS        equ	7884	;# 
  2625     1ECD                     RX2DTPPS        equ	7885	;# 
  2626     1ECE                     TX2CKPPS        equ	7886	;# 
  2627     1F10                     RA0PPS          equ	7952	;# 
  2628     1F11                     RA1PPS          equ	7953	;# 
  2629     1F12                     RA2PPS          equ	7954	;# 
  2630     1F13                     RA3PPS          equ	7955	;# 
  2631     1F14                     RA4PPS          equ	7956	;# 
  2632     1F15                     RA5PPS          equ	7957	;# 
  2633     1F16                     RA6PPS          equ	7958	;# 
  2634     1F17                     RA7PPS          equ	7959	;# 
  2635     1F18                     RB0PPS          equ	7960	;# 
  2636     1F19                     RB1PPS          equ	7961	;# 
  2637     1F1A                     RB2PPS          equ	7962	;# 
  2638     1F1B                     RB3PPS          equ	7963	;# 
  2639     1F1C                     RB4PPS          equ	7964	;# 
  2640     1F1D                     RB5PPS          equ	7965	;# 
  2641     1F1E                     RB6PPS          equ	7966	;# 
  2642     1F1F                     RB7PPS          equ	7967	;# 
  2643     1F20                     RC0PPS          equ	7968	;# 
  2644     1F21                     RC1PPS          equ	7969	;# 
  2645     1F22                     RC2PPS          equ	7970	;# 
  2646     1F23                     RC3PPS          equ	7971	;# 
  2647     1F24                     RC4PPS          equ	7972	;# 
  2648     1F25                     RC5PPS          equ	7973	;# 
  2649     1F26                     RC6PPS          equ	7974	;# 
  2650     1F27                     RC7PPS          equ	7975	;# 
  2651     1F28                     RD0PPS          equ	7976	;# 
  2652     1F29                     RD1PPS          equ	7977	;# 
  2653     1F2A                     RD2PPS          equ	7978	;# 
  2654     1F2B                     RD3PPS          equ	7979	;# 
  2655     1F2C                     RD4PPS          equ	7980	;# 
  2656     1F2D                     RD5PPS          equ	7981	;# 
  2657     1F2E                     RD6PPS          equ	7982	;# 
  2658     1F2F                     RD7PPS          equ	7983	;# 
  2659     1F30                     RE0PPS          equ	7984	;# 
  2660     1F31                     RE1PPS          equ	7985	;# 
  2661     1F32                     RE2PPS          equ	7986	;# 
  2662     1F38                     ANSELA          equ	7992	;# 
  2663     1F39                     WPUA            equ	7993	;# 
  2664     1F3A                     ODCONA          equ	7994	;# 
  2665     1F3B                     SLRCONA         equ	7995	;# 
  2666     1F3C                     INLVLA          equ	7996	;# 
  2667     1F3D                     IOCAP           equ	7997	;# 
  2668     1F3E                     IOCAN           equ	7998	;# 
  2669     1F3F                     IOCAF           equ	7999	;# 
  2670     1F43                     ANSELB          equ	8003	;# 
  2671     1F44                     WPUB            equ	8004	;# 
  2672     1F45                     ODCONB          equ	8005	;# 
  2673     1F46                     SLRCONB         equ	8006	;# 
  2674     1F47                     INLVLB          equ	8007	;# 
  2675     1F48                     IOCBP           equ	8008	;# 
  2676     1F49                     IOCBN           equ	8009	;# 
  2677     1F4A                     IOCBF           equ	8010	;# 
  2678     1F4E                     ANSELC          equ	8014	;# 
  2679     1F4F                     WPUC            equ	8015	;# 
  2680     1F50                     ODCONC          equ	8016	;# 
  2681     1F51                     SLRCONC         equ	8017	;# 
  2682     1F52                     INLVLC          equ	8018	;# 
  2683     1F53                     IOCCP           equ	8019	;# 
  2684     1F54                     IOCCN           equ	8020	;# 
  2685     1F55                     IOCCF           equ	8021	;# 
  2686     1F59                     ANSELD          equ	8025	;# 
  2687     1F5A                     WPUD            equ	8026	;# 
  2688     1F5B                     ODCOND          equ	8027	;# 
  2689     1F5C                     SLRCOND         equ	8028	;# 
  2690     1F5D                     INLVLD          equ	8029	;# 
  2691     1F64                     ANSELE          equ	8036	;# 
  2692     1F65                     WPUE            equ	8037	;# 
  2693     1F66                     ODCONE          equ	8038	;# 
  2694     1F67                     SLRCONE         equ	8039	;# 
  2695     1F68                     INLVLE          equ	8040	;# 
  2696     1F69                     IOCEP           equ	8041	;# 
  2697     1F6A                     IOCEN           equ	8042	;# 
  2698     1F6B                     IOCEF           equ	8043	;# 
  2699     1FE4                     STATUS_SHAD     equ	8164	;# 
  2700     1FE5                     WREG_SHAD       equ	8165	;# 
  2701     1FE6                     BSR_SHAD        equ	8166	;# 
  2702     1FE7                     PCLATH_SHAD     equ	8167	;# 
  2703     1FE8                     FSR0_SHAD       equ	8168	;# 
  2704     1FE8                     FSR0L_SHAD      equ	8168	;# 
  2705     1FE9                     FSR0H_SHAD      equ	8169	;# 
  2706     1FEA                     FSR1L_SHAD      equ	8170	;# 
  2707     1FEB                     FSR1H_SHAD      equ	8171	;# 
  2708     1FED                     STKPTR          equ	8173	;# 
  2709     1FEE                     TOSL            equ	8174	;# 
  2710     1FEF                     TOSH            equ	8175	;_buffer
  2711                           
  2712 ;; Function _INT_DefaultInterruptHandler is unused but had its address taken
  2713     0000                     _INT_DefaultInterruptHandler equ	0
  2714                           
  2715 ;; Function _EUSART1_Deinitialize is unused but had its address taken
  2716     0000                     _EUSART1_Deinitialize equ	0
  2717                           
  2718 ;; Function _EUSART1_TransmitEnable is unused but had its address taken
  2719     0000                     _EUSART1_TransmitEnable equ	0
  2720                           
  2721 ;; Function _EUSART1_TransmitDisable is unused but had its address taken
  2722     0000                     _EUSART1_TransmitDisable equ	0
  2723                           
  2724 ;; Function _EUSART1_AutoBaudSet is unused but had its address taken
  2725     0000                     _EUSART1_AutoBaudSet equ	0
  2726                           
  2727 ;; Function _EUSART1_AutoBaudQuery is unused but had its address taken
  2728     0000                     _EUSART1_AutoBaudQuery equ	0
  2729                           
  2730 ;; Function _EUSART1_IsRxReady is unused but had its address taken
  2731     0000                     _EUSART1_IsRxReady equ	0
  2732                           
  2733 ;; Function _EUSART1_IsTxDone is unused but had its address taken
  2734     0000                     _EUSART1_IsTxDone equ	0
  2735                           
  2736 ;; Function _EUSART1_ErrorGet is unused but had its address taken
  2737     0000                     _EUSART1_ErrorGet equ	0
  2738                           
  2739 ;; Function _EUSART1_Read is unused but had its address taken
  2740     0000                     _EUSART1_Read   equ	0
  2741                           
  2742 ;; Function _EUSART1_RxCompleteCallbackRegister is unused but had its address taken
  2743     0000                     _EUSART1_RxCompleteCallbackRegister equ	0
  2744                           
  2745 ;; Function _EUSART1_TxCompleteCallbackRegister is unused but had its address taken
  2746     0000                     _EUSART1_TxCompleteCallbackRegister equ	0
  2747                           
  2748                           	psect	idataBANK0
  2749     16F1                     __pidataBANK0:
  2750                           
  2751                           ;initializer for _OFF_Delay
  2752     16F1  340B               	retlw	11
  2753     16F2  3400               	retlw	0
  2754                           
  2755                           ;initializer for _ON_Delay
  2756     16F3  340B               	retlw	11
  2757     16F4  3400               	retlw	0
  2758                           
  2759                           ;initializer for _FREQUENCY
  2760     16F5  3428               	retlw	40
  2761     16F6  3400               	retlw	0
  2762                           
  2763                           ;initializer for _soft_start_step_interval
  2764     16F7  3401               	retlw	1
  2765                           
  2766                           ;initializer for _SOFT_START_Delay
  2767     16F8  340B               	retlw	11
  2768                           
  2769                           	psect	idataBANK1
  2770     16E4                     __pidataBANK1:
  2771                           
  2772                           ;initializer for _settingSwitchReleased
  2773     16E4  3401               	retlw	1
  2774                           
  2775                           ;initializer for _currentStage2Mode
  2776     16E5  3403               	retlw	3
  2777                           
  2778                           ;initializer for _display_digits
  2779     16E6  3401               	retlw	1
  2780                           
  2781                           	psect	stringtext1
  2782     1000                     __pstringtext1:
  2783     1000                     _UART1:
  2784     1000  3428               	retlw	low _EUSART1_Initialize
  2785     1001  3409               	retlw	high _EUSART1_Initialize
  2786     1002  3400               	retlw	0
  2787     1003  3400               	retlw	0
  2788     1004  3400               	retlw	0
  2789     1005  3400               	retlw	0
  2790     1006  3407               	retlw	low _EUSART1_Write
  2791     1007  3408               	retlw	high _EUSART1_Write
  2792     1008  3400               	retlw	0
  2793     1009  3400               	retlw	0
  2794     100A  34F9               	retlw	low _EUSART1_IsTxReady
  2795     100B  3416               	retlw	high _EUSART1_IsTxReady
  2796     100C  3400               	retlw	0
  2797     100D  3400               	retlw	0
  2798     100E  3400               	retlw	0
  2799     100F  3400               	retlw	0
  2800     1010  3400               	retlw	0
  2801     1011  3400               	retlw	0
  2802     1012  3400               	retlw	0
  2803     1013  3400               	retlw	0
  2804     1014  3400               	retlw	0
  2805     1015  3400               	retlw	0
  2806     1016  3400               	retlw	0
  2807     1017  3400               	retlw	0
  2808     1018  3400               	retlw	0
  2809     1019  3400               	retlw	0
  2810     101A  3400               	retlw	0
  2811     101B  3400               	retlw	0
  2812     101C  3400               	retlw	0
  2813     101D  3400               	retlw	0
  2814     101E  3400               	retlw	0
  2815     101F  3400               	retlw	0
  2816     1020  3400               	retlw	0
  2817     1021  3400               	retlw	0
  2818     1022  3400               	retlw	0
  2819     1023  3400               	retlw	0
  2820     1024  3400               	retlw	0
  2821     1025  3400               	retlw	0
  2822     1026  3400               	retlw	0
  2823     1027  3400               	retlw	0
  2824     1028  3416               	retlw	low _EUSART1_FramingErrorCallbackRegister
  2825     1029  3417               	retlw	high _EUSART1_FramingErrorCallbackRegister
  2826     102A  3422               	retlw	low _EUSART1_OverrunErrorCallbackRegister
  2827     102B  3417               	retlw	high _EUSART1_OverrunErrorCallbackRegister
  2828     102C  3400               	retlw	0
  2829     102D  3400               	retlw	0
  2830     102E  3400               	retlw	0
  2831     102F  3400               	retlw	0
  2832     1030                     __end_of_UART1:
  2833                           
  2834                           	psect	stringtext2
  2835     1030                     __pstringtext2:
  2836     1030                     _binary_pattern:
  2837     1030  343F               	retlw	63
  2838     1031  3406               	retlw	6
  2839     1032  345B               	retlw	91
  2840     1033  344F               	retlw	79
  2841     1034  3466               	retlw	102
  2842     1035  346D               	retlw	109
  2843     1036  347D               	retlw	125
  2844     1037  3407               	retlw	7
  2845     1038  347F               	retlw	127
  2846     1039  346F               	retlw	111
  2847     103A  3477               	retlw	119
  2848     103B  347C               	retlw	124
  2849     103C  3439               	retlw	57
  2850     103D  345E               	retlw	94
  2851     103E  3479               	retlw	121
  2852     103F  3471               	retlw	113
  2853     1040  3476               	retlw	118
  2854     1041  3454               	retlw	84
  2855     1042  345C               	retlw	92
  2856     1043  345E               	retlw	94
  2857     1044  3473               	retlw	115
  2858     1045  3438               	retlw	56
  2859     1046  3437               	retlw	55
  2860     1047  3450               	retlw	80
  2861     1048  345C               	retlw	92
  2862     1049  3473               	retlw	115
  2863     104A  3467               	retlw	103
  2864     104B  3450               	retlw	80
  2865     104C  346D               	retlw	109
  2866     104D  3478               	retlw	120
  2867     104E  343E               	retlw	62
  2868     104F  341C               	retlw	28
  2869     1050  342A               	retlw	42
  2870     1051  3476               	retlw	118
  2871     1052  346E               	retlw	110
  2872     1053  345B               	retlw	91
  2873     1054                     __end_of_binary_pattern:
  2874                           
  2875                           	psect	nvBANK2
  2876     016C                     __pnvBANK2:
  2877     016C                     _EUSART1_RxInterruptHandler:
  2878     016C                     	ds	2
  2879     016E                     _EUSART1_TxInterruptHandler:
  2880     016E                     	ds	2
  2881     001A                     _LATCbits       set	26
  2882     0013                     _TRISBbits      set	19
  2883     0016                     _TRISEbits      set	22
  2884     0012                     _TRISAbits      set	18
  2885     0014                     _TRISCbits      set	20
  2886     0015                     _TRISDbits      set	21
  2887     000F                     _PORTD          set	15
  2888     000D                     _PORTBbits      set	13
  2889     000E                     _PORTCbits      set	14
  2890     0010                     _PORTEbits      set	16
  2891     0019                     _LATBbits       set	25
  2892     001C                     _LATEbits       set	28
  2893     001B                     _LATDbits       set	27
  2894     000C                     _PORTAbits      set	12
  2895     0016                     _TRISE          set	22
  2896     0015                     _TRISD          set	21
  2897     0014                     _TRISC          set	20
  2898     0013                     _TRISB          set	19
  2899     0012                     _TRISA          set	18
  2900     001C                     _LATE           set	28
  2901     001B                     _LATD           set	27
  2902     001A                     _LATC           set	26
  2903     0019                     _LATB           set	25
  2904     0018                     _LATA           set	24
  2905     000B                     _INTCONbits     set	11
  2906     0095                     _TRISA5         set	149
  2907     0093                     _TRISA3         set	147
  2908     006F                     _RB7            set	111
  2909     0081                     _RE1            set	129
  2910     00B0                     _TRISE0         set	176
  2911     009B                     _ADRESL         set	155
  2912     009C                     _ADRESH         set	156
  2913     009D                     _ADCON0bits     set	157
  2914     009E                     _ADCON1         set	158
  2915     009D                     _ADCON0         set	157
  2916     04E8                     _ADON           set	1256
  2917     011A                     _TX1REG         set	282
  2918     0119                     _RC1REG         set	281
  2919     011F                     _BAUD1CONbits   set	287
  2920     011E                     _TX1STAbits     set	286
  2921     011D                     _RC1STAbits     set	285
  2922     011C                     _SP1BRGH        set	284
  2923     011B                     _SP1BRGL        set	283
  2924     011E                     _TX1STA         set	286
  2925     011D                     _RC1STA         set	285
  2926     011F                     _BAUD1CON       set	287
  2927     059C                     _TMR0L          set	1436
  2928     059F                     _T0CON1bits     set	1439
  2929     059E                     _T0CON0bits     set	1438
  2930     070F                     _PIR3bits       set	1807
  2931     0716                     _PIE0bits       set	1814
  2932     0719                     _PIE3bits       set	1817
  2933     070C                     _PIR0bits       set	1804
  2934     071D                     _PIE7bits       set	1821
  2935     0713                     _PIR7bits       set	1811
  2936     081F                     _NVMCON2        set	2079
  2937     081C                     _NVMDATL        set	2076
  2938     081D                     _NVMDATH        set	2077
  2939     081A                     _NVMADRL        set	2074
  2940     081B                     _NVMADRH        set	2075
  2941     081E                     _NVMCON1bits    set	2078
  2942     0892                     _OSCTUNE        set	2194
  2943     0893                     _OSCFRQ         set	2195
  2944     0891                     _OSCEN          set	2193
  2945     088F                     _OSCCON3        set	2191
  2946     088D                     _OSCCON1        set	2189
  2947     1ECB                     _RX1DTPPS       set	7883
  2948     1F44                     _WPUBbits       set	8004
  2949     1F43                     _ANSELBbits     set	8003
  2950     1F4F                     _WPUCbits       set	8015
  2951     1F4E                     _ANSELCbits     set	8014
  2952     1F65                     _WPUEbits       set	8037
  2953     1F39                     _WPUAbits       set	7993
  2954     1F38                     _ANSELAbits     set	7992
  2955     1F64                     _ANSELEbits     set	8036
  2956     1F6B                     _IOCEF          set	8043
  2957     1F6A                     _IOCEN          set	8042
  2958     1F69                     _IOCEP          set	8041
  2959     1F55                     _IOCCF          set	8021
  2960     1F54                     _IOCCN          set	8020
  2961     1F53                     _IOCCP          set	8019
  2962     1F4A                     _IOCBF          set	8010
  2963     1F49                     _IOCBN          set	8009
  2964     1F48                     _IOCBP          set	8008
  2965     1F3F                     _IOCAF          set	7999
  2966     1F3E                     _IOCAN          set	7998
  2967     1F3D                     _IOCAP          set	7997
  2968     1F27                     _RC7PPS         set	7975
  2969     1F68                     _INLVLE         set	8040
  2970     1F5D                     _INLVLD         set	8029
  2971     1F52                     _INLVLC         set	8018
  2972     1F47                     _INLVLB         set	8007
  2973     1F3C                     _INLVLA         set	7996
  2974     1F67                     _SLRCONE        set	8039
  2975     1F5C                     _SLRCOND        set	8028
  2976     1F51                     _SLRCONC        set	8017
  2977     1F46                     _SLRCONB        set	8006
  2978     1F3B                     _SLRCONA        set	7995
  2979     1F66                     _ODCONE         set	8038
  2980     1F5B                     _ODCOND         set	8027
  2981     1F50                     _ODCONC         set	8016
  2982     1F45                     _ODCONB         set	8005
  2983     1F3A                     _ODCONA         set	7994
  2984     1F65                     _WPUE           set	8037
  2985     1F5A                     _WPUD           set	8026
  2986     1F4F                     _WPUC           set	8015
  2987     1F44                     _WPUB           set	8004
  2988     1F39                     _WPUA           set	7993
  2989     1F64                     _ANSELE         set	8036
  2990     1F59                     _ANSELD         set	8025
  2991     1F4E                     _ANSELC         set	8014
  2992     1F43                     _ANSELB         set	8003
  2993     1F38                     _ANSELA         set	7992
  2994                           
  2995                           	psect	stringtext3
  2996     1800                     __pstringtext3:
  2997     1800                     STR_1:
  2998     1800  3443               	retlw	67	;'C'
  2999     1801  346F               	retlw	111	;'o'
  3000     1802  346E               	retlw	110	;'n'
  3001     1803  3474               	retlw	116	;'t'
  3002     1804  3472               	retlw	114	;'r'
  3003     1805  346F               	retlw	111	;'o'
  3004     1806  346C               	retlw	108	;'l'
  3005     1807  3420               	retlw	32	;' '
  3006     1808  344F               	retlw	79	;'O'
  3007     1809  3475               	retlw	117	;'u'
  3008     180A  3474               	retlw	116	;'t'
  3009     180B  343A               	retlw	58	;':'
  3010     180C  3420               	retlw	32	;' '
  3011     180D  3425               	retlw	37	;'%'
  3012     180E  3475               	retlw	117	;'u'
  3013     180F  340A               	retlw	10
  3014     1810  340D               	retlw	13
  3015     1811  3400               	retlw	0
  3016                           
  3017                           	psect	stringtext4
  3018     0000                     __pstringtext4:
  3019                           
  3020                           	psect	cinit
  3021     03E1                     start_initialization:	
  3022                           ; #config settings
  3023                           
  3024     03E1                     __initialization:	;BIGRAM
  3025                           
  3026                           ; Initialize objects allocated to BANK0
  3027     03E1  30F1               	movlw	low __pidataBANK0
  3028     03E2  0084               	movwf	4
  3029     03E3  3096               	movlw	(high __pidataBANK0)| (0+128)
  3030     03E4  0085               	movwf	5
  3031     03E5  0012               	moviw fsr0++
  3032     03E6  00E8               	movwf	__pdataBANK0& (0+127)
  3033     03E7  0012               	moviw fsr0++
  3034     03E8  00E9               	movwf	(__pdataBANK0+1)& (0+127)
  3035     03E9  0012               	moviw fsr0++
  3036     03EA  00EA               	movwf	(__pdataBANK0+2)& (0+127)
  3037     03EB  0012               	moviw fsr0++
  3038     03EC  00EB               	movwf	(__pdataBANK0+3)& (0+127)
  3039     03ED  0012               	moviw fsr0++
  3040     03EE  00EC               	movwf	(__pdataBANK0+4)& (0+127)
  3041     03EF  0012               	moviw fsr0++
  3042     03F0  00ED               	movwf	(__pdataBANK0+5)& (0+127)
  3043     03F1  0012               	moviw fsr0++
  3044     03F2  00EE               	movwf	(__pdataBANK0+6)& (0+127)
  3045     03F3  0012               	moviw fsr0++
  3046     03F4  00EF               	movwf	(__pdataBANK0+7)& (0+127)
  3047                           
  3048                           ; Initialize objects allocated to BANK1
  3049     03F5  0141               	movlb	1	; select bank1
  3050     03F6  3196  26E4  3183   	fcall	__pidataBANK1	;fetch initializer
  3051     03F9  00EA               	movwf	__pdataBANK1& (0+127)
  3052     03FA  3196  26E5  3183   	fcall	__pidataBANK1+1	;fetch initializer
  3053     03FD  00EB               	movwf	(__pdataBANK1+1)& (0+127)
  3054     03FE  3196  26E6  3183   	fcall	__pidataBANK1+2	;fetch initializer
  3055     0401  00EC               	movwf	(__pdataBANK1+2)& (0+127)
  3056                           
  3057                           ; Clear objects allocated to BIGRAM
  3058     0402  3028               	movlw	low (0+10024)
  3059     0403  0084               	movwf	4
  3060     0404  3027               	movlw	high (0+10024)
  3061     0405  0085               	movwf	5
  3062     0406  30C8               	movlw	200
  3063     0407  00FE               	movwf	btemp
  3064     0408  3000               	movlw	0
  3065     0409  00FF               	movwf	btemp+1
  3066     040A  3187  27F4  3183   	fcall	clear_ram0
  3067                           
  3068                           ; Clear objects allocated to COMMON
  3069     040D  01FC               	clrf	__pbssCOMMON& (0+127)
  3070     040E  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  3071                           
  3072                           ; Clear objects allocated to BANK0
  3073     040F  3053               	movlw	low __pbssBANK0
  3074     0410  0084               	movwf	4
  3075     0411  3000               	movlw	high __pbssBANK0
  3076     0412  0085               	movwf	5
  3077     0413  3015               	movlw	21
  3078     0414  00FE               	movwf	btemp
  3079     0415  3000               	movlw	0
  3080     0416  00FF               	movwf	btemp+1
  3081     0417  3187  27F4  3183   	fcall	clear_ram0
  3082                           
  3083                           ; Clear objects allocated to BANK1
  3084     041A  30A0               	movlw	low __pbssBANK1
  3085     041B  0084               	movwf	4
  3086     041C  3000               	movlw	high __pbssBANK1
  3087     041D  0085               	movwf	5
  3088     041E  304A               	movlw	74
  3089     041F  00FE               	movwf	btemp
  3090     0420  3000               	movlw	0
  3091     0421  00FF               	movwf	btemp+1
  3092     0422  3187  27F4  3183   	fcall	clear_ram0
  3093                           
  3094                           ; Clear objects allocated to BANK2
  3095     0425  3020               	movlw	low __pbssBANK2
  3096     0426  0084               	movwf	4
  3097     0427  3001               	movlw	high __pbssBANK2
  3098     0428  0085               	movwf	5
  3099     0429  304C               	movlw	76
  3100     042A  00FE               	movwf	btemp
  3101     042B  3000               	movlw	0
  3102     042C  00FF               	movwf	btemp+1
  3103     042D  3187  27F4  3183   	fcall	clear_ram0
  3104                           
  3105                           ; Clear objects allocated to BANK3
  3106     0430  30A0               	movlw	low __pbssBANK3
  3107     0431  0084               	movwf	4
  3108     0432  3001               	movlw	high __pbssBANK3
  3109     0433  0085               	movwf	5
  3110     0434  304E               	movlw	78
  3111     0435  00FE               	movwf	btemp
  3112     0436  3000               	movlw	0
  3113     0437  00FF               	movwf	btemp+1
  3114     0438  3187  27F4  3183   	fcall	clear_ram0
  3115                           
  3116                           ; Clear objects allocated to BANK4
  3117     043B  3020               	movlw	low __pbssBANK4
  3118     043C  0084               	movwf	4
  3119     043D  3002               	movlw	high __pbssBANK4
  3120     043E  0085               	movwf	5
  3121     043F  3042               	movlw	66
  3122     0440  00FE               	movwf	btemp
  3123     0441  3000               	movlw	0
  3124     0442  00FF               	movwf	btemp+1
  3125     0443  3187  27F4  3183   	fcall	clear_ram0
  3126                           
  3127                           ; Clear objects allocated to BANK5
  3128     0446  30A0               	movlw	low __pbssBANK5
  3129     0447  0084               	movwf	4
  3130     0448  3002               	movlw	high __pbssBANK5
  3131     0449  0085               	movwf	5
  3132     044A  3040               	movlw	64
  3133     044B  00FE               	movwf	btemp
  3134     044C  3000               	movlw	0
  3135     044D  00FF               	movwf	btemp+1
  3136     044E  3187  27F4  3183   	fcall	clear_ram0
  3137     0451                     end_of_initialization:	
  3138                           ;End of C runtime variable initialization code
  3139                           
  3140     0451                     __end_of__initialization:
  3141     0451  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3142     0452  0140               	movlb	0
  3143     0453  318C  2C44         	ljmp	_main	;jump to C main() function
  3144                           
  3145                           	psect	bssCOMMON
  3146     007C                     __pbssCOMMON:
  3147     007C                     _unlockKeyHigh:
  3148     007C                     	ds	1
  3149     007D                     _unlockKeyLow:
  3150     007D                     	ds	1
  3151                           
  3152                           	psect	bssBANK0
  3153     0053                     __pbssBANK0:
  3154     0053                     _pressDurationSettingSwitch:
  3155     0053                     	ds	2
  3156     0055                     _flag:
  3157     0055                     	ds	2
  3158     0057                     _UARTFlag:
  3159     0057                     	ds	1
  3160     0058                     _DebounceCompleted_Decrement:
  3161     0058                     	ds	1
  3162     0059                     _DebounceCompleted:
  3163     0059                     	ds	1
  3164     005A                     _currentStage1Mode:
  3165     005A                     	ds	1
  3166     005B                     _currentMode:
  3167     005B                     	ds	1
  3168     005C                     _currentStage:
  3169     005C                     	ds	1
  3170     005D                     _current_digit:
  3171     005D                     	ds	1
  3172     005E                     _segment_pattern:
  3173     005E                     	ds	1
  3174     005F                     _ON_Delay_Flag:
  3175     005F                     	ds	1
  3176     0060                     _SoftStart_Completed:
  3177     0060                     	ds	1
  3178     0061                     _VOLTAGE:
  3179     0061                     	ds	1
  3180     0062                     _eusart1RxCount:
  3181     0062                     	ds	1
  3182     0063                     _eusart1RxTail:
  3183     0063                     	ds	1
  3184     0064                     _eusart1RxHead:
  3185     0064                     	ds	1
  3186     0065                     _eusart1TxBufferRemaining:
  3187     0065                     	ds	1
  3188     0066                     _eusart1TxTail:
  3189     0066                     	ds	1
  3190     0067                     _eusart1TxHead:
  3191     0067                     	ds	1
  3192                           
  3193                           	psect	dataBANK0
  3194     0068                     __pdataBANK0:
  3195     0068                     _OFF_Delay:
  3196     0068                     	ds	2
  3197     006A                     _ON_Delay:
  3198     006A                     	ds	2
  3199     006C                     _FREQUENCY:
  3200     006C                     	ds	2
  3201     006E                     _soft_start_step_interval:
  3202     006E                     	ds	1
  3203     006F                     _SOFT_START_Delay:
  3204     006F                     	ds	1
  3205                           
  3206                           	psect	bssBANK1
  3207     00A0                     __pbssBANK1:
  3208     00A0                     _eusart1TxBuffer:
  3209     00A0                     	ds	8
  3210     00A8                     _width:
  3211     00A8                     	ds	2
  3212     00AA                     _prec:
  3213     00AA                     	ds	2
  3214     00AC                     _UARTFlagDelay:
  3215     00AC                     	ds	2
  3216     00AE                     _pressDurationPowerSwitch:
  3217     00AE                     	ds	2
  3218     00B0                     _uartsendcount:
  3219     00B0                     	ds	2
  3220     00B2                     _pressDurationSimultaneous:
  3221     00B2                     	ds	2
  3222     00B4                     _Step_Count:
  3223     00B4                     	ds	2
  3224     00B6                     _Step_Size:
  3225     00B6                     	ds	2
  3226     00B8                     _TMR_Off_Delay:
  3227     00B8                     	ds	2
  3228     00BA                     _TMR_On_Delay:
  3229     00BA                     	ds	2
  3230     00BC                     _temp_voltage:
  3231     00BC                     	ds	2
  3232     00BE                     _soft_start_voltage:
  3233     00BE                     	ds	2
  3234     00C0                     _TMR_SoftDelay:
  3235     00C0                     	ds	2
  3236     00C2                     _Potentiometer_VTG:
  3237     00C2                     	ds	2
  3238     00C4                     _STOP_FREQ:
  3239     00C4                     	ds	2
  3240     00C6                     _EUSART1_OverrunErrorHandler:
  3241     00C6                     	ds	2
  3242     00C8                     _EUSART1_FramingErrorHandler:
  3243     00C8                     	ds	2
  3244     00CA                     _EUSART1_RxCompleteInterruptHandler:
  3245     00CA                     	ds	2
  3246     00CC                     _EUSART1_TxCompleteInterruptHandler:
  3247     00CC                     	ds	2
  3248     00CE                     _eusart1RxLastError:
  3249     00CE                     	ds	2
  3250     00D0                     _INT_InterruptHandler:
  3251     00D0                     	ds	2
  3252     00D2                     _NVM_Callback:
  3253     00D2                     	ds	2
  3254     00D4                     _flags:
  3255     00D4                     	ds	1
  3256     00D5                     _shortPressDetectedPowerSwitch:
  3257     00D5                     	ds	1
  3258     00D6                     _StartDebounceDelayTimer_Decrement:
  3259     00D6                     	ds	1
  3260     00D7                     _StartDebounceDelayTimer:
  3261     00D7                     	ds	1
  3262     00D8                     _DebounceDelay_Decrement:
  3263     00D8                     	ds	1
  3264     00D9                     _DebounceDelay:
  3265     00D9                     	ds	1
  3266     00DA                     _shortPressDetected:
  3267     00DA                     	ds	1
  3268     00DB                     _longPressDetectedSimultaneous:
  3269     00DB                     	ds	1
  3270     00DC                     _longPressDetectedSettingSwitch:
  3271     00DC                     	ds	1
  3272     00DD                     _UpdateModeDelay:
  3273     00DD                     	ds	1
  3274     00DE                     _Stop_Controller:
  3275     00DE                     	ds	1
  3276     00DF                     _OFF_Delay_Flag:
  3277     00DF                     	ds	1
  3278     00E0                     _StartSoftDelay:
  3279     00E0                     	ds	1
  3280     00E1                     _Current_Out:
  3281     00E1                     	ds	1
  3282     00E2                     _Control_Output:
  3283     00E2                     	ds	1
  3284     00E3                     _Speed_B:
  3285     00E3                     	ds	1
  3286     00E4                     _Speed_A:
  3287     00E4                     	ds	1
  3288     00E5                     _PhotoSensor_Flag:
  3289     00E5                     	ds	1
  3290     00E6                     _NPN_Sensor_2:
  3291     00E6                     	ds	1
  3292     00E7                     _NPN_Sensor_1:
  3293     00E7                     	ds	1
  3294     00E8                     _Output_VTG_Stop:
  3295     00E8                     	ds	1
  3296     00E9                     _current_voltage:
  3297     00E9                     	ds	1
  3298                           
  3299                           	psect	dataBANK1
  3300     00EA                     __pdataBANK1:
  3301     00EA                     _settingSwitchReleased:
  3302     00EA                     	ds	1
  3303     00EB                     _currentStage2Mode:
  3304     00EB                     	ds	1
  3305     00EC                     _display_digits:
  3306     00EC                     	ds	1
  3307                           
  3308                           	psect	bssBANK2
  3309     0120                     __pbssBANK2:
  3310     0120                     _eusart1RxStatusBuffer:
  3311     0120                     	ds	16
  3312     0130                     _digits_6:
  3313     0130                     	ds	10
  3314     013A                     _digits_5:
  3315     013A                     	ds	10
  3316     0144                     _digits_4:
  3317     0144                     	ds	10
  3318     014E                     _digits_3:
  3319     014E                     	ds	10
  3320     0158                     _digits_2:
  3321     0158                     	ds	10
  3322     0162                     _digits_1:
  3323     0162                     	ds	10
  3324                           
  3325                           	psect	bssBANK3
  3326     01A0                     __pbssBANK3:
  3327     01A0                     _digits_15:
  3328     01A0                     	ds	10
  3329     01AA                     _digits_12:
  3330     01AA                     	ds	10
  3331     01B4                     _digits_11:
  3332     01B4                     	ds	10
  3333     01BE                     _digits_10:
  3334     01BE                     	ds	10
  3335     01C8                     _digits_9:
  3336     01C8                     	ds	10
  3337     01D2                     _digits_8:
  3338     01D2                     	ds	10
  3339     01DC                     _digits_7:
  3340     01DC                     	ds	10
  3341     01E6                     _eusart1RxBuffer:
  3342     01E6                     	ds	8
  3343                           
  3344                           	psect	bssBANK4
  3345     0220                     __pbssBANK4:
  3346     0220                     _dbuf:
  3347     0220                     	ds	32
  3348     0240                     _digits_14:
  3349     0240                     	ds	10
  3350     024A                     _digits_13:
  3351     024A                     	ds	10
  3352     0254                     _systemData:
  3353     0254                     	ds	14
  3354                           
  3355                           	psect	bssBANK5
  3356     02A0                     __pbssBANK5:
  3357     02A0                     SaveSystemDataToFlash@F8423:
  3358     02A0                     	ds	64
  3359                           
  3360                           	psect	clrtext
  3361     07F4                     clear_ram0:	
  3362                           ;	Called with FSR0 containing the base address, and
  3363                           ;	btemp/btemp+1 has the size to clear
  3364                           
  3365     07F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  3366     07F5                     clrloop0:
  3367     07F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  3368     07F6  3101               	addfsr 0,1
  3369     07F7  3001               	movlw	1
  3370     07F8  02FE               	subwf	btemp,f
  3371     07F9  3000               	movlw	0
  3372     07FA  3BFF               	subwfb	btemp+1,f
  3373     07FB  087F               	movf	btemp+1,w
  3374     07FC  047E               	iorwf	btemp,w
  3375     07FD  1D03               	skipz
  3376     07FE  2FF5               	goto	clrloop0	;have we reached the end yet?
  3377     07FF  3400               	retlw	0	;all done for this memory range, return
  3378                           
  3379                           	psect	cstackBANK1
  3380     00ED                     __pcstackBANK1:
  3381     00ED                     ?_INT_SetInterruptHandler:
  3382     00ED                     ?_EUSART1_FramingErrorCallbackRegister:	
  3383                           ; 1 bytes @ 0x0
  3384                           
  3385     00ED                     ?_EUSART1_OverrunErrorCallbackRegister:	
  3386                           ; 1 bytes @ 0x0
  3387                           
  3388     00ED                     INT_SetInterruptHandler@InterruptHandler:	
  3389                           ; 1 bytes @ 0x0
  3390                           
  3391     00ED                     EUSART1_FramingErrorCallbackRegister@callbackHandler:	
  3392                           ; 2 bytes @ 0x0
  3393                           
  3394     00ED                     EUSART1_OverrunErrorCallbackRegister@callbackHandler:	
  3395                           ; 2 bytes @ 0x0
  3396                           
  3397     00ED                     ??_NVM_StatusClear:	
  3398                           ; 2 bytes @ 0x0
  3399                           
  3400     00ED                     ??_CLOCK_Initialize:	
  3401                           ; 1 bytes @ 0x0
  3402                           
  3403     00ED                     ??_PIN_MANAGER_Initialize:	
  3404                           ; 1 bytes @ 0x0
  3405                           
  3406     00ED                     ??_NVM_Initialize:	
  3407                           ; 1 bytes @ 0x0
  3408                           
  3409     00ED                     ??_setup_timer0:	
  3410                           ; 1 bytes @ 0x0
  3411                           
  3412     00ED                     ??_ADC_Init:	
  3413                           ; 1 bytes @ 0x0
  3414                           
  3415                           
  3416                           ; 1 bytes @ 0x0
  3417     00ED                     	ds	2
  3418     00EF                     ??_EUSART1_Initialize:
  3419     00EF                     ??_INTERRUPT_Initialize:	
  3420                           ; 1 bytes @ 0x2
  3421                           
  3422     00EF                     ??_INT_SetInterruptHandler:	
  3423                           ; 1 bytes @ 0x2
  3424                           
  3425     00EF                     ??_EUSART1_FramingErrorCallbackRegister:	
  3426                           ; 1 bytes @ 0x2
  3427                           
  3428     00EF                     ??_EUSART1_OverrunErrorCallbackRegister:	
  3429                           ; 1 bytes @ 0x2
  3430                           
  3431     00EF                     ??_SYSTEM_Initialize:	
  3432                           ; 1 bytes @ 0x2
  3433                           
  3434     00EF                     ??_main:	
  3435                           ; 1 bytes @ 0x2
  3436                           
  3437                           
  3438                           	psect	cstackCOMMON
  3439     0070                     __pcstackCOMMON:	
  3440                           ; 1 bytes @ 0x2
  3441                           
  3442     0070                     ?_NVM_StatusClear:
  3443     0070                     ?_CLOCK_Initialize:	
  3444                           ; 1 bytes @ 0x0
  3445                           
  3446     0070                     ?_PIN_MANAGER_Initialize:	
  3447                           ; 1 bytes @ 0x0
  3448                           
  3449     0070                     ?_EUSART1_Initialize:	
  3450                           ; 1 bytes @ 0x0
  3451                           
  3452     0070                     ?_INTERRUPT_Initialize:	
  3453                           ; 1 bytes @ 0x0
  3454                           
  3455     0070                     ?_EUSART1_Write:	
  3456                           ; 1 bytes @ 0x0
  3457                           
  3458     0070                     ?_EUSART1_IsTxReady:	
  3459                           ; 1 bytes @ 0x0
  3460                           
  3461     0070                     ?_EUSART1_ReceiveISR:	
  3462                           ; 1 bytes @ 0x0
  3463                           
  3464     0070                     ?_EUSART1_TransmitISR:	
  3465                           ; 1 bytes @ 0x0
  3466                           
  3467     0070                     ?_EUSART1_DefaultFramingErrorCallback:	
  3468                           ; 1 bytes @ 0x0
  3469                           
  3470     0070                     ?_EUSART1_DefaultOverrunErrorCallback:	
  3471                           ; 1 bytes @ 0x0
  3472                           
  3473     0070                     ?_updateMode:	
  3474                           ; 1 bytes @ 0x0
  3475                           
  3476     0070                     ?_updateLEDs:	
  3477                           ; 1 bytes @ 0x0
  3478                           
  3479     0070                     ?_NVM_Initialize:	
  3480                           ; 1 bytes @ 0x0
  3481                           
  3482     0070                     ?_NVM_ISR:	
  3483                           ; 1 bytes @ 0x0
  3484                           
  3485     0070                     ?_SYSTEM_Initialize:	
  3486                           ; 1 bytes @ 0x0
  3487                           
  3488     0070                     ?_putch:	
  3489                           ; 1 bytes @ 0x0
  3490                           
  3491     0070                     ?_setup_timer0:	
  3492                           ; 1 bytes @ 0x0
  3493                           
  3494     0070                     ?_ADC_Init:	
  3495                           ; 1 bytes @ 0x0
  3496                           
  3497     0070                     ?_control_led_and_7segment_FOR_MODE_VOLTAGE:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500     0070                     ?_control_led_and_7segment_FOR_MODE_FREQUENCY:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503     0070                     ?_control_led_and_7segment_FOR_MODE_ON_DELAY:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506     0070                     ?_control_led_and_7segment_FOR_MODE_OFF_DELAY:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509     0070                     ?_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512     0070                     ?_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515     0070                     ?_control_led_and_7segment_FOR_MODE_SENSOR_II:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518     0070                     ?_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521     0070                     ?_control_led_and_7segment_FOR_MODE_SPEED_CONTROL:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524     0070                     ?_control_led_and_7segment_FOR_MODE_SPEED_A_B:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527     0070                     ?_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530     0070                     ?_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533     0070                     ?_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536     0070                     ?_ISR:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539     0070                     ?_main:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542     0070                     ?___wmul:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545     0070                     ?___lwdiv:	
  3546                           ; 2 bytes @ 0x0
  3547                           
  3548     0070                     EUSART1_ReceiveISR@regValue:	
  3549                           ; 2 bytes @ 0x0
  3550                           
  3551     0070                     EUSART1_Write@txData:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554     0070                     EUSART1_TransmitISR@tempTxTail:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557     0070                     ___wmul@multiplier:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560     0070                     ___lwdiv@divisor:	
  3561                           ; 2 bytes @ 0x0
  3562                           
  3563     0070                     ??_EUSART1_IsTxReady:	
  3564                           ; 2 bytes @ 0x0
  3565                           
  3566     0070                     ??_EUSART1_ReceiveISR:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569     0070                     ??_EUSART1_TransmitISR:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572     0070                     ??_EUSART1_DefaultFramingErrorCallback:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575     0070                     ??_EUSART1_DefaultOverrunErrorCallback:	
  3576                           ; 1 bytes @ 0x0
  3577                           
  3578     0070                     ??_NVM_ISR:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581     0070                     ??_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584     0070                     ??_control_led_and_7segment_FOR_MODE_SENSOR_II:	
  3585                           ; 1 bytes @ 0x0
  3586                           
  3587     0070                     ??_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR:	
  3588                           ; 1 bytes @ 0x0
  3589                           
  3590     0070                     ??_control_led_and_7segment_FOR_MODE_SPEED_CONTROL:	
  3591                           ; 1 bytes @ 0x0
  3592                           
  3593     0070                     ??_control_led_and_7segment_FOR_MODE_SPEED_A_B:	
  3594                           ; 1 bytes @ 0x0
  3595                           
  3596     0070                     ??_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT:	
  3597                           ; 1 bytes @ 0x0
  3598                           
  3599                           
  3600                           ; 1 bytes @ 0x0
  3601     0070                     	ds	1
  3602     0071                     EUSART1_ReceiveISR@tempRxHead:
  3603     0071                     EUSART1_Write@tempTxHead:	
  3604                           ; 1 bytes @ 0x1
  3605                           
  3606     0071                     ??_EUSART1_Write:	
  3607                           ; 1 bytes @ 0x1
  3608                           
  3609                           
  3610                           ; 1 bytes @ 0x1
  3611     0071                     	ds	1
  3612     0072                     ?_UART_Write_Text:
  3613     0072                     putch@txData:	
  3614                           ; 1 bytes @ 0x2
  3615                           
  3616     0072                     UART_Write_Text@text:	
  3617                           ; 1 bytes @ 0x2
  3618                           
  3619     0072                     ___wmul@multiplicand:	
  3620                           ; 2 bytes @ 0x2
  3621                           
  3622     0072                     ___lwdiv@dividend:	
  3623                           ; 2 bytes @ 0x2
  3624                           
  3625     0072                     ??_putch:	
  3626                           ; 2 bytes @ 0x2
  3627                           
  3628     0072                     ??_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER:	
  3629                           ; 1 bytes @ 0x2
  3630                           
  3631                           
  3632                           ; 1 bytes @ 0x2
  3633     0072                     	ds	1
  3634     0073                     ?_fputc:
  3635     0073                     fputc@c:	
  3636                           ; 2 bytes @ 0x3
  3637                           
  3638                           
  3639                           ; 2 bytes @ 0x3
  3640     0073                     	ds	1
  3641     0074                     ___wmul@product:
  3642     0074                     ___lwdiv@quotient:	
  3643                           ; 2 bytes @ 0x4
  3644                           
  3645     0074                     ??_UART_Write_Text:	
  3646                           ; 2 bytes @ 0x4
  3647                           
  3648     0074                     ??___wmul:	
  3649                           ; 1 bytes @ 0x4
  3650                           
  3651     0074                     ??___lwdiv:	
  3652                           ; 1 bytes @ 0x4
  3653                           
  3654                           
  3655                           ; 1 bytes @ 0x4
  3656     0074                     	ds	1
  3657     0075                     fputc@fp:
  3658                           
  3659                           ; 2 bytes @ 0x5
  3660     0075                     	ds	1
  3661     0076                     ?___awdiv:
  3662     0076                     ___lwdiv@counter:	
  3663                           ; 2 bytes @ 0x6
  3664                           
  3665     0076                     ___awdiv@divisor:	
  3666                           ; 1 bytes @ 0x6
  3667                           
  3668                           
  3669                           ; 2 bytes @ 0x6
  3670     0076                     	ds	1
  3671     0077                     ?___lwmod:
  3672     0077                     ___lwmod@divisor:	
  3673                           ; 2 bytes @ 0x7
  3674                           
  3675     0077                     ??_fputc:	
  3676                           ; 2 bytes @ 0x7
  3677                           
  3678                           
  3679                           ; 1 bytes @ 0x7
  3680     0077                     	ds	1
  3681     0078                     ___awdiv@dividend:
  3682                           
  3683                           ; 2 bytes @ 0x8
  3684     0078                     	ds	1
  3685     0079                     ___lwmod@dividend:
  3686                           
  3687                           ; 2 bytes @ 0x9
  3688     0079                     	ds	1
  3689     007A                     ___awmod@counter:
  3690     007A                     ??___awdiv:	
  3691                           ; 1 bytes @ 0xA
  3692                           
  3693     007A                     ??___awmod:	
  3694                           ; 1 bytes @ 0xA
  3695                           
  3696                           
  3697                           ; 1 bytes @ 0xA
  3698     007A                     	ds	1
  3699     007B                     ___awmod@sign:
  3700     007B                     ___lwmod@counter:	
  3701                           ; 1 bytes @ 0xB
  3702                           
  3703     007B                     ??___lwmod:	
  3704                           ; 1 bytes @ 0xB
  3705                           
  3706                           
  3707                           ; 1 bytes @ 0xB
  3708     007B                     	ds	1
  3709     007C                     ??_sprintf:
  3710                           
  3711                           	psect	cstackBANK0
  3712     0020                     __pcstackBANK0:	
  3713                           ; 1 bytes @ 0xC
  3714                           
  3715     0020                     ?_vfpfcnvrt:
  3716     0020                     ___awdiv@counter:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719     0020                     vfpfcnvrt@fp:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722     0020                     ??_control_led_and_7segment_FOR_MODE_FREQUENCY:	
  3723                           ; 2 bytes @ 0x0
  3724                           
  3725     0020                     ??_control_led_and_7segment_FOR_MODE_ON_DELAY:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728     0020                     ??_control_led_and_7segment_FOR_MODE_OFF_DELAY:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731                           
  3732                           ; 1 bytes @ 0x0
  3733     0020                     	ds	1
  3734     0021                     ___awdiv@sign:
  3735                           
  3736                           ; 1 bytes @ 0x1
  3737     0021                     	ds	1
  3738     0022                     vfpfcnvrt@fmt:
  3739     0022                     ___awdiv@quotient:	
  3740                           ; 1 bytes @ 0x2
  3741                           
  3742                           
  3743                           ; 2 bytes @ 0x2
  3744     0022                     	ds	1
  3745     0023                     vfpfcnvrt@ap:
  3746                           
  3747                           ; 1 bytes @ 0x3
  3748     0023                     	ds	1
  3749     0024                     ?___awmod:
  3750     0024                     ___awmod@divisor:	
  3751                           ; 2 bytes @ 0x4
  3752                           
  3753     0024                     ??_vfpfcnvrt:	
  3754                           ; 2 bytes @ 0x4
  3755                           
  3756                           
  3757                           ; 1 bytes @ 0x4
  3758     0024                     	ds	2
  3759     0026                     ___awmod@dividend:
  3760                           
  3761                           ; 2 bytes @ 0x6
  3762     0026                     	ds	2
  3763     0028                     vfpfcnvrt@cp:
  3764     0028                     ??_control_led_and_7segment_FOR_MODE_VOLTAGE:	
  3765                           ; 2 bytes @ 0x8
  3766                           
  3767     0028                     ??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY:	
  3768                           ; 1 bytes @ 0x8
  3769                           
  3770                           
  3771                           ; 1 bytes @ 0x8
  3772     0028                     	ds	2
  3773     002A                     vfpfcnvrt@convarg:
  3774                           
  3775                           ; 4 bytes @ 0xA
  3776     002A                     	ds	4
  3777     002E                     vfpfcnvrt@c:
  3778                           
  3779                           ; 1 bytes @ 0xE
  3780     002E                     	ds	1
  3781     002F                     ?_vfprintf:
  3782     002F                     vfprintf@fp:	
  3783                           ; 2 bytes @ 0xF
  3784                           
  3785                           
  3786                           ; 2 bytes @ 0xF
  3787     002F                     	ds	2
  3788     0031                     vfprintf@fmt:
  3789                           
  3790                           ; 2 bytes @ 0x11
  3791     0031                     	ds	2
  3792     0033                     vfprintf@ap:
  3793                           
  3794                           ; 1 bytes @ 0x13
  3795     0033                     	ds	1
  3796     0034                     ??_vfprintf:
  3797                           
  3798                           ; 1 bytes @ 0x14
  3799     0034                     	ds	1
  3800     0035                     vfprintf@cfmt:
  3801                           
  3802                           ; 2 bytes @ 0x15
  3803     0035                     	ds	2
  3804     0037                     ?_sprintf:
  3805     0037                     sprintf@s:	
  3806                           ; 2 bytes @ 0x17
  3807                           
  3808                           
  3809                           ; 2 bytes @ 0x17
  3810     0037                     	ds	2
  3811     0039                     sprintf@fmt:
  3812                           
  3813                           ; 2 bytes @ 0x19
  3814     0039                     	ds	4
  3815     003D                     sprintf@ap:
  3816                           
  3817                           ; 1 bytes @ 0x1D
  3818     003D                     	ds	1
  3819     003E                     sprintf@f:
  3820                           
  3821                           ; 11 bytes @ 0x1E
  3822     003E                     	ds	11
  3823     0049                     ??_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT:
  3824                           
  3825                           ; 1 bytes @ 0x29
  3826     0049                     	ds	2
  3827     004B                     ??_updateLEDs:
  3828                           
  3829                           ; 1 bytes @ 0x2B
  3830     004B                     	ds	2
  3831     004D                     ??_updateMode:
  3832                           
  3833                           ; 1 bytes @ 0x2D
  3834     004D                     	ds	2
  3835     004F                     ??_ISR:
  3836                           
  3837                           ; 1 bytes @ 0x2F
  3838     004F                     	ds	4
  3839                           
  3840                           	psect	maintext
  3841     0C44                     __pmaintext:	
  3842 ;;
  3843 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3844 ;;
  3845 ;; *************** function _main *****************
  3846 ;; Defined at:
  3847 ;;		line 1375 in file "main.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : B3F/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3865 ;;Total ram usage:        0 bytes
  3866 ;; Hardware stack levels required when called: 13
  3867 ;; This function calls:
  3868 ;;		_ADC_Init
  3869 ;;		_EUSART1_Initialize
  3870 ;;		_SYSTEM_Initialize
  3871 ;;		_setup_timer0
  3872 ;; This function is called by:
  3873 ;;		Startup code after reset
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877     0C44                     _main:	
  3878                           ;psect for function _main
  3879                           
  3880     0C44                     l5363:	
  3881                           ;incstack = 0
  3882                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  3883                           
  3884                           
  3885                           ;main.c: 1377:     SYSTEM_Initialize();
  3886     0C44  3197  273D  318C   	fcall	_SYSTEM_Initialize
  3887                           
  3888                           ;main.c: 1379:     EUSART1_Initialize();
  3889     0C47  3189  2128  318C   	fcall	_EUSART1_Initialize
  3890     0C4A                     l5365:
  3891                           
  3892                           ;main.c: 1383:     (INTCONbits.GIE = 1);
  3893     0C4A  178B               	bsf	11,7	;volatile
  3894     0C4B                     l5367:
  3895                           
  3896                           ;main.c: 1386:     (INTCONbits.GIE = 0);
  3897     0C4B  138B               	bcf	11,7	;volatile
  3898     0C4C                     l5369:
  3899                           
  3900                           ;main.c: 1389:     (INTCONbits.PEIE = 1);
  3901     0C4C  170B               	bsf	11,6	;volatile
  3902     0C4D                     l5371:
  3903                           
  3904                           ;main.c: 1391:     TRISD = 0x00;
  3905     0C4D  0140               	movlb	0	; select bank0
  3906     0C4E  0195               	clrf	21	;volatile
  3907     0C4F                     l5373:
  3908                           
  3909                           ;main.c: 1392:     PORTD = 0x00;
  3910     0C4F  018F               	clrf	15	;volatile
  3911     0C50                     l5375:
  3912                           
  3913                           ;main.c: 1393:     TRISE = 0x00;
  3914     0C50  0196               	clrf	22	;volatile
  3915     0C51                     l5377:
  3916                           
  3917                           ;main.c: 1394:     TRISB = 0x00;
  3918     0C51  0193               	clrf	19	;volatile
  3919     0C52                     l5379:
  3920                           
  3921                           ;main.c: 1395:     ADCON1 = 0x0F;
  3922     0C52  300F               	movlw	15
  3923     0C53  0141               	movlb	1	; select bank1
  3924     0C54  009E               	movwf	30	;volatile
  3925     0C55                     l5381:
  3926                           
  3927                           ;main.c: 1398:     TRISDbits.TRISD6 = 0;
  3928     0C55  0140               	movlb	0	; select bank0
  3929     0C56  1315               	bcf	21,6	;volatile
  3930     0C57                     l5383:
  3931                           
  3932                           ;main.c: 1399:     LATDbits.LATD6 = 0;
  3933     0C57  131B               	bcf	27,6	;volatile
  3934     0C58                     l5385:
  3935                           
  3936                           ;main.c: 1401:     TRISDbits.TRISD5 = 0;
  3937     0C58  1295               	bcf	21,5	;volatile
  3938     0C59                     l5387:
  3939                           
  3940                           ;main.c: 1402:     LATDbits.LATD5=0;
  3941     0C59  129B               	bcf	27,5	;volatile
  3942     0C5A                     l5389:
  3943                           
  3944                           ;main.c: 1404:     PORTEbits.RE1 = 0;
  3945     0C5A  1090               	bcf	16,1	;volatile
  3946     0C5B                     l5391:
  3947                           
  3948                           ;main.c: 1405:     RE1 = 1;
  3949     0C5B  1490               	bsf	16,1	;volatile
  3950     0C5C                     l5393:
  3951                           
  3952                           ;main.c: 1407:     PORTBbits.RB7 = 0;
  3953     0C5C  138D               	bcf	13,7	;volatile
  3954     0C5D                     l5395:
  3955                           
  3956                           ;main.c: 1408:     RB7 = 1;
  3957     0C5D  178D               	bsf	13,7	;volatile
  3958     0C5E                     l5397:
  3959                           
  3960                           ;main.c: 1410:     PORTAbits.RA4 = 1;
  3961     0C5E  160C               	bsf	12,4	;volatile
  3962     0C5F                     l5399:
  3963                           
  3964                           ;main.c: 1411:     ANSELAbits.ANSA4= 0;
  3965     0C5F  017E               	movlb	62	; select bank62
  3966     0C60  1238               	bcf	56,4	;volatile
  3967     0C61                     l5401:
  3968                           
  3969                           ;main.c: 1412:     WPUAbits.WPUA4 = 1;
  3970     0C61  1639               	bsf	57,4	;volatile
  3971     0C62                     l5403:
  3972                           
  3973                           ;main.c: 1414:     TRISA3=1;
  3974     0C62  0140               	movlb	0	; select bank0
  3975     0C63  1592               	bsf	18,3	;volatile
  3976     0C64                     l5405:
  3977                           
  3978                           ;main.c: 1415:     PORTAbits.RA3 = 1;
  3979     0C64  158C               	bsf	12,3	;volatile
  3980     0C65                     l5407:
  3981                           
  3982                           ;main.c: 1416:     ANSELAbits.ANSA3 = 0;
  3983     0C65  017E               	movlb	62	; select bank62
  3984     0C66  11B8               	bcf	56,3	;volatile
  3985     0C67                     l5409:
  3986                           
  3987                           ;main.c: 1417:     WPUAbits.WPUA3 = 1;
  3988     0C67  15B9               	bsf	57,3	;volatile
  3989     0C68                     l5411:
  3990                           
  3991                           ;main.c: 1419:     TRISA5 = 1;
  3992     0C68  0140               	movlb	0	; select bank0
  3993     0C69  1692               	bsf	18,5	;volatile
  3994     0C6A                     l5413:
  3995                           
  3996                           ;main.c: 1420:     ANSELAbits.ANSA5 = 0;
  3997     0C6A  017E               	movlb	62	; select bank62
  3998     0C6B  12B8               	bcf	56,5	;volatile
  3999     0C6C                     l5415:
  4000                           
  4001                           ;main.c: 1421:     WPUAbits.WPUA5 = 1;
  4002     0C6C  16B9               	bsf	57,5	;volatile
  4003     0C6D                     l5417:
  4004                           
  4005                           ;main.c: 1422:     PORTAbits.RA5 = 1;
  4006     0C6D  0140               	movlb	0	; select bank0
  4007     0C6E  168C               	bsf	12,5	;volatile
  4008     0C6F                     l5419:
  4009                           
  4010                           ;main.c: 1425:     PORTAbits.RA1 = 1;
  4011     0C6F  148C               	bsf	12,1	;volatile
  4012     0C70                     l5421:
  4013                           
  4014                           ;main.c: 1426:     ANSELAbits.ANSA1 = 0;
  4015     0C70  017E               	movlb	62	; select bank62
  4016     0C71  10B8               	bcf	56,1	;volatile
  4017     0C72                     l5423:
  4018                           
  4019                           ;main.c: 1427:     WPUAbits.WPUA1 = 1;
  4020     0C72  14B9               	bsf	57,1	;volatile
  4021     0C73                     l5425:
  4022                           
  4023                           ;main.c: 1430:     TRISCbits.TRISC6 = 1;
  4024     0C73  0140               	movlb	0	; select bank0
  4025     0C74  1714               	bsf	20,6	;volatile
  4026     0C75                     l5427:
  4027                           
  4028                           ;main.c: 1431:     TRISCbits.TRISC7 = 0;
  4029     0C75  1394               	bcf	20,7	;volatile
  4030     0C76                     l5429:
  4031                           
  4032                           ;main.c: 1433:     TRISAbits.TRISA6 = 1;
  4033     0C76  1712               	bsf	18,6	;volatile
  4034     0C77                     l5431:
  4035                           
  4036                           ;main.c: 1434:     PORTAbits.RA6 = 1;
  4037     0C77  170C               	bsf	12,6	;volatile
  4038     0C78                     l5433:
  4039                           
  4040                           ;main.c: 1435:     ANSELAbits.ANSA6 = 0;
  4041     0C78  017E               	movlb	62	; select bank62
  4042     0C79  1338               	bcf	56,6	;volatile
  4043     0C7A                     l5435:
  4044                           
  4045                           ;main.c: 1436:     WPUAbits.WPUA6 = 0;
  4046     0C7A  1339               	bcf	57,6	;volatile
  4047     0C7B                     l5437:
  4048                           
  4049                           ;main.c: 1439:     TRISEbits.TRISE2 = 1;
  4050     0C7B  0140               	movlb	0	; select bank0
  4051     0C7C  1516               	bsf	22,2	;volatile
  4052     0C7D                     l5439:
  4053                           
  4054                           ;main.c: 1441:     ANSELEbits.ANSE2 = 0;
  4055     0C7D  017E               	movlb	62	; select bank62
  4056     0C7E  1164               	bcf	100,2	;volatile
  4057     0C7F                     l5441:
  4058                           
  4059                           ;main.c: 1442:     WPUEbits.WPUE2 = 0;
  4060     0C7F  1165               	bcf	101,2	;volatile
  4061     0C80                     l5443:
  4062                           
  4063                           ;main.c: 1445:     TRISCbits.TRISC2 = 1;
  4064     0C80  0140               	movlb	0	; select bank0
  4065     0C81  1514               	bsf	20,2	;volatile
  4066     0C82                     l5445:
  4067                           
  4068                           ;main.c: 1447:     ANSELCbits.ANSC2 = 0;
  4069     0C82  017E               	movlb	62	; select bank62
  4070     0C83  114E               	bcf	78,2	;volatile
  4071     0C84                     l5447:
  4072                           
  4073                           ;main.c: 1448:     WPUCbits.WPUC2 = 0;
  4074     0C84  114F               	bcf	79,2	;volatile
  4075     0C85                     l5449:
  4076                           
  4077                           ;main.c: 1451:     TRISCbits.TRISC0 = 1;
  4078     0C85  0140               	movlb	0	; select bank0
  4079     0C86  1414               	bsf	20,0	;volatile
  4080     0C87                     l5451:
  4081                           
  4082                           ;main.c: 1453:     ANSELCbits.ANSC0 = 0;
  4083     0C87  017E               	movlb	62	; select bank62
  4084     0C88  104E               	bcf	78,0	;volatile
  4085     0C89                     l5453:
  4086                           
  4087                           ;main.c: 1454:     WPUCbits.WPUC0 = 0;
  4088     0C89  104F               	bcf	79,0	;volatile
  4089     0C8A                     l5455:
  4090                           
  4091                           ;main.c: 1457:     TRISCbits.TRISC1 = 1;
  4092     0C8A  0140               	movlb	0	; select bank0
  4093     0C8B  1494               	bsf	20,1	;volatile
  4094     0C8C                     l5457:
  4095                           
  4096                           ;main.c: 1458:     PORTCbits.RC1 = 1;
  4097     0C8C  148E               	bsf	14,1	;volatile
  4098     0C8D                     l5459:
  4099                           
  4100                           ;main.c: 1459:     ANSELCbits.ANSC1 = 0;
  4101     0C8D  017E               	movlb	62	; select bank62
  4102     0C8E  10CE               	bcf	78,1	;volatile
  4103     0C8F                     l5461:
  4104                           
  4105                           ;main.c: 1460:     WPUCbits.WPUC1 = 0;
  4106     0C8F  10CF               	bcf	79,1	;volatile
  4107     0C90                     l5463:
  4108                           
  4109                           ;main.c: 1463:     TRISBbits.TRISB0 = 1;
  4110     0C90  0140               	movlb	0	; select bank0
  4111     0C91  1413               	bsf	19,0	;volatile
  4112     0C92                     l5465:
  4113                           
  4114                           ;main.c: 1464:     PORTBbits.RB0 = 1;
  4115     0C92  140D               	bsf	13,0	;volatile
  4116     0C93                     l5467:
  4117                           
  4118                           ;main.c: 1465:     ANSELBbits.ANSB0 = 0;
  4119     0C93  017E               	movlb	62	; select bank62
  4120     0C94  1043               	bcf	67,0	;volatile
  4121     0C95                     l5469:
  4122                           
  4123                           ;main.c: 1466:     WPUBbits.WPUB0 = 1;
  4124     0C95  1444               	bsf	68,0	;volatile
  4125     0C96                     l5471:
  4126                           
  4127                           ;main.c: 1469:     TRISCbits.TRISC4 = 0;
  4128     0C96  0140               	movlb	0	; select bank0
  4129     0C97  1214               	bcf	20,4	;volatile
  4130     0C98                     l5473:
  4131                           
  4132                           ;main.c: 1470:     PORTCbits.RC4 = 0;
  4133     0C98  120E               	bcf	14,4	;volatile
  4134     0C99                     l5475:
  4135                           
  4136                           ;main.c: 1473:     LATCbits.LATC4 = 1;
  4137     0C99  161A               	bsf	26,4	;volatile
  4138     0C9A                     l5477:
  4139                           
  4140                           ;main.c: 1500:     LATEbits.LATE1 = 0;
  4141     0C9A  109C               	bcf	28,1	;volatile
  4142     0C9B                     l5479:
  4143                           
  4144                           ;main.c: 1501:     LATBbits.LATB1 = 0;
  4145     0C9B  1099               	bcf	25,1	;volatile
  4146     0C9C                     l5481:
  4147                           
  4148                           ;main.c: 1502:     LATBbits.LATB2 = 0;
  4149     0C9C  1119               	bcf	25,2	;volatile
  4150     0C9D                     l5483:
  4151                           
  4152                           ;main.c: 1503:     LATBbits.LATB3 = 0;
  4153     0C9D  1199               	bcf	25,3	;volatile
  4154     0C9E                     l5485:
  4155                           
  4156                           ;main.c: 1504:     LATBbits.LATB4 = 0;
  4157     0C9E  1219               	bcf	25,4	;volatile
  4158                           
  4159                           ;main.c: 1506:     setup_timer0();
  4160     0C9F  3197  2761  318C   	fcall	_setup_timer0
  4161                           
  4162                           ;main.c: 1507:     ADC_Init();
  4163     0CA2  3197  274D  318C   	fcall	_ADC_Init
  4164     0CA5                     l1023:	
  4165                           ;main.c: 1511:     while (1) {
  4166                           
  4167     0CA5                     l1024:	
  4168                           ;main.c: 1516:     }
  4169                           
  4170     0CA5  2CA5               	goto	l1023
  4171     0CA6  3183  2BDF         	ljmp	start
  4172     0CA8                     __end_of_main:
  4173                           
  4174                           	psect	text1
  4175     1761                     __ptext1:	
  4176 ;; *************** function _setup_timer0 *****************
  4177 ;; Defined at:
  4178 ;;		line 253 in file "main.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;		None
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1    wreg      void 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 10
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_main
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206     1761                     _setup_timer0:	
  4207                           ;psect for function _setup_timer0
  4208                           
  4209     1761                     l4867:	
  4210                           ;incstack = 0
  4211                           ; Regs used in _setup_timer0: [wreg+status,2+status,0]
  4212                           
  4213                           
  4214                           ;main.c: 255:     T0CON0bits.T016BIT = 0;
  4215     1761  014B               	movlb	11	; select bank11
  4216     1762  121E               	bcf	30,4	;volatile
  4217     1763                     l4869:
  4218                           
  4219                           ;main.c: 256:     T0CON0bits.T0OUTPS = 0b0000;
  4220     1763  30F0               	movlw	-16
  4221     1764  059E               	andwf	30,f	;volatile
  4222                           
  4223                           ;main.c: 257:     T0CON1bits.T0CS = 0b010;
  4224     1765  081F               	movf	31,w	;volatile
  4225     1766  391F               	andlw	-225
  4226     1767  3840               	iorlw	64
  4227     1768  009F               	movwf	31	;volatile
  4228                           
  4229                           ;main.c: 258:     T0CON1bits.T0CKPS = 0b0100;
  4230     1769  081F               	movf	31,w	;volatile
  4231     176A  39F0               	andlw	-16
  4232     176B  3804               	iorlw	4
  4233     176C  009F               	movwf	31	;volatile
  4234     176D                     l4871:
  4235                           
  4236                           ;main.c: 259:     T0CON1bits.T0ASYNC = 0b0;
  4237     176D  121F               	bcf	31,4	;volatile
  4238     176E                     l4873:
  4239                           
  4240                           ;main.c: 260:     TMR0L = 6;
  4241     176E  3006               	movlw	6
  4242     176F  009C               	movwf	28	;volatile
  4243     1770                     l4875:
  4244                           
  4245                           ;main.c: 261:     T0CON0bits.T0EN = 1;
  4246     1770  179E               	bsf	30,7	;volatile
  4247     1771                     l4877:
  4248                           
  4249                           ;main.c: 264:     PIR0bits.TMR0IF = 0;
  4250     1771  014E               	movlb	14	; select bank14
  4251     1772  128C               	bcf	12,5	;volatile
  4252     1773                     l4879:
  4253                           
  4254                           ;main.c: 265:     PIE0bits.TMR0IE = 1;
  4255     1773  1696               	bsf	22,5	;volatile
  4256     1774                     l4881:
  4257                           
  4258                           ;main.c: 266:     INTCONbits.GIE = 1;
  4259     1774  178B               	bsf	11,7	;volatile
  4260     1775                     l4883:
  4261                           
  4262                           ;main.c: 267:     INTCONbits.PEIE = 1;
  4263     1775  170B               	bsf	11,6	;volatile
  4264     1776                     l745:
  4265     1776  0008               	return
  4266     1777                     __end_of_setup_timer0:
  4267                           
  4268                           	psect	text2
  4269     173D                     __ptext2:	
  4270 ;; *************** function _SYSTEM_Initialize *****************
  4271 ;; Defined at:
  4272 ;;		line 39 in file "mcc_generated_files/system/src/system.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0, pclath, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 12
  4293 ;; This function calls:
  4294 ;;		_CLOCK_Initialize
  4295 ;;		_EUSART1_Initialize
  4296 ;;		_INTERRUPT_Initialize
  4297 ;;		_NVM_Initialize
  4298 ;;		_PIN_MANAGER_Initialize
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304     173D                     _SYSTEM_Initialize:	
  4305                           ;psect for function _SYSTEM_Initialize
  4306                           
  4307     173D                     l4789:	
  4308                           ;incstack = 0
  4309                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4310                           
  4311                           
  4312                           ;mcc_generated_files/system/src/system.c: 41:     CLOCK_Initialize();
  4313     173D  3197  2702  3197   	fcall	_CLOCK_Initialize
  4314                           
  4315                           ;mcc_generated_files/system/src/system.c: 42:     PIN_MANAGER_Initialize();
  4316     1740  3189  2198  3197   	fcall	_PIN_MANAGER_Initialize
  4317     1743                     l4791:
  4318                           
  4319                           ;mcc_generated_files/system/src/system.c: 43:     EUSART1_Initialize();
  4320     1743  3189  2128  3197   	fcall	_EUSART1_Initialize
  4321     1746                     l4793:
  4322                           
  4323                           ;mcc_generated_files/system/src/system.c: 44:     NVM_Initialize();
  4324     1746  3188  2000  3197   	fcall	_NVM_Initialize
  4325                           
  4326                           ;mcc_generated_files/system/src/system.c: 45:     INTERRUPT_Initialize();
  4327     1749  3197  270B  3197   	fcall	_INTERRUPT_Initialize
  4328     174C                     l106:
  4329     174C  0008               	return
  4330     174D                     __end_of_SYSTEM_Initialize:
  4331                           
  4332                           	psect	text3
  4333     0998                     __ptext3:	
  4334 ;; *************** function _PIN_MANAGER_Initialize *****************
  4335 ;; Defined at:
  4336 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;		None
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		status,2
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4354 ;;Total ram usage:        0 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 10
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_SYSTEM_Initialize
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364     0998                     _PIN_MANAGER_Initialize:	
  4365                           ;psect for function _PIN_MANAGER_Initialize
  4366                           
  4367     0998                     l4565:	
  4368                           ;incstack = 0
  4369                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  4370                           
  4371                           
  4372                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  4373     0998  0140               	movlb	0	; select bank0
  4374     0999  0198               	clrf	24	;volatile
  4375                           
  4376                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  4377     099A  0199               	clrf	25	;volatile
  4378                           
  4379                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  4380     099B  019A               	clrf	26	;volatile
  4381                           
  4382                           ;mcc_generated_files/system/src/pins.c: 46:     LATD = 0x0;
  4383     099C  019B               	clrf	27	;volatile
  4384                           
  4385                           ;mcc_generated_files/system/src/pins.c: 47:     LATE = 0x0;
  4386     099D  019C               	clrf	28	;volatile
  4387     099E                     l4567:
  4388                           
  4389                           ;mcc_generated_files/system/src/pins.c: 52:     TRISA = 0xFF;
  4390     099E  30FF               	movlw	255
  4391     099F  0092               	movwf	18	;volatile
  4392     09A0                     l4569:
  4393                           
  4394                           ;mcc_generated_files/system/src/pins.c: 53:     TRISB = 0xFF;
  4395     09A0  30FF               	movlw	255
  4396     09A1  0093               	movwf	19	;volatile
  4397     09A2                     l4571:
  4398                           
  4399                           ;mcc_generated_files/system/src/pins.c: 54:     TRISC = 0x7F;
  4400     09A2  307F               	movlw	127
  4401     09A3  0094               	movwf	20	;volatile
  4402     09A4                     l4573:
  4403                           
  4404                           ;mcc_generated_files/system/src/pins.c: 55:     TRISD = 0xFF;
  4405     09A4  30FF               	movlw	255
  4406     09A5  0095               	movwf	21	;volatile
  4407     09A6                     l4575:
  4408                           
  4409                           ;mcc_generated_files/system/src/pins.c: 56:     TRISE = 0xF;
  4410     09A6  300F               	movlw	15
  4411     09A7  0096               	movwf	22	;volatile
  4412     09A8                     l4577:
  4413                           
  4414                           ;mcc_generated_files/system/src/pins.c: 61:     ANSELA = 0xFF;
  4415     09A8  30FF               	movlw	255
  4416     09A9  017E               	movlb	62	; select bank62
  4417     09AA  00B8               	movwf	56	;volatile
  4418     09AB                     l4579:
  4419                           
  4420                           ;mcc_generated_files/system/src/pins.c: 62:     ANSELB = 0xFF;
  4421     09AB  30FF               	movlw	255
  4422     09AC  00C3               	movwf	67	;volatile
  4423     09AD                     l4581:
  4424                           
  4425                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELC = 0x3F;
  4426     09AD  303F               	movlw	63
  4427     09AE  00CE               	movwf	78	;volatile
  4428     09AF                     l4583:
  4429                           
  4430                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELD = 0xFF;
  4431     09AF  30FF               	movlw	255
  4432     09B0  00D9               	movwf	89	;volatile
  4433     09B1                     l4585:
  4434                           
  4435                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELE = 0x7;
  4436     09B1  3007               	movlw	7
  4437     09B2  00E4               	movwf	100	;volatile
  4438                           
  4439                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  4440     09B3  01B9               	clrf	57	;volatile
  4441                           
  4442                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  4443     09B4  01C4               	clrf	68	;volatile
  4444                           
  4445                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  4446     09B5  01CF               	clrf	79	;volatile
  4447                           
  4448                           ;mcc_generated_files/system/src/pins.c: 73:     WPUD = 0x0;
  4449     09B6  01DA               	clrf	90	;volatile
  4450                           
  4451                           ;mcc_generated_files/system/src/pins.c: 74:     WPUE = 0x0;
  4452     09B7  01E5               	clrf	101	;volatile
  4453                           
  4454                           ;mcc_generated_files/system/src/pins.c: 80:     ODCONA = 0x0;
  4455     09B8  01BA               	clrf	58	;volatile
  4456                           
  4457                           ;mcc_generated_files/system/src/pins.c: 81:     ODCONB = 0x0;
  4458     09B9  01C5               	clrf	69	;volatile
  4459                           
  4460                           ;mcc_generated_files/system/src/pins.c: 82:     ODCONC = 0x0;
  4461     09BA  01D0               	clrf	80	;volatile
  4462                           
  4463                           ;mcc_generated_files/system/src/pins.c: 83:     ODCOND = 0x0;
  4464     09BB  01DB               	clrf	91	;volatile
  4465                           
  4466                           ;mcc_generated_files/system/src/pins.c: 84:     ODCONE = 0x0;
  4467     09BC  01E6               	clrf	102	;volatile
  4468     09BD                     l4587:
  4469                           
  4470                           ;mcc_generated_files/system/src/pins.c: 88:     SLRCONA = 0xFF;
  4471     09BD  30FF               	movlw	255
  4472     09BE  00BB               	movwf	59	;volatile
  4473     09BF                     l4589:
  4474                           
  4475                           ;mcc_generated_files/system/src/pins.c: 89:     SLRCONB = 0xFF;
  4476     09BF  30FF               	movlw	255
  4477     09C0  00C6               	movwf	70	;volatile
  4478     09C1                     l4591:
  4479                           
  4480                           ;mcc_generated_files/system/src/pins.c: 90:     SLRCONC = 0xFF;
  4481     09C1  30FF               	movlw	255
  4482     09C2  00D1               	movwf	81	;volatile
  4483     09C3                     l4593:
  4484                           
  4485                           ;mcc_generated_files/system/src/pins.c: 91:     SLRCOND = 0xFF;
  4486     09C3  30FF               	movlw	255
  4487     09C4  00DC               	movwf	92	;volatile
  4488     09C5                     l4595:
  4489                           
  4490                           ;mcc_generated_files/system/src/pins.c: 92:     SLRCONE = 0x7;
  4491     09C5  3007               	movlw	7
  4492     09C6  00E7               	movwf	103	;volatile
  4493     09C7                     l4597:
  4494                           
  4495                           ;mcc_generated_files/system/src/pins.c: 96:     INLVLA = 0xFF;
  4496     09C7  30FF               	movlw	255
  4497     09C8  00BC               	movwf	60	;volatile
  4498     09C9                     l4599:
  4499                           
  4500                           ;mcc_generated_files/system/src/pins.c: 97:     INLVLB = 0xFF;
  4501     09C9  30FF               	movlw	255
  4502     09CA  00C7               	movwf	71	;volatile
  4503     09CB                     l4601:
  4504                           
  4505                           ;mcc_generated_files/system/src/pins.c: 98:     INLVLC = 0xFF;
  4506     09CB  30FF               	movlw	255
  4507     09CC  00D2               	movwf	82	;volatile
  4508     09CD                     l4603:
  4509                           
  4510                           ;mcc_generated_files/system/src/pins.c: 99:     INLVLD = 0xFF;
  4511     09CD  30FF               	movlw	255
  4512     09CE  00DD               	movwf	93	;volatile
  4513     09CF                     l4605:
  4514                           
  4515                           ;mcc_generated_files/system/src/pins.c: 100:     INLVLE = 0xF;
  4516     09CF  300F               	movlw	15
  4517     09D0  00E8               	movwf	104	;volatile
  4518     09D1                     l4607:
  4519                           
  4520                           ;mcc_generated_files/system/src/pins.c: 105:     RX1DTPPS = 0x16;
  4521     09D1  3016               	movlw	22
  4522     09D2  017D               	movlb	61	; select bank61
  4523     09D3  00CB               	movwf	75	;volatile
  4524     09D4                     l4609:
  4525                           
  4526                           ;mcc_generated_files/system/src/pins.c: 106:     RC7PPS = 0x0F;
  4527     09D4  300F               	movlw	15
  4528     09D5  017E               	movlb	62	; select bank62
  4529     09D6  00A7               	movwf	39	;volatile
  4530                           
  4531                           ;mcc_generated_files/system/src/pins.c: 115:     IOCAP = 0x0;
  4532     09D7  01BD               	clrf	61	;volatile
  4533                           
  4534                           ;mcc_generated_files/system/src/pins.c: 116:     IOCAN = 0x0;
  4535     09D8  01BE               	clrf	62	;volatile
  4536                           
  4537                           ;mcc_generated_files/system/src/pins.c: 117:     IOCAF = 0x0;
  4538     09D9  01BF               	clrf	63	;volatile
  4539                           
  4540                           ;mcc_generated_files/system/src/pins.c: 118:     IOCBP = 0x0;
  4541     09DA  01C8               	clrf	72	;volatile
  4542                           
  4543                           ;mcc_generated_files/system/src/pins.c: 119:     IOCBN = 0x0;
  4544     09DB  01C9               	clrf	73	;volatile
  4545                           
  4546                           ;mcc_generated_files/system/src/pins.c: 120:     IOCBF = 0x0;
  4547     09DC  01CA               	clrf	74	;volatile
  4548                           
  4549                           ;mcc_generated_files/system/src/pins.c: 121:     IOCCP = 0x0;
  4550     09DD  01D3               	clrf	83	;volatile
  4551                           
  4552                           ;mcc_generated_files/system/src/pins.c: 122:     IOCCN = 0x0;
  4553     09DE  01D4               	clrf	84	;volatile
  4554                           
  4555                           ;mcc_generated_files/system/src/pins.c: 123:     IOCCF = 0x0;
  4556     09DF  01D5               	clrf	85	;volatile
  4557                           
  4558                           ;mcc_generated_files/system/src/pins.c: 124:     IOCEP = 0x0;
  4559     09E0  01E9               	clrf	105	;volatile
  4560                           
  4561                           ;mcc_generated_files/system/src/pins.c: 125:     IOCEN = 0x0;
  4562     09E1  01EA               	clrf	106	;volatile
  4563                           
  4564                           ;mcc_generated_files/system/src/pins.c: 126:     IOCEF = 0x0;
  4565     09E2  01EB               	clrf	107	;volatile
  4566     09E3                     l246:
  4567     09E3  0008               	return
  4568     09E4                     __end_of_PIN_MANAGER_Initialize:
  4569                           
  4570                           	psect	text4
  4571     0800                     __ptext4:	
  4572 ;; *************** function _NVM_Initialize *****************
  4573 ;; Defined at:
  4574 ;;		line 45 in file "mcc_generated_files/nvm/src/nvm.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;		None
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;		None
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  1    wreg      void 
  4581 ;; Registers used:
  4582 ;;		status,2, status,0, pclath, cstack
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4592 ;;Total ram usage:        0 bytes
  4593 ;; Hardware stack levels used: 1
  4594 ;; Hardware stack levels required when called: 11
  4595 ;; This function calls:
  4596 ;;		_NVM_StatusClear
  4597 ;; This function is called by:
  4598 ;;		_SYSTEM_Initialize
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602     0800                     _NVM_Initialize:	
  4603                           ;psect for function _NVM_Initialize
  4604                           
  4605     0800                     l4553:	
  4606                           ;incstack = 0
  4607                           ; Regs used in _NVM_Initialize: [status,2+status,0+pclath+cstack]
  4608                           
  4609                           
  4610                           ;mcc_generated_files/nvm/src/nvm.c: 47:     NVM_StatusClear();
  4611     0800  3196  26E1  3188   	fcall	_NVM_StatusClear
  4612     0803                     l4555:
  4613                           
  4614                           ;mcc_generated_files/nvm/src/nvm.c: 49:     PIR7bits.NVMIF = 0;
  4615     0803  014E               	movlb	14	; select bank14
  4616     0804  1293               	bcf	19,5	;volatile
  4617     0805                     l4557:
  4618                           
  4619                           ;mcc_generated_files/nvm/src/nvm.c: 51:     PIE7bits.NVMIE = 1;
  4620     0805  169D               	bsf	29,5	;volatile
  4621     0806                     l29:
  4622     0806  0008               	return
  4623     0807                     __end_of_NVM_Initialize:
  4624                           
  4625                           	psect	text5
  4626     16E1                     __ptext5:	
  4627 ;; *************** function _NVM_StatusClear *****************
  4628 ;; Defined at:
  4629 ;;		line 71 in file "mcc_generated_files/nvm/src/nvm.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;		None
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		None
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4647 ;;Total ram usage:        0 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 10
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_NVM_Initialize
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657     16E1                     _NVM_StatusClear:	
  4658                           ;psect for function _NVM_StatusClear
  4659                           
  4660     16E1                     l3909:	
  4661                           ;incstack = 0
  4662                           ; Regs used in _NVM_StatusClear: []
  4663                           
  4664                           
  4665                           ;mcc_generated_files/nvm/src/nvm.c: 73:     NVMCON1bits.WRERR = 0;
  4666     16E1  0150               	movlb	16	; select bank16
  4667     16E2  119E               	bcf	30,3	;volsfr
  4668     16E3                     l42:
  4669     16E3  0008               	return
  4670     16E4                     __end_of_NVM_StatusClear:
  4671                           
  4672                           	psect	text6
  4673     170B                     __ptext6:	
  4674 ;; *************** function _INTERRUPT_Initialize *****************
  4675 ;; Defined at:
  4676 ;;		line 40 in file "mcc_generated_files/system/src/interrupt.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;		None
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;		None
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0, pclath, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4694 ;;Total ram usage:        0 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 11
  4697 ;; This function calls:
  4698 ;;		_INT_SetInterruptHandler
  4699 ;; This function is called by:
  4700 ;;		_SYSTEM_Initialize
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704     170B                     _INTERRUPT_Initialize:	
  4705                           ;psect for function _INTERRUPT_Initialize
  4706                           
  4707     170B                     l4647:	
  4708                           ;incstack = 0
  4709                           ; Regs used in _INTERRUPT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4710                           
  4711                           
  4712                           ;mcc_generated_files/system/src/interrupt.c: 43:     (PIR0bits.INTF = 0);
  4713     170B  014E               	movlb	14	; select bank14
  4714     170C  100C               	bcf	12,0	;volatile
  4715     170D                     l4649:
  4716                           
  4717                           ;mcc_generated_files/system/src/interrupt.c: 45:     INT_SetInterruptHandler(INT_Default
      +                          InterruptHandler);
  4718     170D  3000               	movlw	0
  4719     170E  0141               	movlb	1	; select bank1
  4720     170F  00ED               	movwf	INT_SetInterruptHandler@InterruptHandler^(0+128)
  4721     1710  3000               	movlw	0
  4722     1711  00EE               	movwf	(INT_SetInterruptHandler@InterruptHandler^(0+128)+1)
  4723     1712  3196  26EB  3197   	fcall	_INT_SetInterruptHandler
  4724     1715                     l119:
  4725     1715  0008               	return
  4726     1716                     __end_of_INTERRUPT_Initialize:
  4727                           
  4728                           	psect	text7
  4729     16EB                     __ptext7:	
  4730 ;; *************** function _INT_SetInterruptHandler *****************
  4731 ;; Defined at:
  4732 ;;		line 103 in file "mcc_generated_files/system/src/interrupt.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
  4735 ;;		 -> INT_DefaultInterruptHandler(1), 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      void 
  4740 ;; Registers used:
  4741 ;;		wreg
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4747 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4750 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4751 ;;Total ram usage:        2 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; Hardware stack levels required when called: 10
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_INTERRUPT_Initialize
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761     16EB                     _INT_SetInterruptHandler:	
  4762                           ;psect for function _INT_SetInterruptHandler
  4763                           
  4764     16EB                     l3911:	
  4765                           ;incstack = 0
  4766                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  4767                           
  4768                           
  4769                           ;mcc_generated_files/system/src/interrupt.c: 104:     INT_InterruptHandler = InterruptHa
      +                          ndler;
  4770     16EB  0141               	movlb	1	; select bank1
  4771     16EC  086E               	movf	(INT_SetInterruptHandler@InterruptHandler+1)^(0+128),w
  4772     16ED  00D1               	movwf	(_INT_InterruptHandler+1)^(0+128)
  4773     16EE  086D               	movf	INT_SetInterruptHandler@InterruptHandler^(0+128),w
  4774     16EF  00D0               	movwf	_INT_InterruptHandler^(0+128)
  4775     16F0                     l129:
  4776     16F0  0008               	return
  4777     16F1                     __end_of_INT_SetInterruptHandler:
  4778                           
  4779                           	psect	text8
  4780     0928                     __ptext8:	
  4781 ;; *************** function _EUSART1_Initialize *****************
  4782 ;; Defined at:
  4783 ;;		line 120 in file "mcc_generated_files/uart/src/eusart1.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0, pclath, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 11
  4804 ;; This function calls:
  4805 ;;		_EUSART1_FramingErrorCallbackRegister
  4806 ;;		_EUSART1_OverrunErrorCallbackRegister
  4807 ;; This function is called by:
  4808 ;;		_SYSTEM_Initialize
  4809 ;;		_main
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813     0928                     _EUSART1_Initialize:	
  4814                           ;psect for function _EUSART1_Initialize
  4815                           
  4816     0928                     l4611:	
  4817                           ;incstack = 0
  4818                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4819                           
  4820                           
  4821                           ;mcc_generated_files/uart/src/eusart1.c: 122:     PIE3bits.RC1IE = 0;
  4822     0928  014E               	movlb	14	; select bank14
  4823     0929  1299               	bcf	25,5	;volatile
  4824     092A                     l4613:
  4825                           
  4826                           ;mcc_generated_files/uart/src/eusart1.c: 123:      EUSART1_RxInterruptHandler = EUSART1_
      +                          ReceiveISR;
  4827     092A  30D7               	movlw	low _EUSART1_ReceiveISR
  4828     092B  0142               	movlb	2	; select bank2
  4829     092C  00EC               	movwf	_EUSART1_RxInterruptHandler^(0+256)
  4830     092D  300A               	movlw	high _EUSART1_ReceiveISR
  4831     092E  00ED               	movwf	(_EUSART1_RxInterruptHandler^(0+256)+1)
  4832     092F                     l4615:
  4833                           
  4834                           ;mcc_generated_files/uart/src/eusart1.c: 125:     PIE3bits.TX1IE = 0;
  4835     092F  014E               	movlb	14	; select bank14
  4836     0930  1219               	bcf	25,4	;volatile
  4837                           
  4838                           ;mcc_generated_files/uart/src/eusart1.c: 126:     EUSART1_TxInterruptHandler = EUSART1_T
      +                          ransmitISR;
  4839     0931  30A8               	movlw	low _EUSART1_TransmitISR
  4840     0932  0142               	movlb	2	; select bank2
  4841     0933  00EE               	movwf	_EUSART1_TxInterruptHandler^(0+256)
  4842     0934  3017               	movlw	high _EUSART1_TransmitISR
  4843     0935  00EF               	movwf	(_EUSART1_TxInterruptHandler^(0+256)+1)
  4844     0936                     l4617:
  4845                           
  4846                           ;mcc_generated_files/uart/src/eusart1.c: 131:     BAUD1CON = 0x48;
  4847     0936  3048               	movlw	72
  4848     0937  009F               	movwf	31	;volatile
  4849     0938                     l4619:
  4850                           
  4851                           ;mcc_generated_files/uart/src/eusart1.c: 133:     RC1STA = 0x90;
  4852     0938  3090               	movlw	144
  4853     0939  009D               	movwf	29	;volatile
  4854     093A                     l4621:
  4855                           
  4856                           ;mcc_generated_files/uart/src/eusart1.c: 135:     TX1STA = 0x26;
  4857     093A  3026               	movlw	38
  4858     093B  009E               	movwf	30	;volatile
  4859     093C                     l4623:
  4860                           
  4861                           ;mcc_generated_files/uart/src/eusart1.c: 137:     SP1BRGL = 0xA;
  4862     093C  300A               	movlw	10
  4863     093D  009B               	movwf	27	;volatile
  4864     093E                     l4625:
  4865                           
  4866                           ;mcc_generated_files/uart/src/eusart1.c: 139:     SP1BRGH = 0x1A;
  4867     093E  301A               	movlw	26
  4868     093F  009C               	movwf	28	;volatile
  4869     0940                     l4627:
  4870                           
  4871                           ;mcc_generated_files/uart/src/eusart1.c: 141:     EUSART1_FramingErrorCallbackRegister(E
      +                          USART1_DefaultFramingErrorCallback);
  4872     0940  3003               	movlw	low _EUSART1_DefaultFramingErrorCallback
  4873     0941  0141               	movlb	1	; select bank1
  4874     0942  00ED               	movwf	EUSART1_FramingErrorCallbackRegister@callbackHandler^(0+128)
  4875     0943  3000               	movlw	high _EUSART1_DefaultFramingErrorCallback
  4876     0944  00EE               	movwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler^(0+128)+1)
  4877     0945  3197  2716  3189   	fcall	_EUSART1_FramingErrorCallbackRegister
  4878     0948                     l4629:
  4879                           
  4880                           ;mcc_generated_files/uart/src/eusart1.c: 142:     EUSART1_OverrunErrorCallbackRegister(E
      +                          USART1_DefaultOverrunErrorCallback);
  4881     0948  30E7               	movlw	low _EUSART1_DefaultOverrunErrorCallback
  4882     0949  0141               	movlb	1	; select bank1
  4883     094A  00ED               	movwf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^(0+128)
  4884     094B  3016               	movlw	high _EUSART1_DefaultOverrunErrorCallback
  4885     094C  00EE               	movwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler^(0+128)+1)
  4886     094D  3197  2722  3189   	fcall	_EUSART1_OverrunErrorCallbackRegister
  4887     0950                     l4631:
  4888                           
  4889                           ;mcc_generated_files/uart/src/eusart1.c: 143:     eusart1RxLastError.status = 0;
  4890     0950  0141               	movlb	1	; select bank1
  4891     0951  01CE               	clrf	_eusart1RxLastError^(0+128)	;volatile
  4892     0952  01CF               	clrf	(_eusart1RxLastError+1)^(0+128)	;volatile
  4893     0953                     l4633:
  4894                           
  4895                           ;mcc_generated_files/uart/src/eusart1.c: 145:     eusart1TxHead = 0;
  4896     0953  0140               	movlb	0	; select bank0
  4897     0954  01E7               	clrf	_eusart1TxHead	;volatile
  4898     0955                     l4635:
  4899                           
  4900                           ;mcc_generated_files/uart/src/eusart1.c: 146:     eusart1TxTail = 0;
  4901     0955  01E6               	clrf	_eusart1TxTail	;volatile
  4902     0956                     l4637:
  4903                           
  4904                           ;mcc_generated_files/uart/src/eusart1.c: 147:     eusart1TxBufferRemaining = sizeof(eusa
      +                          rt1TxBuffer);
  4905     0956  3008               	movlw	8
  4906     0957  00E5               	movwf	_eusart1TxBufferRemaining	;volatile
  4907     0958                     l4639:
  4908                           
  4909                           ;mcc_generated_files/uart/src/eusart1.c: 149:     eusart1RxHead = 0;
  4910     0958  01E4               	clrf	_eusart1RxHead	;volatile
  4911     0959                     l4641:
  4912                           
  4913                           ;mcc_generated_files/uart/src/eusart1.c: 150:     eusart1RxTail = 0;
  4914     0959  01E3               	clrf	_eusart1RxTail	;volatile
  4915     095A                     l4643:
  4916                           
  4917                           ;mcc_generated_files/uart/src/eusart1.c: 151:     eusart1RxCount = 0;
  4918     095A  01E2               	clrf	_eusart1RxCount	;volatile
  4919     095B                     l4645:
  4920                           
  4921                           ;mcc_generated_files/uart/src/eusart1.c: 153:     PIE3bits.RC1IE = 1;
  4922     095B  014E               	movlb	14	; select bank14
  4923     095C  1699               	bsf	25,5	;volatile
  4924     095D                     l348:
  4925     095D  0008               	return
  4926     095E                     __end_of_EUSART1_Initialize:
  4927                           
  4928                           	psect	text9
  4929     1722                     __ptext9:	
  4930 ;; *************** function _EUSART1_OverrunErrorCallbackRegister *****************
  4931 ;; Defined at:
  4932 ;;		line 430 in file "mcc_generated_files/uart/src/eusart1.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
  4935 ;;		 -> EUSART1_DefaultOverrunErrorCallback(1), 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4947 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4950 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:        2 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 10
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_EUSART1_Initialize
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961     1722                     _EUSART1_OverrunErrorCallbackRegister:	
  4962                           ;psect for function _EUSART1_OverrunErrorCallbackRegister
  4963                           
  4964     1722                     l3917:	
  4965                           ;incstack = 0
  4966                           ; Regs used in _EUSART1_OverrunErrorCallbackRegister: [wreg+status,2+status,0]
  4967                           
  4968                           
  4969                           ;mcc_generated_files/uart/src/eusart1.c: 430: void EUSART1_OverrunErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 431: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 432:     if(((void*)0) != callbackHandler)
  4970     1722  0141               	movlb	1	; select bank1
  4971     1723  086D               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
  4972     1724  046E               	iorwf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
  4973     1725  1903               	btfsc	3,2
  4974     1726  2F28               	goto	u2691
  4975     1727  2F29               	goto	u2690
  4976     1728                     u2691:
  4977     1728  2F2D               	goto	l466
  4978     1729                     u2690:
  4979     1729                     l3919:
  4980                           
  4981                           ;mcc_generated_files/uart/src/eusart1.c: 433:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 434:         EUSART1_OverrunErrorHandler = callbackHandler;
  4982     1729  086E               	movf	(EUSART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+128),w
  4983     172A  00C7               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  4984     172B  086D               	movf	EUSART1_OverrunErrorCallbackRegister@callbackHandler^(0+128),w
  4985     172C  00C6               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  4986     172D                     l466:
  4987     172D  0008               	return
  4988     172E                     __end_of_EUSART1_OverrunErrorCallbackRegister:
  4989                           
  4990                           	psect	text10
  4991     1716                     __ptext10:	
  4992 ;; *************** function _EUSART1_FramingErrorCallbackRegister *****************
  4993 ;; Defined at:
  4994 ;;		line 422 in file "mcc_generated_files/uart/src/eusart1.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  callbackHand    2    0[BANK1 ] PTR FTN()void 
  4997 ;;		 -> EUSART1_DefaultFramingErrorCallback(1), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5009 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5012 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5013 ;;Total ram usage:        2 bytes
  5014 ;; Hardware stack levels used: 1
  5015 ;; Hardware stack levels required when called: 10
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_EUSART1_Initialize
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023     1716                     _EUSART1_FramingErrorCallbackRegister:	
  5024                           ;psect for function _EUSART1_FramingErrorCallbackRegister
  5025                           
  5026     1716                     l3913:	
  5027                           ;incstack = 0
  5028                           ; Regs used in _EUSART1_FramingErrorCallbackRegister: [wreg+status,2+status,0]
  5029                           
  5030                           
  5031                           ;mcc_generated_files/uart/src/eusart1.c: 422: void EUSART1_FramingErrorCallbackRegister(
      +                          void (* callbackHandler)(void));mcc_generated_files/uart/src/eusart1.c: 423: {;mcc_gener
      +                          ated_files/uart/src/eusart1.c: 424:     if(((void*)0) != callbackHandler)
  5032     1716  0141               	movlb	1	; select bank1
  5033     1717  086D               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler^(0+128),w
  5034     1718  046E               	iorwf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
  5035     1719  1903               	btfsc	3,2
  5036     171A  2F1C               	goto	u2681
  5037     171B  2F1D               	goto	u2680
  5038     171C                     u2681:
  5039     171C  2F21               	goto	l462
  5040     171D                     u2680:
  5041     171D                     l3915:
  5042                           
  5043                           ;mcc_generated_files/uart/src/eusart1.c: 425:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 426:         EUSART1_FramingErrorHandler = callbackHandler;
  5044     171D  086E               	movf	(EUSART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+128),w
  5045     171E  00C9               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  5046     171F  086D               	movf	EUSART1_FramingErrorCallbackRegister@callbackHandler^(0+128),w
  5047     1720  00C8               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  5048     1721                     l462:
  5049     1721  0008               	return
  5050     1722                     __end_of_EUSART1_FramingErrorCallbackRegister:
  5051                           
  5052                           	psect	text11
  5053     1702                     __ptext11:	
  5054 ;; *************** function _CLOCK_Initialize *****************
  5055 ;; Defined at:
  5056 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		status,2
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5074 ;;Total ram usage:        0 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; Hardware stack levels required when called: 10
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_SYSTEM_Initialize
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084     1702                     _CLOCK_Initialize:	
  5085                           ;psect for function _CLOCK_Initialize
  5086                           
  5087     1702                     l4559:	
  5088                           ;incstack = 0
  5089                           ; Regs used in _CLOCK_Initialize: [status,2]
  5090                           
  5091                           
  5092                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  5093     1702  3060               	movlw	96
  5094     1703  0151               	movlb	17	; select bank17
  5095     1704  008D               	movwf	13	;volatile
  5096     1705                     l4561:
  5097                           
  5098                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
  5099     1705  018F               	clrf	15	;volatile
  5100                           
  5101                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
  5102     1706  0191               	clrf	17	;volatile
  5103     1707                     l4563:
  5104                           
  5105                           ;mcc_generated_files/system/src/clock.c: 52:     OSCFRQ = (6 << 0x0);
  5106     1707  3006               	movlw	6
  5107     1708  0093               	movwf	19	;volatile
  5108                           
  5109                           ;mcc_generated_files/system/src/clock.c: 53:     OSCTUNE = (0 << 0x0);
  5110     1709  0192               	clrf	18	;volatile
  5111     170A                     l145:
  5112     170A  0008               	return
  5113     170B                     __end_of_CLOCK_Initialize:
  5114                           
  5115                           	psect	text12
  5116     174D                     __ptext12:	
  5117 ;; *************** function _ADC_Init *****************
  5118 ;; Defined at:
  5119 ;;		line 269 in file "main.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;		None
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;		None
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5135 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5136 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5137 ;;Total ram usage:        1 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 10
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_main
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           
  5147     174D                     _ADC_Init:	
  5148                           ;psect for function _ADC_Init
  5149                           
  5150     174D                     l4885:	
  5151                           ;incstack = 0
  5152                           ; Regs used in _ADC_Init: [wreg]
  5153                           
  5154                           
  5155                           ;main.c: 271:     TRISE0 = 1;
  5156     174D  0140               	movlb	0	; select bank0
  5157     174E  1416               	bsf	22,0	;volatile
  5158                           
  5159                           ;main.c: 274:     ANSELEbits.ANSE0 = 1;
  5160     174F  017E               	movlb	62	; select bank62
  5161     1750  1464               	bsf	100,0	;volatile
  5162                           
  5163                           ;main.c: 277:     ADCON0 = 0b10000000;
  5164     1751  3080               	movlw	128
  5165     1752  0141               	movlb	1	; select bank1
  5166     1753  009D               	movwf	29	;volatile
  5167                           
  5168                           ;main.c: 278:     ADCON1 = 0b10000000;
  5169     1754  3080               	movlw	128
  5170     1755  009E               	movwf	30	;volatile
  5171                           
  5172                           ;main.c: 281:     ADON = 1;
  5173     1756  141D               	bsf	29,0	;volatile
  5174     1757                     l4887:
  5175                           
  5176                           ;main.c: 283:     _delay((unsigned long)((2)*(16000000/4000.0)));
  5177     1757  300B               	movlw	11
  5178     1758  0141               	movlb	1	; select bank1
  5179     1759  00ED               	movwf	??_ADC_Init^(0+128)
  5180     175A  3062               	movlw	98
  5181     175B                     u4357:
  5182     175B  0B89               	decfsz	9,f
  5183     175C  2F5B               	goto	u4357
  5184     175D  0BED               	decfsz	??_ADC_Init^(0+128),f
  5185     175E  2F5B               	goto	u4357
  5186     175F  0000               	nop
  5187     1760                     l748:
  5188     1760  0008               	return
  5189     1761                     __end_of_ADC_Init:
  5190                           
  5191                           	psect	intentry
  5192     0004                     __pintentry:	
  5193 ;; *************** function _ISR *****************
  5194 ;; Defined at:
  5195 ;;		line 842 in file "main.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5211 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5212 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5213 ;;Total ram usage:        4 bytes
  5214 ;; Hardware stack levels used: 1
  5215 ;; Hardware stack levels required when called: 9
  5216 ;; This function calls:
  5217 ;;		NULL
  5218 ;;		_EUSART1_ReceiveISR
  5219 ;;		_EUSART1_TransmitISR
  5220 ;;		_NVM_ISR
  5221 ;;		___awdiv
  5222 ;;		___wmul
  5223 ;;		_updateMode
  5224 ;; This function is called by:
  5225 ;;		Interrupt level 1
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229     0004                     _ISR:
  5230                           
  5231                           ;incstack = 0
  5232     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5233                           
  5234                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5235     0005  3180               	pagesel	$
  5236     0006                     i1l5017:
  5237                           
  5238                           ;main.c: 844:     if (PIR0bits.TMR0IF) {
  5239     0006  014E               	movlb	14	; select bank14
  5240     0007  1E8C               	btfss	12,5	;volatile
  5241     0008  280A               	goto	u364_21
  5242     0009  280B               	goto	u364_20
  5243     000A                     u364_21:
  5244     000A  2BAE               	goto	i1l5297
  5245     000B                     u364_20:
  5246     000B                     i1l5019:
  5247                           
  5248                           ;main.c: 845:         PIR0bits.TMR0IF = 0;
  5249     000B  128C               	bcf	12,5	;volatile
  5250                           
  5251                           ;main.c: 846:         TMR0L = 6;
  5252     000C  3006               	movlw	6
  5253     000D  014B               	movlb	11	; select bank11
  5254     000E  009C               	movwf	28	;volatile
  5255                           
  5256                           ;main.c: 847:         T0CON0bits.T0EN = 1;
  5257     000F  179E               	bsf	30,7	;volatile
  5258     0010                     i1l5021:
  5259                           
  5260                           ;main.c: 849:         if (!ON_Delay_Flag && currentStage == STAGE_1) {
  5261     0010  0140               	movlb	0	; select bank0
  5262     0011  085F               	movf	_ON_Delay_Flag,w
  5263     0012  1D03               	btfss	3,2
  5264     0013  2815               	goto	u365_21
  5265     0014  2816               	goto	u365_20
  5266     0015                     u365_21:
  5267     0015  286E               	goto	i1l5041
  5268     0016                     u365_20:
  5269     0016                     i1l5023:
  5270     0016  035C               	decf	_currentStage,w
  5271     0017  1D03               	btfss	3,2
  5272     0018  281A               	goto	u366_21
  5273     0019  281B               	goto	u366_20
  5274     001A                     u366_21:
  5275     001A  286E               	goto	i1l5041
  5276     001B                     u366_20:
  5277     001B                     i1l5025:
  5278                           
  5279                           ;main.c: 850:             TMR_On_Delay++;
  5280     001B  3001               	movlw	1
  5281     001C  0141               	movlb	1	; select bank1
  5282     001D  07BA               	addwf	_TMR_On_Delay^(0+128),f
  5283     001E  3000               	movlw	0
  5284     001F  3DBB               	addwfc	(_TMR_On_Delay+1)^(0+128),f
  5285     0020                     i1l5027:
  5286                           
  5287                           ;main.c: 851:             if (TMR_On_Delay == (ON_Delay * 100)) {
  5288     0020  0140               	movlb	0	; select bank0
  5289     0021  086B               	movf	_ON_Delay+1,w
  5290     0022  00F1               	movwf	___wmul@multiplier+1
  5291     0023  086A               	movf	_ON_Delay,w
  5292     0024  00F0               	movwf	___wmul@multiplier
  5293     0025  3064               	movlw	100
  5294     0026  00F2               	movwf	___wmul@multiplicand
  5295     0027  3000               	movlw	0
  5296     0028  00F3               	movwf	___wmul@multiplicand+1
  5297     0029  3197  27E1  3180   	fcall	___wmul
  5298     002C  0141               	movlb	1	; select bank1
  5299     002D  083B               	movf	(_TMR_On_Delay+1)^(0+128),w
  5300     002E  0671               	xorwf	?___wmul+1,w
  5301     002F  1D03               	skipz
  5302     0030  2833               	goto	u367_25
  5303     0031  083A               	movf	_TMR_On_Delay^(0+128),w
  5304     0032  0670               	xorwf	?___wmul,w
  5305     0033                     u367_25:
  5306     0033  1D03               	skipz
  5307     0034  2836               	goto	u367_21
  5308     0035  2837               	goto	u367_20
  5309     0036                     u367_21:
  5310     0036  286E               	goto	i1l5041
  5311     0037                     u367_20:
  5312     0037                     i1l5029:
  5313                           
  5314                           ;main.c: 852:             ON_Delay_Flag = 1;
  5315     0037  3001               	movlw	1
  5316     0038  0140               	movlb	0	; select bank0
  5317     0039  00DF               	movwf	_ON_Delay_Flag
  5318     003A                     i1l5031:
  5319                           
  5320                           ;main.c: 853:             OFF_Delay_Flag = 0;
  5321     003A  0141               	movlb	1	; select bank1
  5322     003B  01DF               	clrf	_OFF_Delay_Flag^(0+128)
  5323                           
  5324                           ;main.c: 854:             TMR_On_Delay = 0;
  5325     003C  01BA               	clrf	_TMR_On_Delay^(0+128)
  5326     003D  01BB               	clrf	(_TMR_On_Delay+1)^(0+128)
  5327                           
  5328                           ;main.c: 857:             soft_start_voltage = 0;
  5329     003E  01BE               	clrf	_soft_start_voltage^(0+128)	;volatile
  5330     003F  01BF               	clrf	(_soft_start_voltage+1)^(0+128)	;volatile
  5331                           
  5332                           ;main.c: 858:             SoftStart_Completed = 0;
  5333     0040  0140               	movlb	0	; select bank0
  5334     0041  01E0               	clrf	_SoftStart_Completed	;volatile
  5335     0042                     i1l5033:
  5336                           
  5337                           ;main.c: 860:             if (SOFT_START_Delay != 0) {
  5338     0042  086F               	movf	_SOFT_START_Delay,w
  5339     0043  1903               	btfsc	3,2
  5340     0044  2846               	goto	u368_21
  5341     0045  2847               	goto	u368_20
  5342     0046                     u368_21:
  5343     0046  286B               	goto	i1l5039
  5344     0047                     u368_20:
  5345     0047                     i1l5035:
  5346                           
  5347                           ;main.c: 861:                 soft_start_step_interval = (SOFT_START_Delay * 100) / VOLT
      +                          AGE;
  5348     0047  0861               	movf	_VOLTAGE,w
  5349     0048  00CF               	movwf	??_ISR
  5350     0049  01D0               	clrf	??_ISR+1
  5351     004A  084F               	movf	??_ISR,w
  5352     004B  00F6               	movwf	___awdiv@divisor
  5353     004C  0850               	movf	??_ISR+1,w
  5354     004D  00F7               	movwf	___awdiv@divisor+1
  5355     004E  086F               	movf	_SOFT_START_Delay,w
  5356     004F  00D1               	movwf	??_ISR+2
  5357     0050  01D2               	clrf	??_ISR+3
  5358     0051  0851               	movf	??_ISR+2,w
  5359     0052  00F0               	movwf	___wmul@multiplier
  5360     0053  0852               	movf	??_ISR+3,w
  5361     0054  00F1               	movwf	___wmul@multiplier+1
  5362     0055  3064               	movlw	100
  5363     0056  00F2               	movwf	___wmul@multiplicand
  5364     0057  3000               	movlw	0
  5365     0058  00F3               	movwf	___wmul@multiplicand+1
  5366     0059  3197  27E1  3180   	fcall	___wmul
  5367     005C  0871               	movf	?___wmul+1,w
  5368     005D  00F9               	movwf	___awdiv@dividend+1
  5369     005E  0870               	movf	?___wmul,w
  5370     005F  00F8               	movwf	___awdiv@dividend
  5371     0060  318B  2387  3180   	fcall	___awdiv
  5372     0063  0876               	movf	?___awdiv,w
  5373     0064  0140               	movlb	0	; select bank0
  5374     0065  00EE               	movwf	_soft_start_step_interval
  5375     0066                     i1l5037:
  5376                           
  5377                           ;main.c: 862:                 if (soft_start_step_interval == 0) soft_start_step_interva
      +                          l = 1;
  5378     0066  086E               	movf	_soft_start_step_interval,w
  5379     0067  1D03               	btfss	3,2
  5380     0068  286A               	goto	u369_21
  5381     0069  286B               	goto	u369_20
  5382     006A                     u369_21:
  5383     006A  286E               	goto	i1l852
  5384     006B                     u369_20:
  5385     006B                     i1l5039:
  5386     006B  3001               	movlw	1
  5387     006C  00EE               	movwf	_soft_start_step_interval
  5388     006D  286E               	goto	i1l5041
  5389     006E                     i1l852:	
  5390                           ;main.c: 866:             }
  5391                           
  5392     006E                     i1l5041:
  5393                           
  5394                           ;main.c: 869:         if (!OFF_Delay_Flag && currentMode == STOP_CONTROLLER_MODE && Stop
      +                          _Controller == 1) {
  5395     006E  0141               	movlb	1	; select bank1
  5396     006F  085F               	movf	_OFF_Delay_Flag^(0+128),w
  5397     0070  1D03               	btfss	3,2
  5398     0071  2873               	goto	u370_21
  5399     0072  2874               	goto	u370_20
  5400     0073                     u370_21:
  5401     0073  289F               	goto	i1l5055
  5402     0074                     u370_20:
  5403     0074                     i1l5043:
  5404     0074  0140               	movlb	0	; select bank0
  5405     0075  085B               	movf	_currentMode,w
  5406     0076  1D03               	btfss	3,2
  5407     0077  2879               	goto	u371_21
  5408     0078  287A               	goto	u371_20
  5409     0079                     u371_21:
  5410     0079  289F               	goto	i1l5055
  5411     007A                     u371_20:
  5412     007A                     i1l5045:
  5413     007A  0141               	movlb	1	; select bank1
  5414     007B  035E               	decf	_Stop_Controller^(0+128),w
  5415     007C  1D03               	btfss	3,2
  5416     007D  287F               	goto	u372_21
  5417     007E  2880               	goto	u372_20
  5418     007F                     u372_21:
  5419     007F  289F               	goto	i1l5055
  5420     0080                     u372_20:
  5421     0080                     i1l5047:
  5422                           
  5423                           ;main.c: 870:             TMR_Off_Delay++;
  5424     0080  3001               	movlw	1
  5425     0081  07B8               	addwf	_TMR_Off_Delay^(0+128),f
  5426     0082  3000               	movlw	0
  5427     0083  3DB9               	addwfc	(_TMR_Off_Delay+1)^(0+128),f
  5428     0084                     i1l5049:
  5429                           
  5430                           ;main.c: 871:         if (TMR_Off_Delay == (OFF_Delay * 100)) {
  5431     0084  0140               	movlb	0	; select bank0
  5432     0085  0869               	movf	_OFF_Delay+1,w
  5433     0086  00F1               	movwf	___wmul@multiplier+1
  5434     0087  0868               	movf	_OFF_Delay,w
  5435     0088  00F0               	movwf	___wmul@multiplier
  5436     0089  3064               	movlw	100
  5437     008A  00F2               	movwf	___wmul@multiplicand
  5438     008B  3000               	movlw	0
  5439     008C  00F3               	movwf	___wmul@multiplicand+1
  5440     008D  3197  27E1  3180   	fcall	___wmul
  5441     0090  0141               	movlb	1	; select bank1
  5442     0091  0839               	movf	(_TMR_Off_Delay+1)^(0+128),w
  5443     0092  0671               	xorwf	?___wmul+1,w
  5444     0093  1D03               	skipz
  5445     0094  2897               	goto	u373_25
  5446     0095  0838               	movf	_TMR_Off_Delay^(0+128),w
  5447     0096  0670               	xorwf	?___wmul,w
  5448     0097                     u373_25:
  5449     0097  1D03               	skipz
  5450     0098  289A               	goto	u373_21
  5451     0099  289B               	goto	u373_20
  5452     009A                     u373_21:
  5453     009A  289F               	goto	i1l5055
  5454     009B                     u373_20:
  5455     009B                     i1l5051:
  5456                           
  5457                           ;main.c: 872:             OFF_Delay_Flag = 1;
  5458     009B  3001               	movlw	1
  5459     009C  00DF               	movwf	_OFF_Delay_Flag^(0+128)
  5460     009D                     i1l5053:
  5461                           
  5462                           ;main.c: 873:             TMR_Off_Delay = 0;
  5463     009D  01B8               	clrf	_TMR_Off_Delay^(0+128)
  5464     009E  01B9               	clrf	(_TMR_Off_Delay+1)^(0+128)
  5465     009F                     i1l5055:
  5466                           
  5467                           ;main.c: 876:         if (ON_Delay_Flag && !SoftStart_Completed) {
  5468     009F  0140               	movlb	0	; select bank0
  5469     00A0  085F               	movf	_ON_Delay_Flag,w
  5470     00A1  1903               	btfsc	3,2
  5471     00A2  28A4               	goto	u374_21
  5472     00A3  28A5               	goto	u374_20
  5473     00A4                     u374_21:
  5474     00A4  28DF               	goto	i1l5071
  5475     00A5                     u374_20:
  5476     00A5                     i1l5057:
  5477     00A5  0860               	movf	_SoftStart_Completed,w	;volatile
  5478     00A6  1D03               	btfss	3,2
  5479     00A7  28A9               	goto	u375_21
  5480     00A8  28AA               	goto	u375_20
  5481     00A9                     u375_21:
  5482     00A9  28DF               	goto	i1l5071
  5483     00AA                     u375_20:
  5484     00AA                     i1l5059:
  5485                           
  5486                           ;main.c: 877:             StartSoftDelay = 1;
  5487     00AA  3001               	movlw	1
  5488     00AB  0141               	movlb	1	; select bank1
  5489     00AC  00E0               	movwf	_StartSoftDelay^(0+128)	;volatile
  5490     00AD                     i1l5061:
  5491                           
  5492                           ;main.c: 879:             TMR_SoftDelay++;
  5493     00AD  3001               	movlw	1
  5494     00AE  07C0               	addwf	_TMR_SoftDelay^(0+128),f	;volatile
  5495     00AF  3000               	movlw	0
  5496     00B0  3DC1               	addwfc	(_TMR_SoftDelay+1)^(0+128),f	;volatile
  5497                           
  5498                           ;main.c: 880:             if (TMR_SoftDelay >= soft_start_step_interval) {
  5499     00B1  0140               	movlb	0	; select bank0
  5500     00B2  086E               	movf	_soft_start_step_interval,w
  5501     00B3  00CF               	movwf	??_ISR
  5502     00B4  01D0               	clrf	??_ISR+1
  5503     00B5  0850               	movf	??_ISR+1,w
  5504     00B6  0141               	movlb	1	; select bank1
  5505     00B7  0241               	subwf	(_TMR_SoftDelay+1)^(0+128),w	;volatile
  5506     00B8  1D03               	skipz
  5507     00B9  28BE               	goto	u376_25
  5508     00BA  0140               	movlb	0	; select bank0
  5509     00BB  084F               	movf	??_ISR,w
  5510     00BC  0141               	movlb	1	; select bank1
  5511     00BD  0240               	subwf	_TMR_SoftDelay^(0+128),w	;volatile
  5512     00BE                     u376_25:
  5513     00BE  1C03               	skipc
  5514     00BF  28C1               	goto	u376_21
  5515     00C0  28C2               	goto	u376_20
  5516     00C1                     u376_21:
  5517     00C1  28DF               	goto	i1l5071
  5518     00C2                     u376_20:
  5519     00C2                     i1l5063:
  5520                           
  5521                           ;main.c: 881:                 TMR_SoftDelay = 0;
  5522     00C2  01C0               	clrf	_TMR_SoftDelay^(0+128)	;volatile
  5523     00C3  01C1               	clrf	(_TMR_SoftDelay+1)^(0+128)	;volatile
  5524     00C4                     i1l5065:
  5525                           
  5526                           ;main.c: 883:                 if (soft_start_voltage < VOLTAGE) {
  5527     00C4  0140               	movlb	0	; select bank0
  5528     00C5  0861               	movf	_VOLTAGE,w
  5529     00C6  00CF               	movwf	??_ISR
  5530     00C7  01D0               	clrf	??_ISR+1
  5531     00C8  0850               	movf	??_ISR+1,w
  5532     00C9  0141               	movlb	1	; select bank1
  5533     00CA  023F               	subwf	(_soft_start_voltage+1)^(0+128),w	;volatile
  5534     00CB  1D03               	skipz
  5535     00CC  28D1               	goto	u377_25
  5536     00CD  0140               	movlb	0	; select bank0
  5537     00CE  084F               	movf	??_ISR,w
  5538     00CF  0141               	movlb	1	; select bank1
  5539     00D0  023E               	subwf	_soft_start_voltage^(0+128),w	;volatile
  5540     00D1                     u377_25:
  5541     00D1  1803               	skipnc
  5542     00D2  28D4               	goto	u377_21
  5543     00D3  28D5               	goto	u377_20
  5544     00D4                     u377_21:
  5545     00D4  28DA               	goto	i1l860
  5546     00D5                     u377_20:
  5547     00D5                     i1l5067:
  5548                           
  5549                           ;main.c: 884:                     soft_start_voltage++;
  5550     00D5  3001               	movlw	1
  5551     00D6  07BE               	addwf	_soft_start_voltage^(0+128),f	;volatile
  5552     00D7  3000               	movlw	0
  5553     00D8  3DBF               	addwfc	(_soft_start_voltage+1)^(0+128),f	;volatile
  5554                           
  5555                           ;main.c: 885:                 } else {
  5556     00D9  28DF               	goto	i1l5071
  5557     00DA                     i1l860:
  5558                           
  5559                           ;main.c: 886:                     SoftStart_Completed = 1;
  5560     00DA  3001               	movlw	1
  5561     00DB  0140               	movlb	0	; select bank0
  5562     00DC  00E0               	movwf	_SoftStart_Completed	;volatile
  5563     00DD                     i1l5069:
  5564                           
  5565                           ;main.c: 887:                     StartSoftDelay = 0;
  5566     00DD  0141               	movlb	1	; select bank1
  5567     00DE  01E0               	clrf	_StartSoftDelay^(0+128)	;volatile
  5568     00DF                     i1l5071:
  5569                           
  5570                           ;main.c: 892:         UpdateModeDelay++;
  5571     00DF  3001               	movlw	1
  5572     00E0  0141               	movlb	1	; select bank1
  5573     00E1  07DD               	addwf	_UpdateModeDelay^(0+128),f
  5574     00E2                     i1l5073:
  5575                           
  5576                           ;main.c: 893:         if (UpdateModeDelay == 10){
  5577     00E2  300A               	movlw	10
  5578     00E3  065D               	xorwf	_UpdateModeDelay^(0+128),w
  5579     00E4  1D03               	btfss	3,2
  5580     00E5  28E7               	goto	u378_21
  5581     00E6  28E8               	goto	u378_20
  5582     00E7                     u378_21:
  5583     00E7  28ED               	goto	i1l5079
  5584     00E8                     u378_20:
  5585     00E8                     i1l5075:
  5586                           
  5587                           ;main.c: 894:             updateMode();
  5588     00E8  3185  2569  3180   	fcall	_updateMode
  5589     00EB                     i1l5077:
  5590                           
  5591                           ;main.c: 895:             UpdateModeDelay = 0;
  5592     00EB  0141               	movlb	1	; select bank1
  5593     00EC  01DD               	clrf	_UpdateModeDelay^(0+128)
  5594     00ED                     i1l5079:
  5595                           
  5596                           ;main.c: 897:         if(StartDebounceDelayTimer)
  5597     00ED  0857               	movf	_StartDebounceDelayTimer^(0+128),w	;volatile
  5598     00EE  1903               	btfsc	3,2
  5599     00EF  28F1               	goto	u379_21
  5600     00F0  28F2               	goto	u379_20
  5601     00F1                     u379_21:
  5602     00F1  28FF               	goto	i1l5087
  5603     00F2                     u379_20:
  5604     00F2                     i1l5081:
  5605                           
  5606                           ;main.c: 898:         {;main.c: 899:             DebounceDelay++;
  5607     00F2  3001               	movlw	1
  5608     00F3  07D9               	addwf	_DebounceDelay^(0+128),f
  5609                           
  5610                           ;main.c: 900:             if(DebounceDelay == 100)
  5611     00F4  3064               	movlw	100
  5612     00F5  0659               	xorwf	_DebounceDelay^(0+128),w
  5613     00F6  1D03               	btfss	3,2
  5614     00F7  28F9               	goto	u380_21
  5615     00F8  28FA               	goto	u380_20
  5616     00F9                     u380_21:
  5617     00F9  28FF               	goto	i1l5087
  5618     00FA                     u380_20:
  5619     00FA                     i1l5083:
  5620                           
  5621                           ;main.c: 901:             {;main.c: 902:                 DebounceCompleted = 1;
  5622     00FA  3001               	movlw	1
  5623     00FB  0140               	movlb	0	; select bank0
  5624     00FC  00D9               	movwf	_DebounceCompleted	;volatile
  5625     00FD                     i1l5085:
  5626                           
  5627                           ;main.c: 903:                 DebounceDelay = 0;
  5628     00FD  0141               	movlb	1	; select bank1
  5629     00FE  01D9               	clrf	_DebounceDelay^(0+128)
  5630     00FF                     i1l5087:
  5631                           
  5632                           ;main.c: 906:         if(StartDebounceDelayTimer_Decrement)
  5633     00FF  0856               	movf	_StartDebounceDelayTimer_Decrement^(0+128),w	;volatile
  5634     0100  1903               	btfsc	3,2
  5635     0101  2903               	goto	u381_21
  5636     0102  2904               	goto	u381_20
  5637     0103                     u381_21:
  5638     0103  2911               	goto	i1l5095
  5639     0104                     u381_20:
  5640     0104                     i1l5089:
  5641                           
  5642                           ;main.c: 907:         {;main.c: 908:             DebounceDelay_Decrement++;
  5643     0104  3001               	movlw	1
  5644     0105  07D8               	addwf	_DebounceDelay_Decrement^(0+128),f
  5645                           
  5646                           ;main.c: 909:             if(DebounceDelay_Decrement == 150)
  5647     0106  3096               	movlw	150
  5648     0107  0658               	xorwf	_DebounceDelay_Decrement^(0+128),w
  5649     0108  1D03               	btfss	3,2
  5650     0109  290B               	goto	u382_21
  5651     010A  290C               	goto	u382_20
  5652     010B                     u382_21:
  5653     010B  2911               	goto	i1l5095
  5654     010C                     u382_20:
  5655     010C                     i1l5091:
  5656                           
  5657                           ;main.c: 910:             {;main.c: 911:                 DebounceCompleted_Decrement = 1
      +                          ;
  5658     010C  3001               	movlw	1
  5659     010D  0140               	movlb	0	; select bank0
  5660     010E  00D8               	movwf	_DebounceCompleted_Decrement	;volatile
  5661     010F                     i1l5093:
  5662                           
  5663                           ;main.c: 912:                 DebounceDelay_Decrement = 0;
  5664     010F  0141               	movlb	1	; select bank1
  5665     0110  01D8               	clrf	_DebounceDelay_Decrement^(0+128)
  5666     0111                     i1l5095:
  5667                           
  5668                           ;main.c: 917:         UARTFlagDelay++;
  5669     0111  3001               	movlw	1
  5670     0112  07AC               	addwf	_UARTFlagDelay^(0+128),f
  5671     0113  3000               	movlw	0
  5672     0114  3DAD               	addwfc	(_UARTFlagDelay+1)^(0+128),f
  5673     0115                     i1l5097:
  5674                           
  5675                           ;main.c: 918:         if (UARTFlagDelay >= 5000) {
  5676     0115  3013               	movlw	19
  5677     0116  022D               	subwf	(_UARTFlagDelay+1)^(0+128),w
  5678     0117  3088               	movlw	136
  5679     0118  1903               	skipnz
  5680     0119  022C               	subwf	_UARTFlagDelay^(0+128),w
  5681     011A  1C03               	skipc
  5682     011B  291D               	goto	u383_21
  5683     011C  291E               	goto	u383_20
  5684     011D                     u383_21:
  5685     011D  2924               	goto	i1l5103
  5686     011E                     u383_20:
  5687     011E                     i1l5099:
  5688                           
  5689                           ;main.c: 919:             UARTFlag = 1;
  5690     011E  3001               	movlw	1
  5691     011F  0140               	movlb	0	; select bank0
  5692     0120  00D7               	movwf	_UARTFlag
  5693     0121                     i1l5101:
  5694                           
  5695                           ;main.c: 920:             UARTFlagDelay = 0;
  5696     0121  0141               	movlb	1	; select bank1
  5697     0122  01AC               	clrf	_UARTFlagDelay^(0+128)
  5698     0123  01AD               	clrf	(_UARTFlagDelay+1)^(0+128)
  5699     0124                     i1l5103:
  5700                           
  5701                           ;main.c: 928:       if (PORTAbits.RA4 == 0) {
  5702     0124  0140               	movlb	0	; select bank0
  5703     0125  1A0C               	btfsc	12,4	;volatile
  5704     0126  2928               	goto	u384_21
  5705     0127  2929               	goto	u384_20
  5706     0128                     u384_21:
  5707     0128  2944               	goto	i1l5113
  5708     0129                     u384_20:
  5709     0129                     i1l5105:
  5710                           
  5711                           ;main.c: 929:           pressDurationPowerSwitch++;
  5712     0129  3001               	movlw	1
  5713     012A  0141               	movlb	1	; select bank1
  5714     012B  07AE               	addwf	_pressDurationPowerSwitch^(0+128),f	;volatile
  5715     012C  3000               	movlw	0
  5716     012D  3DAF               	addwfc	(_pressDurationPowerSwitch+1)^(0+128),f	;volatile
  5717                           
  5718                           ;main.c: 930:           if (pressDurationPowerSwitch >= 100 && pressDurationPowerSwitch 
      +                          < 2500) {
  5719     012E  3000               	movlw	0
  5720     012F  022F               	subwf	(_pressDurationPowerSwitch+1)^(0+128),w	;volatile
  5721     0130  3064               	movlw	100
  5722     0131  1903               	skipnz
  5723     0132  022E               	subwf	_pressDurationPowerSwitch^(0+128),w	;volatile
  5724     0133  1C03               	skipc
  5725     0134  2936               	goto	u385_21
  5726     0135  2937               	goto	u385_20
  5727     0136                     u385_21:
  5728     0136  2944               	goto	i1l5113
  5729     0137                     u385_20:
  5730     0137                     i1l5107:
  5731     0137  3009               	movlw	9
  5732     0138  022F               	subwf	(_pressDurationPowerSwitch+1)^(0+128),w	;volatile
  5733     0139  30C4               	movlw	196
  5734     013A  1903               	skipnz
  5735     013B  022E               	subwf	_pressDurationPowerSwitch^(0+128),w	;volatile
  5736     013C  1803               	skipnc
  5737     013D  293F               	goto	u386_21
  5738     013E  2940               	goto	u386_20
  5739     013F                     u386_21:
  5740     013F  2944               	goto	i1l5113
  5741     0140                     u386_20:
  5742     0140                     i1l5109:
  5743                           
  5744                           ;main.c: 931:               shortPressDetectedPowerSwitch = 1;
  5745     0140  3001               	movlw	1
  5746     0141  00D5               	movwf	_shortPressDetectedPowerSwitch^(0+128)	;volatile
  5747     0142                     i1l5111:
  5748                           
  5749                           ;main.c: 932:               pressDurationPowerSwitch = 0;
  5750     0142  01AE               	clrf	_pressDurationPowerSwitch^(0+128)	;volatile
  5751     0143  01AF               	clrf	(_pressDurationPowerSwitch+1)^(0+128)	;volatile
  5752     0144                     i1l5113:
  5753                           
  5754                           ;main.c: 937:         if (PORTAbits.RA3 == 0 && PORTAbits.RA5 == 1) {
  5755     0144  0140               	movlb	0	; select bank0
  5756     0145  198C               	btfsc	12,3	;volatile
  5757     0146  2948               	goto	u387_21
  5758     0147  2949               	goto	u387_20
  5759     0148                     u387_21:
  5760     0148  2961               	goto	i1l5125
  5761     0149                     u387_20:
  5762     0149                     i1l5115:
  5763     0149  1E8C               	btfss	12,5	;volatile
  5764     014A  294C               	goto	u388_21
  5765     014B  294D               	goto	u388_20
  5766     014C                     u388_21:
  5767     014C  2961               	goto	i1l5125
  5768     014D                     u388_20:
  5769     014D                     i1l5117:
  5770                           
  5771                           ;main.c: 938:             pressDurationSettingSwitch++;
  5772     014D  3001               	movlw	1
  5773     014E  07D3               	addwf	_pressDurationSettingSwitch,f	;volatile
  5774     014F  3000               	movlw	0
  5775     0150  3DD4               	addwfc	_pressDurationSettingSwitch+1,f	;volatile
  5776     0151                     i1l5119:
  5777                           
  5778                           ;main.c: 939:             settingSwitchReleased = 0;
  5779     0151  0141               	movlb	1	; select bank1
  5780     0152  01EA               	clrf	_settingSwitchReleased^(0+128)	;volatile
  5781     0153                     i1l5121:
  5782                           
  5783                           ;main.c: 940:             if (pressDurationSettingSwitch >= 2500) {
  5784     0153  3009               	movlw	9
  5785     0154  0140               	movlb	0	; select bank0
  5786     0155  0254               	subwf	_pressDurationSettingSwitch+1,w	;volatile
  5787     0156  30C4               	movlw	196
  5788     0157  1903               	skipnz
  5789     0158  0253               	subwf	_pressDurationSettingSwitch,w	;volatile
  5790     0159  1C03               	skipc
  5791     015A  295C               	goto	u389_21
  5792     015B  295D               	goto	u389_20
  5793     015C                     u389_21:
  5794     015C  297D               	goto	i1l5135
  5795     015D                     u389_20:
  5796     015D                     i1l5123:
  5797                           
  5798                           ;main.c: 941:                 longPressDetectedSettingSwitch = 1;
  5799     015D  3001               	movlw	1
  5800     015E  0141               	movlb	1	; select bank1
  5801     015F  00DC               	movwf	_longPressDetectedSettingSwitch^(0+128)	;volatile
  5802     0160  297D               	goto	i1l5135
  5803     0161                     i1l5125:
  5804                           
  5805                           ;main.c: 944:             if (pressDurationSettingSwitch >= 100 && pressDurationSettingS
      +                          witch < 2500) {
  5806     0161  3000               	movlw	0
  5807     0162  0254               	subwf	_pressDurationSettingSwitch+1,w	;volatile
  5808     0163  3064               	movlw	100
  5809     0164  1903               	skipnz
  5810     0165  0253               	subwf	_pressDurationSettingSwitch,w	;volatile
  5811     0166  1C03               	skipc
  5812     0167  2969               	goto	u390_21
  5813     0168  296A               	goto	u390_20
  5814     0169                     u390_21:
  5815     0169  2976               	goto	i1l5131
  5816     016A                     u390_20:
  5817     016A                     i1l5127:
  5818     016A  3009               	movlw	9
  5819     016B  0254               	subwf	_pressDurationSettingSwitch+1,w	;volatile
  5820     016C  30C4               	movlw	196
  5821     016D  1903               	skipnz
  5822     016E  0253               	subwf	_pressDurationSettingSwitch,w	;volatile
  5823     016F  1803               	skipnc
  5824     0170  2972               	goto	u391_21
  5825     0171  2973               	goto	u391_20
  5826     0172                     u391_21:
  5827     0172  2976               	goto	i1l5131
  5828     0173                     u391_20:
  5829     0173                     i1l5129:
  5830                           
  5831                           ;main.c: 945:                 shortPressDetected = 1;
  5832     0173  3001               	movlw	1
  5833     0174  0141               	movlb	1	; select bank1
  5834     0175  00DA               	movwf	_shortPressDetected^(0+128)	;volatile
  5835     0176                     i1l5131:
  5836                           
  5837                           ;main.c: 947:             pressDurationSettingSwitch = 0;
  5838     0176  0140               	movlb	0	; select bank0
  5839     0177  01D3               	clrf	_pressDurationSettingSwitch	;volatile
  5840     0178  01D4               	clrf	_pressDurationSettingSwitch+1	;volatile
  5841     0179                     i1l5133:
  5842                           
  5843                           ;main.c: 948:             settingSwitchReleased = 1;
  5844     0179  3001               	movlw	1
  5845     017A  0141               	movlb	1	; select bank1
  5846     017B  00EA               	movwf	_settingSwitchReleased^(0+128)	;volatile
  5847                           
  5848                           ;main.c: 949:             longPressDetectedSettingSwitch = 0;
  5849     017C  01DC               	clrf	_longPressDetectedSettingSwitch^(0+128)	;volatile
  5850     017D                     i1l5135:
  5851                           
  5852                           ;main.c: 953:         if (PORTAbits.RA3 == 0 && PORTAbits.RA5 == 0) {
  5853     017D  0140               	movlb	0	; select bank0
  5854     017E  198C               	btfsc	12,3	;volatile
  5855     017F  2981               	goto	u392_21
  5856     0180  2982               	goto	u392_20
  5857     0181                     u392_21:
  5858     0181  2997               	goto	i1l5143
  5859     0182                     u392_20:
  5860     0182                     i1l5137:
  5861     0182  1A8C               	btfsc	12,5	;volatile
  5862     0183  2985               	goto	u393_21
  5863     0184  2986               	goto	u393_20
  5864     0185                     u393_21:
  5865     0185  2997               	goto	i1l5143
  5866     0186                     u393_20:
  5867     0186                     i1l5139:
  5868                           
  5869                           ;main.c: 954:             pressDurationSimultaneous++;
  5870     0186  3001               	movlw	1
  5871     0187  0141               	movlb	1	; select bank1
  5872     0188  07B2               	addwf	_pressDurationSimultaneous^(0+128),f	;volatile
  5873     0189  3000               	movlw	0
  5874     018A  3DB3               	addwfc	(_pressDurationSimultaneous+1)^(0+128),f	;volatile
  5875                           
  5876                           ;main.c: 955:             if (pressDurationSimultaneous >= 2500) {
  5877     018B  3009               	movlw	9
  5878     018C  0233               	subwf	(_pressDurationSimultaneous+1)^(0+128),w	;volatile
  5879     018D  30C4               	movlw	196
  5880     018E  1903               	skipnz
  5881     018F  0232               	subwf	_pressDurationSimultaneous^(0+128),w	;volatile
  5882     0190  1C03               	skipc
  5883     0191  2993               	goto	u394_21
  5884     0192  2994               	goto	u394_20
  5885     0193                     u394_21:
  5886     0193  299B               	goto	i1l5145
  5887     0194                     u394_20:
  5888     0194                     i1l5141:
  5889                           
  5890                           ;main.c: 956:                 longPressDetectedSimultaneous = 1;
  5891     0194  3001               	movlw	1
  5892     0195  00DB               	movwf	_longPressDetectedSimultaneous^(0+128)	;volatile
  5893     0196  299B               	goto	i1l5145
  5894     0197                     i1l5143:
  5895                           
  5896                           ;main.c: 959:             pressDurationSimultaneous = 0;
  5897     0197  0141               	movlb	1	; select bank1
  5898     0198  01B2               	clrf	_pressDurationSimultaneous^(0+128)	;volatile
  5899     0199  01B3               	clrf	(_pressDurationSimultaneous+1)^(0+128)	;volatile
  5900                           
  5901                           ;main.c: 960:             longPressDetectedSimultaneous = 0;
  5902     019A  01DB               	clrf	_longPressDetectedSimultaneous^(0+128)	;volatile
  5903     019B                     i1l5145:
  5904                           
  5905                           ;main.c: 963:         if (flag == 1) {
  5906     019B  0140               	movlb	0	; select bank0
  5907     019C  0355               	decf	_flag,w
  5908     019D  0456               	iorwf	_flag+1,w
  5909     019E  1D03               	btfss	3,2
  5910     019F  29A1               	goto	u395_21
  5911     01A0  29A2               	goto	u395_20
  5912     01A1                     u395_21:
  5913     01A1  29B5               	goto	i1l5149
  5914     01A2                     u395_20:
  5915     01A2                     i1l5147:
  5916                           
  5917                           ;main.c: 964:             segment_pattern = binary_pattern[digits_1[current_digit]];
  5918     01A2  355D               	lslf	_current_digit,w
  5919     01A3  3E62               	addlw	(low (_digits_1| (0+256)))& (0+255)
  5920     01A4  0086               	movwf	6
  5921     01A5  3001               	movlw	1	; select bank2/3
  5922     01A6  0087               	movwf	7
  5923     01A7  3F40               	moviw [0]fsr1
  5924     01A8  00CF               	movwf	??_ISR
  5925     01A9  3F41               	moviw [1]fsr1
  5926     01AA  00D0               	movwf	??_ISR+1
  5927     01AB  3030               	movlw	low _binary_pattern
  5928     01AC  074F               	addwf	??_ISR,w
  5929     01AD  0084               	movwf	4
  5930     01AE  3010               	movlw	high _binary_pattern
  5931     01AF  3D50               	addwfc	??_ISR+1,w
  5932     01B0  3880               	iorlw	128
  5933     01B1  0085               	movwf	5
  5934     01B2  0800               	movf	0,w	;code access
  5935     01B3  00DE               	movwf	_segment_pattern
  5936                           
  5937                           ;main.c: 965:         } else if (flag == 2) {
  5938     01B4  2AA8               	goto	i1l5209
  5939     01B5                     i1l5149:
  5940     01B5  3002               	movlw	2
  5941     01B6  0655               	xorwf	_flag,w
  5942     01B7  0456               	iorwf	_flag+1,w
  5943     01B8  1D03               	btfss	3,2
  5944     01B9  29BB               	goto	u396_21
  5945     01BA  29BC               	goto	u396_20
  5946     01BB                     u396_21:
  5947     01BB  29CF               	goto	i1l5153
  5948     01BC                     u396_20:
  5949     01BC                     i1l5151:
  5950                           
  5951                           ;main.c: 966:             segment_pattern = binary_pattern[digits_2[current_digit]];
  5952     01BC  355D               	lslf	_current_digit,w
  5953     01BD  3E58               	addlw	(low (_digits_2| (0+256)))& (0+255)
  5954     01BE  0086               	movwf	6
  5955     01BF  3001               	movlw	1	; select bank2/3
  5956     01C0  0087               	movwf	7
  5957     01C1  3F40               	moviw [0]fsr1
  5958     01C2  00CF               	movwf	??_ISR
  5959     01C3  3F41               	moviw [1]fsr1
  5960     01C4  00D0               	movwf	??_ISR+1
  5961     01C5  3030               	movlw	low _binary_pattern
  5962     01C6  074F               	addwf	??_ISR,w
  5963     01C7  0084               	movwf	4
  5964     01C8  3010               	movlw	high _binary_pattern
  5965     01C9  3D50               	addwfc	??_ISR+1,w
  5966     01CA  3880               	iorlw	128
  5967     01CB  0085               	movwf	5
  5968     01CC  0800               	movf	0,w	;code access
  5969     01CD  00DE               	movwf	_segment_pattern
  5970                           
  5971                           ;main.c: 967:         } else if (flag == 3) {
  5972     01CE  2AA8               	goto	i1l5209
  5973     01CF                     i1l5153:
  5974     01CF  3003               	movlw	3
  5975     01D0  0655               	xorwf	_flag,w
  5976     01D1  0456               	iorwf	_flag+1,w
  5977     01D2  1D03               	btfss	3,2
  5978     01D3  29D5               	goto	u397_21
  5979     01D4  29D6               	goto	u397_20
  5980     01D5                     u397_21:
  5981     01D5  29F0               	goto	i1l5161
  5982     01D6                     u397_20:
  5983     01D6                     i1l5155:
  5984                           
  5985                           ;main.c: 968:             segment_pattern = binary_pattern[digits_3[current_digit]];
  5986     01D6  355D               	lslf	_current_digit,w
  5987     01D7  3E4E               	addlw	(low (_digits_3| (0+256)))& (0+255)
  5988     01D8  0086               	movwf	6
  5989     01D9  3001               	movlw	1	; select bank2/3
  5990     01DA  0087               	movwf	7
  5991     01DB  3F40               	moviw [0]fsr1
  5992     01DC  00CF               	movwf	??_ISR
  5993     01DD  3F41               	moviw [1]fsr1
  5994     01DE  00D0               	movwf	??_ISR+1
  5995     01DF  3030               	movlw	low _binary_pattern
  5996     01E0  074F               	addwf	??_ISR,w
  5997     01E1  0084               	movwf	4
  5998     01E2  3010               	movlw	high _binary_pattern
  5999     01E3  3D50               	addwfc	??_ISR+1,w
  6000     01E4  3880               	iorlw	128
  6001     01E5  0085               	movwf	5
  6002     01E6  0800               	movf	0,w	;code access
  6003     01E7  00DE               	movwf	_segment_pattern
  6004     01E8                     i1l5157:
  6005                           
  6006                           ;main.c: 969:             if (current_digit == 3) {
  6007     01E8  3003               	movlw	3
  6008     01E9  065D               	xorwf	_current_digit,w
  6009     01EA  1D03               	btfss	3,2
  6010     01EB  29ED               	goto	u398_21
  6011     01EC  29EE               	goto	u398_20
  6012     01ED                     u398_21:
  6013     01ED  2AA8               	goto	i1l5209
  6014     01EE                     u398_20:
  6015     01EE                     i1l5159:
  6016                           
  6017                           ;main.c: 970:                 segment_pattern |= 0x80;
  6018     01EE  17DE               	bsf	_segment_pattern,7
  6019     01EF  2AA8               	goto	i1l5209
  6020     01F0                     i1l5161:
  6021     01F0  3004               	movlw	4
  6022     01F1  0655               	xorwf	_flag,w
  6023     01F2  0456               	iorwf	_flag+1,w
  6024     01F3  1D03               	btfss	3,2
  6025     01F4  29F6               	goto	u399_21
  6026     01F5  29F7               	goto	u399_20
  6027     01F6                     u399_21:
  6028     01F6  2A10               	goto	i1l5169
  6029     01F7                     u399_20:
  6030     01F7                     i1l5163:
  6031                           
  6032                           ;main.c: 973:             segment_pattern = binary_pattern[digits_4[current_digit]];
  6033     01F7  355D               	lslf	_current_digit,w
  6034     01F8  3E44               	addlw	(low (_digits_4| (0+256)))& (0+255)
  6035     01F9  0086               	movwf	6
  6036     01FA  3001               	movlw	1	; select bank2/3
  6037     01FB  0087               	movwf	7
  6038     01FC  3F40               	moviw [0]fsr1
  6039     01FD  00CF               	movwf	??_ISR
  6040     01FE  3F41               	moviw [1]fsr1
  6041     01FF  00D0               	movwf	??_ISR+1
  6042     0200  3030               	movlw	low _binary_pattern
  6043     0201  074F               	addwf	??_ISR,w
  6044     0202  0084               	movwf	4
  6045     0203  3010               	movlw	high _binary_pattern
  6046     0204  3D50               	addwfc	??_ISR+1,w
  6047     0205  3880               	iorlw	128
  6048     0206  0085               	movwf	5
  6049     0207  0800               	movf	0,w	;code access
  6050     0208  00DE               	movwf	_segment_pattern
  6051     0209                     i1l5165:
  6052                           
  6053                           ;main.c: 974:             if (current_digit == 3) {
  6054     0209  3003               	movlw	3
  6055     020A  065D               	xorwf	_current_digit,w
  6056     020B  1D03               	btfss	3,2
  6057     020C  2A0E               	goto	u400_21
  6058     020D  2A0F               	goto	u400_20
  6059     020E                     u400_21:
  6060     020E  2AA8               	goto	i1l5209
  6061     020F                     u400_20:
  6062     020F  29EE               	goto	i1l5159
  6063     0210                     i1l5169:
  6064     0210  3005               	movlw	5
  6065     0211  0655               	xorwf	_flag,w
  6066     0212  0456               	iorwf	_flag+1,w
  6067     0213  1D03               	btfss	3,2
  6068     0214  2A16               	goto	u401_21
  6069     0215  2A17               	goto	u401_20
  6070     0216                     u401_21:
  6071     0216  2A31               	goto	i1l5177
  6072     0217                     u401_20:
  6073     0217                     i1l5171:
  6074                           
  6075                           ;main.c: 978:             segment_pattern = binary_pattern[digits_5[current_digit]];
  6076     0217  355D               	lslf	_current_digit,w
  6077     0218  3E3A               	addlw	(low (_digits_5| (0+256)))& (0+255)
  6078     0219  0086               	movwf	6
  6079     021A  3001               	movlw	1	; select bank2/3
  6080     021B  0087               	movwf	7
  6081     021C  3F40               	moviw [0]fsr1
  6082     021D  00CF               	movwf	??_ISR
  6083     021E  3F41               	moviw [1]fsr1
  6084     021F  00D0               	movwf	??_ISR+1
  6085     0220  3030               	movlw	low _binary_pattern
  6086     0221  074F               	addwf	??_ISR,w
  6087     0222  0084               	movwf	4
  6088     0223  3010               	movlw	high _binary_pattern
  6089     0224  3D50               	addwfc	??_ISR+1,w
  6090     0225  3880               	iorlw	128
  6091     0226  0085               	movwf	5
  6092     0227  0800               	movf	0,w	;code access
  6093     0228  00DE               	movwf	_segment_pattern
  6094     0229                     i1l5173:
  6095                           
  6096                           ;main.c: 979:             if (current_digit == 3) {
  6097     0229  3003               	movlw	3
  6098     022A  065D               	xorwf	_current_digit,w
  6099     022B  1D03               	btfss	3,2
  6100     022C  2A2E               	goto	u402_21
  6101     022D  2A2F               	goto	u402_20
  6102     022E                     u402_21:
  6103     022E  2AA8               	goto	i1l5209
  6104     022F                     u402_20:
  6105     022F  29EE               	goto	i1l5159
  6106     0230                     i1l888:	
  6107                           ;main.c: 981:             }
  6108                           
  6109                           
  6110                           ;main.c: 982:         } else if (flag == 6) {
  6111     0230  2AA8               	goto	i1l5209
  6112     0231                     i1l5177:
  6113     0231  3006               	movlw	6
  6114     0232  0655               	xorwf	_flag,w
  6115     0233  0456               	iorwf	_flag+1,w
  6116     0234  1D03               	btfss	3,2
  6117     0235  2A37               	goto	u403_21
  6118     0236  2A38               	goto	u403_20
  6119     0237                     u403_21:
  6120     0237  2A40               	goto	i1l5181
  6121     0238                     u403_20:
  6122     0238                     i1l5179:
  6123                           
  6124                           ;main.c: 983:             segment_pattern = digits_6[current_digit];
  6125     0238  355D               	lslf	_current_digit,w
  6126     0239  3E30               	addlw	(low (_digits_6| (0+256)))& (0+255)
  6127     023A  0086               	movwf	6
  6128     023B  3001               	movlw	1	; select bank2/3
  6129     023C  0087               	movwf	7
  6130     023D  0801               	movf	1,w
  6131     023E  00DE               	movwf	_segment_pattern
  6132                           
  6133                           ;main.c: 984:         } else if (flag == 7) {
  6134     023F  2AA8               	goto	i1l5209
  6135     0240                     i1l5181:
  6136     0240  3007               	movlw	7
  6137     0241  0655               	xorwf	_flag,w
  6138     0242  0456               	iorwf	_flag+1,w
  6139     0243  1D03               	btfss	3,2
  6140     0244  2A46               	goto	u404_21
  6141     0245  2A47               	goto	u404_20
  6142     0246                     u404_21:
  6143     0246  2A4F               	goto	i1l5185
  6144     0247                     u404_20:
  6145     0247                     i1l5183:
  6146                           
  6147                           ;main.c: 985:             segment_pattern = digits_7[current_digit];
  6148     0247  355D               	lslf	_current_digit,w
  6149     0248  3EDC               	addlw	(low (_digits_7| (0+256)))& (0+255)
  6150     0249  0086               	movwf	6
  6151     024A  3001               	movlw	1	; select bank3/4
  6152     024B  0087               	movwf	7
  6153     024C  0801               	movf	1,w
  6154     024D  00DE               	movwf	_segment_pattern
  6155                           
  6156                           ;main.c: 986:         } else if (flag == 8) {
  6157     024E  2AA8               	goto	i1l5209
  6158     024F                     i1l5185:
  6159     024F  3008               	movlw	8
  6160     0250  0655               	xorwf	_flag,w
  6161     0251  0456               	iorwf	_flag+1,w
  6162     0252  1D03               	btfss	3,2
  6163     0253  2A55               	goto	u405_21
  6164     0254  2A56               	goto	u405_20
  6165     0255                     u405_21:
  6166     0255  2A5E               	goto	i1l5189
  6167     0256                     u405_20:
  6168     0256                     i1l5187:
  6169                           
  6170                           ;main.c: 987:             segment_pattern = digits_8[current_digit];
  6171     0256  355D               	lslf	_current_digit,w
  6172     0257  3ED2               	addlw	(low (_digits_8| (0+256)))& (0+255)
  6173     0258  0086               	movwf	6
  6174     0259  3001               	movlw	1	; select bank3/4
  6175     025A  0087               	movwf	7
  6176     025B  0801               	movf	1,w
  6177     025C  00DE               	movwf	_segment_pattern
  6178                           
  6179                           ;main.c: 988:         } else if (flag == 9) {
  6180     025D  2AA8               	goto	i1l5209
  6181     025E                     i1l5189:
  6182     025E  3009               	movlw	9
  6183     025F  0655               	xorwf	_flag,w
  6184     0260  0456               	iorwf	_flag+1,w
  6185     0261  1D03               	btfss	3,2
  6186     0262  2A64               	goto	u406_21
  6187     0263  2A65               	goto	u406_20
  6188     0264                     u406_21:
  6189     0264  2A6D               	goto	i1l5193
  6190     0265                     u406_20:
  6191     0265                     i1l5191:
  6192                           
  6193                           ;main.c: 989:             segment_pattern = digits_9[current_digit];
  6194     0265  355D               	lslf	_current_digit,w
  6195     0266  3EC8               	addlw	(low (_digits_9| (0+256)))& (0+255)
  6196     0267  0086               	movwf	6
  6197     0268  3001               	movlw	1	; select bank3/4
  6198     0269  0087               	movwf	7
  6199     026A  0801               	movf	1,w
  6200     026B  00DE               	movwf	_segment_pattern
  6201                           
  6202                           ;main.c: 990:         }else if (flag == 10) {
  6203     026C  2AA8               	goto	i1l5209
  6204     026D                     i1l5193:
  6205     026D  300A               	movlw	10
  6206     026E  0655               	xorwf	_flag,w
  6207     026F  0456               	iorwf	_flag+1,w
  6208     0270  1D03               	btfss	3,2
  6209     0271  2A73               	goto	u407_21
  6210     0272  2A74               	goto	u407_20
  6211     0273                     u407_21:
  6212     0273  2A7C               	goto	i1l5197
  6213     0274                     u407_20:
  6214     0274                     i1l5195:
  6215                           
  6216                           ;main.c: 991:             segment_pattern = digits_10[current_digit];
  6217     0274  355D               	lslf	_current_digit,w
  6218     0275  3EBE               	addlw	(low (_digits_10| (0+256)))& (0+255)
  6219     0276  0086               	movwf	6
  6220     0277  3001               	movlw	1	; select bank3/4
  6221     0278  0087               	movwf	7
  6222     0279  0801               	movf	1,w
  6223     027A  00DE               	movwf	_segment_pattern
  6224                           
  6225                           ;main.c: 992:         }else if (flag == 11) {
  6226     027B  2AA8               	goto	i1l5209
  6227     027C                     i1l5197:
  6228     027C  300B               	movlw	11
  6229     027D  0655               	xorwf	_flag,w
  6230     027E  0456               	iorwf	_flag+1,w
  6231     027F  1D03               	btfss	3,2
  6232     0280  2A82               	goto	u408_21
  6233     0281  2A83               	goto	u408_20
  6234     0282                     u408_21:
  6235     0282  2A8B               	goto	i1l5201
  6236     0283                     u408_20:
  6237     0283                     i1l5199:
  6238                           
  6239                           ;main.c: 993:             segment_pattern = digits_11[current_digit];
  6240     0283  355D               	lslf	_current_digit,w
  6241     0284  3EB4               	addlw	(low (_digits_11| (0+256)))& (0+255)
  6242     0285  0086               	movwf	6
  6243     0286  3001               	movlw	1	; select bank3/4
  6244     0287  0087               	movwf	7
  6245     0288  0801               	movf	1,w
  6246     0289  00DE               	movwf	_segment_pattern
  6247                           
  6248                           ;main.c: 994:         }else if (flag == 12) {
  6249     028A  2AA8               	goto	i1l5209
  6250     028B                     i1l5201:
  6251     028B  300C               	movlw	12
  6252     028C  0655               	xorwf	_flag,w
  6253     028D  0456               	iorwf	_flag+1,w
  6254     028E  1D03               	btfss	3,2
  6255     028F  2A91               	goto	u409_21
  6256     0290  2A92               	goto	u409_20
  6257     0291                     u409_21:
  6258     0291  2A9A               	goto	i1l5205
  6259     0292                     u409_20:
  6260     0292                     i1l5203:
  6261                           
  6262                           ;main.c: 995:             segment_pattern = digits_12[current_digit];
  6263     0292  355D               	lslf	_current_digit,w
  6264     0293  3EAA               	addlw	(low (_digits_12| (0+256)))& (0+255)
  6265     0294  0086               	movwf	6
  6266     0295  3001               	movlw	1	; select bank3/4
  6267     0296  0087               	movwf	7
  6268     0297  0801               	movf	1,w
  6269     0298  00DE               	movwf	_segment_pattern
  6270                           
  6271                           ;main.c: 996:         }
  6272     0299  2AA8               	goto	i1l5209
  6273     029A                     i1l5205:
  6274     029A  300F               	movlw	15
  6275     029B  0655               	xorwf	_flag,w
  6276     029C  0456               	iorwf	_flag+1,w
  6277     029D  1D03               	btfss	3,2
  6278     029E  2AA0               	goto	u410_21
  6279     029F  2AA1               	goto	u410_20
  6280     02A0                     u410_21:
  6281     02A0  2A30               	goto	i1l888
  6282     02A1                     u410_20:
  6283     02A1                     i1l5207:
  6284                           
  6285                           ;main.c: 998:             segment_pattern = digits_15[current_digit];
  6286     02A1  355D               	lslf	_current_digit,w
  6287     02A2  3EA0               	addlw	(low (_digits_15| (0+256)))& (0+255)
  6288     02A3  0086               	movwf	6
  6289     02A4  3001               	movlw	1	; select bank3/4
  6290     02A5  0087               	movwf	7
  6291     02A6  0801               	movf	1,w
  6292     02A7  00DE               	movwf	_segment_pattern
  6293     02A8                     i1l5209:
  6294                           
  6295                           ;main.c: 1002:         LATDbits.LATD6=0;
  6296     02A8  131B               	bcf	27,6	;volatile
  6297     02A9                     i1l5211:
  6298                           
  6299                           ;main.c: 1003:         LATB = segment_pattern;
  6300     02A9  085E               	movf	_segment_pattern,w
  6301     02AA  0099               	movwf	25	;volatile
  6302     02AB                     i1l5213:
  6303                           
  6304                           ;main.c: 1006:         if (segment_pattern & 0x01) {
  6305     02AB  1C5E               	btfss	_segment_pattern,0
  6306     02AC  2AAE               	goto	u411_21
  6307     02AD  2AAF               	goto	u411_20
  6308     02AE                     u411_21:
  6309     02AE  2AB1               	goto	i1l905
  6310     02AF                     u411_20:
  6311     02AF                     i1l5215:
  6312                           
  6313                           ;main.c: 1007:             PORTEbits.RE1 = 1;
  6314     02AF  1490               	bsf	16,1	;volatile
  6315                           
  6316                           ;main.c: 1008:         } else {
  6317     02B0  2AB2               	goto	i1l5217
  6318     02B1                     i1l905:
  6319                           
  6320                           ;main.c: 1009:             PORTEbits.RE1 = 0;
  6321     02B1  1090               	bcf	16,1	;volatile
  6322     02B2                     i1l5217:
  6323                           
  6324                           ;main.c: 1013:         display_digits ^= 0x01;
  6325     02B2  3001               	movlw	1
  6326     02B3  0141               	movlb	1	; select bank1
  6327     02B4  06EC               	xorwf	_display_digits^(0+128),f
  6328     02B5                     i1l5219:
  6329                           
  6330                           ;main.c: 1014:         LATDbits.LATD6=0;
  6331     02B5  0140               	movlb	0	; select bank0
  6332     02B6  131B               	bcf	27,6	;volatile
  6333                           
  6334                           ;main.c: 1016:         if (flag == 2 || flag == 1) {
  6335     02B7  3002               	movlw	2
  6336     02B8  0655               	xorwf	_flag,w
  6337     02B9  0456               	iorwf	_flag+1,w
  6338     02BA  1903               	btfsc	3,2
  6339     02BB  2ABD               	goto	u412_21
  6340     02BC  2ABE               	goto	u412_20
  6341     02BD                     u412_21:
  6342     02BD  2AEC               	goto	i1l5237
  6343     02BE                     u412_20:
  6344     02BE                     i1l5221:
  6345     02BE  0355               	decf	_flag,w
  6346     02BF  0456               	iorwf	_flag+1,w
  6347     02C0  1D03               	btfss	3,2
  6348     02C1  2AC3               	goto	u413_21
  6349     02C2  2AC4               	goto	u413_20
  6350     02C3                     u413_21:
  6351     02C3  2AF7               	goto	i1l5239
  6352     02C4                     u413_20:
  6353     02C4  2AEC               	goto	i1l5237
  6354     02C5                     i1l911:	
  6355                           ;main.c: 1018:                 case 2:
  6356                           
  6357                           
  6358                           ;main.c: 1019:                     LATDbits.LATD2 = 1;
  6359     02C5  151B               	bsf	27,2	;volatile
  6360     02C6                     i1l5223:
  6361                           
  6362                           ;main.c: 1020:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6363     02C6  3006               	movlw	6
  6364     02C7  0140               	movlb	0	; select bank0
  6365     02C8  00CF               	movwf	??_ISR
  6366     02C9  3030               	movlw	48
  6367     02CA                     u436_27:
  6368     02CA  0B89               	decfsz	9,f
  6369     02CB  2ACA               	goto	u436_27
  6370     02CC  0BCF               	decfsz	??_ISR,f
  6371     02CD  2ACA               	goto	u436_27
  6372     02CE  0000               	nop
  6373     02CF                     i1l5225:
  6374                           
  6375                           ;main.c: 1021:                     LATDbits.LATD2 = 0;
  6376     02CF  0140               	movlb	0	; select bank0
  6377     02D0  111B               	bcf	27,2	;volatile
  6378                           
  6379                           ;main.c: 1022:                     break;
  6380     02D1  2BA4               	goto	i1l915
  6381     02D2                     i1l913:	
  6382                           ;main.c: 1023:                 case 3:
  6383                           
  6384                           
  6385                           ;main.c: 1024:                     LATDbits.LATD1 = 1;
  6386     02D2  149B               	bsf	27,1	;volatile
  6387     02D3                     i1l5227:
  6388                           
  6389                           ;main.c: 1025:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6390     02D3  3006               	movlw	6
  6391     02D4  0140               	movlb	0	; select bank0
  6392     02D5  00CF               	movwf	??_ISR
  6393     02D6  3030               	movlw	48
  6394     02D7                     u437_27:
  6395     02D7  0B89               	decfsz	9,f
  6396     02D8  2AD7               	goto	u437_27
  6397     02D9  0BCF               	decfsz	??_ISR,f
  6398     02DA  2AD7               	goto	u437_27
  6399     02DB  0000               	nop
  6400     02DC                     i1l5229:
  6401                           
  6402                           ;main.c: 1026:                     LATDbits.LATD1 = 0;
  6403     02DC  0140               	movlb	0	; select bank0
  6404     02DD  109B               	bcf	27,1	;volatile
  6405                           
  6406                           ;main.c: 1027:                     break;
  6407     02DE  2BA4               	goto	i1l915
  6408     02DF                     i1l914:	
  6409                           ;main.c: 1028:                 case 4:
  6410                           
  6411                           
  6412                           ;main.c: 1029:                     LATDbits.LATD0 = 1;
  6413     02DF  141B               	bsf	27,0	;volatile
  6414     02E0                     i1l5231:
  6415                           
  6416                           ;main.c: 1030:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6417     02E0  3006               	movlw	6
  6418     02E1  0140               	movlb	0	; select bank0
  6419     02E2  00CF               	movwf	??_ISR
  6420     02E3  3030               	movlw	48
  6421     02E4                     u438_27:
  6422     02E4  0B89               	decfsz	9,f
  6423     02E5  2AE4               	goto	u438_27
  6424     02E6  0BCF               	decfsz	??_ISR,f
  6425     02E7  2AE4               	goto	u438_27
  6426     02E8  0000               	nop
  6427     02E9                     i1l5233:
  6428                           
  6429                           ;main.c: 1031:                     LATDbits.LATD0 = 0;
  6430     02E9  0140               	movlb	0	; select bank0
  6431     02EA  101B               	bcf	27,0	;volatile
  6432                           
  6433                           ;main.c: 1032:                     break;
  6434     02EB  2BA4               	goto	i1l915
  6435     02EC                     i1l5237:
  6436     02EC  085D               	movf	_current_digit,w
  6437                           
  6438                           ; Switch size 1, requested type "simple"
  6439                           ; Number of cases is 3, Range of values is 2 to 4
  6440                           ; switch strategies available:
  6441                           ; Name         Instructions Cycles
  6442                           ; simple_byte           10     6 (average)
  6443                           ; direct_byte           15     9 (fixed)
  6444                           ; jumptable            263     9 (fixed)
  6445                           ;	Chosen strategy is simple_byte
  6446     02ED  3A02               	xorlw	2	; case 2
  6447     02EE  1903               	skipnz
  6448     02EF  2AC5               	goto	i1l911
  6449     02F0  3A01               	xorlw	1	; case 3
  6450     02F1  1903               	skipnz
  6451     02F2  2AD2               	goto	i1l913
  6452     02F3  3A07               	xorlw	7	; case 4
  6453     02F4  1903               	skipnz
  6454     02F5  2ADF               	goto	i1l914
  6455     02F6  2BA4               	goto	i1l915
  6456     02F7                     i1l5239:
  6457     02F7  3006               	movlw	6
  6458     02F8  0655               	xorwf	_flag,w
  6459     02F9  0456               	iorwf	_flag+1,w
  6460     02FA  1903               	btfsc	3,2
  6461     02FB  2AFD               	goto	u414_21
  6462     02FC  2AFE               	goto	u414_20
  6463     02FD                     u414_21:
  6464     02FD  2B71               	goto	i1l5277
  6465     02FE                     u414_20:
  6466     02FE                     i1l5241:
  6467     02FE  3007               	movlw	7
  6468     02FF  0655               	xorwf	_flag,w
  6469     0300  0456               	iorwf	_flag+1,w
  6470     0301  1903               	btfsc	3,2
  6471     0302  2B04               	goto	u415_21
  6472     0303  2B05               	goto	u415_20
  6473     0304                     u415_21:
  6474     0304  2B71               	goto	i1l5277
  6475     0305                     u415_20:
  6476     0305                     i1l5243:
  6477     0305  3008               	movlw	8
  6478     0306  0655               	xorwf	_flag,w
  6479     0307  0456               	iorwf	_flag+1,w
  6480     0308  1903               	btfsc	3,2
  6481     0309  2B0B               	goto	u416_21
  6482     030A  2B0C               	goto	u416_20
  6483     030B                     u416_21:
  6484     030B  2B71               	goto	i1l5277
  6485     030C                     u416_20:
  6486     030C                     i1l5245:
  6487     030C  3009               	movlw	9
  6488     030D  0655               	xorwf	_flag,w
  6489     030E  0456               	iorwf	_flag+1,w
  6490     030F  1903               	btfsc	3,2
  6491     0310  2B12               	goto	u417_21
  6492     0311  2B13               	goto	u417_20
  6493     0312                     u417_21:
  6494     0312  2B71               	goto	i1l5277
  6495     0313                     u417_20:
  6496     0313                     i1l5247:
  6497     0313  300A               	movlw	10
  6498     0314  0655               	xorwf	_flag,w
  6499     0315  0456               	iorwf	_flag+1,w
  6500     0316  1903               	btfsc	3,2
  6501     0317  2B19               	goto	u418_21
  6502     0318  2B1A               	goto	u418_20
  6503     0319                     u418_21:
  6504     0319  2B71               	goto	i1l5277
  6505     031A                     u418_20:
  6506     031A                     i1l5249:
  6507     031A  300B               	movlw	11
  6508     031B  0655               	xorwf	_flag,w
  6509     031C  0456               	iorwf	_flag+1,w
  6510     031D  1903               	btfsc	3,2
  6511     031E  2B20               	goto	u419_21
  6512     031F  2B21               	goto	u419_20
  6513     0320                     u419_21:
  6514     0320  2B71               	goto	i1l5277
  6515     0321                     u419_20:
  6516     0321                     i1l5251:
  6517     0321  300C               	movlw	12
  6518     0322  0655               	xorwf	_flag,w
  6519     0323  0456               	iorwf	_flag+1,w
  6520     0324  1903               	btfsc	3,2
  6521     0325  2B27               	goto	u420_21
  6522     0326  2B28               	goto	u420_20
  6523     0327                     u420_21:
  6524     0327  2B71               	goto	i1l5277
  6525     0328                     u420_20:
  6526     0328                     i1l5253:
  6527     0328  300F               	movlw	15
  6528     0329  0655               	xorwf	_flag,w
  6529     032A  0456               	iorwf	_flag+1,w
  6530     032B  1D03               	btfss	3,2
  6531     032C  2B2E               	goto	u421_21
  6532     032D  2B2F               	goto	u421_20
  6533     032E                     u421_21:
  6534     032E  2B9C               	goto	i1l5289
  6535     032F                     u421_20:
  6536     032F  2B71               	goto	i1l5277
  6537     0330                     i1l920:	
  6538                           ;main.c: 1037:                 case 0:
  6539                           
  6540                           
  6541                           ;main.c: 1038:                     LATDbits.LATD4 = 1;
  6542     0330  161B               	bsf	27,4	;volatile
  6543     0331                     i1l5255:
  6544                           
  6545                           ;main.c: 1039:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6546     0331  3006               	movlw	6
  6547     0332  0140               	movlb	0	; select bank0
  6548     0333  00CF               	movwf	??_ISR
  6549     0334  3030               	movlw	48
  6550     0335                     u439_27:
  6551     0335  0B89               	decfsz	9,f
  6552     0336  2B35               	goto	u439_27
  6553     0337  0BCF               	decfsz	??_ISR,f
  6554     0338  2B35               	goto	u439_27
  6555     0339  0000               	nop
  6556     033A                     i1l5257:
  6557                           
  6558                           ;main.c: 1040:                     LATDbits.LATD4 = 0;
  6559     033A  0140               	movlb	0	; select bank0
  6560     033B  121B               	bcf	27,4	;volatile
  6561                           
  6562                           ;main.c: 1041:                     break;
  6563     033C  2BA4               	goto	i1l915
  6564     033D                     i1l922:	
  6565                           ;main.c: 1042:                 case 1:
  6566                           
  6567                           
  6568                           ;main.c: 1043:                     LATDbits.LATD3 = 1;
  6569     033D  159B               	bsf	27,3	;volatile
  6570     033E                     i1l5259:
  6571                           
  6572                           ;main.c: 1044:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6573     033E  3006               	movlw	6
  6574     033F  0140               	movlb	0	; select bank0
  6575     0340  00CF               	movwf	??_ISR
  6576     0341  3030               	movlw	48
  6577     0342                     u440_27:
  6578     0342  0B89               	decfsz	9,f
  6579     0343  2B42               	goto	u440_27
  6580     0344  0BCF               	decfsz	??_ISR,f
  6581     0345  2B42               	goto	u440_27
  6582     0346  0000               	nop
  6583     0347                     i1l5261:
  6584                           
  6585                           ;main.c: 1045:                     LATDbits.LATD3 = 0;
  6586     0347  0140               	movlb	0	; select bank0
  6587     0348  119B               	bcf	27,3	;volatile
  6588                           
  6589                           ;main.c: 1046:                     break;
  6590     0349  2BA4               	goto	i1l915
  6591     034A                     i1l923:	
  6592                           ;main.c: 1047:                 case 2:
  6593                           
  6594                           
  6595                           ;main.c: 1048:                     LATDbits.LATD2 = 1;
  6596     034A  151B               	bsf	27,2	;volatile
  6597     034B                     i1l5263:
  6598                           
  6599                           ;main.c: 1049:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6600     034B  3006               	movlw	6
  6601     034C  0140               	movlb	0	; select bank0
  6602     034D  00CF               	movwf	??_ISR
  6603     034E  3030               	movlw	48
  6604     034F                     u441_27:
  6605     034F  0B89               	decfsz	9,f
  6606     0350  2B4F               	goto	u441_27
  6607     0351  0BCF               	decfsz	??_ISR,f
  6608     0352  2B4F               	goto	u441_27
  6609     0353  0000               	nop
  6610     0354                     i1l5265:
  6611                           
  6612                           ;main.c: 1050:                     LATDbits.LATD2 = 0;
  6613     0354  0140               	movlb	0	; select bank0
  6614     0355  111B               	bcf	27,2	;volatile
  6615                           
  6616                           ;main.c: 1051:                     break;
  6617     0356  2BA4               	goto	i1l915
  6618     0357                     i1l924:	
  6619                           ;main.c: 1052:                 case 3:
  6620                           
  6621                           
  6622                           ;main.c: 1053:                     LATDbits.LATD1 = 1;
  6623     0357  149B               	bsf	27,1	;volatile
  6624     0358                     i1l5267:
  6625                           
  6626                           ;main.c: 1054:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6627     0358  3006               	movlw	6
  6628     0359  0140               	movlb	0	; select bank0
  6629     035A  00CF               	movwf	??_ISR
  6630     035B  3030               	movlw	48
  6631     035C                     u442_27:
  6632     035C  0B89               	decfsz	9,f
  6633     035D  2B5C               	goto	u442_27
  6634     035E  0BCF               	decfsz	??_ISR,f
  6635     035F  2B5C               	goto	u442_27
  6636     0360  0000               	nop
  6637     0361                     i1l5269:
  6638                           
  6639                           ;main.c: 1055:                     LATDbits.LATD1 = 0;
  6640     0361  0140               	movlb	0	; select bank0
  6641     0362  109B               	bcf	27,1	;volatile
  6642                           
  6643                           ;main.c: 1056:                     break;
  6644     0363  2BA4               	goto	i1l915
  6645     0364                     i1l925:	
  6646                           ;main.c: 1057:                 case 4:
  6647                           
  6648                           
  6649                           ;main.c: 1058:                     LATDbits.LATD0 = 1;
  6650     0364  141B               	bsf	27,0	;volatile
  6651     0365                     i1l5271:
  6652                           
  6653                           ;main.c: 1059:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6654     0365  3006               	movlw	6
  6655     0366  0140               	movlb	0	; select bank0
  6656     0367  00CF               	movwf	??_ISR
  6657     0368  3030               	movlw	48
  6658     0369                     u443_27:
  6659     0369  0B89               	decfsz	9,f
  6660     036A  2B69               	goto	u443_27
  6661     036B  0BCF               	decfsz	??_ISR,f
  6662     036C  2B69               	goto	u443_27
  6663     036D  0000               	nop
  6664     036E                     i1l5273:
  6665                           
  6666                           ;main.c: 1060:                     LATDbits.LATD0 = 0;
  6667     036E  0140               	movlb	0	; select bank0
  6668     036F  101B               	bcf	27,0	;volatile
  6669                           
  6670                           ;main.c: 1061:                     break;
  6671     0370  2BA4               	goto	i1l915
  6672     0371                     i1l5277:
  6673     0371  085D               	movf	_current_digit,w
  6674                           
  6675                           ; Switch size 1, requested type "simple"
  6676                           ; Number of cases is 5, Range of values is 0 to 4
  6677                           ; switch strategies available:
  6678                           ; Name         Instructions Cycles
  6679                           ; direct_byte           16     6 (fixed)
  6680                           ; simple_byte           16     9 (average)
  6681                           ; jumptable            260     6 (fixed)
  6682                           ;	Chosen strategy is simple_byte
  6683     0372  3A00               	xorlw	0	; case 0
  6684     0373  1903               	skipnz
  6685     0374  2B30               	goto	i1l920
  6686     0375  3A01               	xorlw	1	; case 1
  6687     0376  1903               	skipnz
  6688     0377  2B3D               	goto	i1l922
  6689     0378  3A03               	xorlw	3	; case 2
  6690     0379  1903               	skipnz
  6691     037A  2B4A               	goto	i1l923
  6692     037B  3A01               	xorlw	1	; case 3
  6693     037C  1903               	skipnz
  6694     037D  2B57               	goto	i1l924
  6695     037E  3A07               	xorlw	7	; case 4
  6696     037F  1903               	skipnz
  6697     0380  2B64               	goto	i1l925
  6698     0381  2BA4               	goto	i1l915
  6699     0382                     i1l928:	
  6700                           ;main.c: 1067:                 case 3:
  6701                           
  6702                           
  6703                           ;main.c: 1068:                     LATDbits.LATD1 = 1;
  6704     0382  149B               	bsf	27,1	;volatile
  6705     0383                     i1l5279:
  6706                           
  6707                           ;main.c: 1069:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6708     0383  3006               	movlw	6
  6709     0384  0140               	movlb	0	; select bank0
  6710     0385  00CF               	movwf	??_ISR
  6711     0386  3030               	movlw	48
  6712     0387                     u444_27:
  6713     0387  0B89               	decfsz	9,f
  6714     0388  2B87               	goto	u444_27
  6715     0389  0BCF               	decfsz	??_ISR,f
  6716     038A  2B87               	goto	u444_27
  6717     038B  0000               	nop
  6718     038C                     i1l5281:
  6719                           
  6720                           ;main.c: 1070:                     LATDbits.LATD1 = 0;
  6721     038C  0140               	movlb	0	; select bank0
  6722     038D  109B               	bcf	27,1	;volatile
  6723                           
  6724                           ;main.c: 1071:                     break;
  6725     038E  2BA4               	goto	i1l915
  6726     038F                     i1l930:	
  6727                           ;main.c: 1072:                 case 4:
  6728                           
  6729                           
  6730                           ;main.c: 1073:                     LATDbits.LATD0 = 1;
  6731     038F  141B               	bsf	27,0	;volatile
  6732     0390                     i1l5283:
  6733                           
  6734                           ;main.c: 1074:                     _delay((unsigned long)((1)*(16000000/4000.0)));
  6735     0390  3006               	movlw	6
  6736     0391  0140               	movlb	0	; select bank0
  6737     0392  00CF               	movwf	??_ISR
  6738     0393  3030               	movlw	48
  6739     0394                     u445_27:
  6740     0394  0B89               	decfsz	9,f
  6741     0395  2B94               	goto	u445_27
  6742     0396  0BCF               	decfsz	??_ISR,f
  6743     0397  2B94               	goto	u445_27
  6744     0398  0000               	nop
  6745     0399                     i1l5285:
  6746                           
  6747                           ;main.c: 1075:                     LATDbits.LATD0 = 0;
  6748     0399  0140               	movlb	0	; select bank0
  6749     039A  101B               	bcf	27,0	;volatile
  6750                           
  6751                           ;main.c: 1076:                     break;
  6752     039B  2BA4               	goto	i1l915
  6753     039C                     i1l5289:
  6754     039C  085D               	movf	_current_digit,w
  6755                           
  6756                           ; Switch size 1, requested type "simple"
  6757                           ; Number of cases is 2, Range of values is 3 to 4
  6758                           ; switch strategies available:
  6759                           ; Name         Instructions Cycles
  6760                           ; simple_byte            7     4 (average)
  6761                           ; direct_byte           13     9 (fixed)
  6762                           ; jumptable            263     9 (fixed)
  6763                           ;	Chosen strategy is simple_byte
  6764     039D  3A03               	xorlw	3	; case 3
  6765     039E  1903               	skipnz
  6766     039F  2B82               	goto	i1l928
  6767     03A0  3A07               	xorlw	7	; case 4
  6768     03A1  1903               	skipnz
  6769     03A2  2B8F               	goto	i1l930
  6770     03A3  2BA4               	goto	i1l915
  6771     03A4                     i1l915:
  6772                           
  6773                           ;main.c: 1079:         LATDbits.LATD6=0;
  6774     03A4  131B               	bcf	27,6	;volatile
  6775     03A5                     i1l5291:
  6776                           
  6777                           ;main.c: 1081:         current_digit++;
  6778     03A5  3001               	movlw	1
  6779     03A6  07DD               	addwf	_current_digit,f
  6780     03A7                     i1l5293:
  6781                           
  6782                           ;main.c: 1082:         if (current_digit >= 5) {
  6783     03A7  3005               	movlw	5
  6784     03A8  025D               	subwf	_current_digit,w
  6785     03A9  1C03               	skipc
  6786     03AA  2BAC               	goto	u422_21
  6787     03AB  2BAD               	goto	u422_20
  6788     03AC                     u422_21:
  6789     03AC  2BAE               	goto	i1l5297
  6790     03AD                     u422_20:
  6791     03AD                     i1l5295:
  6792                           
  6793                           ;main.c: 1083:             current_digit = 0;
  6794     03AD  01DD               	clrf	_current_digit
  6795     03AE                     i1l5297:
  6796                           
  6797                           ;main.c: 1087:     if(INTCONbits.PEIE == 1)
  6798     03AE  1F0B               	btfss	11,6	;volatile
  6799     03AF  2BB1               	goto	u423_21
  6800     03B0  2BB2               	goto	u423_20
  6801     03B1                     u423_21:
  6802     03B1  2BDD               	goto	i1l938
  6803     03B2                     u423_20:
  6804     03B2                     i1l5299:
  6805                           
  6806                           ;main.c: 1088:     {;main.c: 1089:         if(PIE7bits.NVMIE == 1 && PIR7bits.NVMIF == 1
      +                          )
  6807     03B2  014E               	movlb	14	; select bank14
  6808     03B3  1E9D               	btfss	29,5	;volatile
  6809     03B4  2BB6               	goto	u424_21
  6810     03B5  2BB7               	goto	u424_20
  6811     03B6                     u424_21:
  6812     03B6  2BBE               	goto	i1l5305
  6813     03B7                     u424_20:
  6814     03B7                     i1l5301:
  6815     03B7  1E93               	btfss	19,5	;volatile
  6816     03B8  2BBA               	goto	u425_21
  6817     03B9  2BBB               	goto	u425_20
  6818     03BA                     u425_21:
  6819     03BA  2BBE               	goto	i1l5305
  6820     03BB                     u425_20:
  6821     03BB                     i1l5303:
  6822                           
  6823                           ;main.c: 1090:         {;main.c: 1091:             NVM_ISR();
  6824     03BB  3196  26DE  3180   	fcall	_NVM_ISR
  6825     03BE                     i1l5305:
  6826                           
  6827                           ;main.c: 1093:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  6828     03BE  014E               	movlb	14	; select bank14
  6829     03BF  1E19               	btfss	25,4	;volatile
  6830     03C0  2BC2               	goto	u426_21
  6831     03C1  2BC3               	goto	u426_20
  6832     03C2                     u426_21:
  6833     03C2  2BCE               	goto	i1l934
  6834     03C3                     u426_20:
  6835     03C3                     i1l5307:
  6836     03C3  1E0F               	btfss	15,4	;volatile
  6837     03C4  2BC6               	goto	u427_21
  6838     03C5  2BC7               	goto	u427_20
  6839     03C6                     u427_21:
  6840     03C6  2BCE               	goto	i1l934
  6841     03C7                     u427_20:
  6842     03C7                     i1l5309:
  6843                           
  6844                           ;main.c: 1094:         {;main.c: 1095:             EUSART1_TxInterruptHandler();
  6845     03C7  0142               	movlb	2	; select bank2
  6846     03C8  086F               	movf	(_EUSART1_TxInterruptHandler+1)^(0+256),w
  6847     03C9  008A               	movwf	10
  6848     03CA  086E               	movf	_EUSART1_TxInterruptHandler^(0+256),w
  6849     03CB  000A               	callw
  6850     03CC  3180               	pagesel	$
  6851                           
  6852                           ;main.c: 1096:         }
  6853     03CD  2BDD               	goto	i1l938
  6854     03CE                     i1l934:	
  6855                           ;main.c: 1097:         else if(PIE3bits.RC1IE == 1 && PIR3bits.RC1IF == 1)
  6856                           
  6857     03CE  1E99               	btfss	25,5	;volatile
  6858     03CF  2BD1               	goto	u428_21
  6859     03D0  2BD2               	goto	u428_20
  6860     03D1                     u428_21:
  6861     03D1  2BDD               	goto	i1l935
  6862     03D2                     u428_20:
  6863     03D2                     i1l5311:
  6864     03D2  1E8F               	btfss	15,5	;volatile
  6865     03D3  2BD5               	goto	u429_21
  6866     03D4  2BD6               	goto	u429_20
  6867     03D5                     u429_21:
  6868     03D5  2BDD               	goto	i1l935
  6869     03D6                     u429_20:
  6870     03D6                     i1l5313:
  6871                           
  6872                           ;main.c: 1098:         {;main.c: 1099:             EUSART1_RxInterruptHandler();
  6873     03D6  0142               	movlb	2	; select bank2
  6874     03D7  086D               	movf	(_EUSART1_RxInterruptHandler+1)^(0+256),w
  6875     03D8  008A               	movwf	10
  6876     03D9  086C               	movf	_EUSART1_RxInterruptHandler^(0+256),w
  6877     03DA  000A               	callw
  6878     03DB  3180               	pagesel	$
  6879                           
  6880                           ;main.c: 1100:         }
  6881     03DC  2BDD               	goto	i1l938
  6882     03DD                     i1l935:
  6883     03DD                     i1l938:
  6884     03DD  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6885     03DE  0009               	retfie
  6886     03DF                     __end_of_ISR:
  6887                           
  6888                           	psect	text14
  6889     0569                     __ptext14:	
  6890 ;; *************** function _updateMode *****************
  6891 ;; Defined at:
  6892 ;;		line 1108 in file "main.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;		None
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6908 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6910 ;;Total ram usage:        2 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; Hardware stack levels required when called: 8
  6913 ;; This function calls:
  6914 ;;		_updateLEDs
  6915 ;; This function is called by:
  6916 ;;		_ISR
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920     0569                     _updateMode:	
  6921                           ;psect for function _updateMode
  6922                           
  6923     0569                     i1l4889:	
  6924                           ;incstack = 0
  6925                           ; Regs used in _updateMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6926                           
  6927                           
  6928                           ;main.c: 1111:     if (shortPressDetectedPowerSwitch) {
  6929     0569  0141               	movlb	1	; select bank1
  6930     056A  0855               	movf	_shortPressDetectedPowerSwitch^(0+128),w	;volatile
  6931     056B  1903               	btfsc	3,2
  6932     056C  2D6E               	goto	u343_21
  6933     056D  2D6F               	goto	u343_20
  6934     056E                     u343_21:
  6935     056E  2D8D               	goto	i1l4905
  6936     056F                     u343_20:
  6937     056F                     i1l4891:
  6938                           
  6939                           ;main.c: 1112:         if (currentMode == STOP_CONTROLLER_MODE) {
  6940     056F  0140               	movlb	0	; select bank0
  6941     0570  085B               	movf	_currentMode,w
  6942     0571  1D03               	btfss	3,2
  6943     0572  2D74               	goto	u344_21
  6944     0573  2D75               	goto	u344_20
  6945     0574                     u344_21:
  6946     0574  2D88               	goto	i1l4899
  6947     0575                     u344_20:
  6948     0575                     i1l4893:
  6949                           
  6950                           ;main.c: 1113:             currentMode = START_CONTROLLER_MODE;
  6951     0575  3001               	movlw	1
  6952     0576  00DB               	movwf	_currentMode
  6953                           
  6954                           ;main.c: 1114:             currentStage = STAGE_1;
  6955     0577  3001               	movlw	1
  6956     0578  00DC               	movwf	_currentStage
  6957     0579                     i1l4895:
  6958                           
  6959                           ;main.c: 1115:             currentStage1Mode = MODE_VOLTAGE;
  6960     0579  01DA               	clrf	_currentStage1Mode
  6961     057A                     i1l4897:
  6962                           
  6963                           ;main.c: 1116:             _delay((unsigned long)((500)*(16000000/4000.0)));
  6964     057A  300B               	movlw	11
  6965     057B  0140               	movlb	0	; select bank0
  6966     057C  00CE               	movwf	??_updateMode+1
  6967     057D  3026               	movlw	38
  6968     057E  00CD               	movwf	??_updateMode
  6969     057F  305D               	movlw	93
  6970     0580                     u446_27:
  6971     0580  0B89               	decfsz	9,f
  6972     0581  2D80               	goto	u446_27
  6973     0582  0BCD               	decfsz	??_updateMode,f
  6974     0583  2D80               	goto	u446_27
  6975     0584  0BCE               	decfsz	??_updateMode+1,f
  6976     0585  2D80               	goto	u446_27
  6977     0586  3200               	nop2
  6978                           
  6979                           ;main.c: 1117:         } else {
  6980     0587  2D8B               	goto	i1l4903
  6981     0588                     i1l4899:
  6982                           
  6983                           ;main.c: 1118:             currentMode = STOP_CONTROLLER_MODE;
  6984     0588  01DB               	clrf	_currentMode
  6985                           
  6986                           ;main.c: 1119:             currentStage = STAGE_0;
  6987     0589  01DC               	clrf	_currentStage
  6988     058A  2D7A               	goto	i1l4897
  6989     058B                     i1l4903:
  6990                           
  6991                           ;main.c: 1122:         shortPressDetectedPowerSwitch = 0;
  6992     058B  0141               	movlb	1	; select bank1
  6993     058C  01D5               	clrf	_shortPressDetectedPowerSwitch^(0+128)	;volatile
  6994     058D                     i1l4905:
  6995                           
  6996                           ;main.c: 1126:     if (currentMode == START_CONTROLLER_MODE) {
  6997     058D  0140               	movlb	0	; select bank0
  6998     058E  035B               	decf	_currentMode,w
  6999     058F  1D03               	btfss	3,2
  7000     0590  2D92               	goto	u345_21
  7001     0591  2D93               	goto	u345_20
  7002     0592                     u345_21:
  7003     0592  2E57               	goto	i1l4963
  7004     0593                     u345_20:
  7005     0593                     i1l4907:
  7006                           
  7007                           ;main.c: 1129:         if (longPressDetectedSimultaneous) {
  7008     0593  0141               	movlb	1	; select bank1
  7009     0594  085B               	movf	_longPressDetectedSimultaneous^(0+128),w	;volatile
  7010     0595  1903               	btfsc	3,2
  7011     0596  2D98               	goto	u346_21
  7012     0597  2D99               	goto	u346_20
  7013     0598                     u346_21:
  7014     0598  2DBC               	goto	i1l4925
  7015     0599                     u346_20:
  7016     0599                     i1l4909:
  7017                           
  7018                           ;main.c: 1130:             if (currentStage == STAGE_1) {
  7019     0599  0140               	movlb	0	; select bank0
  7020     059A  035C               	decf	_currentStage,w
  7021     059B  1D03               	btfss	3,2
  7022     059C  2D9E               	goto	u347_21
  7023     059D  2D9F               	goto	u347_20
  7024     059E                     u347_21:
  7025     059E  2DA4               	goto	i1l4915
  7026     059F                     u347_20:
  7027     059F                     i1l4911:
  7028                           
  7029                           ;main.c: 1131:                 currentStage = STAGE_2;
  7030     059F  3002               	movlw	2
  7031     05A0  00DC               	movwf	_currentStage
  7032     05A1                     i1l4913:
  7033                           
  7034                           ;main.c: 1132:                 currentStage2Mode = MODE_NPN_SENSOR_I;
  7035     05A1  0141               	movlb	1	; select bank1
  7036     05A2  01EB               	clrf	_currentStage2Mode^(0+128)
  7037                           
  7038                           ;main.c: 1133:             } else if (currentStage == STAGE_2) {
  7039     05A3  2DAD               	goto	i1l4921
  7040     05A4                     i1l4915:
  7041     05A4  3002               	movlw	2
  7042     05A5  065C               	xorwf	_currentStage,w
  7043     05A6  1D03               	btfss	3,2
  7044     05A7  2DA9               	goto	u348_21
  7045     05A8  2DAA               	goto	u348_20
  7046     05A9                     u348_21:
  7047     05A9  2DAD               	goto	i1l4921
  7048     05AA                     u348_20:
  7049     05AA                     i1l4917:
  7050                           
  7051                           ;main.c: 1134:                 currentStage = STAGE_1;
  7052     05AA  3001               	movlw	1
  7053     05AB  00DC               	movwf	_currentStage
  7054     05AC                     i1l4919:
  7055                           
  7056                           ;main.c: 1135:                 currentStage1Mode = MODE_VOLTAGE;
  7057     05AC  01DA               	clrf	_currentStage1Mode
  7058     05AD                     i1l4921:
  7059                           
  7060                           ;main.c: 1137:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  7061     05AD  3015               	movlw	21
  7062     05AE  0140               	movlb	0	; select bank0
  7063     05AF  00CE               	movwf	??_updateMode+1
  7064     05B0  304B               	movlw	75
  7065     05B1  00CD               	movwf	??_updateMode
  7066     05B2  30BE               	movlw	190
  7067     05B3                     u447_27:
  7068     05B3  0B89               	decfsz	9,f
  7069     05B4  2DB3               	goto	u447_27
  7070     05B5  0BCD               	decfsz	??_updateMode,f
  7071     05B6  2DB3               	goto	u447_27
  7072     05B7  0BCE               	decfsz	??_updateMode+1,f
  7073     05B8  2DB3               	goto	u447_27
  7074     05B9  0000               	nop
  7075     05BA                     i1l4923:
  7076                           
  7077                           ;main.c: 1138:             longPressDetectedSimultaneous = 0;
  7078     05BA  0141               	movlb	1	; select bank1
  7079     05BB  01DB               	clrf	_longPressDetectedSimultaneous^(0+128)	;volatile
  7080     05BC                     i1l4925:
  7081                           
  7082                           ;main.c: 1142:         if (longPressDetectedSettingSwitch) {
  7083     05BC  085C               	movf	_longPressDetectedSettingSwitch^(0+128),w	;volatile
  7084     05BD  1903               	btfsc	3,2
  7085     05BE  2DC0               	goto	u349_21
  7086     05BF  2DC1               	goto	u349_20
  7087     05C0                     u349_21:
  7088     05C0  2DE4               	goto	i1l4941
  7089     05C1                     u349_20:
  7090     05C1                     i1l4927:
  7091                           
  7092                           ;main.c: 1143:             if (currentStage == STAGE_1 && currentStage1Mode == MODE_VOLT
      +                          AGE) {
  7093     05C1  0140               	movlb	0	; select bank0
  7094     05C2  035C               	decf	_currentStage,w
  7095     05C3  1D03               	btfss	3,2
  7096     05C4  2DC6               	goto	u350_21
  7097     05C5  2DC7               	goto	u350_20
  7098     05C6                     u350_21:
  7099     05C6  2DCF               	goto	i1l4933
  7100     05C7                     u350_20:
  7101     05C7                     i1l4929:
  7102     05C7  085A               	movf	_currentStage1Mode,w
  7103     05C8  1D03               	btfss	3,2
  7104     05C9  2DCB               	goto	u351_21
  7105     05CA  2DCC               	goto	u351_20
  7106     05CB                     u351_21:
  7107     05CB  2DCF               	goto	i1l4933
  7108     05CC                     u351_20:
  7109     05CC                     i1l4931:
  7110                           
  7111                           ;main.c: 1144:                 currentStage1Mode = MODE_FREQUENCY;
  7112     05CC  3001               	movlw	1
  7113     05CD  00DA               	movwf	_currentStage1Mode
  7114                           
  7115                           ;main.c: 1145:             } else if (currentStage == STAGE_1) {
  7116     05CE  2DD5               	goto	i1l4937
  7117     05CF                     i1l4933:
  7118     05CF  035C               	decf	_currentStage,w
  7119     05D0  1D03               	btfss	3,2
  7120     05D1  2DD3               	goto	u352_21
  7121     05D2  2DD4               	goto	u352_20
  7122     05D3                     u352_21:
  7123     05D3  2DD5               	goto	i1l4937
  7124     05D4                     u352_20:
  7125     05D4                     i1l4935:
  7126                           
  7127                           ;main.c: 1146:                 currentStage1Mode = MODE_VOLTAGE;
  7128     05D4  01DA               	clrf	_currentStage1Mode
  7129     05D5                     i1l4937:
  7130                           
  7131                           ;main.c: 1148:             _delay((unsigned long)((1000)*(16000000/4000.0)));
  7132     05D5  3015               	movlw	21
  7133     05D6  0140               	movlb	0	; select bank0
  7134     05D7  00CE               	movwf	??_updateMode+1
  7135     05D8  304B               	movlw	75
  7136     05D9  00CD               	movwf	??_updateMode
  7137     05DA  30BE               	movlw	190
  7138     05DB                     u448_27:
  7139     05DB  0B89               	decfsz	9,f
  7140     05DC  2DDB               	goto	u448_27
  7141     05DD  0BCD               	decfsz	??_updateMode,f
  7142     05DE  2DDB               	goto	u448_27
  7143     05DF  0BCE               	decfsz	??_updateMode+1,f
  7144     05E0  2DDB               	goto	u448_27
  7145     05E1  0000               	nop
  7146     05E2                     i1l4939:
  7147                           
  7148                           ;main.c: 1149:             longPressDetectedSettingSwitch = 0;
  7149     05E2  0141               	movlb	1	; select bank1
  7150     05E3  01DC               	clrf	_longPressDetectedSettingSwitch^(0+128)	;volatile
  7151     05E4                     i1l4941:
  7152                           
  7153                           ;main.c: 1153:         if (shortPressDetected) {
  7154     05E4  085A               	movf	_shortPressDetected^(0+128),w	;volatile
  7155     05E5  1903               	btfsc	3,2
  7156     05E6  2DE8               	goto	u353_21
  7157     05E7  2DE9               	goto	u353_20
  7158     05E8                     u353_21:
  7159     05E8  2E57               	goto	i1l4963
  7160     05E9                     u353_20:
  7161     05E9                     i1l4943:
  7162                           
  7163                           ;main.c: 1154:             if (currentStage == STAGE_1) {
  7164     05E9  0140               	movlb	0	; select bank0
  7165     05EA  035C               	decf	_currentStage,w
  7166     05EB  1D03               	btfss	3,2
  7167     05EC  2DEE               	goto	u354_21
  7168     05ED  2DEF               	goto	u354_20
  7169     05EE                     u354_21:
  7170     05EE  2E12               	goto	i1l4951
  7171     05EF                     u354_20:
  7172     05EF  2DFC               	goto	i1l4949
  7173     05F0                     i1l956:	
  7174                           ;main.c: 1156:                     case MODE_FREQUENCY:
  7175                           
  7176                           
  7177                           ;main.c: 1157:                         currentStage1Mode = MODE_ON_DELAY;
  7178     05F0  3002               	movlw	2
  7179     05F1  00DA               	movwf	_currentStage1Mode
  7180                           
  7181                           ;main.c: 1158:                         break;
  7182     05F2  2E55               	goto	i1l4961
  7183     05F3                     i1l958:	
  7184                           ;main.c: 1159:                     case MODE_ON_DELAY:
  7185                           
  7186                           
  7187                           ;main.c: 1160:                         currentStage1Mode = MODE_OFF_DELAY;
  7188     05F3  3003               	movlw	3
  7189     05F4  00DA               	movwf	_currentStage1Mode
  7190                           
  7191                           ;main.c: 1161:                         break;
  7192     05F5  2E55               	goto	i1l4961
  7193     05F6                     i1l959:	
  7194                           ;main.c: 1162:                     case MODE_OFF_DELAY:
  7195                           
  7196                           
  7197                           ;main.c: 1163:                         currentStage1Mode = MODE_SOFT_START_DELAY;
  7198     05F6  3004               	movlw	4
  7199     05F7  00DA               	movwf	_currentStage1Mode
  7200                           
  7201                           ;main.c: 1164:                         break;
  7202     05F8  2E55               	goto	i1l4961
  7203     05F9                     i1l960:	
  7204                           ;main.c: 1165:                     case MODE_SOFT_START_DELAY:
  7205                           
  7206                           
  7207                           ;main.c: 1166:                         currentStage1Mode = MODE_FREQUENCY;
  7208     05F9  3001               	movlw	1
  7209     05FA  00DA               	movwf	_currentStage1Mode
  7210                           
  7211                           ;main.c: 1167:                         break;
  7212     05FB  2E55               	goto	i1l4961
  7213     05FC                     i1l4949:
  7214     05FC  085A               	movf	_currentStage1Mode,w
  7215     05FD  00CD               	movwf	??_updateMode
  7216     05FE  01CE               	clrf	??_updateMode+1
  7217                           
  7218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7219                           ; Switch size 1, requested type "simple"
  7220                           ; Number of cases is 1, Range of values is 0 to 0
  7221                           ; switch strategies available:
  7222                           ; Name         Instructions Cycles
  7223                           ; simple_byte            4     3 (average)
  7224                           ; direct_byte            8     6 (fixed)
  7225                           ; jumptable            260     6 (fixed)
  7226                           ;	Chosen strategy is simple_byte
  7227     05FF  084E               	movf	??_updateMode+1,w
  7228     0600  3A00               	xorlw	0	; case 0
  7229     0601  1903               	skipnz
  7230     0602  2E04               	goto	i1l5567
  7231     0603  2E55               	goto	i1l4961
  7232     0604                     i1l5567:
  7233                           
  7234                           ; Switch size 1, requested type "simple"
  7235                           ; Number of cases is 4, Range of values is 1 to 4
  7236                           ; switch strategies available:
  7237                           ; Name         Instructions Cycles
  7238                           ; simple_byte           13     7 (average)
  7239                           ; direct_byte           17     9 (fixed)
  7240                           ; jumptable            263     9 (fixed)
  7241                           ;	Chosen strategy is simple_byte
  7242     0604  084D               	movf	??_updateMode,w
  7243     0605  3A01               	xorlw	1	; case 1
  7244     0606  1903               	skipnz
  7245     0607  2DF0               	goto	i1l956
  7246     0608  3A03               	xorlw	3	; case 2
  7247     0609  1903               	skipnz
  7248     060A  2DF3               	goto	i1l958
  7249     060B  3A01               	xorlw	1	; case 3
  7250     060C  1903               	skipnz
  7251     060D  2DF6               	goto	i1l959
  7252     060E  3A07               	xorlw	7	; case 4
  7253     060F  1903               	skipnz
  7254     0610  2DF9               	goto	i1l960
  7255     0611  2E55               	goto	i1l4961
  7256     0612                     i1l4951:
  7257     0612  3002               	movlw	2
  7258     0613  065C               	xorwf	_currentStage,w
  7259     0614  1D03               	btfss	3,2
  7260     0615  2E17               	goto	u355_21
  7261     0616  2E18               	goto	u355_20
  7262     0617                     u355_21:
  7263     0617  2E55               	goto	i1l4961
  7264     0618                     u355_20:
  7265     0618  2E34               	goto	i1l4959
  7266     0619                     i1l965:	
  7267                           ;main.c: 1173:                     case MODE_NPN_SENSOR_I:
  7268                           
  7269                           
  7270                           ;main.c: 1174:                         currentStage2Mode = MODE_SENSOR_II;
  7271     0619  3001               	movlw	1
  7272     061A  0141               	movlb	1	; select bank1
  7273     061B  00EB               	movwf	_currentStage2Mode^(0+128)
  7274                           
  7275                           ;main.c: 1175:                         break;
  7276     061C  2E55               	goto	i1l4961
  7277     061D                     i1l967:	
  7278                           ;main.c: 1176:                     case MODE_SENSOR_II:
  7279                           
  7280                           
  7281                           ;main.c: 1177:                         currentStage2Mode = MODE_PHOTO_SENSOR;
  7282     061D  3002               	movlw	2
  7283     061E  0141               	movlb	1	; select bank1
  7284     061F  00EB               	movwf	_currentStage2Mode^(0+128)
  7285                           
  7286                           ;main.c: 1178:                         break;
  7287     0620  2E55               	goto	i1l4961
  7288     0621                     i1l968:	
  7289                           ;main.c: 1179:                     case MODE_PHOTO_SENSOR:
  7290                           
  7291                           
  7292                           ;main.c: 1180:                         currentStage2Mode = MODE_SPEED_CONTROL;
  7293     0621  3003               	movlw	3
  7294     0622  0141               	movlb	1	; select bank1
  7295     0623  00EB               	movwf	_currentStage2Mode^(0+128)
  7296                           
  7297                           ;main.c: 1181:                         break;
  7298     0624  2E55               	goto	i1l4961
  7299     0625                     i1l969:	
  7300                           ;main.c: 1182:                     case MODE_SPEED_CONTROL:
  7301                           
  7302                           
  7303                           ;main.c: 1183:                         currentStage2Mode = MODE_SPEED_A_B;
  7304     0625  3004               	movlw	4
  7305     0626  0141               	movlb	1	; select bank1
  7306     0627  00EB               	movwf	_currentStage2Mode^(0+128)
  7307                           
  7308                           ;main.c: 1184:                         break;
  7309     0628  2E55               	goto	i1l4961
  7310     0629                     i1l970:	
  7311                           ;main.c: 1185:                     case MODE_SPEED_A_B:
  7312                           
  7313                           
  7314                           ;main.c: 1186:                         currentStage2Mode = MODE_CONTROL_OUTPUT;
  7315     0629  3005               	movlw	5
  7316     062A  0141               	movlb	1	; select bank1
  7317     062B  00EB               	movwf	_currentStage2Mode^(0+128)
  7318                           
  7319                           ;main.c: 1187:                         break;
  7320     062C  2E55               	goto	i1l4961
  7321     062D                     i1l971:	
  7322                           ;main.c: 1188:                     case MODE_CONTROL_OUTPUT:
  7323                           
  7324                           
  7325                           ;main.c: 1189:                         currentStage2Mode = MODE_CURRENT_OUTPUT;
  7326     062D  3006               	movlw	6
  7327     062E  0141               	movlb	1	; select bank1
  7328     062F  00EB               	movwf	_currentStage2Mode^(0+128)
  7329                           
  7330                           ;main.c: 1190:                         break;
  7331     0630  2E55               	goto	i1l4961
  7332     0631                     i1l4955:
  7333                           
  7334                           ;main.c: 1192:                         currentStage2Mode = MODE_NPN_SENSOR_I;
  7335     0631  0141               	movlb	1	; select bank1
  7336     0632  01EB               	clrf	_currentStage2Mode^(0+128)
  7337                           
  7338                           ;main.c: 1193:                         break;
  7339     0633  2E55               	goto	i1l4961
  7340     0634                     i1l4959:
  7341     0634  0141               	movlb	1	; select bank1
  7342     0635  086B               	movf	_currentStage2Mode^(0+128),w
  7343     0636  0140               	movlb	0	; select bank0
  7344     0637  00CD               	movwf	??_updateMode
  7345     0638  01CE               	clrf	??_updateMode+1
  7346                           
  7347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7348                           ; Switch size 1, requested type "simple"
  7349                           ; Number of cases is 1, Range of values is 0 to 0
  7350                           ; switch strategies available:
  7351                           ; Name         Instructions Cycles
  7352                           ; simple_byte            4     3 (average)
  7353                           ; direct_byte            8     6 (fixed)
  7354                           ; jumptable            260     6 (fixed)
  7355                           ;	Chosen strategy is simple_byte
  7356     0639  084E               	movf	??_updateMode+1,w
  7357     063A  3A00               	xorlw	0	; case 0
  7358     063B  1903               	skipnz
  7359     063C  2E3E               	goto	i1l5569
  7360     063D  2E55               	goto	i1l4961
  7361     063E                     i1l5569:
  7362                           
  7363                           ; Switch size 1, requested type "simple"
  7364                           ; Number of cases is 7, Range of values is 0 to 6
  7365                           ; switch strategies available:
  7366                           ; Name         Instructions Cycles
  7367                           ; direct_byte           20     6 (fixed)
  7368                           ; simple_byte           22    12 (average)
  7369                           ; jumptable            260     6 (fixed)
  7370                           ;	Chosen strategy is simple_byte
  7371     063E  084D               	movf	??_updateMode,w
  7372     063F  3A00               	xorlw	0	; case 0
  7373     0640  1903               	skipnz
  7374     0641  2E19               	goto	i1l965
  7375     0642  3A01               	xorlw	1	; case 1
  7376     0643  1903               	skipnz
  7377     0644  2E1D               	goto	i1l967
  7378     0645  3A03               	xorlw	3	; case 2
  7379     0646  1903               	skipnz
  7380     0647  2E21               	goto	i1l968
  7381     0648  3A01               	xorlw	1	; case 3
  7382     0649  1903               	skipnz
  7383     064A  2E25               	goto	i1l969
  7384     064B  3A07               	xorlw	7	; case 4
  7385     064C  1903               	skipnz
  7386     064D  2E29               	goto	i1l970
  7387     064E  3A01               	xorlw	1	; case 5
  7388     064F  1903               	skipnz
  7389     0650  2E2D               	goto	i1l971
  7390     0651  3A03               	xorlw	3	; case 6
  7391     0652  1903               	skipnz
  7392     0653  2E31               	goto	i1l4955
  7393     0654  2E55               	goto	i1l4961
  7394     0655                     i1l4961:
  7395                           
  7396                           ;main.c: 1198:             shortPressDetected = 0;
  7397     0655  0141               	movlb	1	; select bank1
  7398     0656  01DA               	clrf	_shortPressDetected^(0+128)	;volatile
  7399     0657                     i1l4963:
  7400                           
  7401                           ;main.c: 1202:     updateLEDs();
  7402     0657  3187  274A  3185   	fcall	_updateLEDs
  7403     065A                     i1l974:
  7404     065A  0008               	return
  7405     065B                     __end_of_updateMode:
  7406                           
  7407                           	psect	text15
  7408     074A                     __ptext15:	
  7409 ;; *************** function _updateLEDs *****************
  7410 ;; Defined at:
  7411 ;;		line 1204 in file "main.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7427 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7429 ;;Total ram usage:        2 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 7
  7432 ;; This function calls:
  7433 ;;		_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
  7434 ;;		_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT
  7435 ;;		_control_led_and_7segment_FOR_MODE_FREQUENCY
  7436 ;;		_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I
  7437 ;;		_control_led_and_7segment_FOR_MODE_OFF_DELAY
  7438 ;;		_control_led_and_7segment_FOR_MODE_ON_DELAY
  7439 ;;		_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR
  7440 ;;		_control_led_and_7segment_FOR_MODE_SENSOR_II
  7441 ;;		_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  7442 ;;		_control_led_and_7segment_FOR_MODE_SPEED_A_B
  7443 ;;		_control_led_and_7segment_FOR_MODE_SPEED_CONTROL
  7444 ;;		_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER
  7445 ;;		_control_led_and_7segment_FOR_MODE_VOLTAGE
  7446 ;; This function is called by:
  7447 ;;		_updateMode
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451     074A                     _updateLEDs:	
  7452                           ;psect for function _updateLEDs
  7453                           
  7454     074A                     i1l4653:	
  7455                           ;incstack = 0
  7456                           ; Regs used in _updateLEDs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7457                           
  7458                           
  7459                           ;main.c: 1205:     if (currentMode == STOP_CONTROLLER_MODE) {
  7460     074A  0140               	movlb	0	; select bank0
  7461     074B  085B               	movf	_currentMode,w
  7462     074C  1D03               	btfss	3,2
  7463     074D  2F4F               	goto	u329_21
  7464     074E  2F50               	goto	u329_20
  7465     074F                     u329_21:
  7466     074F  2F59               	goto	i1l4659
  7467     0750                     u329_20:
  7468     0750                     i1l4655:
  7469                           
  7470                           ;main.c: 1207:         LATEbits.LATE1 = 0;
  7471     0750  109C               	bcf	28,1	;volatile
  7472                           
  7473                           ;main.c: 1208:         LATBbits.LATB1 = 1;
  7474     0751  1499               	bsf	25,1	;volatile
  7475                           
  7476                           ;main.c: 1209:         LATBbits.LATB2 = 0;
  7477     0752  1119               	bcf	25,2	;volatile
  7478                           
  7479                           ;main.c: 1210:         LATBbits.LATB3 = 0;
  7480     0753  1199               	bcf	25,3	;volatile
  7481                           
  7482                           ;main.c: 1211:         LATBbits.LATB4 = 0;
  7483     0754  1219               	bcf	25,4	;volatile
  7484     0755                     i1l4657:
  7485                           
  7486                           ;main.c: 1212:         control_led_and_7segment_FOR_MODE_STOP_CONTROLLER();
  7487     0755  318A  2234  3187   	fcall	_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER
  7488                           
  7489                           ;main.c: 1213:     }
  7490     0758  2FF3               	goto	i1l998
  7491     0759                     i1l4659:
  7492     0759  035C               	decf	_currentStage,w
  7493     075A  1D03               	btfss	3,2
  7494     075B  2F5D               	goto	u330_21
  7495     075C  2F5E               	goto	u330_20
  7496     075D                     u330_21:
  7497     075D  2FA5               	goto	i1l4677
  7498     075E                     u330_20:
  7499     075E  2F8C               	goto	i1l4675
  7500     075F                     i1l981:	
  7501                           ;main.c: 1216:             case MODE_VOLTAGE:
  7502                           
  7503                           
  7504                           ;main.c: 1217:                 LATEbits.LATE1 = 1;
  7505     075F  149C               	bsf	28,1	;volatile
  7506                           
  7507                           ;main.c: 1218:                 LATBbits.LATB1 = 0;
  7508     0760  1099               	bcf	25,1	;volatile
  7509                           
  7510                           ;main.c: 1219:                 LATBbits.LATB2 = 0;
  7511     0761  1119               	bcf	25,2	;volatile
  7512                           
  7513                           ;main.c: 1220:                 LATBbits.LATB3 = 0;
  7514     0762  1199               	bcf	25,3	;volatile
  7515                           
  7516                           ;main.c: 1221:                 LATBbits.LATB4 = 0;
  7517     0763  1219               	bcf	25,4	;volatile
  7518     0764                     i1l4663:
  7519                           
  7520                           ;main.c: 1222:                 control_led_and_7segment_FOR_MODE_VOLTAGE();
  7521     0764  318D  2576  3187   	fcall	_control_led_and_7segment_FOR_MODE_VOLTAGE
  7522                           
  7523                           ;main.c: 1223:                 break;
  7524     0767  2FF3               	goto	i1l998
  7525     0768                     i1l983:	
  7526                           ;main.c: 1224:             case MODE_FREQUENCY:
  7527                           
  7528                           
  7529                           ;main.c: 1225:                 LATEbits.LATE1 = 0;
  7530     0768  109C               	bcf	28,1	;volatile
  7531                           
  7532                           ;main.c: 1226:                 LATBbits.LATB1 = 1;
  7533     0769  1499               	bsf	25,1	;volatile
  7534                           
  7535                           ;main.c: 1227:                 LATBbits.LATB2 = 0;
  7536     076A  1119               	bcf	25,2	;volatile
  7537                           
  7538                           ;main.c: 1228:                 LATBbits.LATB3 = 0;
  7539     076B  1199               	bcf	25,3	;volatile
  7540                           
  7541                           ;main.c: 1229:                 LATBbits.LATB4 = 0;
  7542     076C  1219               	bcf	25,4	;volatile
  7543     076D                     i1l4665:
  7544                           
  7545                           ;main.c: 1230:                 control_led_and_7segment_FOR_MODE_FREQUENCY();
  7546     076D  3184  2455  3187   	fcall	_control_led_and_7segment_FOR_MODE_FREQUENCY
  7547                           
  7548                           ;main.c: 1231:                 break;
  7549     0770  2FF3               	goto	i1l998
  7550     0771                     i1l984:	
  7551                           ;main.c: 1232:             case MODE_ON_DELAY:
  7552                           
  7553                           
  7554                           ;main.c: 1233:                 LATEbits.LATE1 = 0;
  7555     0771  109C               	bcf	28,1	;volatile
  7556                           
  7557                           ;main.c: 1234:                 LATBbits.LATB1 = 0;
  7558     0772  1099               	bcf	25,1	;volatile
  7559                           
  7560                           ;main.c: 1235:                 LATBbits.LATB2 = 1;
  7561     0773  1519               	bsf	25,2	;volatile
  7562                           
  7563                           ;main.c: 1236:                 LATBbits.LATB3 = 0;
  7564     0774  1199               	bcf	25,3	;volatile
  7565                           
  7566                           ;main.c: 1237:                 LATBbits.LATB4 = 0;
  7567     0775  1219               	bcf	25,4	;volatile
  7568     0776                     i1l4667:
  7569                           
  7570                           ;main.c: 1238:                 control_led_and_7segment_FOR_MODE_ON_DELAY();
  7571     0776  318F  2723  3187   	fcall	_control_led_and_7segment_FOR_MODE_ON_DELAY
  7572                           
  7573                           ;main.c: 1239:                 break;
  7574     0779  2FF3               	goto	i1l998
  7575     077A                     i1l985:	
  7576                           ;main.c: 1240:             case MODE_OFF_DELAY:
  7577                           
  7578                           
  7579                           ;main.c: 1241:                 LATEbits.LATE1 = 0;
  7580     077A  109C               	bcf	28,1	;volatile
  7581                           
  7582                           ;main.c: 1242:                 LATBbits.LATB1 = 0;
  7583     077B  1099               	bcf	25,1	;volatile
  7584                           
  7585                           ;main.c: 1243:                 LATBbits.LATB2 = 0;
  7586     077C  1119               	bcf	25,2	;volatile
  7587                           
  7588                           ;main.c: 1244:                 LATBbits.LATB3 = 1;
  7589     077D  1599               	bsf	25,3	;volatile
  7590                           
  7591                           ;main.c: 1245:                 LATBbits.LATB4 = 0;
  7592     077E  1219               	bcf	25,4	;volatile
  7593     077F                     i1l4669:
  7594                           
  7595                           ;main.c: 1246:                 control_led_and_7segment_FOR_MODE_OFF_DELAY();
  7596     077F  318E  2646  3187   	fcall	_control_led_and_7segment_FOR_MODE_OFF_DELAY
  7597                           
  7598                           ;main.c: 1247:                 break;
  7599     0782  2FF3               	goto	i1l998
  7600     0783                     i1l986:	
  7601                           ;main.c: 1248:             case MODE_SOFT_START_DELAY:
  7602                           
  7603                           
  7604                           ;main.c: 1249:                 LATEbits.LATE1 = 0;
  7605     0783  109C               	bcf	28,1	;volatile
  7606                           
  7607                           ;main.c: 1250:                 LATBbits.LATB1 = 0;
  7608     0784  1099               	bcf	25,1	;volatile
  7609                           
  7610                           ;main.c: 1251:                 LATBbits.LATB2 = 0;
  7611     0785  1119               	bcf	25,2	;volatile
  7612                           
  7613                           ;main.c: 1252:                 LATBbits.LATB3 = 0;
  7614     0786  1199               	bcf	25,3	;volatile
  7615                           
  7616                           ;main.c: 1253:                 LATBbits.LATB4 = 1;
  7617     0787  1619               	bsf	25,4	;volatile
  7618     0788                     i1l4671:
  7619                           
  7620                           ;main.c: 1254:                 control_led_and_7segment_FOR_MODE_SOFT_START_DELAY();
  7621     0788  3186  265B  3187   	fcall	_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  7622                           
  7623                           ;main.c: 1255:                 break;
  7624     078B  2FF3               	goto	i1l998
  7625     078C                     i1l4675:
  7626     078C  085A               	movf	_currentStage1Mode,w
  7627     078D  00CB               	movwf	??_updateLEDs
  7628     078E  01CC               	clrf	??_updateLEDs+1
  7629                           
  7630                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7631                           ; Switch size 1, requested type "simple"
  7632                           ; Number of cases is 1, Range of values is 0 to 0
  7633                           ; switch strategies available:
  7634                           ; Name         Instructions Cycles
  7635                           ; simple_byte            4     3 (average)
  7636                           ; direct_byte            8     6 (fixed)
  7637                           ; jumptable            260     6 (fixed)
  7638                           ;	Chosen strategy is simple_byte
  7639     078F  084C               	movf	??_updateLEDs+1,w
  7640     0790  3A00               	xorlw	0	; case 0
  7641     0791  1903               	skipnz
  7642     0792  2F94               	goto	i1l5571
  7643     0793  2FF3               	goto	i1l998
  7644     0794                     i1l5571:
  7645                           
  7646                           ; Switch size 1, requested type "simple"
  7647                           ; Number of cases is 5, Range of values is 0 to 4
  7648                           ; switch strategies available:
  7649                           ; Name         Instructions Cycles
  7650                           ; direct_byte           16     6 (fixed)
  7651                           ; simple_byte           16     9 (average)
  7652                           ; jumptable            260     6 (fixed)
  7653                           ;	Chosen strategy is simple_byte
  7654     0794  084B               	movf	??_updateLEDs,w
  7655     0795  3A00               	xorlw	0	; case 0
  7656     0796  1903               	skipnz
  7657     0797  2F5F               	goto	i1l981
  7658     0798  3A01               	xorlw	1	; case 1
  7659     0799  1903               	skipnz
  7660     079A  2F68               	goto	i1l983
  7661     079B  3A03               	xorlw	3	; case 2
  7662     079C  1903               	skipnz
  7663     079D  2F71               	goto	i1l984
  7664     079E  3A01               	xorlw	1	; case 3
  7665     079F  1903               	skipnz
  7666     07A0  2F7A               	goto	i1l985
  7667     07A1  3A07               	xorlw	7	; case 4
  7668     07A2  1903               	skipnz
  7669     07A3  2F83               	goto	i1l986
  7670     07A4  2FF3               	goto	i1l998
  7671     07A5                     i1l4677:
  7672     07A5  3002               	movlw	2
  7673     07A6  065C               	xorwf	_currentStage,w
  7674     07A7  1D03               	btfss	3,2
  7675     07A8  2FAA               	goto	u331_21
  7676     07A9  2FAB               	goto	u331_20
  7677     07AA                     u331_21:
  7678     07AA  2FF3               	goto	i1l998
  7679     07AB                     u331_20:
  7680     07AB  2FD2               	goto	i1l4697
  7681     07AC                     i1l4681:
  7682                           
  7683                           ;main.c: 1261:                 control_led_and_7segment_FOR_MODE_NPN_SENSOR_I();
  7684     07AC  3188  2050  3187   	fcall	_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I
  7685                           
  7686                           ;main.c: 1262:                 break;
  7687     07AF  2FF3               	goto	i1l998
  7688     07B0                     i1l4683:
  7689                           
  7690                           ;main.c: 1264:                 control_led_and_7segment_FOR_MODE_SENSOR_II();
  7691     07B0  3188  20A0  3187   	fcall	_control_led_and_7segment_FOR_MODE_SENSOR_II
  7692                           
  7693                           ;main.c: 1265:                 break;
  7694     07B3  2FF3               	goto	i1l998
  7695     07B4                     i1l4685:
  7696                           
  7697                           ;main.c: 1267:                 control_led_and_7segment_FOR_MODE_PHOTO_SENSOR();
  7698     07B4  3188  2078  3187   	fcall	_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR
  7699                           
  7700                           ;main.c: 1268:                 break;
  7701     07B7  2FF3               	goto	i1l998
  7702     07B8                     i1l994:	
  7703                           ;main.c: 1269:             case MODE_SPEED_CONTROL:
  7704                           
  7705                           
  7706                           ;main.c: 1270:                 LATEbits.LATE1 = 0;
  7707     07B8  109C               	bcf	28,1	;volatile
  7708                           
  7709                           ;main.c: 1271:                 LATBbits.LATB1 = 0;
  7710     07B9  1099               	bcf	25,1	;volatile
  7711                           
  7712                           ;main.c: 1272:                 LATBbits.LATB7 = 0;
  7713     07BA  1399               	bcf	25,7	;volatile
  7714                           
  7715                           ;main.c: 1273:                 LATBbits.LATB3 = 0;
  7716     07BB  1199               	bcf	25,3	;volatile
  7717                           
  7718                           ;main.c: 1274:                 LATBbits.LATB4 = 1;
  7719     07BC  1619               	bsf	25,4	;volatile
  7720     07BD                     i1l4687:
  7721                           
  7722                           ;main.c: 1275:                 control_led_and_7segment_FOR_MODE_SPEED_CONTROL();
  7723     07BD  3188  20C8  3187   	fcall	_control_led_and_7segment_FOR_MODE_SPEED_CONTROL
  7724                           
  7725                           ;main.c: 1276:                 break;
  7726     07C0  2FF3               	goto	i1l998
  7727     07C1                     i1l995:	
  7728                           ;main.c: 1277:             case MODE_SPEED_A_B:
  7729                           
  7730                           
  7731                           ;main.c: 1278:                     LATEbits.LATE1 = 0;
  7732     07C1  109C               	bcf	28,1	;volatile
  7733                           
  7734                           ;main.c: 1279:                     LATBbits.LATB1 = 0;
  7735     07C2  1099               	bcf	25,1	;volatile
  7736                           
  7737                           ;main.c: 1280:                     LATBbits.LATB7 = 1;
  7738     07C3  1799               	bsf	25,7	;volatile
  7739                           
  7740                           ;main.c: 1281:                     LATBbits.LATB3 = 0;
  7741     07C4  1199               	bcf	25,3	;volatile
  7742                           
  7743                           ;main.c: 1282:                     LATBbits.LATB4 = 0;
  7744     07C5  1219               	bcf	25,4	;volatile
  7745     07C6                     i1l4689:
  7746                           
  7747                           ;main.c: 1283:                 control_led_and_7segment_FOR_MODE_SPEED_A_B();
  7748     07C6  318B  23E3  3187   	fcall	_control_led_and_7segment_FOR_MODE_SPEED_A_B
  7749                           
  7750                           ;main.c: 1284:                 break;
  7751     07C9  2FF3               	goto	i1l998
  7752     07CA                     i1l4691:
  7753                           
  7754                           ;main.c: 1286:                 control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT();
  7755     07CA  3189  21E4  3187   	fcall	_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
  7756                           
  7757                           ;main.c: 1287:                 break;
  7758     07CD  2FF3               	goto	i1l998
  7759     07CE                     i1l4693:
  7760                           
  7761                           ;main.c: 1289:                 control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT();
  7762     07CE  3197  278F  3187   	fcall	_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT
  7763                           
  7764                           ;main.c: 1290:                 break;
  7765     07D1  2FF3               	goto	i1l998
  7766     07D2                     i1l4697:
  7767     07D2  0141               	movlb	1	; select bank1
  7768     07D3  086B               	movf	_currentStage2Mode^(0+128),w
  7769     07D4  0140               	movlb	0	; select bank0
  7770     07D5  00CB               	movwf	??_updateLEDs
  7771     07D6  01CC               	clrf	??_updateLEDs+1
  7772                           
  7773                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7774                           ; Switch size 1, requested type "simple"
  7775                           ; Number of cases is 1, Range of values is 0 to 0
  7776                           ; switch strategies available:
  7777                           ; Name         Instructions Cycles
  7778                           ; simple_byte            4     3 (average)
  7779                           ; direct_byte            8     6 (fixed)
  7780                           ; jumptable            260     6 (fixed)
  7781                           ;	Chosen strategy is simple_byte
  7782     07D7  084C               	movf	??_updateLEDs+1,w
  7783     07D8  3A00               	xorlw	0	; case 0
  7784     07D9  1903               	skipnz
  7785     07DA  2FDC               	goto	i1l5573
  7786     07DB  2FF3               	goto	i1l987
  7787     07DC                     i1l5573:
  7788                           
  7789                           ; Switch size 1, requested type "simple"
  7790                           ; Number of cases is 7, Range of values is 0 to 6
  7791                           ; switch strategies available:
  7792                           ; Name         Instructions Cycles
  7793                           ; direct_byte           20     6 (fixed)
  7794                           ; simple_byte           22    12 (average)
  7795                           ; jumptable            260     6 (fixed)
  7796                           ;	Chosen strategy is simple_byte
  7797     07DC  084B               	movf	??_updateLEDs,w
  7798     07DD  3A00               	xorlw	0	; case 0
  7799     07DE  1903               	skipnz
  7800     07DF  2FAC               	goto	i1l4681
  7801     07E0  3A01               	xorlw	1	; case 1
  7802     07E1  1903               	skipnz
  7803     07E2  2FB0               	goto	i1l4683
  7804     07E3  3A03               	xorlw	3	; case 2
  7805     07E4  1903               	skipnz
  7806     07E5  2FB4               	goto	i1l4685
  7807     07E6  3A01               	xorlw	1	; case 3
  7808     07E7  1903               	skipnz
  7809     07E8  2FB8               	goto	i1l994
  7810     07E9  3A07               	xorlw	7	; case 4
  7811     07EA  1903               	skipnz
  7812     07EB  2FC1               	goto	i1l995
  7813     07EC  3A01               	xorlw	1	; case 5
  7814     07ED  1903               	skipnz
  7815     07EE  2FCA               	goto	i1l4691
  7816     07EF  3A03               	xorlw	3	; case 6
  7817     07F0  1903               	skipnz
  7818     07F1  2FCE               	goto	i1l4693
  7819     07F2  2FF3               	goto	i1l987
  7820     07F3                     i1l987:
  7821     07F3                     i1l998:
  7822     07F3  0008               	return
  7823     07F4                     __end_of_updateLEDs:
  7824                           
  7825                           	psect	text16
  7826     0D76                     __ptext16:	
  7827 ;; *************** function _control_led_and_7segment_FOR_MODE_VOLTAGE *****************
  7828 ;; Defined at:
  7829 ;;		line 292 in file "main.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;		None
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;		None
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      void 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7846 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7847 ;;Total ram usage:        2 bytes
  7848 ;; Hardware stack levels used: 1
  7849 ;; Hardware stack levels required when called: 1
  7850 ;; This function calls:
  7851 ;;		_EUSART1_Write
  7852 ;;		___awdiv
  7853 ;;		___awmod
  7854 ;; This function is called by:
  7855 ;;		_updateLEDs
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859     0D76                     _control_led_and_7segment_FOR_MODE_VOLTAGE:	
  7860                           ;psect for function _control_led_and_7segment_FOR_MODE_VOLTAGE
  7861                           
  7862     0D76                     i1l3921:	
  7863                           ;incstack = 0
  7864                           ; Regs used in _control_led_and_7segment_FOR_MODE_VOLTAGE: [wreg+fsr1l+fsr1h+status,2+st
      +                          atus,0+pclath+cstack]
  7865                           
  7866                           
  7867                           ;main.c: 294:     if (PORTAbits.RA5 == 0 && PORTAbits.RA3 == 1)
  7868     0D76  0140               	movlb	0	; select bank0
  7869     0D77  1A8C               	btfsc	12,5	;volatile
  7870     0D78  2D7A               	goto	u270_21
  7871     0D79  2D7B               	goto	u270_20
  7872     0D7A                     u270_21:
  7873     0D7A  2DF7               	goto	i1l757
  7874     0D7B                     u270_20:
  7875     0D7B                     i1l3923:
  7876     0D7B  1D8C               	btfss	12,3	;volatile
  7877     0D7C  2D7E               	goto	u271_21
  7878     0D7D  2D7F               	goto	u271_20
  7879     0D7E                     u271_21:
  7880     0D7E  2DF7               	goto	i1l757
  7881     0D7F                     u271_20:
  7882     0D7F                     i1l3925:
  7883                           
  7884                           ;main.c: 295:     {;main.c: 296:         StartDebounceDelayTimer = 1;
  7885     0D7F  3001               	movlw	1
  7886     0D80  0141               	movlb	1	; select bank1
  7887     0D81  00D7               	movwf	_StartDebounceDelayTimer^(0+128)	;volatile
  7888     0D82                     i1l3927:
  7889                           
  7890                           ;main.c: 297:         if(DebounceCompleted)
  7891     0D82  0140               	movlb	0	; select bank0
  7892     0D83  0859               	movf	_DebounceCompleted,w	;volatile
  7893     0D84  1903               	btfsc	3,2
  7894     0D85  2D87               	goto	u272_21
  7895     0D86  2D88               	goto	u272_20
  7896     0D87                     u272_21:
  7897     0D87  2D94               	goto	i1l3937
  7898     0D88                     u272_20:
  7899     0D88                     i1l3929:
  7900                           
  7901                           ;main.c: 298:         if (VOLTAGE <= 239)
  7902     0D88  30F0               	movlw	240
  7903     0D89  0261               	subwf	_VOLTAGE,w
  7904     0D8A  1803               	skipnc
  7905     0D8B  2D8D               	goto	u273_21
  7906     0D8C  2D8E               	goto	u273_20
  7907     0D8D                     u273_21:
  7908     0D8D  2D94               	goto	i1l3937
  7909     0D8E                     u273_20:
  7910     0D8E                     i1l3931:
  7911                           
  7912                           ;main.c: 299:         {;main.c: 300:             VOLTAGE++;
  7913     0D8E  3001               	movlw	1
  7914     0D8F  07E1               	addwf	_VOLTAGE,f
  7915     0D90                     i1l3933:
  7916                           
  7917                           ;main.c: 301:             StartDebounceDelayTimer = 0;
  7918     0D90  0141               	movlb	1	; select bank1
  7919     0D91  01D7               	clrf	_StartDebounceDelayTimer^(0+128)	;volatile
  7920     0D92                     i1l3935:
  7921                           
  7922                           ;main.c: 302:             DebounceCompleted = 0;
  7923     0D92  0140               	movlb	0	; select bank0
  7924     0D93  01D9               	clrf	_DebounceCompleted	;volatile
  7925     0D94                     i1l3937:
  7926                           
  7927                           ;main.c: 304:         digits_1[0] = 0;
  7928     0D94  0142               	movlb	2	; select bank2
  7929     0D95  01E2               	clrf	_digits_1^(0+256)
  7930     0D96  01E3               	clrf	(_digits_1+1)^(0+256)
  7931     0D97                     i1l3939:
  7932                           
  7933                           ;main.c: 305:         digits_1[1] = 0;
  7934     0D97  01E4               	clrf	(_digits_1^(0+256)+2)
  7935     0D98  01E5               	clrf	((_digits_1+1)^(0+256)+2)
  7936     0D99                     i1l3941:
  7937                           
  7938                           ;main.c: 306:         digits_1[2] = (VOLTAGE / 100) % 10;
  7939     0D99  300A               	movlw	10
  7940     0D9A  0140               	movlb	0	; select bank0
  7941     0D9B  00A4               	movwf	___awmod@divisor
  7942     0D9C  3000               	movlw	0
  7943     0D9D  00A5               	movwf	___awmod@divisor+1
  7944     0D9E  3064               	movlw	100
  7945     0D9F  00F6               	movwf	___awdiv@divisor
  7946     0DA0  3000               	movlw	0
  7947     0DA1  00F7               	movwf	___awdiv@divisor+1
  7948     0DA2  0861               	movf	_VOLTAGE,w
  7949     0DA3  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_VOLTAGE
  7950     0DA4  01A9               	clrf	??_control_led_and_7segment_FOR_MODE_VOLTAGE+1
  7951     0DA5  0828               	movf	??_control_led_and_7segment_FOR_MODE_VOLTAGE,w
  7952     0DA6  00F8               	movwf	___awdiv@dividend
  7953     0DA7  0829               	movf	??_control_led_and_7segment_FOR_MODE_VOLTAGE+1,w
  7954     0DA8  00F9               	movwf	___awdiv@dividend+1
  7955     0DA9  318B  2387  318D   	fcall	___awdiv
  7956     0DAC  0877               	movf	?___awdiv+1,w
  7957     0DAD  0140               	movlb	0	; select bank0
  7958     0DAE  00A7               	movwf	___awmod@dividend+1
  7959     0DAF  0876               	movf	?___awdiv,w
  7960     0DB0  00A6               	movwf	___awmod@dividend
  7961     0DB1  318A  2285  318D   	fcall	___awmod
  7962     0DB4  0140               	movlb	0	; select bank0
  7963     0DB5  0825               	movf	?___awmod+1,w
  7964     0DB6  0142               	movlb	2	; select bank2
  7965     0DB7  00E7               	movwf	((_digits_1+1)^(0+256)+4)
  7966     0DB8  0140               	movlb	0	; select bank0
  7967     0DB9  0824               	movf	?___awmod,w
  7968     0DBA  0142               	movlb	2	; select bank2
  7969     0DBB  00E6               	movwf	(_digits_1^(0+256)+4)
  7970     0DBC                     i1l3943:
  7971                           
  7972                           ;main.c: 307:         digits_1[3] = (VOLTAGE / 10) % 10;
  7973     0DBC  300A               	movlw	10
  7974     0DBD  0140               	movlb	0	; select bank0
  7975     0DBE  00A4               	movwf	___awmod@divisor
  7976     0DBF  3000               	movlw	0
  7977     0DC0  00A5               	movwf	___awmod@divisor+1
  7978     0DC1  300A               	movlw	10
  7979     0DC2  00F6               	movwf	___awdiv@divisor
  7980     0DC3  3000               	movlw	0
  7981     0DC4  00F7               	movwf	___awdiv@divisor+1
  7982     0DC5  0861               	movf	_VOLTAGE,w
  7983     0DC6  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_VOLTAGE
  7984     0DC7  01A9               	clrf	??_control_led_and_7segment_FOR_MODE_VOLTAGE+1
  7985     0DC8  0828               	movf	??_control_led_and_7segment_FOR_MODE_VOLTAGE,w
  7986     0DC9  00F8               	movwf	___awdiv@dividend
  7987     0DCA  0829               	movf	??_control_led_and_7segment_FOR_MODE_VOLTAGE+1,w
  7988     0DCB  00F9               	movwf	___awdiv@dividend+1
  7989     0DCC  318B  2387  318D   	fcall	___awdiv
  7990     0DCF  0877               	movf	?___awdiv+1,w
  7991     0DD0  0140               	movlb	0	; select bank0
  7992     0DD1  00A7               	movwf	___awmod@dividend+1
  7993     0DD2  0876               	movf	?___awdiv,w
  7994     0DD3  00A6               	movwf	___awmod@dividend
  7995     0DD4  318A  2285  318D   	fcall	___awmod
  7996     0DD7  0140               	movlb	0	; select bank0
  7997     0DD8  0825               	movf	?___awmod+1,w
  7998     0DD9  0142               	movlb	2	; select bank2
  7999     0DDA  00E9               	movwf	((_digits_1+1)^(0+256)+6)
  8000     0DDB  0140               	movlb	0	; select bank0
  8001     0DDC  0824               	movf	?___awmod,w
  8002     0DDD  0142               	movlb	2	; select bank2
  8003     0DDE  00E8               	movwf	(_digits_1^(0+256)+6)
  8004     0DDF                     i1l3945:
  8005                           
  8006                           ;main.c: 308:         digits_1[4] = VOLTAGE % 10;
  8007     0DDF  300A               	movlw	10
  8008     0DE0  0140               	movlb	0	; select bank0
  8009     0DE1  00A4               	movwf	___awmod@divisor
  8010     0DE2  3000               	movlw	0
  8011     0DE3  00A5               	movwf	___awmod@divisor+1
  8012     0DE4  0861               	movf	_VOLTAGE,w
  8013     0DE5  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_VOLTAGE
  8014     0DE6  01A9               	clrf	??_control_led_and_7segment_FOR_MODE_VOLTAGE+1
  8015     0DE7  0828               	movf	??_control_led_and_7segment_FOR_MODE_VOLTAGE,w
  8016     0DE8  00A6               	movwf	___awmod@dividend
  8017     0DE9  0829               	movf	??_control_led_and_7segment_FOR_MODE_VOLTAGE+1,w
  8018     0DEA  00A7               	movwf	___awmod@dividend+1
  8019     0DEB  318A  2285  318D   	fcall	___awmod
  8020     0DEE  0140               	movlb	0	; select bank0
  8021     0DEF  0825               	movf	?___awmod+1,w
  8022     0DF0  0142               	movlb	2	; select bank2
  8023     0DF1  00EB               	movwf	((_digits_1+1)^(0+256)+8)
  8024     0DF2  0140               	movlb	0	; select bank0
  8025     0DF3  0824               	movf	?___awmod,w
  8026     0DF4  0142               	movlb	2	; select bank2
  8027     0DF5  00EA               	movwf	(_digits_1^(0+256)+8)
  8028                           
  8029                           ;main.c: 309:     }
  8030     0DF6  2E14               	goto	i1l3971
  8031     0DF7                     i1l757:	
  8032                           ;main.c: 311:     else if (PORTAbits.RA1 == 0 && PORTAbits.RA3 == 1)
  8033                           
  8034     0DF7  188C               	btfsc	12,1	;volatile
  8035     0DF8  2DFA               	goto	u274_21
  8036     0DF9  2DFB               	goto	u274_20
  8037     0DFA                     u274_21:
  8038     0DFA  2E14               	goto	i1l3971
  8039     0DFB                     u274_20:
  8040     0DFB                     i1l3947:
  8041     0DFB  1D8C               	btfss	12,3	;volatile
  8042     0DFC  2DFE               	goto	u275_21
  8043     0DFD  2DFF               	goto	u275_20
  8044     0DFE                     u275_21:
  8045     0DFE  2E14               	goto	i1l3971
  8046     0DFF                     u275_20:
  8047     0DFF                     i1l3949:
  8048                           
  8049                           ;main.c: 312:     {;main.c: 313:         StartDebounceDelayTimer_Decrement = 1;
  8050     0DFF  3001               	movlw	1
  8051     0E00  0141               	movlb	1	; select bank1
  8052     0E01  00D6               	movwf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
  8053     0E02                     i1l3951:
  8054                           
  8055                           ;main.c: 314:         if(DebounceCompleted_Decrement)
  8056     0E02  0140               	movlb	0	; select bank0
  8057     0E03  0858               	movf	_DebounceCompleted_Decrement,w	;volatile
  8058     0E04  1903               	btfsc	3,2
  8059     0E05  2E07               	goto	u276_21
  8060     0E06  2E08               	goto	u276_20
  8061     0E07                     u276_21:
  8062     0E07  2D94               	goto	i1l3937
  8063     0E08                     u276_20:
  8064     0E08                     i1l3953:
  8065                           
  8066                           ;main.c: 315:         if (VOLTAGE > 0)
  8067     0E08  0861               	movf	_VOLTAGE,w
  8068     0E09  1903               	btfsc	3,2
  8069     0E0A  2E0C               	goto	u277_21
  8070     0E0B  2E0D               	goto	u277_20
  8071     0E0C                     u277_21:
  8072     0E0C  2D94               	goto	i1l3937
  8073     0E0D                     u277_20:
  8074     0E0D                     i1l3955:
  8075                           
  8076                           ;main.c: 316:         {;main.c: 317:             VOLTAGE--;
  8077     0E0D  3001               	movlw	1
  8078     0E0E  02E1               	subwf	_VOLTAGE,f
  8079     0E0F                     i1l3957:
  8080                           
  8081                           ;main.c: 318:             StartDebounceDelayTimer_Decrement = 0;
  8082     0E0F  0141               	movlb	1	; select bank1
  8083     0E10  01D6               	clrf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
  8084     0E11                     i1l3959:
  8085                           
  8086                           ;main.c: 319:             DebounceCompleted_Decrement = 0;
  8087     0E11  0140               	movlb	0	; select bank0
  8088     0E12  01D8               	clrf	_DebounceCompleted_Decrement	;volatile
  8089     0E13  2D94               	goto	i1l3937
  8090     0E14                     i1l3971:
  8091                           
  8092                           ;main.c: 327:     LATDbits.LATD6 = 1;
  8093     0E14  0140               	movlb	0	; select bank0
  8094     0E15  171B               	bsf	27,6	;volatile
  8095     0E16                     i1l3973:
  8096                           
  8097                           ;main.c: 328:     LATEbits.LATE1 = 1;
  8098     0E16  149C               	bsf	28,1	;volatile
  8099     0E17                     i1l3975:
  8100                           
  8101                           ;main.c: 329:     _delay((unsigned long)((1)*(16000000/4000.0)));
  8102     0E17  3006               	movlw	6
  8103     0E18  0140               	movlb	0	; select bank0
  8104     0E19  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_VOLTAGE
  8105     0E1A  3030               	movlw	48
  8106     0E1B                     u449_27:
  8107     0E1B  0B89               	decfsz	9,f
  8108     0E1C  2E1B               	goto	u449_27
  8109     0E1D  0BA8               	decfsz	??_control_led_and_7segment_FOR_MODE_VOLTAGE,f
  8110     0E1E  2E1B               	goto	u449_27
  8111     0E1F  0000               	nop
  8112     0E20                     i1l3977:
  8113                           
  8114                           ;main.c: 330:     LATEbits.LATE1 = 0;
  8115     0E20  0140               	movlb	0	; select bank0
  8116     0E21  109C               	bcf	28,1	;volatile
  8117     0E22                     i1l3979:
  8118                           
  8119                           ;main.c: 331:     LATDbits.LATD6 = 0;
  8120     0E22  131B               	bcf	27,6	;volatile
  8121     0E23                     i1l3981:
  8122                           
  8123                           ;main.c: 332:     if ( UARTFlag) {
  8124     0E23  0857               	movf	_UARTFlag,w
  8125     0E24  1903               	btfsc	3,2
  8126     0E25  2E27               	goto	u278_21
  8127     0E26  2E28               	goto	u278_20
  8128     0E27                     u278_21:
  8129     0E27  2E40               	goto	i1l3993
  8130     0E28                     u278_20:
  8131     0E28                     i1l3983:
  8132                           
  8133                           ;main.c: 333:         UARTFlag = 0;
  8134     0E28  01D7               	clrf	_UARTFlag
  8135     0E29                     i1l3985:
  8136                           
  8137                           ;main.c: 335:         EUSART1_Write(0xAA);
  8138     0E29  30AA               	movlw	170
  8139     0E2A  00F0               	movwf	EUSART1_Write@txData
  8140     0E2B  3188  2007  318D   	fcall	_EUSART1_Write
  8141     0E2E                     i1l3987:
  8142                           
  8143                           ;main.c: 336:         EUSART1_Write(VOLTAGE);
  8144     0E2E  0140               	movlb	0	; select bank0
  8145     0E2F  0861               	movf	_VOLTAGE,w
  8146     0E30  00F0               	movwf	EUSART1_Write@txData
  8147     0E31  3188  2007  318D   	fcall	_EUSART1_Write
  8148     0E34                     i1l3989:
  8149                           
  8150                           ;main.c: 337:         EUSART1_Write((uint8_t) (FREQUENCY >> 8));
  8151     0E34  0140               	movlb	0	; select bank0
  8152     0E35  086D               	movf	_FREQUENCY+1,w
  8153     0E36  00F0               	movwf	EUSART1_Write@txData
  8154     0E37  3188  2007  318D   	fcall	_EUSART1_Write
  8155     0E3A                     i1l3991:
  8156                           
  8157                           ;main.c: 338:         EUSART1_Write((uint8_t)(FREQUENCY & 0xFF));
  8158     0E3A  0140               	movlb	0	; select bank0
  8159     0E3B  086C               	movf	_FREQUENCY,w
  8160     0E3C  00F0               	movwf	EUSART1_Write@txData
  8161     0E3D  3188  2007  318D   	fcall	_EUSART1_Write
  8162     0E40                     i1l3993:
  8163                           
  8164                           ;main.c: 340:     flag = 1;
  8165     0E40  3001               	movlw	1
  8166     0E41  0140               	movlb	0	; select bank0
  8167     0E42  00D5               	movwf	_flag
  8168     0E43  3000               	movlw	0
  8169     0E44  00D6               	movwf	_flag+1
  8170     0E45                     i1l765:
  8171     0E45  0008               	return
  8172     0E46                     __end_of_control_led_and_7segment_FOR_MODE_VOLTAGE:
  8173                           
  8174                           	psect	text17
  8175     0A34                     __ptext17:	
  8176 ;; *************** function _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER *****************
  8177 ;; Defined at:
  8178 ;;		line 807 in file "main.c"
  8179 ;; Parameters:    Size  Location     Type
  8180 ;;		None
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      void 
  8185 ;; Registers used:
  8186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;Total ram usage:        1 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 1
  8199 ;; This function calls:
  8200 ;;		_EUSART1_Write
  8201 ;; This function is called by:
  8202 ;;		_updateLEDs
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206     0A34                     _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER:	
  8207                           ;psect for function _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER
  8208                           
  8209     0A34                     i1l4509:	
  8210                           ;incstack = 0
  8211                           ; Regs used in _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER: [wreg+fsr1l+fsr1h+sta
      +                          tus,2+status,0+pclath+cstack]
  8212                           
  8213                           
  8214                           ;main.c: 810:     digits_15[0] = 0x00;
  8215     0A34  0143               	movlb	3	; select bank3
  8216     0A35  01A0               	clrf	_digits_15^(0+384)
  8217     0A36  01A1               	clrf	(_digits_15+1)^(0+384)
  8218     0A37                     i1l4511:
  8219                           
  8220                           ;main.c: 811:     digits_15[1] = 0x6D;
  8221     0A37  306D               	movlw	109
  8222     0A38  00A2               	movwf	(_digits_15^(0+384)+2)
  8223     0A39  3000               	movlw	0
  8224     0A3A  00A3               	movwf	(_digits_15^(0+384)+3)
  8225     0A3B                     i1l4513:
  8226                           
  8227                           ;main.c: 812:     digits_15[2] = 0x78;
  8228     0A3B  3078               	movlw	120
  8229     0A3C  00A4               	movwf	(_digits_15^(0+384)+4)
  8230     0A3D  3000               	movlw	0
  8231     0A3E  00A5               	movwf	(_digits_15^(0+384)+5)
  8232     0A3F                     i1l4515:
  8233                           
  8234                           ;main.c: 813:     digits_15[3] = 0x3f;
  8235     0A3F  303F               	movlw	63
  8236     0A40  00A6               	movwf	(_digits_15^(0+384)+6)
  8237     0A41  3000               	movlw	0
  8238     0A42  00A7               	movwf	(_digits_15^(0+384)+7)
  8239     0A43                     i1l4517:
  8240                           
  8241                           ;main.c: 814:     digits_15[4] = 0x73;
  8242     0A43  3073               	movlw	115
  8243     0A44  00A8               	movwf	(_digits_15^(0+384)+8)
  8244     0A45  3000               	movlw	0
  8245     0A46  00A9               	movwf	(_digits_15^(0+384)+9)
  8246     0A47                     i1l4519:
  8247                           
  8248                           ;main.c: 816:     Stop_Controller = 1;
  8249     0A47  3001               	movlw	1
  8250     0A48  0141               	movlb	1	; select bank1
  8251     0A49  00DE               	movwf	_Stop_Controller^(0+128)
  8252                           
  8253                           ;main.c: 817:     ON_Delay_Flag = 0;
  8254     0A4A  0140               	movlb	0	; select bank0
  8255     0A4B  01DF               	clrf	_ON_Delay_Flag
  8256                           
  8257                           ;main.c: 818:     currentStage = STAGE_0;
  8258     0A4C  01DC               	clrf	_currentStage
  8259     0A4D                     i1l4521:
  8260                           
  8261                           ;main.c: 820:     LATDbits.LATD5 = 1;
  8262     0A4D  169B               	bsf	27,5	;volatile
  8263     0A4E                     i1l4523:
  8264                           
  8265                           ;main.c: 821:     LATEbits.LATE1 = 0;
  8266     0A4E  109C               	bcf	28,1	;volatile
  8267     0A4F                     i1l4525:
  8268                           
  8269                           ;main.c: 822:     LATBbits.LATB1 = 1;
  8270     0A4F  1499               	bsf	25,1	;volatile
  8271     0A50                     i1l4527:
  8272                           
  8273                           ;main.c: 823:     LATBbits.LATB2 = 0;
  8274     0A50  1119               	bcf	25,2	;volatile
  8275     0A51                     i1l4529:
  8276                           
  8277                           ;main.c: 824:     LATBbits.LATB3 = 0;
  8278     0A51  1199               	bcf	25,3	;volatile
  8279     0A52                     i1l4531:
  8280                           
  8281                           ;main.c: 825:     LATBbits.LATB4 = 0;
  8282     0A52  1219               	bcf	25,4	;volatile
  8283     0A53                     i1l4533:
  8284                           
  8285                           ;main.c: 826:     _delay((unsigned long)((1)*(16000000/4000.0)));
  8286     0A53  3006               	movlw	6
  8287     0A54  00F2               	movwf	??_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER
  8288     0A55  3030               	movlw	48
  8289     0A56                     u450_27:
  8290     0A56  0B89               	decfsz	9,f
  8291     0A57  2A56               	goto	u450_27
  8292     0A58  0BF2               	decfsz	??_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER,f
  8293     0A59  2A56               	goto	u450_27
  8294     0A5A  3200               	nop2
  8295     0A5B                     i1l4535:
  8296                           
  8297                           ;main.c: 827:     LATEbits.LATE1 = LATBbits.LATB1 = LATBbits.LATB2 = LATBbits.LATB3 = LA
      +                          TBbits.LATB4 = 0;
  8298     0A5B  0140               	movlb	0	; select bank0
  8299     0A5C  1219               	bcf	25,4	;volatile
  8300     0A5D  1199               	bcf	25,3	;volatile
  8301     0A5E  1119               	bcf	25,2	;volatile
  8302     0A5F  1099               	bcf	25,1	;volatile
  8303     0A60  109C               	bcf	28,1	;volatile
  8304     0A61                     i1l4537:
  8305                           
  8306                           ;main.c: 828:     LATDbits.LATD5 = 0;
  8307     0A61  129B               	bcf	27,5	;volatile
  8308     0A62                     i1l4539:
  8309                           
  8310                           ;main.c: 829:     if (UARTFlag) {
  8311     0A62  0857               	movf	_UARTFlag,w
  8312     0A63  1903               	btfsc	3,2
  8313     0A64  2A66               	goto	u328_21
  8314     0A65  2A67               	goto	u328_20
  8315     0A66                     u328_21:
  8316     0A66  2A7F               	goto	i1l4551
  8317     0A67                     u328_20:
  8318     0A67                     i1l4541:
  8319                           
  8320                           ;main.c: 830:             UARTFlag = 0;
  8321     0A67  01D7               	clrf	_UARTFlag
  8322     0A68                     i1l4543:
  8323                           
  8324                           ;main.c: 832:             EUSART1_Write(0xAA);
  8325     0A68  30AA               	movlw	170
  8326     0A69  00F0               	movwf	EUSART1_Write@txData
  8327     0A6A  3188  2007  318A   	fcall	_EUSART1_Write
  8328     0A6D                     i1l4545:
  8329                           
  8330                           ;main.c: 833:             EUSART1_Write(Output_VTG_Stop);
  8331     0A6D  0141               	movlb	1	; select bank1
  8332     0A6E  0868               	movf	_Output_VTG_Stop^(0+128),w
  8333     0A6F  00F0               	movwf	EUSART1_Write@txData
  8334     0A70  3188  2007  318A   	fcall	_EUSART1_Write
  8335     0A73                     i1l4547:
  8336                           
  8337                           ;main.c: 834:             EUSART1_Write((uint8_t) (STOP_FREQ >> 8));
  8338     0A73  0141               	movlb	1	; select bank1
  8339     0A74  0845               	movf	(_STOP_FREQ+1)^(0+128),w
  8340     0A75  00F0               	movwf	EUSART1_Write@txData
  8341     0A76  3188  2007  318A   	fcall	_EUSART1_Write
  8342     0A79                     i1l4549:
  8343                           
  8344                           ;main.c: 835:             EUSART1_Write((uint8_t)(STOP_FREQ & 0xFF));
  8345     0A79  0141               	movlb	1	; select bank1
  8346     0A7A  0844               	movf	_STOP_FREQ^(0+128),w
  8347     0A7B  00F0               	movwf	EUSART1_Write@txData
  8348     0A7C  3188  2007  318A   	fcall	_EUSART1_Write
  8349     0A7F                     i1l4551:
  8350                           
  8351                           ;main.c: 838:     flag = 15;
  8352     0A7F  300F               	movlw	15
  8353     0A80  0140               	movlb	0	; select bank0
  8354     0A81  00D5               	movwf	_flag
  8355     0A82  3000               	movlw	0
  8356     0A83  00D6               	movwf	_flag+1
  8357     0A84                     i1l845:
  8358     0A84  0008               	return
  8359     0A85                     __end_of_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER:
  8360                           
  8361                           	psect	text18
  8362     08C8                     __ptext18:	
  8363 ;; *************** function _control_led_and_7segment_FOR_MODE_SPEED_CONTROL *****************
  8364 ;; Defined at:
  8365 ;;		line 678 in file "main.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;		None
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;		None
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg, status,2
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8382 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8383 ;;Total ram usage:        1 bytes
  8384 ;; Hardware stack levels used: 1
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_updateLEDs
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392     08C8                     _control_led_and_7segment_FOR_MODE_SPEED_CONTROL:	
  8393                           ;psect for function _control_led_and_7segment_FOR_MODE_SPEED_CONTROL
  8394                           
  8395     08C8                     i1l4353:	
  8396                           ;incstack = 0
  8397                           ; Regs used in _control_led_and_7segment_FOR_MODE_SPEED_CONTROL: [wreg+status,2]
  8398                           
  8399                           
  8400                           ;main.c: 681:         digits_6[0] = 0x00;
  8401     08C8  0142               	movlb	2	; select bank2
  8402     08C9  01B0               	clrf	_digits_6^(0+256)
  8403     08CA  01B1               	clrf	(_digits_6+1)^(0+256)
  8404     08CB                     i1l4355:
  8405                           
  8406                           ;main.c: 682:         digits_6[1] = 0x73;
  8407     08CB  3073               	movlw	115
  8408     08CC  00B2               	movwf	(_digits_6^(0+256)+2)
  8409     08CD  3000               	movlw	0
  8410     08CE  00B3               	movwf	(_digits_6^(0+256)+3)
  8411     08CF                     i1l4357:
  8412                           
  8413                           ;main.c: 683:         digits_6[2] = 0x3f;
  8414     08CF  303F               	movlw	63
  8415     08D0  00B4               	movwf	(_digits_6^(0+256)+4)
  8416     08D1  3000               	movlw	0
  8417     08D2  00B5               	movwf	(_digits_6^(0+256)+5)
  8418     08D3                     i1l4359:
  8419                           
  8420                           ;main.c: 684:         digits_6[3] = 0x3f;
  8421     08D3  303F               	movlw	63
  8422     08D4  00B6               	movwf	(_digits_6^(0+256)+6)
  8423     08D5  3000               	movlw	0
  8424     08D6  00B7               	movwf	(_digits_6^(0+256)+7)
  8425     08D7                     i1l4361:
  8426                           
  8427                           ;main.c: 685:         digits_6[4] = 0x66;
  8428     08D7  3066               	movlw	102
  8429     08D8  00B8               	movwf	(_digits_6^(0+256)+8)
  8430     08D9  3000               	movlw	0
  8431     08DA  00B9               	movwf	(_digits_6^(0+256)+9)
  8432     08DB                     i1l4363:
  8433                           
  8434                           ;main.c: 697:         LATDbits.LATD5 = 1;
  8435     08DB  0140               	movlb	0	; select bank0
  8436     08DC  169B               	bsf	27,5	;volatile
  8437     08DD                     i1l4365:
  8438                           
  8439                           ;main.c: 698:         LATEbits.LATE1 = 0;
  8440     08DD  109C               	bcf	28,1	;volatile
  8441     08DE                     i1l4367:
  8442                           
  8443                           ;main.c: 699:         LATBbits.LATB1 = 0;
  8444     08DE  1099               	bcf	25,1	;volatile
  8445     08DF                     i1l4369:
  8446                           
  8447                           ;main.c: 700:         LATBbits.LATB2 = 0;
  8448     08DF  1119               	bcf	25,2	;volatile
  8449     08E0                     i1l4371:
  8450                           
  8451                           ;main.c: 701:         LATBbits.LATB3 = 0;
  8452     08E0  1199               	bcf	25,3	;volatile
  8453     08E1                     i1l4373:
  8454                           
  8455                           ;main.c: 702:         LATBbits.LATB4 = 1;
  8456     08E1  1619               	bsf	25,4	;volatile
  8457     08E2                     i1l4375:
  8458                           
  8459                           ;main.c: 703:         _delay((unsigned long)((1)*(16000000/4000.0)));
  8460     08E2  3006               	movlw	6
  8461     08E3  00F0               	movwf	??_control_led_and_7segment_FOR_MODE_SPEED_CONTROL
  8462     08E4  3030               	movlw	48
  8463     08E5                     u451_27:
  8464     08E5  0B89               	decfsz	9,f
  8465     08E6  28E5               	goto	u451_27
  8466     08E7  0BF0               	decfsz	??_control_led_and_7segment_FOR_MODE_SPEED_CONTROL,f
  8467     08E8  28E5               	goto	u451_27
  8468     08E9  3200               	nop2
  8469     08EA                     i1l4377:
  8470                           
  8471                           ;main.c: 704:         LATEbits.LATE1 = 0;
  8472     08EA  0140               	movlb	0	; select bank0
  8473     08EB  109C               	bcf	28,1	;volatile
  8474     08EC                     i1l4379:
  8475                           
  8476                           ;main.c: 705:         LATBbits.LATB1 = 0;
  8477     08EC  1099               	bcf	25,1	;volatile
  8478     08ED                     i1l4381:
  8479                           
  8480                           ;main.c: 706:         LATBbits.LATB2 = 0;
  8481     08ED  1119               	bcf	25,2	;volatile
  8482     08EE                     i1l4383:
  8483                           
  8484                           ;main.c: 707:         LATBbits.LATB3 = 0;
  8485     08EE  1199               	bcf	25,3	;volatile
  8486     08EF                     i1l4385:
  8487                           
  8488                           ;main.c: 708:         LATBbits.LATB4 = 0;
  8489     08EF  1219               	bcf	25,4	;volatile
  8490     08F0                     i1l4387:
  8491                           
  8492                           ;main.c: 709:         LATDbits.LATD5 = 0;
  8493     08F0  129B               	bcf	27,5	;volatile
  8494     08F1                     i1l4389:
  8495                           
  8496                           ;main.c: 710:     flag = 6;
  8497     08F1  3006               	movlw	6
  8498     08F2  00D5               	movwf	_flag
  8499     08F3  3000               	movlw	0
  8500     08F4  00D6               	movwf	_flag+1
  8501     08F5                     i1l825:
  8502     08F5  0008               	return
  8503     08F6                     __end_of_control_led_and_7segment_FOR_MODE_SPEED_CONTROL:
  8504                           
  8505                           	psect	text19
  8506     0BE3                     __ptext19:	
  8507 ;; *************** function _control_led_and_7segment_FOR_MODE_SPEED_A_B *****************
  8508 ;; Defined at:
  8509 ;;		line 713 in file "main.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;		None
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8527 ;;Total ram usage:        1 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; This function calls:
  8530 ;;		Nothing
  8531 ;; This function is called by:
  8532 ;;		_updateLEDs
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536     0BE3                     _control_led_and_7segment_FOR_MODE_SPEED_A_B:	
  8537                           ;psect for function _control_led_and_7segment_FOR_MODE_SPEED_A_B
  8538                           
  8539     0BE3                     i1l4391:	
  8540                           ;incstack = 0
  8541                           ; Regs used in _control_led_and_7segment_FOR_MODE_SPEED_A_B: [wreg+status,2]
  8542                           
  8543                           
  8544                           ;main.c: 716:         digits_10[0] = 0x00;
  8545     0BE3  0143               	movlb	3	; select bank3
  8546     0BE4  01BE               	clrf	_digits_10^(0+384)
  8547     0BE5  01BF               	clrf	(_digits_10+1)^(0+384)
  8548     0BE6                     i1l4393:
  8549                           
  8550                           ;main.c: 717:         digits_10[1] = 0x73;
  8551     0BE6  3073               	movlw	115
  8552     0BE7  00C0               	movwf	(_digits_10^(0+384)+2)
  8553     0BE8  3000               	movlw	0
  8554     0BE9  00C1               	movwf	(_digits_10^(0+384)+3)
  8555     0BEA                     i1l4395:
  8556                           
  8557                           ;main.c: 718:         digits_10[2] = 0x3f;
  8558     0BEA  303F               	movlw	63
  8559     0BEB  00C2               	movwf	(_digits_10^(0+384)+4)
  8560     0BEC  3000               	movlw	0
  8561     0BED  00C3               	movwf	(_digits_10^(0+384)+5)
  8562     0BEE                     i1l4397:
  8563                           
  8564                           ;main.c: 719:         digits_10[3] = 0x3f;
  8565     0BEE  303F               	movlw	63
  8566     0BEF  00C4               	movwf	(_digits_10^(0+384)+6)
  8567     0BF0  3000               	movlw	0
  8568     0BF1  00C5               	movwf	(_digits_10^(0+384)+7)
  8569     0BF2                     i1l4399:
  8570                           
  8571                           ;main.c: 720:         digits_10[4] = 0x6d;
  8572     0BF2  306D               	movlw	109
  8573     0BF3  00C6               	movwf	(_digits_10^(0+384)+8)
  8574     0BF4  3000               	movlw	0
  8575     0BF5  00C7               	movwf	(_digits_10^(0+384)+9)
  8576     0BF6                     i1l4401:
  8577                           
  8578                           ;main.c: 722:         if (PORTCbits.RC1 == 1)
  8579     0BF6  0140               	movlb	0	; select bank0
  8580     0BF7  1C8E               	btfss	14,1	;volatile
  8581     0BF8  2BFA               	goto	u321_21
  8582     0BF9  2BFB               	goto	u321_20
  8583     0BFA                     u321_21:
  8584     0BFA  2BFE               	goto	i1l828
  8585     0BFB                     u321_20:
  8586     0BFB                     i1l4403:
  8587                           
  8588                           ;main.c: 723:         {;main.c: 724:             Speed_A = 1;
  8589     0BFB  3001               	movlw	1
  8590     0BFC  0141               	movlb	1	; select bank1
  8591     0BFD  00E4               	movwf	_Speed_A^(0+128)
  8592     0BFE                     i1l828:	
  8593                           ;main.c: 725:         }
  8594                           
  8595                           
  8596                           ;main.c: 726:         if (PORTCbits.RC1 == 0)
  8597     0BFE  0140               	movlb	0	; select bank0
  8598     0BFF  188E               	btfsc	14,1	;volatile
  8599     0C00  2C02               	goto	u322_21
  8600     0C01  2C03               	goto	u322_20
  8601     0C02                     u322_21:
  8602     0C02  2C1B               	goto	i1l4433
  8603     0C03                     u322_20:
  8604     0C03                     i1l4405:
  8605                           
  8606                           ;main.c: 727:         {;main.c: 728:             Speed_A = 0;
  8607     0C03  0141               	movlb	1	; select bank1
  8608     0C04  01E4               	clrf	_Speed_A^(0+128)
  8609     0C05                     i1l4407:
  8610                           
  8611                           ;main.c: 729:             LATDbits.LATD5 = 1;
  8612     0C05  0140               	movlb	0	; select bank0
  8613     0C06  169B               	bsf	27,5	;volatile
  8614     0C07                     i1l4409:
  8615                           
  8616                           ;main.c: 730:             LATEbits.LATE1 = 1;
  8617     0C07  149C               	bsf	28,1	;volatile
  8618     0C08                     i1l4411:
  8619                           
  8620                           ;main.c: 731:             LATBbits.LATB1 = 0;
  8621     0C08  1099               	bcf	25,1	;volatile
  8622     0C09                     i1l4413:
  8623                           
  8624                           ;main.c: 732:             LATBbits.LATB2 = 0;
  8625     0C09  1119               	bcf	25,2	;volatile
  8626     0C0A                     i1l4415:
  8627                           
  8628                           ;main.c: 733:             LATBbits.LATB3 = 0;
  8629     0C0A  1199               	bcf	25,3	;volatile
  8630     0C0B                     i1l4417:
  8631                           
  8632                           ;main.c: 734:             LATBbits.LATB4 = 0;
  8633     0C0B  1219               	bcf	25,4	;volatile
  8634     0C0C                     i1l4419:
  8635                           
  8636                           ;main.c: 735:             _delay((unsigned long)((1)*(16000000/4000.0)));
  8637     0C0C  3006               	movlw	6
  8638     0C0D  00F0               	movwf	??_control_led_and_7segment_FOR_MODE_SPEED_A_B
  8639     0C0E  3030               	movlw	48
  8640     0C0F                     u452_27:
  8641     0C0F  0B89               	decfsz	9,f
  8642     0C10  2C0F               	goto	u452_27
  8643     0C11  0BF0               	decfsz	??_control_led_and_7segment_FOR_MODE_SPEED_A_B,f
  8644     0C12  2C0F               	goto	u452_27
  8645     0C13  3200               	nop2
  8646     0C14                     i1l4421:
  8647                           
  8648                           ;main.c: 736:             LATEbits.LATE1 = 0;
  8649     0C14  0140               	movlb	0	; select bank0
  8650     0C15  109C               	bcf	28,1	;volatile
  8651     0C16                     i1l4423:
  8652                           
  8653                           ;main.c: 737:             LATBbits.LATB1 = 0;
  8654     0C16  1099               	bcf	25,1	;volatile
  8655     0C17                     i1l4425:
  8656                           
  8657                           ;main.c: 738:             LATBbits.LATB2 = 0;
  8658     0C17  1119               	bcf	25,2	;volatile
  8659     0C18                     i1l4427:
  8660                           
  8661                           ;main.c: 739:             LATBbits.LATB3 = 0;
  8662     0C18  1199               	bcf	25,3	;volatile
  8663     0C19                     i1l4429:
  8664                           
  8665                           ;main.c: 740:             LATBbits.LATB4 = 0;
  8666     0C19  1219               	bcf	25,4	;volatile
  8667     0C1A                     i1l4431:
  8668                           
  8669                           ;main.c: 741:             LATDbits.LATD5 = 0;
  8670     0C1A  129B               	bcf	27,5	;volatile
  8671     0C1B                     i1l4433:
  8672                           
  8673                           ;main.c: 743:         if (PORTCbits.RC0 == 1)
  8674     0C1B  1C0E               	btfss	14,0	;volatile
  8675     0C1C  2C1E               	goto	u323_21
  8676     0C1D  2C1F               	goto	u323_20
  8677     0C1E                     u323_21:
  8678     0C1E  2C22               	goto	i1l830
  8679     0C1F                     u323_20:
  8680     0C1F                     i1l4435:
  8681                           
  8682                           ;main.c: 744:         {;main.c: 745:             Speed_B = 1;
  8683     0C1F  3001               	movlw	1
  8684     0C20  0141               	movlb	1	; select bank1
  8685     0C21  00E3               	movwf	_Speed_B^(0+128)
  8686     0C22                     i1l830:	
  8687                           ;main.c: 747:         }
  8688                           
  8689                           
  8690                           ;main.c: 748:         if (PORTCbits.RC0 == 0)
  8691     0C22  0140               	movlb	0	; select bank0
  8692     0C23  180E               	btfsc	14,0	;volatile
  8693     0C24  2C26               	goto	u324_21
  8694     0C25  2C27               	goto	u324_20
  8695     0C26                     u324_21:
  8696     0C26  2C3F               	goto	i1l4465
  8697     0C27                     u324_20:
  8698     0C27                     i1l4437:
  8699                           
  8700                           ;main.c: 749:         {;main.c: 750:             Speed_B = 0;
  8701     0C27  0141               	movlb	1	; select bank1
  8702     0C28  01E3               	clrf	_Speed_B^(0+128)
  8703     0C29                     i1l4439:
  8704                           
  8705                           ;main.c: 751:             LATDbits.LATD5 = 1;
  8706     0C29  0140               	movlb	0	; select bank0
  8707     0C2A  169B               	bsf	27,5	;volatile
  8708     0C2B                     i1l4441:
  8709                           
  8710                           ;main.c: 752:             LATEbits.LATE1 = 0;
  8711     0C2B  109C               	bcf	28,1	;volatile
  8712     0C2C                     i1l4443:
  8713                           
  8714                           ;main.c: 753:             LATBbits.LATB1 = 0;
  8715     0C2C  1099               	bcf	25,1	;volatile
  8716     0C2D                     i1l4445:
  8717                           
  8718                           ;main.c: 754:             LATBbits.LATB2 = 1;
  8719     0C2D  1519               	bsf	25,2	;volatile
  8720     0C2E                     i1l4447:
  8721                           
  8722                           ;main.c: 755:             LATBbits.LATB3 = 0;
  8723     0C2E  1199               	bcf	25,3	;volatile
  8724     0C2F                     i1l4449:
  8725                           
  8726                           ;main.c: 756:             LATBbits.LATB4 = 0;
  8727     0C2F  1219               	bcf	25,4	;volatile
  8728     0C30                     i1l4451:
  8729                           
  8730                           ;main.c: 757:             _delay((unsigned long)((1)*(16000000/4000.0)));
  8731     0C30  3006               	movlw	6
  8732     0C31  00F0               	movwf	??_control_led_and_7segment_FOR_MODE_SPEED_A_B
  8733     0C32  3030               	movlw	48
  8734     0C33                     u453_27:
  8735     0C33  0B89               	decfsz	9,f
  8736     0C34  2C33               	goto	u453_27
  8737     0C35  0BF0               	decfsz	??_control_led_and_7segment_FOR_MODE_SPEED_A_B,f
  8738     0C36  2C33               	goto	u453_27
  8739     0C37  3200               	nop2
  8740     0C38                     i1l4453:
  8741                           
  8742                           ;main.c: 758:             LATEbits.LATE1 = 0;
  8743     0C38  0140               	movlb	0	; select bank0
  8744     0C39  109C               	bcf	28,1	;volatile
  8745     0C3A                     i1l4455:
  8746                           
  8747                           ;main.c: 759:             LATBbits.LATB1 = 0;
  8748     0C3A  1099               	bcf	25,1	;volatile
  8749     0C3B                     i1l4457:
  8750                           
  8751                           ;main.c: 760:             LATBbits.LATB2 = 0;
  8752     0C3B  1119               	bcf	25,2	;volatile
  8753     0C3C                     i1l4459:
  8754                           
  8755                           ;main.c: 761:             LATBbits.LATB3 = 0;
  8756     0C3C  1199               	bcf	25,3	;volatile
  8757     0C3D                     i1l4461:
  8758                           
  8759                           ;main.c: 762:             LATBbits.LATB4 = 0;
  8760     0C3D  1219               	bcf	25,4	;volatile
  8761     0C3E                     i1l4463:
  8762                           
  8763                           ;main.c: 763:             LATDbits.LATD5 = 0;
  8764     0C3E  129B               	bcf	27,5	;volatile
  8765     0C3F                     i1l4465:
  8766                           
  8767                           ;main.c: 765:     flag = 10;
  8768     0C3F  300A               	movlw	10
  8769     0C40  00D5               	movwf	_flag
  8770     0C41  3000               	movlw	0
  8771     0C42  00D6               	movwf	_flag+1
  8772     0C43                     i1l832:
  8773     0C43  0008               	return
  8774     0C44                     __end_of_control_led_and_7segment_FOR_MODE_SPEED_A_B:
  8775                           
  8776                           	psect	text20
  8777     065B                     __ptext20:	
  8778 ;; *************** function _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY *****************
  8779 ;; Defined at:
  8780 ;;		line 528 in file "main.c"
  8781 ;; Parameters:    Size  Location     Type
  8782 ;;		None
  8783 ;; Auto vars:     Size  Location     Type
  8784 ;;		None
  8785 ;; Return value:  Size  Location     Type
  8786 ;;                  1    wreg      void 
  8787 ;; Registers used:
  8788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8789 ;; Tracked objects:
  8790 ;;		On entry : 0/0
  8791 ;;		On exit  : 0/0
  8792 ;;		Unchanged: 0/0
  8793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8796 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8798 ;;Total ram usage:        2 bytes
  8799 ;; Hardware stack levels used: 1
  8800 ;; Hardware stack levels required when called: 1
  8801 ;; This function calls:
  8802 ;;		_EUSART1_Write
  8803 ;;		___awdiv
  8804 ;;		___awmod
  8805 ;; This function is called by:
  8806 ;;		_updateLEDs
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810     065B                     _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY:	
  8811                           ;psect for function _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  8812                           
  8813     065B                     i1l4223:	
  8814                           ;incstack = 0
  8815                           ; Regs used in _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY: [wreg+fsr1l+fsr1h+st
      +                          atus,2+status,0+pclath+cstack]
  8816                           
  8817                           
  8818                           ;main.c: 530:     if (PORTAbits.RA5 == 0 && PORTAbits.RA3 == 1)
  8819     065B  0140               	movlb	0	; select bank0
  8820     065C  1A8C               	btfsc	12,5	;volatile
  8821     065D  2E5F               	goto	u306_21
  8822     065E  2E60               	goto	u306_20
  8823     065F                     u306_21:
  8824     065F  2EBA               	goto	i1l4249
  8825     0660                     u306_20:
  8826     0660                     i1l4225:
  8827     0660  1D8C               	btfss	12,3	;volatile
  8828     0661  2E63               	goto	u307_21
  8829     0662  2E64               	goto	u307_20
  8830     0663                     u307_21:
  8831     0663  2EBA               	goto	i1l4249
  8832     0664                     u307_20:
  8833     0664                     i1l4227:
  8834                           
  8835                           ;main.c: 531:     {;main.c: 532:         StartDebounceDelayTimer = 1;
  8836     0664  3001               	movlw	1
  8837     0665  0141               	movlb	1	; select bank1
  8838     0666  00D7               	movwf	_StartDebounceDelayTimer^(0+128)	;volatile
  8839     0667                     i1l4229:
  8840                           
  8841                           ;main.c: 533:         if(DebounceCompleted)
  8842     0667  0140               	movlb	0	; select bank0
  8843     0668  0859               	movf	_DebounceCompleted,w	;volatile
  8844     0669  1903               	btfsc	3,2
  8845     066A  2E6C               	goto	u308_21
  8846     066B  2E6D               	goto	u308_20
  8847     066C                     u308_21:
  8848     066C  2E79               	goto	i1l4239
  8849     066D                     u308_20:
  8850     066D                     i1l4231:
  8851                           
  8852                           ;main.c: 534:         if (SOFT_START_Delay < 98)
  8853     066D  3062               	movlw	98
  8854     066E  026F               	subwf	_SOFT_START_Delay,w
  8855     066F  1803               	skipnc
  8856     0670  2E72               	goto	u309_21
  8857     0671  2E73               	goto	u309_20
  8858     0672                     u309_21:
  8859     0672  2E79               	goto	i1l4239
  8860     0673                     u309_20:
  8861     0673                     i1l4233:
  8862                           
  8863                           ;main.c: 535:         {;main.c: 536:             SOFT_START_Delay++;
  8864     0673  3001               	movlw	1
  8865     0674  07EF               	addwf	_SOFT_START_Delay,f
  8866     0675                     i1l4235:
  8867                           
  8868                           ;main.c: 537:             StartDebounceDelayTimer = 0;
  8869     0675  0141               	movlb	1	; select bank1
  8870     0676  01D7               	clrf	_StartDebounceDelayTimer^(0+128)	;volatile
  8871     0677                     i1l4237:
  8872                           
  8873                           ;main.c: 538:             DebounceCompleted = 0;
  8874     0677  0140               	movlb	0	; select bank0
  8875     0678  01D9               	clrf	_DebounceCompleted	;volatile
  8876     0679                     i1l4239:
  8877                           
  8878                           ;main.c: 540:         digits_5[0] = 0;
  8879     0679  0142               	movlb	2	; select bank2
  8880     067A  01BA               	clrf	_digits_5^(0+256)
  8881     067B  01BB               	clrf	(_digits_5+1)^(0+256)
  8882     067C                     i1l4241:
  8883                           
  8884                           ;main.c: 541:         digits_5[1] = 0;
  8885     067C  01BC               	clrf	(_digits_5^(0+256)+2)
  8886     067D  01BD               	clrf	((_digits_5+1)^(0+256)+2)
  8887     067E                     i1l4243:
  8888                           
  8889                           ;main.c: 542:         digits_5[2] = 0;
  8890     067E  01BE               	clrf	(_digits_5^(0+256)+4)
  8891     067F  01BF               	clrf	((_digits_5+1)^(0+256)+4)
  8892     0680                     i1l4245:
  8893                           
  8894                           ;main.c: 543:         digits_5[3] = (SOFT_START_Delay / 10) % 10;
  8895     0680  300A               	movlw	10
  8896     0681  0140               	movlb	0	; select bank0
  8897     0682  00A4               	movwf	___awmod@divisor
  8898     0683  3000               	movlw	0
  8899     0684  00A5               	movwf	___awmod@divisor+1
  8900     0685  300A               	movlw	10
  8901     0686  00F6               	movwf	___awdiv@divisor
  8902     0687  3000               	movlw	0
  8903     0688  00F7               	movwf	___awdiv@divisor+1
  8904     0689  086F               	movf	_SOFT_START_Delay,w
  8905     068A  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  8906     068B  01A9               	clrf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1
  8907     068C  0828               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY,w
  8908     068D  00F8               	movwf	___awdiv@dividend
  8909     068E  0829               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1,w
  8910     068F  00F9               	movwf	___awdiv@dividend+1
  8911     0690  318B  2387  3186   	fcall	___awdiv
  8912     0693  0877               	movf	?___awdiv+1,w
  8913     0694  0140               	movlb	0	; select bank0
  8914     0695  00A7               	movwf	___awmod@dividend+1
  8915     0696  0876               	movf	?___awdiv,w
  8916     0697  00A6               	movwf	___awmod@dividend
  8917     0698  318A  2285  3186   	fcall	___awmod
  8918     069B  0140               	movlb	0	; select bank0
  8919     069C  0825               	movf	?___awmod+1,w
  8920     069D  0142               	movlb	2	; select bank2
  8921     069E  00C1               	movwf	((_digits_5+1)^(0+256)+6)
  8922     069F  0140               	movlb	0	; select bank0
  8923     06A0  0824               	movf	?___awmod,w
  8924     06A1  0142               	movlb	2	; select bank2
  8925     06A2  00C0               	movwf	(_digits_5^(0+256)+6)
  8926     06A3                     i1l4247:
  8927                           
  8928                           ;main.c: 544:         digits_5[4] = SOFT_START_Delay % 10;
  8929     06A3  300A               	movlw	10
  8930     06A4  0140               	movlb	0	; select bank0
  8931     06A5  00A4               	movwf	___awmod@divisor
  8932     06A6  3000               	movlw	0
  8933     06A7  00A5               	movwf	___awmod@divisor+1
  8934     06A8  086F               	movf	_SOFT_START_Delay,w
  8935     06A9  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  8936     06AA  01A9               	clrf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1
  8937     06AB  0828               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY,w
  8938     06AC  00A6               	movwf	___awmod@dividend
  8939     06AD  0829               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1,w
  8940     06AE  00A7               	movwf	___awmod@dividend+1
  8941     06AF  318A  2285  3186   	fcall	___awmod
  8942     06B2  0140               	movlb	0	; select bank0
  8943     06B3  0825               	movf	?___awmod+1,w
  8944     06B4  0142               	movlb	2	; select bank2
  8945     06B5  00C3               	movwf	((_digits_5+1)^(0+256)+8)
  8946     06B6  0140               	movlb	0	; select bank0
  8947     06B7  0824               	movf	?___awmod,w
  8948     06B8  0142               	movlb	2	; select bank2
  8949     06B9  00C2               	movwf	(_digits_5^(0+256)+8)
  8950     06BA                     i1l4249:
  8951                           
  8952                           ;main.c: 546:     if (PORTAbits.RA1 == 0 && PORTAbits.RA3 == 1)
  8953     06BA  0140               	movlb	0	; select bank0
  8954     06BB  188C               	btfsc	12,1	;volatile
  8955     06BC  2EBE               	goto	u310_21
  8956     06BD  2EBF               	goto	u310_20
  8957     06BE                     u310_21:
  8958     06BE  2F18               	goto	i1l4275
  8959     06BF                     u310_20:
  8960     06BF                     i1l4251:
  8961     06BF  1D8C               	btfss	12,3	;volatile
  8962     06C0  2EC2               	goto	u311_21
  8963     06C1  2EC3               	goto	u311_20
  8964     06C2                     u311_21:
  8965     06C2  2F18               	goto	i1l4275
  8966     06C3                     u311_20:
  8967     06C3                     i1l4253:
  8968                           
  8969                           ;main.c: 547:     {;main.c: 548:         StartDebounceDelayTimer_Decrement = 1;
  8970     06C3  3001               	movlw	1
  8971     06C4  0141               	movlb	1	; select bank1
  8972     06C5  00D6               	movwf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
  8973     06C6                     i1l4255:
  8974                           
  8975                           ;main.c: 549:         if(DebounceCompleted_Decrement)
  8976     06C6  0140               	movlb	0	; select bank0
  8977     06C7  0858               	movf	_DebounceCompleted_Decrement,w	;volatile
  8978     06C8  1903               	btfsc	3,2
  8979     06C9  2ECB               	goto	u312_21
  8980     06CA  2ECC               	goto	u312_20
  8981     06CB                     u312_21:
  8982     06CB  2ED7               	goto	i1l4265
  8983     06CC                     u312_20:
  8984     06CC                     i1l4257:
  8985                           
  8986                           ;main.c: 550:         if (SOFT_START_Delay > 0)
  8987     06CC  086F               	movf	_SOFT_START_Delay,w
  8988     06CD  1903               	btfsc	3,2
  8989     06CE  2ED0               	goto	u313_21
  8990     06CF  2ED1               	goto	u313_20
  8991     06D0                     u313_21:
  8992     06D0  2ED7               	goto	i1l4265
  8993     06D1                     u313_20:
  8994     06D1                     i1l4259:
  8995                           
  8996                           ;main.c: 551:         {;main.c: 552:             SOFT_START_Delay--;
  8997     06D1  3001               	movlw	1
  8998     06D2  02EF               	subwf	_SOFT_START_Delay,f
  8999     06D3                     i1l4261:
  9000                           
  9001                           ;main.c: 553:             StartDebounceDelayTimer_Decrement = 0;
  9002     06D3  0141               	movlb	1	; select bank1
  9003     06D4  01D6               	clrf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
  9004     06D5                     i1l4263:
  9005                           
  9006                           ;main.c: 554:             DebounceCompleted_Decrement = 0;
  9007     06D5  0140               	movlb	0	; select bank0
  9008     06D6  01D8               	clrf	_DebounceCompleted_Decrement	;volatile
  9009     06D7                     i1l4265:
  9010                           
  9011                           ;main.c: 556:          digits_5[0] = 0;
  9012     06D7  0142               	movlb	2	; select bank2
  9013     06D8  01BA               	clrf	_digits_5^(0+256)
  9014     06D9  01BB               	clrf	(_digits_5+1)^(0+256)
  9015     06DA                     i1l4267:
  9016                           
  9017                           ;main.c: 557:          digits_5[1] = 0;
  9018     06DA  01BC               	clrf	(_digits_5^(0+256)+2)
  9019     06DB  01BD               	clrf	((_digits_5+1)^(0+256)+2)
  9020     06DC                     i1l4269:
  9021                           
  9022                           ;main.c: 558:          digits_5[2] = 0;
  9023     06DC  01BE               	clrf	(_digits_5^(0+256)+4)
  9024     06DD  01BF               	clrf	((_digits_5+1)^(0+256)+4)
  9025     06DE                     i1l4271:
  9026                           
  9027                           ;main.c: 559:          digits_5[3] = (SOFT_START_Delay / 10) % 10;
  9028     06DE  300A               	movlw	10
  9029     06DF  0140               	movlb	0	; select bank0
  9030     06E0  00A4               	movwf	___awmod@divisor
  9031     06E1  3000               	movlw	0
  9032     06E2  00A5               	movwf	___awmod@divisor+1
  9033     06E3  300A               	movlw	10
  9034     06E4  00F6               	movwf	___awdiv@divisor
  9035     06E5  3000               	movlw	0
  9036     06E6  00F7               	movwf	___awdiv@divisor+1
  9037     06E7  086F               	movf	_SOFT_START_Delay,w
  9038     06E8  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  9039     06E9  01A9               	clrf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1
  9040     06EA  0828               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY,w
  9041     06EB  00F8               	movwf	___awdiv@dividend
  9042     06EC  0829               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1,w
  9043     06ED  00F9               	movwf	___awdiv@dividend+1
  9044     06EE  318B  2387  3186   	fcall	___awdiv
  9045     06F1  0877               	movf	?___awdiv+1,w
  9046     06F2  0140               	movlb	0	; select bank0
  9047     06F3  00A7               	movwf	___awmod@dividend+1
  9048     06F4  0876               	movf	?___awdiv,w
  9049     06F5  00A6               	movwf	___awmod@dividend
  9050     06F6  318A  2285  3186   	fcall	___awmod
  9051     06F9  0140               	movlb	0	; select bank0
  9052     06FA  0825               	movf	?___awmod+1,w
  9053     06FB  0142               	movlb	2	; select bank2
  9054     06FC  00C1               	movwf	((_digits_5+1)^(0+256)+6)
  9055     06FD  0140               	movlb	0	; select bank0
  9056     06FE  0824               	movf	?___awmod,w
  9057     06FF  0142               	movlb	2	; select bank2
  9058     0700  00C0               	movwf	(_digits_5^(0+256)+6)
  9059     0701                     i1l4273:
  9060                           
  9061                           ;main.c: 560:          digits_5[4] = SOFT_START_Delay % 10;
  9062     0701  300A               	movlw	10
  9063     0702  0140               	movlb	0	; select bank0
  9064     0703  00A4               	movwf	___awmod@divisor
  9065     0704  3000               	movlw	0
  9066     0705  00A5               	movwf	___awmod@divisor+1
  9067     0706  086F               	movf	_SOFT_START_Delay,w
  9068     0707  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  9069     0708  01A9               	clrf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1
  9070     0709  0828               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY,w
  9071     070A  00A6               	movwf	___awmod@dividend
  9072     070B  0829               	movf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY+1,w
  9073     070C  00A7               	movwf	___awmod@dividend+1
  9074     070D  318A  2285  3186   	fcall	___awmod
  9075     0710  0140               	movlb	0	; select bank0
  9076     0711  0825               	movf	?___awmod+1,w
  9077     0712  0142               	movlb	2	; select bank2
  9078     0713  00C3               	movwf	((_digits_5+1)^(0+256)+8)
  9079     0714  0140               	movlb	0	; select bank0
  9080     0715  0824               	movf	?___awmod,w
  9081     0716  0142               	movlb	2	; select bank2
  9082     0717  00C2               	movwf	(_digits_5^(0+256)+8)
  9083     0718                     i1l4275:
  9084                           
  9085                           ;main.c: 562:     LATDbits.LATD6 = 1;
  9086     0718  0140               	movlb	0	; select bank0
  9087     0719  171B               	bsf	27,6	;volatile
  9088     071A                     i1l4277:
  9089                           
  9090                           ;main.c: 563:     LATBbits.LATB4 = 1;
  9091     071A  1619               	bsf	25,4	;volatile
  9092     071B                     i1l4279:
  9093                           
  9094                           ;main.c: 564:     _delay((unsigned long)((1)*(16000000/4000.0)));
  9095     071B  3006               	movlw	6
  9096     071C  0140               	movlb	0	; select bank0
  9097     071D  00A8               	movwf	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  9098     071E  3030               	movlw	48
  9099     071F                     u454_27:
  9100     071F  0B89               	decfsz	9,f
  9101     0720  2F1F               	goto	u454_27
  9102     0721  0BA8               	decfsz	??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY,f
  9103     0722  2F1F               	goto	u454_27
  9104     0723  0000               	nop
  9105     0724                     i1l4281:
  9106                           
  9107                           ;main.c: 565:     LATBbits.LATB4 = 0;
  9108     0724  0140               	movlb	0	; select bank0
  9109     0725  1219               	bcf	25,4	;volatile
  9110     0726                     i1l4283:
  9111                           
  9112                           ;main.c: 566:     LATDbits.LATD6 = 0;
  9113     0726  131B               	bcf	27,6	;volatile
  9114     0727                     i1l4285:
  9115                           
  9116                           ;main.c: 567:     if (UARTFlag) {
  9117     0727  0857               	movf	_UARTFlag,w
  9118     0728  1903               	btfsc	3,2
  9119     0729  2F2B               	goto	u314_21
  9120     072A  2F2C               	goto	u314_20
  9121     072B                     u314_21:
  9122     072B  2F44               	goto	i1l4297
  9123     072C                     u314_20:
  9124     072C                     i1l4287:
  9125                           
  9126                           ;main.c: 568:         UARTFlag = 0;
  9127     072C  01D7               	clrf	_UARTFlag
  9128     072D                     i1l4289:
  9129                           
  9130                           ;main.c: 569:         EUSART1_Write(0xAA);
  9131     072D  30AA               	movlw	170
  9132     072E  00F0               	movwf	EUSART1_Write@txData
  9133     072F  3188  2007  3186   	fcall	_EUSART1_Write
  9134     0732                     i1l4291:
  9135                           
  9136                           ;main.c: 570:         EUSART1_Write(VOLTAGE);
  9137     0732  0140               	movlb	0	; select bank0
  9138     0733  0861               	movf	_VOLTAGE,w
  9139     0734  00F0               	movwf	EUSART1_Write@txData
  9140     0735  3188  2007  3186   	fcall	_EUSART1_Write
  9141     0738                     i1l4293:
  9142                           
  9143                           ;main.c: 571:         EUSART1_Write((uint8_t) (FREQUENCY >> 8));
  9144     0738  0140               	movlb	0	; select bank0
  9145     0739  086D               	movf	_FREQUENCY+1,w
  9146     073A  00F0               	movwf	EUSART1_Write@txData
  9147     073B  3188  2007  3186   	fcall	_EUSART1_Write
  9148     073E                     i1l4295:
  9149                           
  9150                           ;main.c: 572:         EUSART1_Write((uint8_t)(FREQUENCY & 0xFF));
  9151     073E  0140               	movlb	0	; select bank0
  9152     073F  086C               	movf	_FREQUENCY,w
  9153     0740  00F0               	movwf	EUSART1_Write@txData
  9154     0741  3188  2007  3186   	fcall	_EUSART1_Write
  9155     0744                     i1l4297:
  9156                           
  9157                           ;main.c: 574:     flag = 5;
  9158     0744  3005               	movlw	5
  9159     0745  0140               	movlb	0	; select bank0
  9160     0746  00D5               	movwf	_flag
  9161     0747  3000               	movlw	0
  9162     0748  00D6               	movwf	_flag+1
  9163     0749                     i1l805:
  9164     0749  0008               	return
  9165     074A                     __end_of_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY:
  9166                           
  9167                           	psect	text21
  9168     0A85                     __ptext21:	
  9169 ;; *************** function ___awmod *****************
  9170 ;; Defined at:
  9171 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  divisor         2    4[BANK0 ] int 
  9174 ;;  dividend        2    6[BANK0 ] int 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  sign            1   11[COMMON] unsigned char 
  9177 ;;  counter         1   10[COMMON] unsigned char 
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  2    4[BANK0 ] int 
  9180 ;; Registers used:
  9181 ;;		wreg, status,2, status,0
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9187 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9190 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9191 ;;Total ram usage:        6 bytes
  9192 ;; Hardware stack levels used: 1
  9193 ;; This function calls:
  9194 ;;		Nothing
  9195 ;; This function is called by:
  9196 ;;		_control_led_and_7segment_FOR_MODE_VOLTAGE
  9197 ;;		_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201     0A85                     ___awmod:	
  9202                           ;psect for function ___awmod
  9203                           
  9204     0A85                     i1l3871:	
  9205                           ;incstack = 0
  9206                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9207                           
  9208     0A85  01FB               	clrf	___awmod@sign
  9209     0A86                     i1l3873:
  9210     0A86  0140               	movlb	0	; select bank0
  9211     0A87  1FA7               	btfss	___awmod@dividend+1,7
  9212     0A88  2A8A               	goto	u259_21
  9213     0A89  2A8B               	goto	u259_20
  9214     0A8A                     u259_21:
  9215     0A8A  2A92               	goto	i1l3879
  9216     0A8B                     u259_20:
  9217     0A8B                     i1l3875:
  9218     0A8B  09A6               	comf	___awmod@dividend,f
  9219     0A8C  09A7               	comf	___awmod@dividend+1,f
  9220     0A8D  0AA6               	incf	___awmod@dividend,f
  9221     0A8E  1903               	skipnz
  9222     0A8F  0AA7               	incf	___awmod@dividend+1,f
  9223     0A90                     i1l3877:
  9224     0A90  3001               	movlw	1
  9225     0A91  00FB               	movwf	___awmod@sign
  9226     0A92                     i1l3879:
  9227     0A92  1FA5               	btfss	___awmod@divisor+1,7
  9228     0A93  2A95               	goto	u260_21
  9229     0A94  2A96               	goto	u260_20
  9230     0A95                     u260_21:
  9231     0A95  2A9B               	goto	i1l3883
  9232     0A96                     u260_20:
  9233     0A96                     i1l3881:
  9234     0A96  09A4               	comf	___awmod@divisor,f
  9235     0A97  09A5               	comf	___awmod@divisor+1,f
  9236     0A98  0AA4               	incf	___awmod@divisor,f
  9237     0A99  1903               	skipnz
  9238     0A9A  0AA5               	incf	___awmod@divisor+1,f
  9239     0A9B                     i1l3883:
  9240     0A9B  0824               	movf	___awmod@divisor,w
  9241     0A9C  0425               	iorwf	___awmod@divisor+1,w
  9242     0A9D  1903               	btfsc	3,2
  9243     0A9E  2AA0               	goto	u261_21
  9244     0A9F  2AA1               	goto	u261_20
  9245     0AA0                     u261_21:
  9246     0AA0  2AC8               	goto	i1l3901
  9247     0AA1                     u261_20:
  9248     0AA1                     i1l3885:
  9249     0AA1  3001               	movlw	1
  9250     0AA2  00FA               	movwf	___awmod@counter
  9251     0AA3  2AAB               	goto	i1l3891
  9252     0AA4                     i1l3887:
  9253     0AA4  3001               	movlw	1
  9254     0AA5                     u262_25:
  9255     0AA5  35A4               	lslf	___awmod@divisor,f
  9256     0AA6  0DA5               	rlf	___awmod@divisor+1,f
  9257     0AA7  0B89               	decfsz	9,f
  9258     0AA8  2AA5               	goto	u262_25
  9259     0AA9                     i1l3889:
  9260     0AA9  3001               	movlw	1
  9261     0AAA  07FA               	addwf	___awmod@counter,f
  9262     0AAB                     i1l3891:
  9263     0AAB  1FA5               	btfss	___awmod@divisor+1,7
  9264     0AAC  2AAE               	goto	u263_21
  9265     0AAD  2AAF               	goto	u263_20
  9266     0AAE                     u263_21:
  9267     0AAE  2AA4               	goto	i1l3887
  9268     0AAF                     u263_20:
  9269     0AAF                     i1l3893:
  9270     0AAF  0825               	movf	___awmod@divisor+1,w
  9271     0AB0  0227               	subwf	___awmod@dividend+1,w
  9272     0AB1  1D03               	skipz
  9273     0AB2  2AB5               	goto	u264_25
  9274     0AB3  0824               	movf	___awmod@divisor,w
  9275     0AB4  0226               	subwf	___awmod@dividend,w
  9276     0AB5                     u264_25:
  9277     0AB5  1C03               	skipc
  9278     0AB6  2AB8               	goto	u264_21
  9279     0AB7  2AB9               	goto	u264_20
  9280     0AB8                     u264_21:
  9281     0AB8  2ABD               	goto	i1l3897
  9282     0AB9                     u264_20:
  9283     0AB9                     i1l3895:
  9284     0AB9  0824               	movf	___awmod@divisor,w
  9285     0ABA  02A6               	subwf	___awmod@dividend,f
  9286     0ABB  0825               	movf	___awmod@divisor+1,w
  9287     0ABC  3BA7               	subwfb	___awmod@dividend+1,f
  9288     0ABD                     i1l3897:
  9289     0ABD  3001               	movlw	1
  9290     0ABE                     u265_25:
  9291     0ABE  36A5               	lsrf	___awmod@divisor+1,f
  9292     0ABF  0CA4               	rrf	___awmod@divisor,f
  9293     0AC0  0B89               	decfsz	9,f
  9294     0AC1  2ABE               	goto	u265_25
  9295     0AC2                     i1l3899:
  9296     0AC2  3001               	movlw	1
  9297     0AC3  02FA               	subwf	___awmod@counter,f
  9298     0AC4  1D03               	btfss	3,2
  9299     0AC5  2AC7               	goto	u266_21
  9300     0AC6  2AC8               	goto	u266_20
  9301     0AC7                     u266_21:
  9302     0AC7  2AAF               	goto	i1l3893
  9303     0AC8                     u266_20:
  9304     0AC8                     i1l3901:
  9305     0AC8  087B               	movf	___awmod@sign,w
  9306     0AC9  1903               	btfsc	3,2
  9307     0ACA  2ACC               	goto	u267_21
  9308     0ACB  2ACD               	goto	u267_20
  9309     0ACC                     u267_21:
  9310     0ACC  2AD2               	goto	i1l3905
  9311     0ACD                     u267_20:
  9312     0ACD                     i1l3903:
  9313     0ACD  09A6               	comf	___awmod@dividend,f
  9314     0ACE  09A7               	comf	___awmod@dividend+1,f
  9315     0ACF  0AA6               	incf	___awmod@dividend,f
  9316     0AD0  1903               	skipnz
  9317     0AD1  0AA7               	incf	___awmod@dividend+1,f
  9318     0AD2                     i1l3905:
  9319     0AD2  0827               	movf	___awmod@dividend+1,w
  9320     0AD3  00A5               	movwf	?___awmod+1
  9321     0AD4  0826               	movf	___awmod@dividend,w
  9322     0AD5  00A4               	movwf	?___awmod
  9323     0AD6                     i1l1260:
  9324     0AD6  0008               	return
  9325     0AD7                     __end_of___awmod:
  9326                           
  9327                           	psect	text22
  9328     0B87                     __ptext22:	
  9329 ;; *************** function ___awdiv *****************
  9330 ;; Defined at:
  9331 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  9332 ;; Parameters:    Size  Location     Type
  9333 ;;  divisor         2    6[COMMON] int 
  9334 ;;  dividend        2    8[COMMON] int 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  quotient        2    2[BANK0 ] int 
  9337 ;;  sign            1    1[BANK0 ] unsigned char 
  9338 ;;  counter         1    0[BANK0 ] unsigned char 
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  2    6[COMMON] int 
  9341 ;; Registers used:
  9342 ;;		wreg, status,2, status,0
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9351 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9352 ;;Total ram usage:        8 bytes
  9353 ;; Hardware stack levels used: 1
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_control_led_and_7segment_FOR_MODE_VOLTAGE
  9358 ;;		_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
  9359 ;;		_ISR
  9360 ;;		_SaveSystemDataToFlash
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364     0B87                     ___awdiv:	
  9365                           ;psect for function ___awdiv
  9366                           
  9367     0B87                     i1l3827:	
  9368                           ;incstack = 0
  9369                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9370                           
  9371     0B87  0140               	movlb	0	; select bank0
  9372     0B88  01A1               	clrf	___awdiv@sign
  9373     0B89                     i1l3829:
  9374     0B89  1FF7               	btfss	___awdiv@divisor+1,7
  9375     0B8A  2B8C               	goto	u249_21
  9376     0B8B  2B8D               	goto	u249_20
  9377     0B8C                     u249_21:
  9378     0B8C  2B94               	goto	i1l3835
  9379     0B8D                     u249_20:
  9380     0B8D                     i1l3831:
  9381     0B8D  09F6               	comf	___awdiv@divisor,f
  9382     0B8E  09F7               	comf	___awdiv@divisor+1,f
  9383     0B8F  0AF6               	incf	___awdiv@divisor,f
  9384     0B90  1903               	skipnz
  9385     0B91  0AF7               	incf	___awdiv@divisor+1,f
  9386     0B92                     i1l3833:
  9387     0B92  3001               	movlw	1
  9388     0B93  00A1               	movwf	___awdiv@sign
  9389     0B94                     i1l3835:
  9390     0B94  1FF9               	btfss	___awdiv@dividend+1,7
  9391     0B95  2B97               	goto	u250_21
  9392     0B96  2B98               	goto	u250_20
  9393     0B97                     u250_21:
  9394     0B97  2B9F               	goto	i1l3841
  9395     0B98                     u250_20:
  9396     0B98                     i1l3837:
  9397     0B98  09F8               	comf	___awdiv@dividend,f
  9398     0B99  09F9               	comf	___awdiv@dividend+1,f
  9399     0B9A  0AF8               	incf	___awdiv@dividend,f
  9400     0B9B  1903               	skipnz
  9401     0B9C  0AF9               	incf	___awdiv@dividend+1,f
  9402     0B9D                     i1l3839:
  9403     0B9D  3001               	movlw	1
  9404     0B9E  06A1               	xorwf	___awdiv@sign,f
  9405     0B9F                     i1l3841:
  9406     0B9F  01A2               	clrf	___awdiv@quotient
  9407     0BA0  01A3               	clrf	___awdiv@quotient+1
  9408     0BA1                     i1l3843:
  9409     0BA1  0876               	movf	___awdiv@divisor,w
  9410     0BA2  0477               	iorwf	___awdiv@divisor+1,w
  9411     0BA3  1903               	btfsc	3,2
  9412     0BA4  2BA6               	goto	u251_21
  9413     0BA5  2BA7               	goto	u251_20
  9414     0BA6                     u251_21:
  9415     0BA6  2BD4               	goto	i1l3863
  9416     0BA7                     u251_20:
  9417     0BA7                     i1l3845:
  9418     0BA7  3001               	movlw	1
  9419     0BA8  00A0               	movwf	___awdiv@counter
  9420     0BA9  2BB1               	goto	i1l3851
  9421     0BAA                     i1l3847:
  9422     0BAA  3001               	movlw	1
  9423     0BAB                     u252_25:
  9424     0BAB  35F6               	lslf	___awdiv@divisor,f
  9425     0BAC  0DF7               	rlf	___awdiv@divisor+1,f
  9426     0BAD  0B89               	decfsz	9,f
  9427     0BAE  2BAB               	goto	u252_25
  9428     0BAF                     i1l3849:
  9429     0BAF  3001               	movlw	1
  9430     0BB0  07A0               	addwf	___awdiv@counter,f
  9431     0BB1                     i1l3851:
  9432     0BB1  1FF7               	btfss	___awdiv@divisor+1,7
  9433     0BB2  2BB4               	goto	u253_21
  9434     0BB3  2BB5               	goto	u253_20
  9435     0BB4                     u253_21:
  9436     0BB4  2BAA               	goto	i1l3847
  9437     0BB5                     u253_20:
  9438     0BB5                     i1l3853:
  9439     0BB5  3001               	movlw	1
  9440     0BB6                     u254_25:
  9441     0BB6  35A2               	lslf	___awdiv@quotient,f
  9442     0BB7  0DA3               	rlf	___awdiv@quotient+1,f
  9443     0BB8  0B89               	decfsz	9,f
  9444     0BB9  2BB6               	goto	u254_25
  9445     0BBA  0877               	movf	___awdiv@divisor+1,w
  9446     0BBB  0279               	subwf	___awdiv@dividend+1,w
  9447     0BBC  1D03               	skipz
  9448     0BBD  2BC0               	goto	u255_25
  9449     0BBE  0876               	movf	___awdiv@divisor,w
  9450     0BBF  0278               	subwf	___awdiv@dividend,w
  9451     0BC0                     u255_25:
  9452     0BC0  1C03               	skipc
  9453     0BC1  2BC3               	goto	u255_21
  9454     0BC2  2BC4               	goto	u255_20
  9455     0BC3                     u255_21:
  9456     0BC3  2BC9               	goto	i1l3859
  9457     0BC4                     u255_20:
  9458     0BC4                     i1l3855:
  9459     0BC4  0876               	movf	___awdiv@divisor,w
  9460     0BC5  02F8               	subwf	___awdiv@dividend,f
  9461     0BC6  0877               	movf	___awdiv@divisor+1,w
  9462     0BC7  3BF9               	subwfb	___awdiv@dividend+1,f
  9463     0BC8                     i1l3857:
  9464     0BC8  1422               	bsf	___awdiv@quotient,0
  9465     0BC9                     i1l3859:
  9466     0BC9  3001               	movlw	1
  9467     0BCA                     u256_25:
  9468     0BCA  36F7               	lsrf	___awdiv@divisor+1,f
  9469     0BCB  0CF6               	rrf	___awdiv@divisor,f
  9470     0BCC  0B89               	decfsz	9,f
  9471     0BCD  2BCA               	goto	u256_25
  9472     0BCE                     i1l3861:
  9473     0BCE  3001               	movlw	1
  9474     0BCF  02A0               	subwf	___awdiv@counter,f
  9475     0BD0  1D03               	btfss	3,2
  9476     0BD1  2BD3               	goto	u257_21
  9477     0BD2  2BD4               	goto	u257_20
  9478     0BD3                     u257_21:
  9479     0BD3  2BB5               	goto	i1l3853
  9480     0BD4                     u257_20:
  9481     0BD4                     i1l3863:
  9482     0BD4  0821               	movf	___awdiv@sign,w
  9483     0BD5  1903               	btfsc	3,2
  9484     0BD6  2BD8               	goto	u258_21
  9485     0BD7  2BD9               	goto	u258_20
  9486     0BD8                     u258_21:
  9487     0BD8  2BDE               	goto	i1l3867
  9488     0BD9                     u258_20:
  9489     0BD9                     i1l3865:
  9490     0BD9  09A2               	comf	___awdiv@quotient,f
  9491     0BDA  09A3               	comf	___awdiv@quotient+1,f
  9492     0BDB  0AA2               	incf	___awdiv@quotient,f
  9493     0BDC  1903               	skipnz
  9494     0BDD  0AA3               	incf	___awdiv@quotient+1,f
  9495     0BDE                     i1l3867:
  9496     0BDE  0823               	movf	___awdiv@quotient+1,w
  9497     0BDF  00F7               	movwf	?___awdiv+1
  9498     0BE0  0822               	movf	___awdiv@quotient,w
  9499     0BE1  00F6               	movwf	?___awdiv
  9500     0BE2                     i1l1247:
  9501     0BE2  0008               	return
  9502     0BE3                     __end_of___awdiv:
  9503                           
  9504                           	psect	text23
  9505     08A0                     __ptext23:	
  9506 ;; *************** function _control_led_and_7segment_FOR_MODE_SENSOR_II *****************
  9507 ;; Defined at:
  9508 ;;		line 619 in file "main.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;		None
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9526 ;;Total ram usage:        0 bytes
  9527 ;; Hardware stack levels used: 1
  9528 ;; This function calls:
  9529 ;;		Nothing
  9530 ;; This function is called by:
  9531 ;;		_updateLEDs
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535     08A0                     _control_led_and_7segment_FOR_MODE_SENSOR_II:	
  9536                           ;psect for function _control_led_and_7segment_FOR_MODE_SENSOR_II
  9537                           
  9538     08A0                     i1l4317:	
  9539                           ;incstack = 0
  9540                           ; Regs used in _control_led_and_7segment_FOR_MODE_SENSOR_II: [wreg+status,2]
  9541                           
  9542                           
  9543                           ;main.c: 622:         digits_11[0] = 0x00;
  9544     08A0  0143               	movlb	3	; select bank3
  9545     08A1  01B4               	clrf	_digits_11^(0+384)
  9546     08A2  01B5               	clrf	(_digits_11+1)^(0+384)
  9547     08A3                     i1l4319:
  9548                           
  9549                           ;main.c: 623:         digits_11[1] = 0x73;
  9550     08A3  3073               	movlw	115
  9551     08A4  00B6               	movwf	(_digits_11^(0+384)+2)
  9552     08A5  3000               	movlw	0
  9553     08A6  00B7               	movwf	(_digits_11^(0+384)+3)
  9554     08A7                     i1l4321:
  9555                           
  9556                           ;main.c: 624:         digits_11[2] = 0x3f;
  9557     08A7  303F               	movlw	63
  9558     08A8  00B8               	movwf	(_digits_11^(0+384)+4)
  9559     08A9  3000               	movlw	0
  9560     08AA  00B9               	movwf	(_digits_11^(0+384)+5)
  9561     08AB                     i1l4323:
  9562                           
  9563                           ;main.c: 625:         digits_11[3] = 0x3f;
  9564     08AB  303F               	movlw	63
  9565     08AC  00BA               	movwf	(_digits_11^(0+384)+6)
  9566     08AD  3000               	movlw	0
  9567     08AE  00BB               	movwf	(_digits_11^(0+384)+7)
  9568     08AF                     i1l4325:
  9569                           
  9570                           ;main.c: 626:         digits_11[4] = 0x5b;
  9571     08AF  305B               	movlw	91
  9572     08B0  00BC               	movwf	(_digits_11^(0+384)+8)
  9573     08B1  3000               	movlw	0
  9574     08B2  00BD               	movwf	(_digits_11^(0+384)+9)
  9575     08B3                     i1l4327:
  9576                           
  9577                           ;main.c: 629:     if(PORTCbits.RC2 == 0) {
  9578     08B3  0140               	movlb	0	; select bank0
  9579     08B4  190E               	btfsc	14,2	;volatile
  9580     08B5  28B7               	goto	u317_21
  9581     08B6  28B8               	goto	u317_20
  9582     08B7                     u317_21:
  9583     08B7  28BB               	goto	i1l814
  9584     08B8                     u317_20:
  9585     08B8                     i1l4329:
  9586                           
  9587                           ;main.c: 630:         NPN_Sensor_1 = 0;
  9588     08B8  0141               	movlb	1	; select bank1
  9589     08B9  01E7               	clrf	_NPN_Sensor_1^(0+128)	;volatile
  9590                           
  9591                           ;main.c: 642:     }
  9592     08BA  28C2               	goto	i1l4333
  9593     08BB                     i1l814:	
  9594                           ;main.c: 644:     else if (PORTCbits.RC2 == 1) {
  9595                           
  9596     08BB  1D0E               	btfss	14,2	;volatile
  9597     08BC  28BE               	goto	u318_21
  9598     08BD  28BF               	goto	u318_20
  9599     08BE                     u318_21:
  9600     08BE  28C2               	goto	i1l4333
  9601     08BF                     u318_20:
  9602     08BF                     i1l4331:
  9603                           
  9604                           ;main.c: 645:         NPN_Sensor_1 = 1;
  9605     08BF  3001               	movlw	1
  9606     08C0  0141               	movlb	1	; select bank1
  9607     08C1  00E7               	movwf	_NPN_Sensor_1^(0+128)	;volatile
  9608     08C2                     i1l4333:
  9609                           
  9610                           ;main.c: 656:     flag = 11;
  9611     08C2  300B               	movlw	11
  9612     08C3  0140               	movlb	0	; select bank0
  9613     08C4  00D5               	movwf	_flag
  9614     08C5  3000               	movlw	0
  9615     08C6  00D6               	movwf	_flag+1
  9616     08C7                     i1l817:
  9617     08C7  0008               	return
  9618     08C8                     __end_of_control_led_and_7segment_FOR_MODE_SENSOR_II:
  9619                           
  9620                           	psect	text24
  9621     0878                     __ptext24:	
  9622 ;; *************** function _control_led_and_7segment_FOR_MODE_PHOTO_SENSOR *****************
  9623 ;; Defined at:
  9624 ;;		line 659 in file "main.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;		None
  9627 ;; Auto vars:     Size  Location     Type
  9628 ;;		None
  9629 ;; Return value:  Size  Location     Type
  9630 ;;                  1    wreg      void 
  9631 ;; Registers used:
  9632 ;;		wreg, status,2
  9633 ;; Tracked objects:
  9634 ;;		On entry : 0/0
  9635 ;;		On exit  : 0/0
  9636 ;;		Unchanged: 0/0
  9637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9642 ;;Total ram usage:        0 bytes
  9643 ;; Hardware stack levels used: 1
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_updateLEDs
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651     0878                     _control_led_and_7segment_FOR_MODE_PHOTO_SENSOR:	
  9652                           ;psect for function _control_led_and_7segment_FOR_MODE_PHOTO_SENSOR
  9653                           
  9654     0878                     i1l4335:	
  9655                           ;incstack = 0
  9656                           ; Regs used in _control_led_and_7segment_FOR_MODE_PHOTO_SENSOR: [wreg+status,2]
  9657                           
  9658                           
  9659                           ;main.c: 662:         digits_7[0] = 0x00;
  9660     0878  0143               	movlb	3	; select bank3
  9661     0879  01DC               	clrf	_digits_7^(0+384)
  9662     087A  01DD               	clrf	(_digits_7+1)^(0+384)
  9663     087B                     i1l4337:
  9664                           
  9665                           ;main.c: 663:         digits_7[1] = 0x73;
  9666     087B  3073               	movlw	115
  9667     087C  00DE               	movwf	(_digits_7^(0+384)+2)
  9668     087D  3000               	movlw	0
  9669     087E  00DF               	movwf	(_digits_7^(0+384)+3)
  9670     087F                     i1l4339:
  9671                           
  9672                           ;main.c: 664:         digits_7[2] = 0x3f;
  9673     087F  303F               	movlw	63
  9674     0880  00E0               	movwf	(_digits_7^(0+384)+4)
  9675     0881  3000               	movlw	0
  9676     0882  00E1               	movwf	(_digits_7^(0+384)+5)
  9677     0883                     i1l4341:
  9678                           
  9679                           ;main.c: 665:         digits_7[3] = 0x3f;
  9680     0883  303F               	movlw	63
  9681     0884  00E2               	movwf	(_digits_7^(0+384)+6)
  9682     0885  3000               	movlw	0
  9683     0886  00E3               	movwf	(_digits_7^(0+384)+7)
  9684     0887                     i1l4343:
  9685                           
  9686                           ;main.c: 666:         digits_7[4] = 0x4f;
  9687     0887  304F               	movlw	79
  9688     0888  00E4               	movwf	(_digits_7^(0+384)+8)
  9689     0889  3000               	movlw	0
  9690     088A  00E5               	movwf	(_digits_7^(0+384)+9)
  9691     088B                     i1l4345:
  9692                           
  9693                           ;main.c: 669:     if (PORTBbits.RB0 == 1) {
  9694     088B  0140               	movlb	0	; select bank0
  9695     088C  1C0D               	btfss	13,0	;volatile
  9696     088D  288F               	goto	u319_21
  9697     088E  2890               	goto	u319_20
  9698     088F                     u319_21:
  9699     088F  2893               	goto	i1l820
  9700     0890                     u319_20:
  9701     0890                     i1l4347:
  9702                           
  9703                           ;main.c: 670:         PhotoSensor_Flag = 1;
  9704     0890  3001               	movlw	1
  9705     0891  0141               	movlb	1	; select bank1
  9706     0892  00E5               	movwf	_PhotoSensor_Flag^(0+128)	;volatile
  9707     0893                     i1l820:	
  9708                           ;main.c: 671:     }
  9709                           
  9710                           
  9711                           ;main.c: 672:     if(PORTBbits.RB0 == 0) {
  9712     0893  0140               	movlb	0	; select bank0
  9713     0894  180D               	btfsc	13,0	;volatile
  9714     0895  2897               	goto	u320_21
  9715     0896  2898               	goto	u320_20
  9716     0897                     u320_21:
  9717     0897  289A               	goto	i1l4351
  9718     0898                     u320_20:
  9719     0898                     i1l4349:
  9720                           
  9721                           ;main.c: 673:         PhotoSensor_Flag = 0;
  9722     0898  0141               	movlb	1	; select bank1
  9723     0899  01E5               	clrf	_PhotoSensor_Flag^(0+128)	;volatile
  9724     089A                     i1l4351:
  9725                           
  9726                           ;main.c: 675:     flag = 7;
  9727     089A  3007               	movlw	7
  9728     089B  0140               	movlb	0	; select bank0
  9729     089C  00D5               	movwf	_flag
  9730     089D  3000               	movlw	0
  9731     089E  00D6               	movwf	_flag+1
  9732     089F                     i1l822:
  9733     089F  0008               	return
  9734     08A0                     __end_of_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR:
  9735                           
  9736                           	psect	text25
  9737     0F23                     __ptext25:	
  9738 ;; *************** function _control_led_and_7segment_FOR_MODE_ON_DELAY *****************
  9739 ;; Defined at:
  9740 ;;		line 429 in file "main.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;		None
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9757 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9758 ;;Total ram usage:        1 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; Hardware stack levels required when called: 1
  9761 ;; This function calls:
  9762 ;;		_EUSART1_Write
  9763 ;;		___lwdiv
  9764 ;;		___lwmod
  9765 ;; This function is called by:
  9766 ;;		_updateLEDs
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770     0F23                     _control_led_and_7segment_FOR_MODE_ON_DELAY:	
  9771                           ;psect for function _control_led_and_7segment_FOR_MODE_ON_DELAY
  9772                           
  9773     0F23                     i1l4071:	
  9774                           ;incstack = 0
  9775                           ; Regs used in _control_led_and_7segment_FOR_MODE_ON_DELAY: [wreg+fsr1l+fsr1h+status,2+s
      +                          tatus,0+pclath+cstack]
  9776                           
  9777                           
  9778                           ;main.c: 431:     if (PORTAbits.RA5 == 0 && PORTAbits.RA3 == 1)
  9779     0F23  0140               	movlb	0	; select bank0
  9780     0F24  1A8C               	btfsc	12,5	;volatile
  9781     0F25  2F27               	goto	u288_21
  9782     0F26  2F28               	goto	u288_20
  9783     0F27                     u288_21:
  9784     0F27  2F7A               	goto	i1l4097
  9785     0F28                     u288_20:
  9786     0F28                     i1l4073:
  9787     0F28  1D8C               	btfss	12,3	;volatile
  9788     0F29  2F2B               	goto	u289_21
  9789     0F2A  2F2C               	goto	u289_20
  9790     0F2B                     u289_21:
  9791     0F2B  2F7A               	goto	i1l4097
  9792     0F2C                     u289_20:
  9793     0F2C                     i1l4075:
  9794                           
  9795                           ;main.c: 432:     {;main.c: 433:         StartDebounceDelayTimer = 1;
  9796     0F2C  3001               	movlw	1
  9797     0F2D  0141               	movlb	1	; select bank1
  9798     0F2E  00D7               	movwf	_StartDebounceDelayTimer^(0+128)	;volatile
  9799     0F2F                     i1l4077:
  9800                           
  9801                           ;main.c: 434:         if(DebounceCompleted)
  9802     0F2F  0140               	movlb	0	; select bank0
  9803     0F30  0859               	movf	_DebounceCompleted,w	;volatile
  9804     0F31  1903               	btfsc	3,2
  9805     0F32  2F34               	goto	u290_21
  9806     0F33  2F35               	goto	u290_20
  9807     0F34                     u290_21:
  9808     0F34  2F46               	goto	i1l4087
  9809     0F35                     u290_20:
  9810     0F35                     i1l4079:
  9811                           
  9812                           ;main.c: 435:         if (ON_Delay < 98)
  9813     0F35  3000               	movlw	0
  9814     0F36  026B               	subwf	_ON_Delay+1,w
  9815     0F37  3062               	movlw	98
  9816     0F38  1903               	skipnz
  9817     0F39  026A               	subwf	_ON_Delay,w
  9818     0F3A  1803               	skipnc
  9819     0F3B  2F3D               	goto	u291_21
  9820     0F3C  2F3E               	goto	u291_20
  9821     0F3D                     u291_21:
  9822     0F3D  2F46               	goto	i1l4087
  9823     0F3E                     u291_20:
  9824     0F3E                     i1l4081:
  9825                           
  9826                           ;main.c: 436:         {;main.c: 437:             ON_Delay++;
  9827     0F3E  3001               	movlw	1
  9828     0F3F  07EA               	addwf	_ON_Delay,f
  9829     0F40  3000               	movlw	0
  9830     0F41  3DEB               	addwfc	_ON_Delay+1,f
  9831     0F42                     i1l4083:
  9832                           
  9833                           ;main.c: 438:             StartDebounceDelayTimer = 0;
  9834     0F42  0141               	movlb	1	; select bank1
  9835     0F43  01D7               	clrf	_StartDebounceDelayTimer^(0+128)	;volatile
  9836     0F44                     i1l4085:
  9837                           
  9838                           ;main.c: 439:             DebounceCompleted = 0;
  9839     0F44  0140               	movlb	0	; select bank0
  9840     0F45  01D9               	clrf	_DebounceCompleted	;volatile
  9841     0F46                     i1l4087:
  9842                           
  9843                           ;main.c: 441:         digits_3[0] = 0;
  9844     0F46  0142               	movlb	2	; select bank2
  9845     0F47  01CE               	clrf	_digits_3^(0+256)
  9846     0F48  01CF               	clrf	(_digits_3+1)^(0+256)
  9847     0F49                     i1l4089:
  9848                           
  9849                           ;main.c: 442:         digits_3[1] = 0;
  9850     0F49  01D0               	clrf	(_digits_3^(0+256)+2)
  9851     0F4A  01D1               	clrf	((_digits_3+1)^(0+256)+2)
  9852     0F4B                     i1l4091:
  9853                           
  9854                           ;main.c: 443:         digits_3[2] = 0;
  9855     0F4B  01D2               	clrf	(_digits_3^(0+256)+4)
  9856     0F4C  01D3               	clrf	((_digits_3+1)^(0+256)+4)
  9857     0F4D                     i1l4093:
  9858                           
  9859                           ;main.c: 444:         digits_3[3] = (ON_Delay / 10) % 10;
  9860     0F4D  300A               	movlw	10
  9861     0F4E  00F7               	movwf	___lwmod@divisor
  9862     0F4F  3000               	movlw	0
  9863     0F50  00F8               	movwf	___lwmod@divisor+1
  9864     0F51  300A               	movlw	10
  9865     0F52  00F0               	movwf	___lwdiv@divisor
  9866     0F53  3000               	movlw	0
  9867     0F54  00F1               	movwf	___lwdiv@divisor+1
  9868     0F55  0140               	movlb	0	; select bank0
  9869     0F56  086B               	movf	_ON_Delay+1,w
  9870     0F57  00F3               	movwf	___lwdiv@dividend+1
  9871     0F58  086A               	movf	_ON_Delay,w
  9872     0F59  00F2               	movwf	___lwdiv@dividend
  9873     0F5A  3189  215E  318F   	fcall	___lwdiv
  9874     0F5D  0871               	movf	?___lwdiv+1,w
  9875     0F5E  00FA               	movwf	___lwmod@dividend+1
  9876     0F5F  0870               	movf	?___lwdiv,w
  9877     0F60  00F9               	movwf	___lwmod@dividend
  9878     0F61  3188  20F6  318F   	fcall	___lwmod
  9879     0F64  0878               	movf	?___lwmod+1,w
  9880     0F65  0142               	movlb	2	; select bank2
  9881     0F66  00D5               	movwf	((_digits_3+1)^(0+256)+6)
  9882     0F67  0877               	movf	?___lwmod,w
  9883     0F68  00D4               	movwf	(_digits_3^(0+256)+6)
  9884     0F69                     i1l4095:
  9885                           
  9886                           ;main.c: 445:         digits_3[4] = ON_Delay % 10;
  9887     0F69  300A               	movlw	10
  9888     0F6A  00F7               	movwf	___lwmod@divisor
  9889     0F6B  3000               	movlw	0
  9890     0F6C  00F8               	movwf	___lwmod@divisor+1
  9891     0F6D  0140               	movlb	0	; select bank0
  9892     0F6E  086B               	movf	_ON_Delay+1,w
  9893     0F6F  00FA               	movwf	___lwmod@dividend+1
  9894     0F70  086A               	movf	_ON_Delay,w
  9895     0F71  00F9               	movwf	___lwmod@dividend
  9896     0F72  3188  20F6  318F   	fcall	___lwmod
  9897     0F75  0878               	movf	?___lwmod+1,w
  9898     0F76  0142               	movlb	2	; select bank2
  9899     0F77  00D7               	movwf	((_digits_3+1)^(0+256)+8)
  9900     0F78  0877               	movf	?___lwmod,w
  9901     0F79  00D6               	movwf	(_digits_3^(0+256)+8)
  9902     0F7A                     i1l4097:
  9903                           
  9904                           ;main.c: 447:     if (PORTAbits.RA1 == 0 && PORTAbits.RA3 == 1)
  9905     0F7A  0140               	movlb	0	; select bank0
  9906     0F7B  188C               	btfsc	12,1	;volatile
  9907     0F7C  2F7E               	goto	u292_21
  9908     0F7D  2F7F               	goto	u292_20
  9909     0F7E                     u292_21:
  9910     0F7E  2FCE               	goto	i1l4123
  9911     0F7F                     u292_20:
  9912     0F7F                     i1l4099:
  9913     0F7F  1D8C               	btfss	12,3	;volatile
  9914     0F80  2F82               	goto	u293_21
  9915     0F81  2F83               	goto	u293_20
  9916     0F82                     u293_21:
  9917     0F82  2FCE               	goto	i1l4123
  9918     0F83                     u293_20:
  9919     0F83                     i1l4101:
  9920                           
  9921                           ;main.c: 448:     {;main.c: 449:         StartDebounceDelayTimer_Decrement = 1;
  9922     0F83  3001               	movlw	1
  9923     0F84  0141               	movlb	1	; select bank1
  9924     0F85  00D6               	movwf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
  9925     0F86                     i1l4103:
  9926                           
  9927                           ;main.c: 450:         if(DebounceCompleted_Decrement)
  9928     0F86  0140               	movlb	0	; select bank0
  9929     0F87  0858               	movf	_DebounceCompleted_Decrement,w	;volatile
  9930     0F88  1903               	btfsc	3,2
  9931     0F89  2F8B               	goto	u294_21
  9932     0F8A  2F8C               	goto	u294_20
  9933     0F8B                     u294_21:
  9934     0F8B  2F9A               	goto	i1l4113
  9935     0F8C                     u294_20:
  9936     0F8C                     i1l4105:
  9937                           
  9938                           ;main.c: 451:         if (ON_Delay > 0)
  9939     0F8C  086A               	movf	_ON_Delay,w
  9940     0F8D  046B               	iorwf	_ON_Delay+1,w
  9941     0F8E  1903               	btfsc	3,2
  9942     0F8F  2F91               	goto	u295_21
  9943     0F90  2F92               	goto	u295_20
  9944     0F91                     u295_21:
  9945     0F91  2F9A               	goto	i1l4113
  9946     0F92                     u295_20:
  9947     0F92                     i1l4107:
  9948                           
  9949                           ;main.c: 452:         {;main.c: 453:             ON_Delay--;
  9950     0F92  3001               	movlw	1
  9951     0F93  02EA               	subwf	_ON_Delay,f
  9952     0F94  3000               	movlw	0
  9953     0F95  3BEB               	subwfb	_ON_Delay+1,f
  9954     0F96                     i1l4109:
  9955                           
  9956                           ;main.c: 454:             StartDebounceDelayTimer_Decrement = 0;
  9957     0F96  0141               	movlb	1	; select bank1
  9958     0F97  01D6               	clrf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
  9959     0F98                     i1l4111:
  9960                           
  9961                           ;main.c: 455:             DebounceCompleted_Decrement = 0;
  9962     0F98  0140               	movlb	0	; select bank0
  9963     0F99  01D8               	clrf	_DebounceCompleted_Decrement	;volatile
  9964     0F9A                     i1l4113:
  9965                           
  9966                           ;main.c: 457:         digits_3[0] = 0;
  9967     0F9A  0142               	movlb	2	; select bank2
  9968     0F9B  01CE               	clrf	_digits_3^(0+256)
  9969     0F9C  01CF               	clrf	(_digits_3+1)^(0+256)
  9970     0F9D                     i1l4115:
  9971                           
  9972                           ;main.c: 458:         digits_3[1] = 0;
  9973     0F9D  01D0               	clrf	(_digits_3^(0+256)+2)
  9974     0F9E  01D1               	clrf	((_digits_3+1)^(0+256)+2)
  9975     0F9F                     i1l4117:
  9976                           
  9977                           ;main.c: 459:         digits_3[2] = 0;
  9978     0F9F  01D2               	clrf	(_digits_3^(0+256)+4)
  9979     0FA0  01D3               	clrf	((_digits_3+1)^(0+256)+4)
  9980     0FA1                     i1l4119:
  9981                           
  9982                           ;main.c: 460:         digits_3[3] = (ON_Delay / 10) % 10;
  9983     0FA1  300A               	movlw	10
  9984     0FA2  00F7               	movwf	___lwmod@divisor
  9985     0FA3  3000               	movlw	0
  9986     0FA4  00F8               	movwf	___lwmod@divisor+1
  9987     0FA5  300A               	movlw	10
  9988     0FA6  00F0               	movwf	___lwdiv@divisor
  9989     0FA7  3000               	movlw	0
  9990     0FA8  00F1               	movwf	___lwdiv@divisor+1
  9991     0FA9  0140               	movlb	0	; select bank0
  9992     0FAA  086B               	movf	_ON_Delay+1,w
  9993     0FAB  00F3               	movwf	___lwdiv@dividend+1
  9994     0FAC  086A               	movf	_ON_Delay,w
  9995     0FAD  00F2               	movwf	___lwdiv@dividend
  9996     0FAE  3189  215E  318F   	fcall	___lwdiv
  9997     0FB1  0871               	movf	?___lwdiv+1,w
  9998     0FB2  00FA               	movwf	___lwmod@dividend+1
  9999     0FB3  0870               	movf	?___lwdiv,w
 10000     0FB4  00F9               	movwf	___lwmod@dividend
 10001     0FB5  3188  20F6  318F   	fcall	___lwmod
 10002     0FB8  0878               	movf	?___lwmod+1,w
 10003     0FB9  0142               	movlb	2	; select bank2
 10004     0FBA  00D5               	movwf	((_digits_3+1)^(0+256)+6)
 10005     0FBB  0877               	movf	?___lwmod,w
 10006     0FBC  00D4               	movwf	(_digits_3^(0+256)+6)
 10007     0FBD                     i1l4121:
 10008                           
 10009                           ;main.c: 461:         digits_3[4] = ON_Delay % 10;
 10010     0FBD  300A               	movlw	10
 10011     0FBE  00F7               	movwf	___lwmod@divisor
 10012     0FBF  3000               	movlw	0
 10013     0FC0  00F8               	movwf	___lwmod@divisor+1
 10014     0FC1  0140               	movlb	0	; select bank0
 10015     0FC2  086B               	movf	_ON_Delay+1,w
 10016     0FC3  00FA               	movwf	___lwmod@dividend+1
 10017     0FC4  086A               	movf	_ON_Delay,w
 10018     0FC5  00F9               	movwf	___lwmod@dividend
 10019     0FC6  3188  20F6  318F   	fcall	___lwmod
 10020     0FC9  0878               	movf	?___lwmod+1,w
 10021     0FCA  0142               	movlb	2	; select bank2
 10022     0FCB  00D7               	movwf	((_digits_3+1)^(0+256)+8)
 10023     0FCC  0877               	movf	?___lwmod,w
 10024     0FCD  00D6               	movwf	(_digits_3^(0+256)+8)
 10025     0FCE                     i1l4123:
 10026                           
 10027                           ;main.c: 463:     LATDbits.LATD6 = 1;
 10028     0FCE  0140               	movlb	0	; select bank0
 10029     0FCF  171B               	bsf	27,6	;volatile
 10030     0FD0                     i1l4125:
 10031                           
 10032                           ;main.c: 464:     LATBbits.LATB2 = 1;
 10033     0FD0  1519               	bsf	25,2	;volatile
 10034     0FD1                     i1l4127:
 10035                           
 10036                           ;main.c: 465:     _delay((unsigned long)((1)*(16000000/4000.0)));
 10037     0FD1  3006               	movlw	6
 10038     0FD2  0140               	movlb	0	; select bank0
 10039     0FD3  00A0               	movwf	??_control_led_and_7segment_FOR_MODE_ON_DELAY
 10040     0FD4  3030               	movlw	48
 10041     0FD5                     u455_27:
 10042     0FD5  0B89               	decfsz	9,f
 10043     0FD6  2FD5               	goto	u455_27
 10044     0FD7  0BA0               	decfsz	??_control_led_and_7segment_FOR_MODE_ON_DELAY,f
 10045     0FD8  2FD5               	goto	u455_27
 10046     0FD9  0000               	nop
 10047     0FDA                     i1l4129:
 10048                           
 10049                           ;main.c: 466:     LATBbits.LATB2 = 0;
 10050     0FDA  0140               	movlb	0	; select bank0
 10051     0FDB  1119               	bcf	25,2	;volatile
 10052     0FDC                     i1l4131:
 10053                           
 10054                           ;main.c: 467:     LATDbits.LATD6 = 0;
 10055     0FDC  131B               	bcf	27,6	;volatile
 10056     0FDD                     i1l4133:
 10057                           
 10058                           ;main.c: 469:     if (UARTFlag) {
 10059     0FDD  0857               	movf	_UARTFlag,w
 10060     0FDE  1903               	btfsc	3,2
 10061     0FDF  2FE1               	goto	u296_21
 10062     0FE0  2FE2               	goto	u296_20
 10063     0FE1                     u296_21:
 10064     0FE1  2FFA               	goto	i1l4145
 10065     0FE2                     u296_20:
 10066     0FE2                     i1l4135:
 10067                           
 10068                           ;main.c: 470:         UARTFlag = 0;
 10069     0FE2  01D7               	clrf	_UARTFlag
 10070     0FE3                     i1l4137:
 10071                           
 10072                           ;main.c: 471:         EUSART1_Write(0xAA);
 10073     0FE3  30AA               	movlw	170
 10074     0FE4  00F0               	movwf	EUSART1_Write@txData
 10075     0FE5  3188  2007  318F   	fcall	_EUSART1_Write
 10076     0FE8                     i1l4139:
 10077                           
 10078                           ;main.c: 472:         EUSART1_Write(VOLTAGE);
 10079     0FE8  0140               	movlb	0	; select bank0
 10080     0FE9  0861               	movf	_VOLTAGE,w
 10081     0FEA  00F0               	movwf	EUSART1_Write@txData
 10082     0FEB  3188  2007  318F   	fcall	_EUSART1_Write
 10083     0FEE                     i1l4141:
 10084                           
 10085                           ;main.c: 473:         EUSART1_Write((uint8_t) (FREQUENCY >> 8));
 10086     0FEE  0140               	movlb	0	; select bank0
 10087     0FEF  086D               	movf	_FREQUENCY+1,w
 10088     0FF0  00F0               	movwf	EUSART1_Write@txData
 10089     0FF1  3188  2007  318F   	fcall	_EUSART1_Write
 10090     0FF4                     i1l4143:
 10091                           
 10092                           ;main.c: 474:         EUSART1_Write((uint8_t)(FREQUENCY & 0xFF));
 10093     0FF4  0140               	movlb	0	; select bank0
 10094     0FF5  086C               	movf	_FREQUENCY,w
 10095     0FF6  00F0               	movwf	EUSART1_Write@txData
 10096     0FF7  3188  2007  318F   	fcall	_EUSART1_Write
 10097     0FFA                     i1l4145:
 10098                           
 10099                           ;main.c: 476:     flag = 3;
 10100     0FFA  3003               	movlw	3
 10101     0FFB  0140               	movlb	0	; select bank0
 10102     0FFC  00D5               	movwf	_flag
 10103     0FFD  3000               	movlw	0
 10104     0FFE  00D6               	movwf	_flag+1
 10105     0FFF                     i1l785:
 10106     0FFF  0008               	return
 10107     1000                     __end_of_control_led_and_7segment_FOR_MODE_ON_DELAY:
 10108                           
 10109                           	psect	text26
 10110     0E46                     __ptext26:	
 10111 ;; *************** function _control_led_and_7segment_FOR_MODE_OFF_DELAY *****************
 10112 ;; Defined at:
 10113 ;;		line 478 in file "main.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;		None
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  1    wreg      void 
 10120 ;; Registers used:
 10121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10131 ;;Total ram usage:        1 bytes
 10132 ;; Hardware stack levels used: 1
 10133 ;; Hardware stack levels required when called: 1
 10134 ;; This function calls:
 10135 ;;		_EUSART1_Write
 10136 ;;		___lwdiv
 10137 ;;		___lwmod
 10138 ;; This function is called by:
 10139 ;;		_updateLEDs
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143     0E46                     _control_led_and_7segment_FOR_MODE_OFF_DELAY:	
 10144                           ;psect for function _control_led_and_7segment_FOR_MODE_OFF_DELAY
 10145                           
 10146     0E46                     i1l4147:	
 10147                           ;incstack = 0
 10148                           ; Regs used in _control_led_and_7segment_FOR_MODE_OFF_DELAY: [wreg+fsr1l+fsr1h+status,2+
      +                          status,0+pclath+cstack]
 10149                           
 10150                           
 10151                           ;main.c: 480:     if (PORTAbits.RA5 == 0 && PORTAbits.RA3 == 1)
 10152     0E46  0140               	movlb	0	; select bank0
 10153     0E47  1A8C               	btfsc	12,5	;volatile
 10154     0E48  2E4A               	goto	u297_21
 10155     0E49  2E4B               	goto	u297_20
 10156     0E4A                     u297_21:
 10157     0E4A  2E9D               	goto	i1l4173
 10158     0E4B                     u297_20:
 10159     0E4B                     i1l4149:
 10160     0E4B  1D8C               	btfss	12,3	;volatile
 10161     0E4C  2E4E               	goto	u298_21
 10162     0E4D  2E4F               	goto	u298_20
 10163     0E4E                     u298_21:
 10164     0E4E  2E9D               	goto	i1l4173
 10165     0E4F                     u298_20:
 10166     0E4F                     i1l4151:
 10167                           
 10168                           ;main.c: 481:     {;main.c: 482:         StartDebounceDelayTimer = 1;
 10169     0E4F  3001               	movlw	1
 10170     0E50  0141               	movlb	1	; select bank1
 10171     0E51  00D7               	movwf	_StartDebounceDelayTimer^(0+128)	;volatile
 10172     0E52                     i1l4153:
 10173                           
 10174                           ;main.c: 483:         if(DebounceCompleted)
 10175     0E52  0140               	movlb	0	; select bank0
 10176     0E53  0859               	movf	_DebounceCompleted,w	;volatile
 10177     0E54  1903               	btfsc	3,2
 10178     0E55  2E57               	goto	u299_21
 10179     0E56  2E58               	goto	u299_20
 10180     0E57                     u299_21:
 10181     0E57  2E69               	goto	i1l4163
 10182     0E58                     u299_20:
 10183     0E58                     i1l4155:
 10184                           
 10185                           ;main.c: 484:         if (OFF_Delay < 98)
 10186     0E58  3000               	movlw	0
 10187     0E59  0269               	subwf	_OFF_Delay+1,w
 10188     0E5A  3062               	movlw	98
 10189     0E5B  1903               	skipnz
 10190     0E5C  0268               	subwf	_OFF_Delay,w
 10191     0E5D  1803               	skipnc
 10192     0E5E  2E60               	goto	u300_21
 10193     0E5F  2E61               	goto	u300_20
 10194     0E60                     u300_21:
 10195     0E60  2E69               	goto	i1l4163
 10196     0E61                     u300_20:
 10197     0E61                     i1l4157:
 10198                           
 10199                           ;main.c: 485:         {;main.c: 486:             OFF_Delay++;
 10200     0E61  3001               	movlw	1
 10201     0E62  07E8               	addwf	_OFF_Delay,f
 10202     0E63  3000               	movlw	0
 10203     0E64  3DE9               	addwfc	_OFF_Delay+1,f
 10204     0E65                     i1l4159:
 10205                           
 10206                           ;main.c: 487:             StartDebounceDelayTimer = 0;
 10207     0E65  0141               	movlb	1	; select bank1
 10208     0E66  01D7               	clrf	_StartDebounceDelayTimer^(0+128)	;volatile
 10209     0E67                     i1l4161:
 10210                           
 10211                           ;main.c: 488:             DebounceCompleted = 0;
 10212     0E67  0140               	movlb	0	; select bank0
 10213     0E68  01D9               	clrf	_DebounceCompleted	;volatile
 10214     0E69                     i1l4163:
 10215                           
 10216                           ;main.c: 490:         digits_4[0] = 0;
 10217     0E69  0142               	movlb	2	; select bank2
 10218     0E6A  01C4               	clrf	_digits_4^(0+256)
 10219     0E6B  01C5               	clrf	(_digits_4+1)^(0+256)
 10220     0E6C                     i1l4165:
 10221                           
 10222                           ;main.c: 491:         digits_4[1] = 0;
 10223     0E6C  01C6               	clrf	(_digits_4^(0+256)+2)
 10224     0E6D  01C7               	clrf	((_digits_4+1)^(0+256)+2)
 10225     0E6E                     i1l4167:
 10226                           
 10227                           ;main.c: 492:         digits_4[2] = 0;
 10228     0E6E  01C8               	clrf	(_digits_4^(0+256)+4)
 10229     0E6F  01C9               	clrf	((_digits_4+1)^(0+256)+4)
 10230     0E70                     i1l4169:
 10231                           
 10232                           ;main.c: 493:         digits_4[3] = (OFF_Delay / 10) % 10;
 10233     0E70  300A               	movlw	10
 10234     0E71  00F7               	movwf	___lwmod@divisor
 10235     0E72  3000               	movlw	0
 10236     0E73  00F8               	movwf	___lwmod@divisor+1
 10237     0E74  300A               	movlw	10
 10238     0E75  00F0               	movwf	___lwdiv@divisor
 10239     0E76  3000               	movlw	0
 10240     0E77  00F1               	movwf	___lwdiv@divisor+1
 10241     0E78  0140               	movlb	0	; select bank0
 10242     0E79  0869               	movf	_OFF_Delay+1,w
 10243     0E7A  00F3               	movwf	___lwdiv@dividend+1
 10244     0E7B  0868               	movf	_OFF_Delay,w
 10245     0E7C  00F2               	movwf	___lwdiv@dividend
 10246     0E7D  3189  215E  318E   	fcall	___lwdiv
 10247     0E80  0871               	movf	?___lwdiv+1,w
 10248     0E81  00FA               	movwf	___lwmod@dividend+1
 10249     0E82  0870               	movf	?___lwdiv,w
 10250     0E83  00F9               	movwf	___lwmod@dividend
 10251     0E84  3188  20F6  318E   	fcall	___lwmod
 10252     0E87  0878               	movf	?___lwmod+1,w
 10253     0E88  0142               	movlb	2	; select bank2
 10254     0E89  00CB               	movwf	((_digits_4+1)^(0+256)+6)
 10255     0E8A  0877               	movf	?___lwmod,w
 10256     0E8B  00CA               	movwf	(_digits_4^(0+256)+6)
 10257     0E8C                     i1l4171:
 10258                           
 10259                           ;main.c: 494:         digits_4[4] = OFF_Delay % 10;
 10260     0E8C  300A               	movlw	10
 10261     0E8D  00F7               	movwf	___lwmod@divisor
 10262     0E8E  3000               	movlw	0
 10263     0E8F  00F8               	movwf	___lwmod@divisor+1
 10264     0E90  0140               	movlb	0	; select bank0
 10265     0E91  0869               	movf	_OFF_Delay+1,w
 10266     0E92  00FA               	movwf	___lwmod@dividend+1
 10267     0E93  0868               	movf	_OFF_Delay,w
 10268     0E94  00F9               	movwf	___lwmod@dividend
 10269     0E95  3188  20F6  318E   	fcall	___lwmod
 10270     0E98  0878               	movf	?___lwmod+1,w
 10271     0E99  0142               	movlb	2	; select bank2
 10272     0E9A  00CD               	movwf	((_digits_4+1)^(0+256)+8)
 10273     0E9B  0877               	movf	?___lwmod,w
 10274     0E9C  00CC               	movwf	(_digits_4^(0+256)+8)
 10275     0E9D                     i1l4173:
 10276                           
 10277                           ;main.c: 497:      if (PORTAbits.RA1 == 0 && PORTAbits.RA3 == 1)
 10278     0E9D  0140               	movlb	0	; select bank0
 10279     0E9E  188C               	btfsc	12,1	;volatile
 10280     0E9F  2EA1               	goto	u301_21
 10281     0EA0  2EA2               	goto	u301_20
 10282     0EA1                     u301_21:
 10283     0EA1  2EF1               	goto	i1l4199
 10284     0EA2                     u301_20:
 10285     0EA2                     i1l4175:
 10286     0EA2  1D8C               	btfss	12,3	;volatile
 10287     0EA3  2EA5               	goto	u302_21
 10288     0EA4  2EA6               	goto	u302_20
 10289     0EA5                     u302_21:
 10290     0EA5  2EF1               	goto	i1l4199
 10291     0EA6                     u302_20:
 10292     0EA6                     i1l4177:
 10293                           
 10294                           ;main.c: 498:     {;main.c: 499:         StartDebounceDelayTimer_Decrement = 1;
 10295     0EA6  3001               	movlw	1
 10296     0EA7  0141               	movlb	1	; select bank1
 10297     0EA8  00D6               	movwf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
 10298     0EA9                     i1l4179:
 10299                           
 10300                           ;main.c: 500:         if(DebounceCompleted_Decrement)
 10301     0EA9  0140               	movlb	0	; select bank0
 10302     0EAA  0858               	movf	_DebounceCompleted_Decrement,w	;volatile
 10303     0EAB  1903               	btfsc	3,2
 10304     0EAC  2EAE               	goto	u303_21
 10305     0EAD  2EAF               	goto	u303_20
 10306     0EAE                     u303_21:
 10307     0EAE  2EBD               	goto	i1l4189
 10308     0EAF                     u303_20:
 10309     0EAF                     i1l4181:
 10310                           
 10311                           ;main.c: 501:         if (OFF_Delay > 0)
 10312     0EAF  0868               	movf	_OFF_Delay,w
 10313     0EB0  0469               	iorwf	_OFF_Delay+1,w
 10314     0EB1  1903               	btfsc	3,2
 10315     0EB2  2EB4               	goto	u304_21
 10316     0EB3  2EB5               	goto	u304_20
 10317     0EB4                     u304_21:
 10318     0EB4  2EBD               	goto	i1l4189
 10319     0EB5                     u304_20:
 10320     0EB5                     i1l4183:
 10321                           
 10322                           ;main.c: 502:         {;main.c: 503:             OFF_Delay--;
 10323     0EB5  3001               	movlw	1
 10324     0EB6  02E8               	subwf	_OFF_Delay,f
 10325     0EB7  3000               	movlw	0
 10326     0EB8  3BE9               	subwfb	_OFF_Delay+1,f
 10327     0EB9                     i1l4185:
 10328                           
 10329                           ;main.c: 504:             StartDebounceDelayTimer_Decrement = 0;
 10330     0EB9  0141               	movlb	1	; select bank1
 10331     0EBA  01D6               	clrf	_StartDebounceDelayTimer_Decrement^(0+128)	;volatile
 10332     0EBB                     i1l4187:
 10333                           
 10334                           ;main.c: 505:             DebounceCompleted_Decrement = 0;
 10335     0EBB  0140               	movlb	0	; select bank0
 10336     0EBC  01D8               	clrf	_DebounceCompleted_Decrement	;volatile
 10337     0EBD                     i1l4189:
 10338                           
 10339                           ;main.c: 507:          digits_4[0] = 0;
 10340     0EBD  0142               	movlb	2	; select bank2
 10341     0EBE  01C4               	clrf	_digits_4^(0+256)
 10342     0EBF  01C5               	clrf	(_digits_4+1)^(0+256)
 10343     0EC0                     i1l4191:
 10344                           
 10345                           ;main.c: 508:          digits_4[1] = 0;
 10346     0EC0  01C6               	clrf	(_digits_4^(0+256)+2)
 10347     0EC1  01C7               	clrf	((_digits_4+1)^(0+256)+2)
 10348     0EC2                     i1l4193:
 10349                           
 10350                           ;main.c: 509:          digits_4[2] = 0;
 10351     0EC2  01C8               	clrf	(_digits_4^(0+256)+4)
 10352     0EC3  01C9               	clrf	((_digits_4+1)^(0+256)+4)
 10353     0EC4                     i1l4195:
 10354                           
 10355                           ;main.c: 510:          digits_4[3] = (OFF_Delay / 10) % 10;
 10356     0EC4  300A               	movlw	10
 10357     0EC5  00F7               	movwf	___lwmod@divisor
 10358     0EC6  3000               	movlw	0
 10359     0EC7  00F8               	movwf	___lwmod@divisor+1
 10360     0EC8  300A               	movlw	10
 10361     0EC9  00F0               	movwf	___lwdiv@divisor
 10362     0ECA  3000               	movlw	0
 10363     0ECB  00F1               	movwf	___lwdiv@divisor+1
 10364     0ECC  0140               	movlb	0	; select bank0
 10365     0ECD  0869               	movf	_OFF_Delay+1,w
 10366     0ECE  00F3               	movwf	___lwdiv@dividend+1
 10367     0ECF  0868               	movf	_OFF_Delay,w
 10368     0ED0  00F2               	movwf	___lwdiv@dividend
 10369     0ED1  3189  215E  318E   	fcall	___lwdiv
 10370     0ED4  0871               	movf	?___lwdiv+1,w
 10371     0ED5  00FA               	movwf	___lwmod@dividend+1
 10372     0ED6  0870               	movf	?___lwdiv,w
 10373     0ED7  00F9               	movwf	___lwmod@dividend
 10374     0ED8  3188  20F6  318E   	fcall	___lwmod
 10375     0EDB  0878               	movf	?___lwmod+1,w
 10376     0EDC  0142               	movlb	2	; select bank2
 10377     0EDD  00CB               	movwf	((_digits_4+1)^(0+256)+6)
 10378     0EDE  0877               	movf	?___lwmod,w
 10379     0EDF  00CA               	movwf	(_digits_4^(0+256)+6)
 10380     0EE0                     i1l4197:
 10381                           
 10382                           ;main.c: 511:          digits_4[4] = OFF_Delay % 10;
 10383     0EE0  300A               	movlw	10
 10384     0EE1  00F7               	movwf	___lwmod@divisor
 10385     0EE2  3000               	movlw	0
 10386     0EE3  00F8               	movwf	___lwmod@divisor+1
 10387     0EE4  0140               	movlb	0	; select bank0
 10388     0EE5  0869               	movf	_OFF_Delay+1,w
 10389     0EE6  00FA               	movwf	___lwmod@dividend+1
 10390     0EE7  0868               	movf	_OFF_Delay,w
 10391     0EE8  00F9               	movwf	___lwmod@dividend
 10392     0EE9  3188  20F6  318E   	fcall	___lwmod
 10393     0EEC  0878               	movf	?___lwmod+1,w
 10394     0EED  0142               	movlb	2	; select bank2
 10395     0EEE  00CD               	movwf	((_digits_4+1)^(0+256)+8)
 10396     0EEF  0877               	movf	?___lwmod,w
 10397     0EF0  00CC               	movwf	(_digits_4^(0+256)+8)
 10398     0EF1                     i1l4199:
 10399                           
 10400                           ;main.c: 513:     LATDbits.LATD6 = 1;
 10401     0EF1  0140               	movlb	0	; select bank0
 10402     0EF2  171B               	bsf	27,6	;volatile
 10403     0EF3                     i1l4201:
 10404                           
 10405                           ;main.c: 514:     LATBbits.LATB3 = 1;
 10406     0EF3  1599               	bsf	25,3	;volatile
 10407     0EF4                     i1l4203:
 10408                           
 10409                           ;main.c: 515:     _delay((unsigned long)((1)*(16000000/4000.0)));
 10410     0EF4  3006               	movlw	6
 10411     0EF5  0140               	movlb	0	; select bank0
 10412     0EF6  00A0               	movwf	??_control_led_and_7segment_FOR_MODE_OFF_DELAY
 10413     0EF7  3030               	movlw	48
 10414     0EF8                     u456_27:
 10415     0EF8  0B89               	decfsz	9,f
 10416     0EF9  2EF8               	goto	u456_27
 10417     0EFA  0BA0               	decfsz	??_control_led_and_7segment_FOR_MODE_OFF_DELAY,f
 10418     0EFB  2EF8               	goto	u456_27
 10419     0EFC  0000               	nop
 10420     0EFD                     i1l4205:
 10421                           
 10422                           ;main.c: 516:     LATBbits.LATB3 = 0;
 10423     0EFD  0140               	movlb	0	; select bank0
 10424     0EFE  1199               	bcf	25,3	;volatile
 10425     0EFF                     i1l4207:
 10426                           
 10427                           ;main.c: 517:     LATDbits.LATD6 = 0;
 10428     0EFF  131B               	bcf	27,6	;volatile
 10429     0F00                     i1l4209:
 10430                           
 10431                           ;main.c: 518:     if (UARTFlag) {
 10432     0F00  0857               	movf	_UARTFlag,w
 10433     0F01  1903               	btfsc	3,2
 10434     0F02  2F04               	goto	u305_21
 10435     0F03  2F05               	goto	u305_20
 10436     0F04                     u305_21:
 10437     0F04  2F1D               	goto	i1l4221
 10438     0F05                     u305_20:
 10439     0F05                     i1l4211:
 10440                           
 10441                           ;main.c: 519:         UARTFlag = 0;
 10442     0F05  01D7               	clrf	_UARTFlag
 10443     0F06                     i1l4213:
 10444                           
 10445                           ;main.c: 520:         EUSART1_Write(0xAA);
 10446     0F06  30AA               	movlw	170
 10447     0F07  00F0               	movwf	EUSART1_Write@txData
 10448     0F08  3188  2007  318E   	fcall	_EUSART1_Write
 10449     0F0B                     i1l4215:
 10450                           
 10451                           ;main.c: 521:         EUSART1_Write(VOLTAGE);
 10452     0F0B  0140               	movlb	0	; select bank0
 10453     0F0C  0861               	movf	_VOLTAGE,w
 10454     0F0D  00F0               	movwf	EUSART1_Write@txData
 10455     0F0E  3188  2007  318E   	fcall	_EUSART1_Write
 10456     0F11                     i1l4217:
 10457                           
 10458                           ;main.c: 522:         EUSART1_Write((uint8_t) (FREQUENCY >> 8));
 10459     0F11  0140               	movlb	0	; select bank0
 10460     0F12  086D               	movf	_FREQUENCY+1,w
 10461     0F13  00F0               	movwf	EUSART1_Write@txData
 10462     0F14  3188  2007  318E   	fcall	_EUSART1_Write
 10463     0F17                     i1l4219:
 10464                           
 10465                           ;main.c: 523:         EUSART1_Write((uint8_t)(FREQUENCY & 0xFF));
 10466     0F17  0140               	movlb	0	; select bank0
 10467     0F18  086C               	movf	_FREQUENCY,w
 10468     0F19  00F0               	movwf	EUSART1_Write@txData
 10469     0F1A  3188  2007  318E   	fcall	_EUSART1_Write
 10470     0F1D                     i1l4221:
 10471                           
 10472                           ;main.c: 525:     flag = 4;
 10473     0F1D  3004               	movlw	4
 10474     0F1E  0140               	movlb	0	; select bank0
 10475     0F1F  00D5               	movwf	_flag
 10476     0F20  3000               	movlw	0
 10477     0F21  00D6               	movwf	_flag+1
 10478     0F22                     i1l795:
 10479     0F22  0008               	return
 10480     0F23                     __end_of_control_led_and_7segment_FOR_MODE_OFF_DELAY:
 10481                           
 10482                           	psect	text27
 10483     0850                     __ptext27:	
 10484 ;; *************** function _control_led_and_7segment_FOR_MODE_NPN_SENSOR_I *****************
 10485 ;; Defined at:
 10486 ;;		line 577 in file "main.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;		None
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;		None
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  1    wreg      void 
 10493 ;; Registers used:
 10494 ;;		wreg, status,2
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10504 ;;Total ram usage:        0 bytes
 10505 ;; Hardware stack levels used: 1
 10506 ;; This function calls:
 10507 ;;		Nothing
 10508 ;; This function is called by:
 10509 ;;		_updateLEDs
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513     0850                     _control_led_and_7segment_FOR_MODE_NPN_SENSOR_I:	
 10514                           ;psect for function _control_led_and_7segment_FOR_MODE_NPN_SENSOR_I
 10515                           
 10516     0850                     i1l4299:	
 10517                           ;incstack = 0
 10518                           ; Regs used in _control_led_and_7segment_FOR_MODE_NPN_SENSOR_I: [wreg+status,2]
 10519                           
 10520                           
 10521                           ;main.c: 580:         digits_8[0] = 0x00;
 10522     0850  0143               	movlb	3	; select bank3
 10523     0851  01D2               	clrf	_digits_8^(0+384)
 10524     0852  01D3               	clrf	(_digits_8+1)^(0+384)
 10525     0853                     i1l4301:
 10526                           
 10527                           ;main.c: 581:         digits_8[1] = 0x73;
 10528     0853  3073               	movlw	115
 10529     0854  00D4               	movwf	(_digits_8^(0+384)+2)
 10530     0855  3000               	movlw	0
 10531     0856  00D5               	movwf	(_digits_8^(0+384)+3)
 10532     0857                     i1l4303:
 10533                           
 10534                           ;main.c: 582:         digits_8[2] = 0x3f;
 10535     0857  303F               	movlw	63
 10536     0858  00D6               	movwf	(_digits_8^(0+384)+4)
 10537     0859  3000               	movlw	0
 10538     085A  00D7               	movwf	(_digits_8^(0+384)+5)
 10539     085B                     i1l4305:
 10540                           
 10541                           ;main.c: 583:         digits_8[3] = 0x3f;
 10542     085B  303F               	movlw	63
 10543     085C  00D8               	movwf	(_digits_8^(0+384)+6)
 10544     085D  3000               	movlw	0
 10545     085E  00D9               	movwf	(_digits_8^(0+384)+7)
 10546     085F                     i1l4307:
 10547                           
 10548                           ;main.c: 584:         digits_8[4] = 0x06;
 10549     085F  3006               	movlw	6
 10550     0860  00DA               	movwf	(_digits_8^(0+384)+8)
 10551     0861  3000               	movlw	0
 10552     0862  00DB               	movwf	(_digits_8^(0+384)+9)
 10553     0863                     i1l4309:
 10554                           
 10555                           ;main.c: 586:     if(PORTEbits.RE2 == 0) {
 10556     0863  0140               	movlb	0	; select bank0
 10557     0864  1910               	btfsc	16,2	;volatile
 10558     0865  2867               	goto	u315_21
 10559     0866  2868               	goto	u315_20
 10560     0867                     u315_21:
 10561     0867  286B               	goto	i1l808
 10562     0868                     u315_20:
 10563     0868                     i1l4311:
 10564                           
 10565                           ;main.c: 587:         NPN_Sensor_1 = 0;
 10566     0868  0141               	movlb	1	; select bank1
 10567     0869  01E7               	clrf	_NPN_Sensor_1^(0+128)	;volatile
 10568                           
 10569                           ;main.c: 600:     }
 10570     086A  2872               	goto	i1l4315
 10571     086B                     i1l808:	
 10572                           ;main.c: 601:     else if (PORTEbits.RE2 == 1) {
 10573                           
 10574     086B  1D10               	btfss	16,2	;volatile
 10575     086C  286E               	goto	u316_21
 10576     086D  286F               	goto	u316_20
 10577     086E                     u316_21:
 10578     086E  2872               	goto	i1l4315
 10579     086F                     u316_20:
 10580     086F                     i1l4313:
 10581                           
 10582                           ;main.c: 602:         NPN_Sensor_1 = 1;
 10583     086F  3001               	movlw	1
 10584     0870  0141               	movlb	1	; select bank1
 10585     0871  00E7               	movwf	_NPN_Sensor_1^(0+128)	;volatile
 10586     0872                     i1l4315:
 10587                           
 10588                           ;main.c: 616:     flag = 8;
 10589     0872  3008               	movlw	8
 10590     0873  0140               	movlb	0	; select bank0
 10591     0874  00D5               	movwf	_flag
 10592     0875  3000               	movlw	0
 10593     0876  00D6               	movwf	_flag+1
 10594     0877                     i1l811:
 10595     0877  0008               	return
 10596     0878                     __end_of_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I:
 10597                           
 10598                           	psect	text28
 10599     0455                     __ptext28:	
 10600 ;; *************** function _control_led_and_7segment_FOR_MODE_FREQUENCY *****************
 10601 ;; Defined at:
 10602 ;;		line 343 in file "main.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      void 
 10609 ;; Registers used:
 10610 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10620 ;;Total ram usage:        1 bytes
 10621 ;; Hardware stack levels used: 1
 10622 ;; Hardware stack levels required when called: 1
 10623 ;; This function calls:
 10624 ;;		_EUSART1_Write
 10625 ;;		___lwdiv
 10626 ;;		___lwmod
 10627 ;; This function is called by:
 10628 ;;		_updateLEDs
 10629 ;; This function uses a non-reentrant model
 10630 ;;
 10631                           
 10632     0455                     _control_led_and_7segment_FOR_MODE_FREQUENCY:	
 10633                           ;psect for function _control_led_and_7segment_FOR_MODE_FREQUENCY
 10634                           
 10635     0455                     i1l3995:	
 10636                           ;incstack = 0
 10637                           ; Regs used in _control_led_and_7segment_FOR_MODE_FREQUENCY: [wreg+fsr1l+fsr1h+status,2+
      +                          status,0+pclath+cstack]
 10638                           
 10639                           
 10640                           ;main.c: 346:     if (PORTAbits.RA5 == 0 && PORTAbits.RA3 == 1)
 10641     0455  0140               	movlb	0	; select bank0
 10642     0456  1A8C               	btfsc	12,5	;volatile
 10643     0457  2C59               	goto	u279_21
 10644     0458  2C5A               	goto	u279_20
 10645     0459                     u279_21:
 10646     0459  2CC6               	goto	i1l4021
 10647     045A                     u279_20:
 10648     045A                     i1l3997:
 10649     045A  1D8C               	btfss	12,3	;volatile
 10650     045B  2C5D               	goto	u280_21
 10651     045C  2C5E               	goto	u280_20
 10652     045D                     u280_21:
 10653     045D  2CC6               	goto	i1l4021
 10654     045E                     u280_20:
 10655     045E                     i1l3999:
 10656                           
 10657                           ;main.c: 347:     {;main.c: 348:           StartDebounceDelayTimer = 1;
 10658     045E  3001               	movlw	1
 10659     045F  0141               	movlb	1	; select bank1
 10660     0460  00D7               	movwf	_StartDebounceDelayTimer^(0+128)	;volatile
 10661     0461                     i1l4001:
 10662                           
 10663                           ;main.c: 349:         if(DebounceCompleted)
 10664     0461  0140               	movlb	0	; select bank0
 10665     0462  0859               	movf	_DebounceCompleted,w	;volatile
 10666     0463  1903               	btfsc	3,2
 10667     0464  2C66               	goto	u281_21
 10668     0465  2C67               	goto	u281_20
 10669     0466                     u281_21:
 10670     0466  2C78               	goto	i1l4011
 10671     0467                     u281_20:
 10672     0467                     i1l4003:
 10673                           
 10674                           ;main.c: 350:         if (FREQUENCY <= 399)
 10675     0467  3001               	movlw	1
 10676     0468  026D               	subwf	_FREQUENCY+1,w
 10677     0469  3090               	movlw	144
 10678     046A  1903               	skipnz
 10679     046B  026C               	subwf	_FREQUENCY,w
 10680     046C  1803               	skipnc
 10681     046D  2C6F               	goto	u282_21
 10682     046E  2C70               	goto	u282_20
 10683     046F                     u282_21:
 10684     046F  2C78               	goto	i1l4011
 10685     0470                     u282_20:
 10686     0470                     i1l4005:
 10687                           
 10688                           ;main.c: 351:         {;main.c: 352:             FREQUENCY++;
 10689     0470  3001               	movlw	1
 10690     0471  07EC               	addwf	_FREQUENCY,f
 10691     0472  3000               	movlw	0
 10692     0473  3DED               	addwfc	_FREQUENCY+1,f
 10693     0474                     i1l4007:
 10694                           
 10695                           ;main.c: 353:             StartDebounceDelayTimer = 0;
 10696     0474  0141               	movlb	1	; select bank1
 10697     0475  01D7               	clrf	_StartDebounceDelayTimer^(0+128)	;volatile
 10698     0476                     i1l4009:
 10699                           
 10700                           ;main.c: 354:             DebounceCompleted = 0;
 10701     0476  0140               	movlb	0	; select bank0
 10702     0477  01D9               	clrf	_DebounceCompleted	;volatile
 10703     0478                     i1l4011:
 10704                           
 10705                           ;main.c: 356:         digits_2[0] = 0;
 10706     0478  0142               	movlb	2	; select bank2
 10707     0479  01D8               	clrf	_digits_2^(0+256)
 10708     047A  01D9               	clrf	(_digits_2+1)^(0+256)
 10709     047B                     i1l4013:
 10710                           
 10711                           ;main.c: 357:         digits_2[1] = 0;
 10712     047B  01DA               	clrf	(_digits_2^(0+256)+2)
 10713     047C  01DB               	clrf	((_digits_2+1)^(0+256)+2)
 10714     047D                     i1l4015:
 10715                           
 10716                           ;main.c: 358:         digits_2[2] = (FREQUENCY / 100) % 10;
 10717     047D  300A               	movlw	10
 10718     047E  00F7               	movwf	___lwmod@divisor
 10719     047F  3000               	movlw	0
 10720     0480  00F8               	movwf	___lwmod@divisor+1
 10721     0481  3064               	movlw	100
 10722     0482  00F0               	movwf	___lwdiv@divisor
 10723     0483  3000               	movlw	0
 10724     0484  00F1               	movwf	___lwdiv@divisor+1
 10725     0485  0140               	movlb	0	; select bank0
 10726     0486  086D               	movf	_FREQUENCY+1,w
 10727     0487  00F3               	movwf	___lwdiv@dividend+1
 10728     0488  086C               	movf	_FREQUENCY,w
 10729     0489  00F2               	movwf	___lwdiv@dividend
 10730     048A  3189  215E  3184   	fcall	___lwdiv
 10731     048D  0871               	movf	?___lwdiv+1,w
 10732     048E  00FA               	movwf	___lwmod@dividend+1
 10733     048F  0870               	movf	?___lwdiv,w
 10734     0490  00F9               	movwf	___lwmod@dividend
 10735     0491  3188  20F6  3184   	fcall	___lwmod
 10736     0494  0878               	movf	?___lwmod+1,w
 10737     0495  0142               	movlb	2	; select bank2
 10738     0496  00DD               	movwf	((_digits_2+1)^(0+256)+4)
 10739     0497  0877               	movf	?___lwmod,w
 10740     0498  00DC               	movwf	(_digits_2^(0+256)+4)
 10741     0499                     i1l4017:
 10742                           
 10743                           ;main.c: 359:         digits_2[3] = (FREQUENCY / 10) % 10;
 10744     0499  300A               	movlw	10
 10745     049A  00F7               	movwf	___lwmod@divisor
 10746     049B  3000               	movlw	0
 10747     049C  00F8               	movwf	___lwmod@divisor+1
 10748     049D  300A               	movlw	10
 10749     049E  00F0               	movwf	___lwdiv@divisor
 10750     049F  3000               	movlw	0
 10751     04A0  00F1               	movwf	___lwdiv@divisor+1
 10752     04A1  0140               	movlb	0	; select bank0
 10753     04A2  086D               	movf	_FREQUENCY+1,w
 10754     04A3  00F3               	movwf	___lwdiv@dividend+1
 10755     04A4  086C               	movf	_FREQUENCY,w
 10756     04A5  00F2               	movwf	___lwdiv@dividend
 10757     04A6  3189  215E  3184   	fcall	___lwdiv
 10758     04A9  0871               	movf	?___lwdiv+1,w
 10759     04AA  00FA               	movwf	___lwmod@dividend+1
 10760     04AB  0870               	movf	?___lwdiv,w
 10761     04AC  00F9               	movwf	___lwmod@dividend
 10762     04AD  3188  20F6  3184   	fcall	___lwmod
 10763     04B0  0878               	movf	?___lwmod+1,w
 10764     04B1  0142               	movlb	2	; select bank2
 10765     04B2  00DF               	movwf	((_digits_2+1)^(0+256)+6)
 10766     04B3  0877               	movf	?___lwmod,w
 10767     04B4  00DE               	movwf	(_digits_2^(0+256)+6)
 10768     04B5                     i1l4019:
 10769                           
 10770                           ;main.c: 360:         digits_2[4] = FREQUENCY % 10;
 10771     04B5  300A               	movlw	10
 10772     04B6  00F7               	movwf	___lwmod@divisor
 10773     04B7  3000               	movlw	0
 10774     04B8  00F8               	movwf	___lwmod@divisor+1
 10775     04B9  0140               	movlb	0	; select bank0
 10776     04BA  086D               	movf	_FREQUENCY+1,w
 10777     04BB  00FA               	movwf	___lwmod@dividend+1
 10778     04BC  086C               	movf	_FREQUENCY,w
 10779     04BD  00F9               	movwf	___lwmod@dividend
 10780     04BE  3188  20F6  3184   	fcall	___lwmod
 10781     04C1  0878               	movf	?___lwmod+1,w
 10782     04C2  0142               	movlb	2	; select bank2
 10783     04C3  00E1               	movwf	((_digits_2+1)^(0+256)+8)
 10784     04C4  0877               	movf	?___lwmod,w
 10785     04C5  00E0               	movwf	(_digits_2^(0+256)+8)
 10786     04C6                     i1l4021:
 10787                           
 10788                           ;main.c: 363:      if (PORTAbits.RA1 == 0 && PORTAbits.RA3 == 1)
 10789     04C6  0140               	movlb	0	; select bank0
 10790     04C7  188C               	btfsc	12,1	;volatile
 10791     04C8  2CCA               	goto	u283_21
 10792     04C9  2CCB               	goto	u283_20
 10793     04CA                     u283_21:
 10794     04CA  2D37               	goto	i1l4047
 10795     04CB                     u283_20:
 10796     04CB                     i1l4023:
 10797     04CB  1D8C               	btfss	12,3	;volatile
 10798     04CC  2CCE               	goto	u284_21
 10799     04CD  2CCF               	goto	u284_20
 10800     04CE                     u284_21:
 10801     04CE  2D37               	goto	i1l4047
 10802     04CF                     u284_20:
 10803     04CF                     i1l4025:
 10804                           
 10805                           ;main.c: 364:      {;main.c: 365:           StartDebounceDelayTimer = 1;
 10806     04CF  3001               	movlw	1
 10807     04D0  0141               	movlb	1	; select bank1
 10808     04D1  00D7               	movwf	_StartDebounceDelayTimer^(0+128)	;volatile
 10809     04D2                     i1l4027:
 10810                           
 10811                           ;main.c: 366:         if(DebounceCompleted)
 10812     04D2  0140               	movlb	0	; select bank0
 10813     04D3  0859               	movf	_DebounceCompleted,w	;volatile
 10814     04D4  1903               	btfsc	3,2
 10815     04D5  2CD7               	goto	u285_21
 10816     04D6  2CD8               	goto	u285_20
 10817     04D7                     u285_21:
 10818     04D7  2CE9               	goto	i1l4037
 10819     04D8                     u285_20:
 10820     04D8                     i1l4029:
 10821                           
 10822                           ;main.c: 367:         if (FREQUENCY > 40)
 10823     04D8  3000               	movlw	0
 10824     04D9  026D               	subwf	_FREQUENCY+1,w
 10825     04DA  3029               	movlw	41
 10826     04DB  1903               	skipnz
 10827     04DC  026C               	subwf	_FREQUENCY,w
 10828     04DD  1C03               	skipc
 10829     04DE  2CE0               	goto	u286_21
 10830     04DF  2CE1               	goto	u286_20
 10831     04E0                     u286_21:
 10832     04E0  2CE9               	goto	i1l4037
 10833     04E1                     u286_20:
 10834     04E1                     i1l4031:
 10835                           
 10836                           ;main.c: 368:         {;main.c: 369:             FREQUENCY--;
 10837     04E1  3001               	movlw	1
 10838     04E2  02EC               	subwf	_FREQUENCY,f
 10839     04E3  3000               	movlw	0
 10840     04E4  3BED               	subwfb	_FREQUENCY+1,f
 10841     04E5                     i1l4033:
 10842                           
 10843                           ;main.c: 370:             StartDebounceDelayTimer = 0;
 10844     04E5  0141               	movlb	1	; select bank1
 10845     04E6  01D7               	clrf	_StartDebounceDelayTimer^(0+128)	;volatile
 10846     04E7                     i1l4035:
 10847                           
 10848                           ;main.c: 371:             DebounceCompleted = 0;
 10849     04E7  0140               	movlb	0	; select bank0
 10850     04E8  01D9               	clrf	_DebounceCompleted	;volatile
 10851     04E9                     i1l4037:
 10852                           
 10853                           ;main.c: 373:         digits_2[0] = 0;
 10854     04E9  0142               	movlb	2	; select bank2
 10855     04EA  01D8               	clrf	_digits_2^(0+256)
 10856     04EB  01D9               	clrf	(_digits_2+1)^(0+256)
 10857     04EC                     i1l4039:
 10858                           
 10859                           ;main.c: 374:         digits_2[1] = 0;
 10860     04EC  01DA               	clrf	(_digits_2^(0+256)+2)
 10861     04ED  01DB               	clrf	((_digits_2+1)^(0+256)+2)
 10862     04EE                     i1l4041:
 10863                           
 10864                           ;main.c: 375:         digits_2[2] = (FREQUENCY / 100) % 10;
 10865     04EE  300A               	movlw	10
 10866     04EF  00F7               	movwf	___lwmod@divisor
 10867     04F0  3000               	movlw	0
 10868     04F1  00F8               	movwf	___lwmod@divisor+1
 10869     04F2  3064               	movlw	100
 10870     04F3  00F0               	movwf	___lwdiv@divisor
 10871     04F4  3000               	movlw	0
 10872     04F5  00F1               	movwf	___lwdiv@divisor+1
 10873     04F6  0140               	movlb	0	; select bank0
 10874     04F7  086D               	movf	_FREQUENCY+1,w
 10875     04F8  00F3               	movwf	___lwdiv@dividend+1
 10876     04F9  086C               	movf	_FREQUENCY,w
 10877     04FA  00F2               	movwf	___lwdiv@dividend
 10878     04FB  3189  215E  3184   	fcall	___lwdiv
 10879     04FE  0871               	movf	?___lwdiv+1,w
 10880     04FF  00FA               	movwf	___lwmod@dividend+1
 10881     0500  0870               	movf	?___lwdiv,w
 10882     0501  00F9               	movwf	___lwmod@dividend
 10883     0502  3188  20F6  3184   	fcall	___lwmod
 10884     0505  0878               	movf	?___lwmod+1,w
 10885     0506  0142               	movlb	2	; select bank2
 10886     0507  00DD               	movwf	((_digits_2+1)^(0+256)+4)
 10887     0508  0877               	movf	?___lwmod,w
 10888     0509  00DC               	movwf	(_digits_2^(0+256)+4)
 10889     050A                     i1l4043:
 10890                           
 10891                           ;main.c: 376:         digits_2[3] = (FREQUENCY / 10) % 10;
 10892     050A  300A               	movlw	10
 10893     050B  00F7               	movwf	___lwmod@divisor
 10894     050C  3000               	movlw	0
 10895     050D  00F8               	movwf	___lwmod@divisor+1
 10896     050E  300A               	movlw	10
 10897     050F  00F0               	movwf	___lwdiv@divisor
 10898     0510  3000               	movlw	0
 10899     0511  00F1               	movwf	___lwdiv@divisor+1
 10900     0512  0140               	movlb	0	; select bank0
 10901     0513  086D               	movf	_FREQUENCY+1,w
 10902     0514  00F3               	movwf	___lwdiv@dividend+1
 10903     0515  086C               	movf	_FREQUENCY,w
 10904     0516  00F2               	movwf	___lwdiv@dividend
 10905     0517  3189  215E  3184   	fcall	___lwdiv
 10906     051A  0871               	movf	?___lwdiv+1,w
 10907     051B  00FA               	movwf	___lwmod@dividend+1
 10908     051C  0870               	movf	?___lwdiv,w
 10909     051D  00F9               	movwf	___lwmod@dividend
 10910     051E  3188  20F6  3184   	fcall	___lwmod
 10911     0521  0878               	movf	?___lwmod+1,w
 10912     0522  0142               	movlb	2	; select bank2
 10913     0523  00DF               	movwf	((_digits_2+1)^(0+256)+6)
 10914     0524  0877               	movf	?___lwmod,w
 10915     0525  00DE               	movwf	(_digits_2^(0+256)+6)
 10916     0526                     i1l4045:
 10917                           
 10918                           ;main.c: 377:         digits_2[4] = FREQUENCY % 10;
 10919     0526  300A               	movlw	10
 10920     0527  00F7               	movwf	___lwmod@divisor
 10921     0528  3000               	movlw	0
 10922     0529  00F8               	movwf	___lwmod@divisor+1
 10923     052A  0140               	movlb	0	; select bank0
 10924     052B  086D               	movf	_FREQUENCY+1,w
 10925     052C  00FA               	movwf	___lwmod@dividend+1
 10926     052D  086C               	movf	_FREQUENCY,w
 10927     052E  00F9               	movwf	___lwmod@dividend
 10928     052F  3188  20F6  3184   	fcall	___lwmod
 10929     0532  0878               	movf	?___lwmod+1,w
 10930     0533  0142               	movlb	2	; select bank2
 10931     0534  00E1               	movwf	((_digits_2+1)^(0+256)+8)
 10932     0535  0877               	movf	?___lwmod,w
 10933     0536  00E0               	movwf	(_digits_2^(0+256)+8)
 10934     0537                     i1l4047:
 10935                           
 10936                           ;main.c: 413:     LATDbits.LATD6 = 1;
 10937     0537  0140               	movlb	0	; select bank0
 10938     0538  171B               	bsf	27,6	;volatile
 10939     0539                     i1l4049:
 10940                           
 10941                           ;main.c: 414:     LATBbits.LATB1 = 1;
 10942     0539  1499               	bsf	25,1	;volatile
 10943     053A                     i1l4051:
 10944                           
 10945                           ;main.c: 415:     _delay((unsigned long)((1)*(16000000/4000.0)));
 10946     053A  3006               	movlw	6
 10947     053B  0140               	movlb	0	; select bank0
 10948     053C  00A0               	movwf	??_control_led_and_7segment_FOR_MODE_FREQUENCY
 10949     053D  3030               	movlw	48
 10950     053E                     u457_27:
 10951     053E  0B89               	decfsz	9,f
 10952     053F  2D3E               	goto	u457_27
 10953     0540  0BA0               	decfsz	??_control_led_and_7segment_FOR_MODE_FREQUENCY,f
 10954     0541  2D3E               	goto	u457_27
 10955     0542  0000               	nop
 10956     0543                     i1l4053:
 10957                           
 10958                           ;main.c: 416:     LATBbits.LATB1 = 0;
 10959     0543  0140               	movlb	0	; select bank0
 10960     0544  1099               	bcf	25,1	;volatile
 10961     0545                     i1l4055:
 10962                           
 10963                           ;main.c: 417:     LATDbits.LATD6 = 0;
 10964     0545  131B               	bcf	27,6	;volatile
 10965     0546                     i1l4057:
 10966                           
 10967                           ;main.c: 418:     if (UARTFlag) {
 10968     0546  0857               	movf	_UARTFlag,w
 10969     0547  1903               	btfsc	3,2
 10970     0548  2D4A               	goto	u287_21
 10971     0549  2D4B               	goto	u287_20
 10972     054A                     u287_21:
 10973     054A  2D63               	goto	i1l4069
 10974     054B                     u287_20:
 10975     054B                     i1l4059:
 10976                           
 10977                           ;main.c: 419:         UARTFlag = 0;
 10978     054B  01D7               	clrf	_UARTFlag
 10979     054C                     i1l4061:
 10980                           
 10981                           ;main.c: 420:         EUSART1_Write(0xAA);
 10982     054C  30AA               	movlw	170
 10983     054D  00F0               	movwf	EUSART1_Write@txData
 10984     054E  3188  2007  3184   	fcall	_EUSART1_Write
 10985     0551                     i1l4063:
 10986                           
 10987                           ;main.c: 421:         EUSART1_Write(VOLTAGE);
 10988     0551  0140               	movlb	0	; select bank0
 10989     0552  0861               	movf	_VOLTAGE,w
 10990     0553  00F0               	movwf	EUSART1_Write@txData
 10991     0554  3188  2007  3184   	fcall	_EUSART1_Write
 10992     0557                     i1l4065:
 10993                           
 10994                           ;main.c: 422:         EUSART1_Write((uint8_t) (FREQUENCY >> 8));
 10995     0557  0140               	movlb	0	; select bank0
 10996     0558  086D               	movf	_FREQUENCY+1,w
 10997     0559  00F0               	movwf	EUSART1_Write@txData
 10998     055A  3188  2007  3184   	fcall	_EUSART1_Write
 10999     055D                     i1l4067:
 11000                           
 11001                           ;main.c: 423:         EUSART1_Write((uint8_t)(FREQUENCY & 0xFF));
 11002     055D  0140               	movlb	0	; select bank0
 11003     055E  086C               	movf	_FREQUENCY,w
 11004     055F  00F0               	movwf	EUSART1_Write@txData
 11005     0560  3188  2007  3184   	fcall	_EUSART1_Write
 11006     0563                     i1l4069:
 11007                           
 11008                           ;main.c: 426:     flag = 2;
 11009     0563  3002               	movlw	2
 11010     0564  0140               	movlb	0	; select bank0
 11011     0565  00D5               	movwf	_flag
 11012     0566  3000               	movlw	0
 11013     0567  00D6               	movwf	_flag+1
 11014     0568                     i1l775:
 11015     0568  0008               	return
 11016     0569                     __end_of_control_led_and_7segment_FOR_MODE_FREQUENCY:
 11017                           
 11018                           	psect	text29
 11019     178F                     __ptext29:	
 11020 ;; *************** function _control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT *****************
 11021 ;; Defined at:
 11022 ;;		line 794 in file "main.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;		None
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;		None
 11027 ;; Return value:  Size  Location     Type
 11028 ;;                  1    wreg      void 
 11029 ;; Registers used:
 11030 ;;		wreg, status,2
 11031 ;; Tracked objects:
 11032 ;;		On entry : 0/0
 11033 ;;		On exit  : 0/0
 11034 ;;		Unchanged: 0/0
 11035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11040 ;;Total ram usage:        0 bytes
 11041 ;; Hardware stack levels used: 1
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_updateLEDs
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           
 11049     178F                     _control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT:	
 11050                           ;psect for function _control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT
 11051                           
 11052     178F                     i1l4497:	
 11053                           ;incstack = 0
 11054                           ; Regs used in _control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT: [wreg+status,2]
 11055                           
 11056                           
 11057                           ;main.c: 797:         digits_12[0] = 0x00;
 11058     178F  0143               	movlb	3	; select bank3
 11059     1790  01AA               	clrf	_digits_12^(0+384)
 11060     1791  01AB               	clrf	(_digits_12+1)^(0+384)
 11061     1792                     i1l4499:
 11062                           
 11063                           ;main.c: 798:         digits_12[1] = 0x73;
 11064     1792  3073               	movlw	115
 11065     1793  00AC               	movwf	(_digits_12^(0+384)+2)
 11066     1794  3000               	movlw	0
 11067     1795  00AD               	movwf	(_digits_12^(0+384)+3)
 11068     1796                     i1l4501:
 11069                           
 11070                           ;main.c: 799:         digits_12[2] = 0x3f;
 11071     1796  303F               	movlw	63
 11072     1797  00AE               	movwf	(_digits_12^(0+384)+4)
 11073     1798  3000               	movlw	0
 11074     1799  00AF               	movwf	(_digits_12^(0+384)+5)
 11075     179A                     i1l4503:
 11076                           
 11077                           ;main.c: 800:         digits_12[3] = 0x3f;
 11078     179A  303F               	movlw	63
 11079     179B  00B0               	movwf	(_digits_12^(0+384)+6)
 11080     179C  3000               	movlw	0
 11081     179D  00B1               	movwf	(_digits_12^(0+384)+7)
 11082     179E                     i1l4505:
 11083                           
 11084                           ;main.c: 801:         digits_12[4] = 0x07;
 11085     179E  3007               	movlw	7
 11086     179F  00B2               	movwf	(_digits_12^(0+384)+8)
 11087     17A0  3000               	movlw	0
 11088     17A1  00B3               	movwf	(_digits_12^(0+384)+9)
 11089     17A2                     i1l4507:
 11090                           
 11091                           ;main.c: 804:         flag = 12;
 11092     17A2  300C               	movlw	12
 11093     17A3  0140               	movlb	0	; select bank0
 11094     17A4  00D5               	movwf	_flag
 11095     17A5  3000               	movlw	0
 11096     17A6  00D6               	movwf	_flag+1
 11097     17A7                     i1l841:
 11098     17A7  0008               	return
 11099     17A8                     __end_of_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT:
 11100                           
 11101                           	psect	text30
 11102     09E4                     __ptext30:	
 11103 ;; *************** function _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT *****************
 11104 ;; Defined at:
 11105 ;;		line 768 in file "main.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;		None
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11121 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;Total ram usage:        2 bytes
 11124 ;; Hardware stack levels used: 1
 11125 ;; Hardware stack levels required when called: 6
 11126 ;; This function calls:
 11127 ;;		_EUSART1_Write
 11128 ;;		_UART_Write_Text
 11129 ;;		_sprintf
 11130 ;; This function is called by:
 11131 ;;		_updateLEDs
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135     09E4                     _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT:	
 11136                           ;psect for function _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
 11137                           
 11138     09E4                     i1l4467:	
 11139                           ;incstack = 0
 11140                           ; Regs used in _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT: [wreg-fsr1h+status,2+s
      +                          tatus,0+pclath+cstack]
 11141                           
 11142                           
 11143                           ;main.c: 771:         digits_9[0] = 0x00;
 11144     09E4  0143               	movlb	3	; select bank3
 11145     09E5  01C8               	clrf	_digits_9^(0+384)
 11146     09E6  01C9               	clrf	(_digits_9+1)^(0+384)
 11147     09E7                     i1l4469:
 11148                           
 11149                           ;main.c: 772:         digits_9[1] = 0x73;
 11150     09E7  3073               	movlw	115
 11151     09E8  00CA               	movwf	(_digits_9^(0+384)+2)
 11152     09E9  3000               	movlw	0
 11153     09EA  00CB               	movwf	(_digits_9^(0+384)+3)
 11154     09EB                     i1l4471:
 11155                           
 11156                           ;main.c: 773:         digits_9[2] = 0x3f;
 11157     09EB  303F               	movlw	63
 11158     09EC  00CC               	movwf	(_digits_9^(0+384)+4)
 11159     09ED  3000               	movlw	0
 11160     09EE  00CD               	movwf	(_digits_9^(0+384)+5)
 11161     09EF                     i1l4473:
 11162                           
 11163                           ;main.c: 774:         digits_9[3] = 0x3f;
 11164     09EF  303F               	movlw	63
 11165     09F0  00CE               	movwf	(_digits_9^(0+384)+6)
 11166     09F1  3000               	movlw	0
 11167     09F2  00CF               	movwf	(_digits_9^(0+384)+7)
 11168     09F3                     i1l4475:
 11169                           
 11170                           ;main.c: 775:         digits_9[4] = 0x7d;
 11171     09F3  307D               	movlw	125
 11172     09F4  00D0               	movwf	(_digits_9^(0+384)+8)
 11173     09F5  3000               	movlw	0
 11174     09F6  00D1               	movwf	(_digits_9^(0+384)+9)
 11175     09F7                     i1l4477:
 11176                           
 11177                           ;main.c: 777:       if(PORTAbits.RA6 == 0){
 11178     09F7  0140               	movlb	0	; select bank0
 11179     09F8  1B0C               	btfsc	12,6	;volatile
 11180     09F9  29FB               	goto	u325_21
 11181     09FA  29FC               	goto	u325_20
 11182     09FB                     u325_21:
 11183     09FB  29FE               	goto	i1l4481
 11184     09FC                     u325_20:
 11185     09FC                     i1l4479:
 11186                           
 11187                           ;main.c: 779:           Control_Output = 0;
 11188     09FC  0141               	movlb	1	; select bank1
 11189     09FD  01E2               	clrf	_Control_Output^(0+128)
 11190     09FE                     i1l4481:
 11191                           
 11192                           ;main.c: 781:       if(PORTAbits.RA6 == 1){
 11193     09FE  0140               	movlb	0	; select bank0
 11194     09FF  1F0C               	btfss	12,6	;volatile
 11195     0A00  2A02               	goto	u326_21
 11196     0A01  2A03               	goto	u326_20
 11197     0A02                     u326_21:
 11198     0A02  2A06               	goto	i1l4485
 11199     0A03                     u326_20:
 11200     0A03                     i1l4483:
 11201                           
 11202                           ;main.c: 783:           Control_Output = 1;
 11203     0A03  3001               	movlw	1
 11204     0A04  0141               	movlb	1	; select bank1
 11205     0A05  00E2               	movwf	_Control_Output^(0+128)
 11206     0A06                     i1l4485:
 11207                           
 11208                           ;main.c: 785:       if (UARTFlag) {
 11209     0A06  0140               	movlb	0	; select bank0
 11210     0A07  0857               	movf	_UARTFlag,w
 11211     0A08  1903               	btfsc	3,2
 11212     0A09  2A0B               	goto	u327_21
 11213     0A0A  2A0C               	goto	u327_20
 11214     0A0B                     u327_21:
 11215     0A0B  2A2E               	goto	i1l4495
 11216     0A0C                     u327_20:
 11217     0A0C                     i1l4487:
 11218                           
 11219                           ;main.c: 786:         UARTFlag = 0;
 11220     0A0C  01D7               	clrf	_UARTFlag
 11221     0A0D                     i1l4489:
 11222                           
 11223                           ;main.c: 787:         EUSART1_Write(0xAA);
 11224     0A0D  30AA               	movlw	170
 11225     0A0E  00F0               	movwf	EUSART1_Write@txData
 11226     0A0F  3188  2007  3189   	fcall	_EUSART1_Write
 11227     0A12                     i1l4491:
 11228                           
 11229                           ;main.c: 788:         sprintf(buffer, "Control Out: %u\n\r", Control_Output);
 11230     0A12  3028               	movlw	40
 11231     0A13  0140               	movlb	0	; select bank0
 11232     0A14  00B7               	movwf	sprintf@s
 11233     0A15  3027               	movlw	39
 11234     0A16  00B8               	movwf	sprintf@s+1
 11235     0A17  3000               	movlw	low (STR_1| (0+32768))
 11236     0A18  00B9               	movwf	sprintf@fmt
 11237     0A19  3098               	movlw	high (STR_1| (0+32768))
 11238     0A1A  00BA               	movwf	sprintf@fmt+1
 11239     0A1B  0141               	movlb	1	; select bank1
 11240     0A1C  0862               	movf	_Control_Output^(0+128),w
 11241     0A1D  0140               	movlb	0	; select bank0
 11242     0A1E  00C9               	movwf	??_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
 11243     0A1F  01CA               	clrf	??_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT+1
 11244     0A20  0849               	movf	??_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT,w
 11245     0A21  00BB               	movwf	?_sprintf+4
 11246     0A22  084A               	movf	??_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT+1,w
 11247     0A23  00BC               	movwf	?_sprintf+5
 11248     0A24  3188  202A  3189   	fcall	_sprintf
 11249     0A27                     i1l4493:
 11250                           
 11251                           ;main.c: 789:         UART_Write_Text(buffer);
 11252     0A27  3028               	movlw	40
 11253     0A28  00F2               	movwf	UART_Write_Text@text
 11254     0A29  3027               	movlw	39
 11255     0A2A  00F3               	movwf	UART_Write_Text@text+1
 11256     0A2B  3197  2777  3189   	fcall	_UART_Write_Text
 11257     0A2E                     i1l4495:
 11258                           
 11259                           ;main.c: 791:     flag = 9;
 11260     0A2E  3009               	movlw	9
 11261     0A2F  0140               	movlb	0	; select bank0
 11262     0A30  00D5               	movwf	_flag
 11263     0A31  3000               	movlw	0
 11264     0A32  00D6               	movwf	_flag+1
 11265     0A33                     i1l838:
 11266     0A33  0008               	return
 11267     0A34                     __end_of_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT:
 11268                           
 11269                           	psect	text31
 11270     082A                     __ptext31:	
 11271 ;; *************** function _sprintf *****************
 11272 ;; Defined at:
 11273 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;  s               2   23[BANK0 ] PTR unsigned char 
 11276 ;;		 -> buffer(200), 
 11277 ;;  fmt             2   25[BANK0 ] PTR const unsigned char 
 11278 ;;		 -> STR_1(18), 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  f              11   30[BANK0 ] struct _IO_FILE
 11281 ;;  ret             2    0        int 
 11282 ;;  ap              1   29[BANK0 ] PTR void [1]
 11283 ;;		 -> ?_sprintf(2), 
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  2   23[BANK0 ] int 
 11286 ;; Registers used:
 11287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11293 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11294 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11296 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11297 ;;Total ram usage:       18 bytes
 11298 ;; Hardware stack levels used: 1
 11299 ;; Hardware stack levels required when called: 5
 11300 ;; This function calls:
 11301 ;;		_vfprintf
 11302 ;; This function is called by:
 11303 ;;		_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307     082A                     _sprintf:	
 11308                           ;psect for function _sprintf
 11309                           
 11310     082A                     i1l3807:	
 11311                           ;incstack = 0
 11312                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11313                           
 11314     082A  303B               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 11315     082B  0140               	movlb	0	; select bank0
 11316     082C  00BD               	movwf	sprintf@ap
 11317     082D  0838               	movf	sprintf@s+1,w
 11318     082E  00BF               	movwf	sprintf@f+1
 11319     082F  0837               	movf	sprintf@s,w
 11320     0830  00BE               	movwf	sprintf@f
 11321     0831                     i1l3809:
 11322     0831  01C0               	clrf	sprintf@f+2
 11323     0832  01C1               	clrf	sprintf@f+3
 11324     0833                     i1l3811:
 11325     0833  01C7               	clrf	sprintf@f+9
 11326     0834  01C8               	clrf	sprintf@f+10
 11327     0835                     i1l3813:
 11328     0835  303E               	movlw	low sprintf@f
 11329     0836  00AF               	movwf	vfprintf@fp
 11330     0837  3000               	movlw	high sprintf@f
 11331     0838  00B0               	movwf	vfprintf@fp+1
 11332     0839  083A               	movf	sprintf@fmt+1,w
 11333     083A  00B2               	movwf	vfprintf@fmt+1
 11334     083B  0839               	movf	sprintf@fmt,w
 11335     083C  00B1               	movwf	vfprintf@fmt
 11336     083D  303D               	movlw	(low (sprintf@ap| 0))& (0+255)
 11337     083E  00B3               	movwf	vfprintf@ap
 11338     083F  3197  27C3  3188   	fcall	_vfprintf
 11339     0842                     i1l3815:
 11340     0842  303E               	movlw	low sprintf@f
 11341     0843  0086               	movwf	6
 11342     0844  3000               	movlw	high sprintf@f
 11343     0845  0087               	movwf	7
 11344     0846  3142               	addfsr 1,2
 11345     0847  3F40               	moviw [0]fsr1
 11346     0848  0140               	movlb	0	; select bank0
 11347     0849  0737               	addwf	sprintf@s,w
 11348     084A  0084               	movwf	4
 11349     084B  3F41               	moviw [1]fsr1
 11350     084C  3D38               	addwfc	sprintf@s+1,w
 11351     084D  0085               	movwf	5
 11352     084E  0180               	clrf	0
 11353     084F                     i1l1557:
 11354     084F  0008               	return
 11355     0850                     __end_of_sprintf:
 11356                           
 11357                           	psect	text32
 11358     17C3                     __ptext32:	
 11359 ;; *************** function _vfprintf *****************
 11360 ;; Defined at:
 11361 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11362 ;; Parameters:    Size  Location     Type
 11363 ;;  fp              2   15[BANK0 ] PTR struct _IO_FILE
 11364 ;;		 -> sprintf@f(11), 
 11365 ;;  fmt             2   17[BANK0 ] PTR const unsigned char 
 11366 ;;		 -> STR_1(18), 
 11367 ;;  ap              1   19[BANK0 ] PTR PTR void 
 11368 ;;		 -> sprintf@ap(1), 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  cfmt            2   21[BANK0 ] PTR unsigned char 
 11371 ;;		 -> STR_1(18), 
 11372 ;; Return value:  Size  Location     Type
 11373 ;;                  2   15[BANK0 ] int 
 11374 ;; Registers used:
 11375 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11376 ;; Tracked objects:
 11377 ;;		On entry : 0/0
 11378 ;;		On exit  : 0/0
 11379 ;;		Unchanged: 0/0
 11380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11381 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11382 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11384 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11385 ;;Total ram usage:        8 bytes
 11386 ;; Hardware stack levels used: 1
 11387 ;; Hardware stack levels required when called: 4
 11388 ;; This function calls:
 11389 ;;		_vfpfcnvrt
 11390 ;; This function is called by:
 11391 ;;		_sprintf
 11392 ;; This function uses a non-reentrant model
 11393 ;;
 11394                           
 11395     17C3                     _vfprintf:	
 11396                           ;psect for function _vfprintf
 11397                           
 11398     17C3                     i1l3797:	
 11399                           ;incstack = 0
 11400                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11401                           
 11402                           
 11403                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
 11404     17C3  0140               	movlb	0	; select bank0
 11405     17C4  0832               	movf	vfprintf@fmt+1,w
 11406     17C5  00B6               	movwf	vfprintf@cfmt+1
 11407     17C6  0831               	movf	vfprintf@fmt,w
 11408     17C7  00B5               	movwf	vfprintf@cfmt
 11409                           
 11410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 11411     17C8  2FD4               	goto	i1l3801
 11412     17C9                     i1l3799:
 11413                           
 11414                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 11415     17C9  0830               	movf	vfprintf@fp+1,w
 11416     17CA  00A1               	movwf	vfpfcnvrt@fp+1
 11417     17CB  082F               	movf	vfprintf@fp,w
 11418     17CC  00A0               	movwf	vfpfcnvrt@fp
 11419     17CD  3035               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 11420     17CE  00A2               	movwf	vfpfcnvrt@fmt
 11421     17CF  0833               	movf	vfprintf@ap,w
 11422     17D0  00A3               	movwf	vfpfcnvrt@ap
 11423     17D1  318C  24A8  3197   	fcall	_vfpfcnvrt
 11424     17D4                     i1l3801:
 11425                           
 11426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
 11427     17D4  0140               	movlb	0	; select bank0
 11428     17D5  0835               	movf	vfprintf@cfmt,w
 11429     17D6  0084               	movwf	4
 11430     17D7  0836               	movf	vfprintf@cfmt+1,w
 11431     17D8  0085               	movwf	5
 11432     17D9  0012               	moviw fsr0++
 11433     17DA  1D03               	btfss	3,2
 11434     17DB  2FDD               	goto	u247_21
 11435     17DC  2FDE               	goto	u247_20
 11436     17DD                     u247_21:
 11437     17DD  2FC9               	goto	i1l3799
 11438     17DE                     u247_20:
 11439     17DE                     i1l3803:
 11440                           
 11441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
 11442     17DE  01AF               	clrf	?_vfprintf
 11443     17DF  01B0               	clrf	?_vfprintf+1
 11444     17E0                     i1l1601:
 11445     17E0  0008               	return
 11446     17E1                     __end_of_vfprintf:
 11447                           
 11448                           	psect	text33
 11449     0CA8                     __ptext33:	
 11450 ;; *************** function _vfpfcnvrt *****************
 11451 ;; Defined at:
 11452 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
 11453 ;; Parameters:    Size  Location     Type
 11454 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11455 ;;		 -> sprintf@f(11), 
 11456 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
 11457 ;;		 -> vfprintf@cfmt(2), 
 11458 ;;  ap              1    3[BANK0 ] PTR PTR void 
 11459 ;;		 -> sprintf@ap(1), 
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;  convarg         4   10[BANK0 ] struct .
 11462 ;;  cp              2    8[BANK0 ] PTR unsigned char 
 11463 ;;		 -> STR_1(18), 
 11464 ;;  c               1   14[BANK0 ] unsigned char 
 11465 ;;  done            1    0        _Bool 
 11466 ;; Return value:  Size  Location     Type
 11467 ;;                  1    wreg      void 
 11468 ;; Registers used:
 11469 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11470 ;; Tracked objects:
 11471 ;;		On entry : 0/0
 11472 ;;		On exit  : 0/0
 11473 ;;		Unchanged: 0/0
 11474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11476 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11477 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11478 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11479 ;;Total ram usage:       15 bytes
 11480 ;; Hardware stack levels used: 1
 11481 ;; Hardware stack levels required when called: 3
 11482 ;; This function calls:
 11483 ;;		___lwdiv
 11484 ;;		___lwmod
 11485 ;;		_fputc
 11486 ;; This function is called by:
 11487 ;;		_vfprintf
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491     0CA8                     _vfpfcnvrt:	
 11492                           ;psect for function _vfpfcnvrt
 11493                           
 11494     0CA8                     i1l3753:	
 11495                           ;incstack = 0
 11496                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11497                           
 11498                           
 11499                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
 11500     0CA8  0140               	movlb	0	; select bank0
 11501     0CA9  0822               	movf	vfpfcnvrt@fmt,w
 11502     0CAA  0086               	movwf	6
 11503     0CAB  0187               	clrf	7
 11504     0CAC  3F40               	moviw [0]fsr1
 11505     0CAD  00A4               	movwf	??_vfpfcnvrt
 11506     0CAE  3F41               	moviw [1]fsr1
 11507     0CAF  00A5               	movwf	??_vfpfcnvrt+1
 11508     0CB0  0824               	movf	??_vfpfcnvrt,w
 11509     0CB1  0084               	movwf	4
 11510     0CB2  0825               	movf	??_vfpfcnvrt+1,w
 11511     0CB3  0085               	movwf	5
 11512     0CB4  0012               	moviw fsr0++
 11513     0CB5  3A25               	xorlw	37
 11514     0CB6  1D03               	btfss	3,2
 11515     0CB7  2CB9               	goto	u242_21
 11516     0CB8  2CBA               	goto	u242_20
 11517     0CB9                     u242_21:
 11518     0CB9  2D5B               	goto	i1l3791
 11519     0CBA                     u242_20:
 11520     0CBA                     i1l3755:
 11521                           
 11522                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
 11523     0CBA  0822               	movf	vfpfcnvrt@fmt,w
 11524     0CBB  0086               	movwf	6
 11525     0CBC  0187               	clrf	7
 11526     0CBD  3001               	movlw	1
 11527     0CBE  0781               	addwf	1,f
 11528     0CBF  3141               	addfsr 1,1
 11529     0CC0  1803               	skipnc
 11530     0CC1  0A81               	incf	1,f
 11531     0CC2                     i1l3757:
 11532                           
 11533                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
 11534     0CC2  0141               	movlb	1	; select bank1
 11535     0CC3  01A8               	clrf	_width^(0+128)
 11536     0CC4  01A9               	clrf	(_width+1)^(0+128)
 11537     0CC5  3000               	movlw	0
 11538     0CC6  00D4               	movwf	_flags^(0+128)
 11539     0CC7                     i1l3759:
 11540                           
 11541                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
 11542     0CC7  30FF               	movlw	255
 11543     0CC8  00AA               	movwf	_prec^(0+128)
 11544     0CC9  30FF               	movlw	255
 11545     0CCA  00AB               	movwf	(_prec^(0+128)+1)
 11546     0CCB                     i1l3761:
 11547                           
 11548                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
 11549     0CCB  0140               	movlb	0	; select bank0
 11550     0CCC  0822               	movf	vfpfcnvrt@fmt,w
 11551     0CCD  0086               	movwf	6
 11552     0CCE  0187               	clrf	7
 11553     0CCF  3F40               	moviw [0]fsr1
 11554     0CD0  00A8               	movwf	vfpfcnvrt@cp
 11555     0CD1  3F41               	moviw [1]fsr1
 11556     0CD2  00A9               	movwf	vfpfcnvrt@cp+1
 11557     0CD3                     i1l3763:
 11558     0CD3  0828               	movf	vfpfcnvrt@cp,w
 11559     0CD4  0084               	movwf	4
 11560     0CD5  0829               	movf	vfpfcnvrt@cp+1,w
 11561     0CD6  0085               	movwf	5
 11562     0CD7  0012               	moviw fsr0++
 11563     0CD8  3A75               	xorlw	117
 11564     0CD9  1D03               	btfss	3,2
 11565     0CDA  2CDC               	goto	u243_21
 11566     0CDB  2CDD               	goto	u243_20
 11567     0CDC                     u243_21:
 11568     0CDC  2D51               	goto	i1l3787
 11569     0CDD                     u243_20:
 11570     0CDD                     i1l3765:
 11571                           
 11572                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
 11573     0CDD  0823               	movf	vfpfcnvrt@ap,w
 11574     0CDE  0086               	movwf	6
 11575     0CDF  0187               	clrf	7
 11576     0CE0  0801               	movf	1,w
 11577     0CE1  0084               	movwf	4
 11578     0CE2  0185               	clrf	5
 11579     0CE3  3002               	movlw	2
 11580     0CE4  0781               	addwf	1,f
 11581     0CE5  3F00               	moviw [0]fsr0
 11582     0CE6  00AA               	movwf	vfpfcnvrt@convarg
 11583     0CE7  3F01               	moviw [1]fsr0
 11584     0CE8  00AB               	movwf	vfpfcnvrt@convarg+1
 11585     0CE9                     i1l3767:
 11586                           
 11587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
 11588     0CE9  0828               	movf	vfpfcnvrt@cp,w
 11589     0CEA  3E01               	addlw	1
 11590     0CEB  00A4               	movwf	??_vfpfcnvrt
 11591     0CEC  3000               	movlw	0
 11592     0CED  3D29               	addwfc	vfpfcnvrt@cp+1,w
 11593     0CEE  00A5               	movwf	??_vfpfcnvrt+1
 11594     0CEF  0822               	movf	vfpfcnvrt@fmt,w
 11595     0CF0  0086               	movwf	6
 11596     0CF1  0187               	clrf	7
 11597     0CF2  0824               	movf	??_vfpfcnvrt,w
 11598     0CF3  3FC0               	movwi [0]fsr1
 11599     0CF4  0825               	movf	??_vfpfcnvrt+1,w
 11600     0CF5  3FC1               	movwi [1]fsr1
 11601                           
 11602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
 11603     0CF6  2D48               	goto	i1l3785
 11604     0CF7                     i1l1586:	
 11605                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1523:     case 'u
      +                          ':
 11606                           
 11607                           
 11608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1525:      c = si
      +                          zeof(dbuf);
 11609     0CF7  3020               	movlw	32
 11610     0CF8  00AE               	movwf	vfpfcnvrt@c
 11611     0CF9                     i1l3769:
 11612                           
 11613                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1527:       dbuf[
      +                          --c] = (convarg.uint % 10) + '0';
 11614     0CF9  3001               	movlw	1
 11615     0CFA  02AE               	subwf	vfpfcnvrt@c,f
 11616     0CFB  082E               	movf	vfpfcnvrt@c,w
 11617     0CFC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11618     0CFD  0086               	movwf	6
 11619     0CFE  3002               	movlw	2	; select bank4/5
 11620     0CFF  0087               	movwf	7
 11621     0D00  300A               	movlw	10
 11622     0D01  00F7               	movwf	___lwmod@divisor
 11623     0D02  3000               	movlw	0
 11624     0D03  00F8               	movwf	___lwmod@divisor+1
 11625     0D04  082B               	movf	vfpfcnvrt@convarg+1,w
 11626     0D05  00FA               	movwf	___lwmod@dividend+1
 11627     0D06  082A               	movf	vfpfcnvrt@convarg,w
 11628     0D07  00F9               	movwf	___lwmod@dividend
 11629     0D08  3188  20F6  318C   	fcall	___lwmod
 11630     0D0B  0877               	movf	?___lwmod,w
 11631     0D0C  3E30               	addlw	48
 11632     0D0D  0081               	movwf	1
 11633     0D0E                     i1l3771:
 11634                           
 11635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1528:       conva
      +                          rg.uint /= 10;
 11636     0D0E  300A               	movlw	10
 11637     0D0F  00F0               	movwf	___lwdiv@divisor
 11638     0D10  3000               	movlw	0
 11639     0D11  00F1               	movwf	___lwdiv@divisor+1
 11640     0D12  0140               	movlb	0	; select bank0
 11641     0D13  082B               	movf	vfpfcnvrt@convarg+1,w
 11642     0D14  00F3               	movwf	___lwdiv@dividend+1
 11643     0D15  082A               	movf	vfpfcnvrt@convarg,w
 11644     0D16  00F2               	movwf	___lwdiv@dividend
 11645     0D17  3189  215E  318C   	fcall	___lwdiv
 11646     0D1A  0871               	movf	?___lwdiv+1,w
 11647     0D1B  0140               	movlb	0	; select bank0
 11648     0D1C  00AB               	movwf	vfpfcnvrt@convarg+1
 11649     0D1D  0870               	movf	?___lwdiv,w
 11650     0D1E  00AA               	movwf	vfpfcnvrt@convarg
 11651     0D1F                     i1l3773:
 11652                           
 11653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1532:      } whil
      +                          e (convarg.uint != 0 && c != 0);
 11654     0D1F  082A               	movf	vfpfcnvrt@convarg,w
 11655     0D20  042B               	iorwf	vfpfcnvrt@convarg+1,w
 11656     0D21  1903               	btfsc	3,2
 11657     0D22  2D24               	goto	u244_21
 11658     0D23  2D25               	goto	u244_20
 11659     0D24                     u244_21:
 11660     0D24  2D41               	goto	i1l3781
 11661     0D25                     u244_20:
 11662     0D25                     i1l3775:
 11663     0D25  082E               	movf	vfpfcnvrt@c,w
 11664     0D26  1D03               	btfss	3,2
 11665     0D27  2D29               	goto	u245_21
 11666     0D28  2D2A               	goto	u245_20
 11667     0D29                     u245_21:
 11668     0D29  2CF9               	goto	i1l3769
 11669     0D2A                     u245_20:
 11670     0D2A  2D41               	goto	i1l3781
 11671     0D2B                     i1l3777:
 11672                           
 11673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1534:       fputc
      +                          (dbuf[c++], fp);
 11674     0D2B  082E               	movf	vfpfcnvrt@c,w
 11675     0D2C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11676     0D2D  0086               	movwf	6
 11677     0D2E  3002               	movlw	2	; select bank4/5
 11678     0D2F  0087               	movwf	7
 11679     0D30  0801               	movf	1,w
 11680     0D31  00A4               	movwf	??_vfpfcnvrt
 11681     0D32  01A5               	clrf	??_vfpfcnvrt+1
 11682     0D33  0824               	movf	??_vfpfcnvrt,w
 11683     0D34  00F3               	movwf	fputc@c
 11684     0D35  0825               	movf	??_vfpfcnvrt+1,w
 11685     0D36  00F4               	movwf	fputc@c+1
 11686     0D37  0821               	movf	vfpfcnvrt@fp+1,w
 11687     0D38  00F6               	movwf	fputc@fp+1
 11688     0D39  0820               	movf	vfpfcnvrt@fp,w
 11689     0D3A  00F5               	movwf	fputc@fp
 11690     0D3B  318B  232B  318C   	fcall	_fputc
 11691     0D3E                     i1l3779:
 11692     0D3E  3001               	movlw	1
 11693     0D3F  0140               	movlb	0	; select bank0
 11694     0D40  07AE               	addwf	vfpfcnvrt@c,f
 11695     0D41                     i1l3781:
 11696                           
 11697                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1533:      while 
      +                          (c != sizeof(dbuf)) {
 11698     0D41  3020               	movlw	32
 11699     0D42  062E               	xorwf	vfpfcnvrt@c,w
 11700     0D43  1D03               	btfss	3,2
 11701     0D44  2D46               	goto	u246_21
 11702     0D45  2D47               	goto	u246_20
 11703     0D46                     u246_21:
 11704     0D46  2D2B               	goto	i1l3777
 11705     0D47                     u246_20:
 11706     0D47  2D75               	goto	i1l1594
 11707     0D48                     i1l3785:
 11708     0D48  0828               	movf	vfpfcnvrt@cp,w
 11709     0D49  0084               	movwf	4
 11710     0D4A  0829               	movf	vfpfcnvrt@cp+1,w
 11711     0D4B  0085               	movwf	5
 11712     0D4C  0800               	movf	0,w	;code access
 11713                           
 11714                           ; Switch size 1, requested type "simple"
 11715                           ; Number of cases is 1, Range of values is 117 to 117
 11716                           ; switch strategies available:
 11717                           ; Name         Instructions Cycles
 11718                           ; simple_byte            4     3 (average)
 11719                           ; direct_byte           11     9 (fixed)
 11720                           ; jumptable            263     9 (fixed)
 11721                           ;	Chosen strategy is simple_byte
 11722     0D4D  3A75               	xorlw	117	; case 117
 11723     0D4E  1903               	skipnz
 11724     0D4F  2CF7               	goto	i1l1586
 11725     0D50  2D51               	goto	i1l3787
 11726     0D51                     i1l3787:
 11727                           
 11728                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
 11729     0D51  0140               	movlb	0	; select bank0
 11730     0D52  0822               	movf	vfpfcnvrt@fmt,w
 11731     0D53  0086               	movwf	6
 11732     0D54  0187               	clrf	7
 11733     0D55  3001               	movlw	1
 11734     0D56  0781               	addwf	1,f
 11735     0D57  3141               	addfsr 1,1
 11736     0D58  1803               	skipnc
 11737     0D59  0A81               	incf	1,f
 11738     0D5A  2D75               	goto	i1l1594
 11739     0D5B                     i1l3791:
 11740                           
 11741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
 11742     0D5B  0822               	movf	vfpfcnvrt@fmt,w
 11743     0D5C  0086               	movwf	6
 11744     0D5D  0187               	clrf	7
 11745     0D5E  3F40               	moviw [0]fsr1
 11746     0D5F  00A4               	movwf	??_vfpfcnvrt
 11747     0D60  3F41               	moviw [1]fsr1
 11748     0D61  00A5               	movwf	??_vfpfcnvrt+1
 11749     0D62  0824               	movf	??_vfpfcnvrt,w
 11750     0D63  0084               	movwf	4
 11751     0D64  0825               	movf	??_vfpfcnvrt+1,w
 11752     0D65  0085               	movwf	5
 11753     0D66  0800               	movf	0,w	;code access
 11754     0D67  00A6               	movwf	??_vfpfcnvrt+2
 11755     0D68  01A7               	clrf	??_vfpfcnvrt+3
 11756     0D69  0826               	movf	??_vfpfcnvrt+2,w
 11757     0D6A  00F3               	movwf	fputc@c
 11758     0D6B  0827               	movf	??_vfpfcnvrt+3,w
 11759     0D6C  00F4               	movwf	fputc@c+1
 11760     0D6D  0821               	movf	vfpfcnvrt@fp+1,w
 11761     0D6E  00F6               	movwf	fputc@fp+1
 11762     0D6F  0820               	movf	vfpfcnvrt@fp,w
 11763     0D70  00F5               	movwf	fputc@fp
 11764     0D71  318B  232B  318C   	fcall	_fputc
 11765     0D74  2D51               	goto	i1l3787
 11766     0D75                     i1l1594:
 11767     0D75  0008               	return
 11768     0D76                     __end_of_vfpfcnvrt:
 11769                           
 11770                           	psect	text34
 11771     0B2B                     __ptext34:	
 11772 ;; *************** function _fputc *****************
 11773 ;; Defined at:
 11774 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  c               2    3[COMMON] int 
 11777 ;;  fp              2    5[COMMON] PTR struct _IO_FILE
 11778 ;;		 -> sprintf@f(11), 
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;		None
 11781 ;; Return value:  Size  Location     Type
 11782 ;;                  2    3[COMMON] int 
 11783 ;; Registers used:
 11784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11785 ;; Tracked objects:
 11786 ;;		On entry : 0/0
 11787 ;;		On exit  : 0/0
 11788 ;;		Unchanged: 0/0
 11789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11792 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11793 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11794 ;;Total ram usage:        9 bytes
 11795 ;; Hardware stack levels used: 1
 11796 ;; Hardware stack levels required when called: 2
 11797 ;; This function calls:
 11798 ;;		_putch
 11799 ;; This function is called by:
 11800 ;;		_vfpfcnvrt
 11801 ;; This function uses a non-reentrant model
 11802 ;;
 11803                           
 11804     0B2B                     _fputc:	
 11805                           ;psect for function _fputc
 11806                           
 11807     0B2B                     i1l3737:	
 11808                           ;incstack = 0
 11809                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11810                           
 11811     0B2B  0875               	movf	fputc@fp,w
 11812     0B2C  0476               	iorwf	fputc@fp+1,w
 11813     0B2D  1903               	btfsc	3,2
 11814     0B2E  2B30               	goto	u238_21
 11815     0B2F  2B31               	goto	u238_20
 11816     0B30                     u238_21:
 11817     0B30  2B37               	goto	i1l3741
 11818     0B31                     u238_20:
 11819     0B31                     i1l3739:
 11820     0B31  0875               	movf	fputc@fp,w
 11821     0B32  0476               	iorwf	fputc@fp+1,w
 11822     0B33  1D03               	btfss	3,2
 11823     0B34  2B36               	goto	u239_21
 11824     0B35  2B37               	goto	u239_20
 11825     0B36                     u239_21:
 11826     0B36  2B3C               	goto	i1l3743
 11827     0B37                     u239_20:
 11828     0B37                     i1l3741:
 11829     0B37  0873               	movf	fputc@c,w
 11830     0B38  3197  272E  318B   	fcall	_putch
 11831     0B3B  2B86               	goto	i1l1613
 11832     0B3C                     i1l3743:
 11833     0B3C  0875               	movf	fputc@fp,w
 11834     0B3D  0086               	movwf	6
 11835     0B3E  0876               	movf	fputc@fp+1,w
 11836     0B3F  0087               	movwf	7
 11837     0B40  3149               	addfsr 1,9
 11838     0B41  0016               	moviw fsr1++
 11839     0B42  0401               	iorwf	1,w
 11840     0B43  1903               	btfsc	3,2
 11841     0B44  2B46               	goto	u240_21
 11842     0B45  2B47               	goto	u240_20
 11843     0B46                     u240_21:
 11844     0B46  2B67               	goto	i1l3747
 11845     0B47                     u240_20:
 11846     0B47                     i1l3745:
 11847     0B47  0875               	movf	fputc@fp,w
 11848     0B48  0086               	movwf	6
 11849     0B49  0876               	movf	fputc@fp+1,w
 11850     0B4A  0087               	movwf	7
 11851     0B4B  3149               	addfsr 1,9
 11852     0B4C  3F40               	moviw [0]fsr1
 11853     0B4D  00F7               	movwf	??_fputc
 11854     0B4E  3F41               	moviw [1]fsr1
 11855     0B4F  00F8               	movwf	??_fputc+1
 11856     0B50  0875               	movf	fputc@fp,w
 11857     0B51  0086               	movwf	6
 11858     0B52  0876               	movf	fputc@fp+1,w
 11859     0B53  0087               	movwf	7
 11860     0B54  3142               	addfsr 1,2
 11861     0B55  3F40               	moviw [0]fsr1
 11862     0B56  00F9               	movwf	??_fputc+2
 11863     0B57  3F41               	moviw [1]fsr1
 11864     0B58  00FA               	movwf	??_fputc+3
 11865     0B59  087A               	movf	??_fputc+3,w
 11866     0B5A  3A80               	xorlw	128
 11867     0B5B  00FB               	movwf	??_fputc+4
 11868     0B5C  0878               	movf	??_fputc+1,w
 11869     0B5D  3A80               	xorlw	128
 11870     0B5E  027B               	subwf	??_fputc+4,w
 11871     0B5F  1D03               	skipz
 11872     0B60  2B63               	goto	u241_25
 11873     0B61  0877               	movf	??_fputc,w
 11874     0B62  0279               	subwf	??_fputc+2,w
 11875     0B63                     u241_25:
 11876     0B63  1803               	skipnc
 11877     0B64  2B66               	goto	u241_21
 11878     0B65  2B67               	goto	u241_20
 11879     0B66                     u241_21:
 11880     0B66  2B86               	goto	i1l1613
 11881     0B67                     u241_20:
 11882     0B67                     i1l3747:
 11883     0B67  0875               	movf	fputc@fp,w
 11884     0B68  0086               	movwf	6
 11885     0B69  0876               	movf	fputc@fp+1,w
 11886     0B6A  0087               	movwf	7
 11887     0B6B  3142               	addfsr 1,2
 11888     0B6C  0875               	movf	fputc@fp,w
 11889     0B6D  0084               	movwf	4
 11890     0B6E  0876               	movf	fputc@fp+1,w
 11891     0B6F  0085               	movwf	5
 11892     0B70  3F00               	moviw [0]fsr0
 11893     0B71  00F7               	movwf	??_fputc
 11894     0B72  3F01               	moviw [1]fsr0
 11895     0B73  00F8               	movwf	??_fputc+1
 11896     0B74  3F40               	moviw [0]fsr1
 11897     0B75  0777               	addwf	??_fputc,w
 11898     0B76  0084               	movwf	4
 11899     0B77  3F41               	moviw [1]fsr1
 11900     0B78  3D78               	addwfc	??_fputc+1,w
 11901     0B79  0085               	movwf	5
 11902     0B7A  0873               	movf	fputc@c,w
 11903     0B7B  0080               	movwf	0
 11904     0B7C                     i1l3749:
 11905     0B7C  0875               	movf	fputc@fp,w
 11906     0B7D  0086               	movwf	6
 11907     0B7E  0876               	movf	fputc@fp+1,w
 11908     0B7F  0087               	movwf	7
 11909     0B80  3142               	addfsr 1,2
 11910     0B81  3001               	movlw	1
 11911     0B82  0781               	addwf	1,f
 11912     0B83  3141               	addfsr 1,1
 11913     0B84  1803               	skipnc
 11914     0B85  0A81               	incf	1,f
 11915     0B86                     i1l1613:
 11916     0B86  0008               	return
 11917     0B87                     __end_of_fputc:
 11918                           
 11919                           	psect	text35
 11920     172E                     __ptext35:	
 11921 ;; *************** function _putch *****************
 11922 ;; Defined at:
 11923 ;;		line 401 in file "mcc_generated_files/uart/src/eusart1.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;  txData          1    wreg     unsigned char 
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;  txData          1    2[COMMON] unsigned char 
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  1    wreg      void 
 11930 ;; Registers used:
 11931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11941 ;;Total ram usage:        1 bytes
 11942 ;; Hardware stack levels used: 1
 11943 ;; Hardware stack levels required when called: 1
 11944 ;; This function calls:
 11945 ;;		_EUSART1_IsTxReady
 11946 ;;		_EUSART1_Write
 11947 ;; This function is called by:
 11948 ;;		_fputc
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952     172E                     _putch:	
 11953                           ;psect for function _putch
 11954                           
 11955                           
 11956                           ;incstack = 0
 11957                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11958                           ;putch@txData stored from wreg
 11959     172E  00F2               	movwf	putch@txData
 11960     172F                     i1l3681:
 11961     172F                     i1l3683:	
 11962                           ;mcc_generated_files/uart/src/eusart1.c: 401: void putch(char txData);mcc_generated_file
      +                          s/uart/src/eusart1.c: 402: {;mcc_generated_files/uart/src/eusart1.c: 403:     while(!(EU
      +                          SART1_IsTxReady()))
 11963                           
 11964                           
 11965                           ;mcc_generated_files/uart/src/eusart1.c: 403:     while(!(EUSART1_IsTxReady()))
 11966     172F  3196  26F9  3197   	fcall	_EUSART1_IsTxReady
 11967     1732  3A00               	xorlw	0
 11968     1733  1903               	skipnz
 11969     1734  2F36               	goto	u224_21
 11970     1735  2F37               	goto	u224_20
 11971     1736                     u224_21:
 11972     1736  2F2F               	goto	i1l3683
 11973     1737                     u224_20:
 11974     1737                     i1l3685:
 11975                           
 11976                           ;mcc_generated_files/uart/src/eusart1.c: 407:     return EUSART1_Write(txData);;	Return 
      +                          value of _putch is never used
 11977     1737  0872               	movf	putch@txData,w
 11978     1738  00F0               	movwf	EUSART1_Write@txData
 11979     1739  3188  2007  3197   	fcall	_EUSART1_Write
 11980     173C                     i1l452:
 11981     173C  0008               	return
 11982     173D                     __end_of_putch:
 11983                           
 11984                           	psect	text36
 11985     16F9                     __ptext36:	
 11986 ;; *************** function _EUSART1_IsTxReady *****************
 11987 ;; Defined at:
 11988 ;;		line 261 in file "mcc_generated_files/uart/src/eusart1.c"
 11989 ;; Parameters:    Size  Location     Type
 11990 ;;		None
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;		None
 11993 ;; Return value:  Size  Location     Type
 11994 ;;                  1    wreg      _Bool 
 11995 ;; Registers used:
 11996 ;;		wreg, status,2, status,0
 11997 ;; Tracked objects:
 11998 ;;		On entry : 0/0
 11999 ;;		On exit  : 0/0
 12000 ;;		Unchanged: 0/0
 12001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12006 ;;Total ram usage:        0 bytes
 12007 ;; Hardware stack levels used: 1
 12008 ;; This function calls:
 12009 ;;		Nothing
 12010 ;; This function is called by:
 12011 ;;		_putch
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015     16F9                     _EUSART1_IsTxReady:	
 12016                           ;psect for function _EUSART1_IsTxReady
 12017                           
 12018     16F9                     i1l3661:	
 12019                           ;incstack = 0
 12020                           ; Regs used in _EUSART1_IsTxReady: [wreg+status,2+status,0]
 12021                           
 12022                           
 12023                           ;mcc_generated_files/uart/src/eusart1.c: 263:     return (eusart1TxBufferRemaining ? 1 :
      +                           0);
 12024     16F9  0140               	movlb	0	; select bank0
 12025     16FA  0865               	movf	_eusart1TxBufferRemaining,w	;volatile
 12026     16FB  1D03               	btfss	3,2
 12027     16FC  2EFE               	goto	u220_21
 12028     16FD  2F00               	goto	u220_20
 12029     16FE                     u220_21:
 12030     16FE  3001               	movlw	1
 12031     16FF  2F01               	goto	u221_20
 12032     1700                     u220_20:
 12033     1700  3000               	movlw	0
 12034     1701                     u221_20:
 12035     1701                     i1l407:
 12036     1701  0008               	return
 12037     1702                     __end_of_EUSART1_IsTxReady:
 12038                           
 12039                           	psect	text37
 12040     08F6                     __ptext37:	
 12041 ;; *************** function ___lwmod *****************
 12042 ;; Defined at:
 12043 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  divisor         2    7[COMMON] unsigned int 
 12046 ;;  dividend        2    9[COMMON] unsigned int 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  counter         1   11[COMMON] unsigned char 
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  2    7[COMMON] unsigned int 
 12051 ;; Registers used:
 12052 ;;		wreg, status,2, status,0
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12061 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12062 ;;Total ram usage:        5 bytes
 12063 ;; Hardware stack levels used: 1
 12064 ;; This function calls:
 12065 ;;		Nothing
 12066 ;; This function is called by:
 12067 ;;		_control_led_and_7segment_FOR_MODE_FREQUENCY
 12068 ;;		_control_led_and_7segment_FOR_MODE_ON_DELAY
 12069 ;;		_control_led_and_7segment_FOR_MODE_OFF_DELAY
 12070 ;;		_vfpfcnvrt
 12071 ;; This function uses a non-reentrant model
 12072 ;;
 12073                           
 12074     08F6                     ___lwmod:	
 12075                           ;psect for function ___lwmod
 12076                           
 12077     08F6                     i1l3715:	
 12078                           ;incstack = 0
 12079                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12080                           
 12081     08F6  0877               	movf	___lwmod@divisor,w
 12082     08F7  0478               	iorwf	___lwmod@divisor+1,w
 12083     08F8  1903               	btfsc	3,2
 12084     08F9  28FB               	goto	u232_21
 12085     08FA  28FC               	goto	u232_20
 12086     08FB                     u232_21:
 12087     08FB  2923               	goto	i1l3733
 12088     08FC                     u232_20:
 12089     08FC                     i1l3717:
 12090     08FC  3001               	movlw	1
 12091     08FD  00FB               	movwf	___lwmod@counter
 12092     08FE  2906               	goto	i1l3723
 12093     08FF                     i1l3719:
 12094     08FF  3001               	movlw	1
 12095     0900                     u233_25:
 12096     0900  35F7               	lslf	___lwmod@divisor,f
 12097     0901  0DF8               	rlf	___lwmod@divisor+1,f
 12098     0902  0B89               	decfsz	9,f
 12099     0903  2900               	goto	u233_25
 12100     0904                     i1l3721:
 12101     0904  3001               	movlw	1
 12102     0905  07FB               	addwf	___lwmod@counter,f
 12103     0906                     i1l3723:
 12104     0906  1FF8               	btfss	___lwmod@divisor+1,7
 12105     0907  2909               	goto	u234_21
 12106     0908  290A               	goto	u234_20
 12107     0909                     u234_21:
 12108     0909  28FF               	goto	i1l3719
 12109     090A                     u234_20:
 12110     090A                     i1l3725:
 12111     090A  0878               	movf	___lwmod@divisor+1,w
 12112     090B  027A               	subwf	___lwmod@dividend+1,w
 12113     090C  1D03               	skipz
 12114     090D  2910               	goto	u235_25
 12115     090E  0877               	movf	___lwmod@divisor,w
 12116     090F  0279               	subwf	___lwmod@dividend,w
 12117     0910                     u235_25:
 12118     0910  1C03               	skipc
 12119     0911  2913               	goto	u235_21
 12120     0912  2914               	goto	u235_20
 12121     0913                     u235_21:
 12122     0913  2918               	goto	i1l3729
 12123     0914                     u235_20:
 12124     0914                     i1l3727:
 12125     0914  0877               	movf	___lwmod@divisor,w
 12126     0915  02F9               	subwf	___lwmod@dividend,f
 12127     0916  0878               	movf	___lwmod@divisor+1,w
 12128     0917  3BFA               	subwfb	___lwmod@dividend+1,f
 12129     0918                     i1l3729:
 12130     0918  3001               	movlw	1
 12131     0919                     u236_25:
 12132     0919  36F8               	lsrf	___lwmod@divisor+1,f
 12133     091A  0CF7               	rrf	___lwmod@divisor,f
 12134     091B  0B89               	decfsz	9,f
 12135     091C  2919               	goto	u236_25
 12136     091D                     i1l3731:
 12137     091D  3001               	movlw	1
 12138     091E  02FB               	subwf	___lwmod@counter,f
 12139     091F  1D03               	btfss	3,2
 12140     0920  2922               	goto	u237_21
 12141     0921  2923               	goto	u237_20
 12142     0922                     u237_21:
 12143     0922  290A               	goto	i1l3725
 12144     0923                     u237_20:
 12145     0923                     i1l3733:
 12146     0923  087A               	movf	___lwmod@dividend+1,w
 12147     0924  00F8               	movwf	?___lwmod+1
 12148     0925  0879               	movf	___lwmod@dividend,w
 12149     0926  00F7               	movwf	?___lwmod
 12150     0927                     i1l1384:
 12151     0927  0008               	return
 12152     0928                     __end_of___lwmod:
 12153                           
 12154                           	psect	text38
 12155     095E                     __ptext38:	
 12156 ;; *************** function ___lwdiv *****************
 12157 ;; Defined at:
 12158 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;  divisor         2    0[COMMON] unsigned int 
 12161 ;;  dividend        2    2[COMMON] unsigned int 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  quotient        2    4[COMMON] unsigned int 
 12164 ;;  counter         1    6[COMMON] unsigned char 
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  2    0[COMMON] unsigned int 
 12167 ;; Registers used:
 12168 ;;		wreg, status,2, status,0
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12175 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12177 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12178 ;;Total ram usage:        7 bytes
 12179 ;; Hardware stack levels used: 1
 12180 ;; This function calls:
 12181 ;;		Nothing
 12182 ;; This function is called by:
 12183 ;;		_control_led_and_7segment_FOR_MODE_FREQUENCY
 12184 ;;		_control_led_and_7segment_FOR_MODE_ON_DELAY
 12185 ;;		_control_led_and_7segment_FOR_MODE_OFF_DELAY
 12186 ;;		_vfpfcnvrt
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190     095E                     ___lwdiv:	
 12191                           ;psect for function ___lwdiv
 12192                           
 12193     095E                     i1l3689:	
 12194                           ;incstack = 0
 12195                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12196                           
 12197     095E  01F4               	clrf	___lwdiv@quotient
 12198     095F  01F5               	clrf	___lwdiv@quotient+1
 12199     0960                     i1l3691:
 12200     0960  0870               	movf	___lwdiv@divisor,w
 12201     0961  0471               	iorwf	___lwdiv@divisor+1,w
 12202     0962  1903               	btfsc	3,2
 12203     0963  2965               	goto	u225_21
 12204     0964  2966               	goto	u225_20
 12205     0965                     u225_21:
 12206     0965  2993               	goto	i1l3711
 12207     0966                     u225_20:
 12208     0966                     i1l3693:
 12209     0966  3001               	movlw	1
 12210     0967  00F6               	movwf	___lwdiv@counter
 12211     0968  2970               	goto	i1l3699
 12212     0969                     i1l3695:
 12213     0969  3001               	movlw	1
 12214     096A                     u226_25:
 12215     096A  35F0               	lslf	___lwdiv@divisor,f
 12216     096B  0DF1               	rlf	___lwdiv@divisor+1,f
 12217     096C  0B89               	decfsz	9,f
 12218     096D  296A               	goto	u226_25
 12219     096E                     i1l3697:
 12220     096E  3001               	movlw	1
 12221     096F  07F6               	addwf	___lwdiv@counter,f
 12222     0970                     i1l3699:
 12223     0970  1FF1               	btfss	___lwdiv@divisor+1,7
 12224     0971  2973               	goto	u227_21
 12225     0972  2974               	goto	u227_20
 12226     0973                     u227_21:
 12227     0973  2969               	goto	i1l3695
 12228     0974                     u227_20:
 12229     0974                     i1l3701:
 12230     0974  3001               	movlw	1
 12231     0975                     u228_25:
 12232     0975  35F4               	lslf	___lwdiv@quotient,f
 12233     0976  0DF5               	rlf	___lwdiv@quotient+1,f
 12234     0977  0B89               	decfsz	9,f
 12235     0978  2975               	goto	u228_25
 12236     0979  0871               	movf	___lwdiv@divisor+1,w
 12237     097A  0273               	subwf	___lwdiv@dividend+1,w
 12238     097B  1D03               	skipz
 12239     097C  297F               	goto	u229_25
 12240     097D  0870               	movf	___lwdiv@divisor,w
 12241     097E  0272               	subwf	___lwdiv@dividend,w
 12242     097F                     u229_25:
 12243     097F  1C03               	skipc
 12244     0980  2982               	goto	u229_21
 12245     0981  2983               	goto	u229_20
 12246     0982                     u229_21:
 12247     0982  2988               	goto	i1l3707
 12248     0983                     u229_20:
 12249     0983                     i1l3703:
 12250     0983  0870               	movf	___lwdiv@divisor,w
 12251     0984  02F2               	subwf	___lwdiv@dividend,f
 12252     0985  0871               	movf	___lwdiv@divisor+1,w
 12253     0986  3BF3               	subwfb	___lwdiv@dividend+1,f
 12254     0987                     i1l3705:
 12255     0987  1474               	bsf	___lwdiv@quotient,0
 12256     0988                     i1l3707:
 12257     0988  3001               	movlw	1
 12258     0989                     u230_25:
 12259     0989  36F1               	lsrf	___lwdiv@divisor+1,f
 12260     098A  0CF0               	rrf	___lwdiv@divisor,f
 12261     098B  0B89               	decfsz	9,f
 12262     098C  2989               	goto	u230_25
 12263     098D                     i1l3709:
 12264     098D  3001               	movlw	1
 12265     098E  02F6               	subwf	___lwdiv@counter,f
 12266     098F  1D03               	btfss	3,2
 12267     0990  2992               	goto	u231_21
 12268     0991  2993               	goto	u231_20
 12269     0992                     u231_21:
 12270     0992  2974               	goto	i1l3701
 12271     0993                     u231_20:
 12272     0993                     i1l3711:
 12273     0993  0875               	movf	___lwdiv@quotient+1,w
 12274     0994  00F1               	movwf	?___lwdiv+1
 12275     0995  0874               	movf	___lwdiv@quotient,w
 12276     0996  00F0               	movwf	?___lwdiv
 12277     0997                     i1l1374:
 12278     0997  0008               	return
 12279     0998                     __end_of___lwdiv:
 12280                           
 12281                           	psect	text39
 12282     1777                     __ptext39:	
 12283 ;; *************** function _UART_Write_Text *****************
 12284 ;; Defined at:
 12285 ;;		line 1297 in file "main.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  text            2    2[COMMON] PTR unsigned char 
 12288 ;;		 -> buffer(200), 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12304 ;;Total ram usage:        2 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; Hardware stack levels required when called: 1
 12307 ;; This function calls:
 12308 ;;		_EUSART1_Write
 12309 ;; This function is called by:
 12310 ;;		_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314     1777                     _UART_Write_Text:	
 12315                           ;psect for function _UART_Write_Text
 12316                           
 12317     1777                     i1l3819:	
 12318                           ;incstack = 0
 12319                           ; Regs used in _UART_Write_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12320                           
 12321                           
 12322                           ;main.c: 1298:     while (*text != '\0') {
 12323     1777  2F85               	goto	i1l3825
 12324     1778                     i1l3821:
 12325                           
 12326                           ;main.c: 1299:         EUSART1_Write(*text);
 12327     1778  0872               	movf	UART_Write_Text@text,w
 12328     1779  0086               	movwf	6
 12329     177A  0873               	movf	UART_Write_Text@text+1,w
 12330     177B  0087               	movwf	7
 12331     177C  0801               	movf	1,w
 12332     177D  00F0               	movwf	EUSART1_Write@txData
 12333     177E  3188  2007  3197   	fcall	_EUSART1_Write
 12334     1781                     i1l3823:
 12335                           
 12336                           ;main.c: 1300:         text++;
 12337     1781  3001               	movlw	1
 12338     1782  07F2               	addwf	UART_Write_Text@text,f
 12339     1783  3000               	movlw	0
 12340     1784  3DF3               	addwfc	UART_Write_Text@text+1,f
 12341     1785                     i1l3825:
 12342                           
 12343                           ;main.c: 1298:     while (*text != '\0') {
 12344     1785  0872               	movf	UART_Write_Text@text,w
 12345     1786  0086               	movwf	6
 12346     1787  0873               	movf	UART_Write_Text@text+1,w
 12347     1788  0087               	movwf	7
 12348     1789  0801               	movf	1,w
 12349     178A  1D03               	btfss	3,2
 12350     178B  2F8D               	goto	u248_21
 12351     178C  2F8E               	goto	u248_20
 12352     178D                     u248_21:
 12353     178D  2F78               	goto	i1l3821
 12354     178E                     u248_20:
 12355     178E                     i1l1004:
 12356     178E  0008               	return
 12357     178F                     __end_of_UART_Write_Text:
 12358                           
 12359                           	psect	text40
 12360     0807                     __ptext40:	
 12361 ;; *************** function _EUSART1_Write *****************
 12362 ;; Defined at:
 12363 ;;		line 345 in file "mcc_generated_files/uart/src/eusart1.c"
 12364 ;; Parameters:    Size  Location     Type
 12365 ;;  txData          1    0[COMMON] unsigned char 
 12366 ;; Auto vars:     Size  Location     Type
 12367 ;;  tempTxHead      1    1[COMMON] unsigned char 
 12368 ;; Return value:  Size  Location     Type
 12369 ;;                  1    wreg      void 
 12370 ;; Registers used:
 12371 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12372 ;; Tracked objects:
 12373 ;;		On entry : 0/0
 12374 ;;		On exit  : 0/0
 12375 ;;		Unchanged: 0/0
 12376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12381 ;;Total ram usage:        2 bytes
 12382 ;; Hardware stack levels used: 1
 12383 ;; This function calls:
 12384 ;;		Nothing
 12385 ;; This function is called by:
 12386 ;;		_putch
 12387 ;;		_control_led_and_7segment_FOR_MODE_VOLTAGE
 12388 ;;		_control_led_and_7segment_FOR_MODE_FREQUENCY
 12389 ;;		_control_led_and_7segment_FOR_MODE_ON_DELAY
 12390 ;;		_control_led_and_7segment_FOR_MODE_OFF_DELAY
 12391 ;;		_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
 12392 ;;		_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
 12393 ;;		_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER
 12394 ;;		_UART_Write_Text
 12395 ;; This function uses a non-reentrant model
 12396 ;;
 12397                           
 12398     0807                     _EUSART1_Write:	
 12399                           ;psect for function _EUSART1_Write
 12400                           
 12401     0807                     i1l3665:	
 12402                           ;incstack = 0
 12403                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12404                           
 12405                           
 12406                           ;mcc_generated_files/uart/src/eusart1.c: 345: void EUSART1_Write(uint8_t txData);mcc_gen
      +                          erated_files/uart/src/eusart1.c: 346: {;mcc_generated_files/uart/src/eusart1.c: 347:    
      +                           uint8_t tempTxHead;;mcc_generated_files/uart/src/eusart1.c: 349:     if(0 == PIE3bits.T
      +                          X1IE)
 12407     0807  014E               	movlb	14	; select bank14
 12408     0808  1A19               	btfsc	25,4	;volatile
 12409     0809  280B               	goto	u222_21
 12410     080A  280C               	goto	u222_20
 12411     080B                     u222_21:
 12412     080B  2810               	goto	i1l3669
 12413     080C                     u222_20:
 12414     080C                     i1l3667:
 12415                           
 12416                           ;mcc_generated_files/uart/src/eusart1.c: 350:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 351:         TX1REG = txData;
 12417     080C  0870               	movf	EUSART1_Write@txData,w
 12418     080D  0142               	movlb	2	; select bank2
 12419     080E  009A               	movwf	26	;volatile
 12420                           
 12421                           ;mcc_generated_files/uart/src/eusart1.c: 352:     }
 12422     080F  2827               	goto	i1l431
 12423     0810                     i1l3669:
 12424     0810  0140               	movlb	0	; select bank0
 12425     0811  0865               	movf	_eusart1TxBufferRemaining,w	;volatile
 12426     0812  1903               	btfsc	3,2
 12427     0813  2815               	goto	u223_21
 12428     0814  2816               	goto	u223_20
 12429     0815                     u223_21:
 12430     0815  2827               	goto	i1l431
 12431     0816                     u223_20:
 12432     0816                     i1l3671:
 12433                           
 12434                           ;mcc_generated_files/uart/src/eusart1.c: 354:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 355:        eusart1TxBuffer[eusart1TxHead] = txData;
 12435     0816  0867               	movf	_eusart1TxHead,w
 12436     0817  3EA0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 12437     0818  0086               	movwf	6
 12438     0819  0187               	clrf	7
 12439     081A  0870               	movf	EUSART1_Write@txData,w
 12440     081B  0081               	movwf	1
 12441     081C                     i1l3673:
 12442                           
 12443                           ;mcc_generated_files/uart/src/eusart1.c: 356:        tempTxHead = (eusart1TxHead + 1U) &
      +                           ((8U) - 1U);
 12444     081C  0867               	movf	_eusart1TxHead,w	;volatile
 12445     081D  3E01               	addlw	1
 12446     081E  3907               	andlw	7
 12447     081F  00F1               	movwf	EUSART1_Write@tempTxHead
 12448     0820                     i1l3675:
 12449                           
 12450                           ;mcc_generated_files/uart/src/eusart1.c: 358:        eusart1TxHead = tempTxHead;
 12451     0820  0871               	movf	EUSART1_Write@tempTxHead,w
 12452     0821  00E7               	movwf	_eusart1TxHead	;volatile
 12453     0822                     i1l3677:
 12454                           
 12455                           ;mcc_generated_files/uart/src/eusart1.c: 359:        PIE3bits.TX1IE = 0;
 12456     0822  014E               	movlb	14	; select bank14
 12457     0823  1219               	bcf	25,4	;volatile
 12458     0824                     i1l3679:
 12459                           
 12460                           ;mcc_generated_files/uart/src/eusart1.c: 360:        eusart1TxBufferRemaining--;
 12461     0824  3001               	movlw	1
 12462     0825  0140               	movlb	0	; select bank0
 12463     0826  02E5               	subwf	_eusart1TxBufferRemaining,f	;volatile
 12464     0827                     i1l431:	
 12465                           ;mcc_generated_files/uart/src/eusart1.c: 361:     }
 12466                           
 12467                           
 12468                           ;mcc_generated_files/uart/src/eusart1.c: 366:     PIE3bits.TX1IE = 1;
 12469     0827  014E               	movlb	14	; select bank14
 12470     0828  1619               	bsf	25,4	;volatile
 12471     0829                     i1l434:
 12472     0829  0008               	return
 12473     082A                     __end_of_EUSART1_Write:
 12474                           
 12475                           	psect	text41
 12476     17E1                     __ptext41:	
 12477 ;; *************** function ___wmul *****************
 12478 ;; Defined at:
 12479 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;  multiplier      2    0[COMMON] unsigned int 
 12482 ;;  multiplicand    2    2[COMMON] unsigned int 
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;  product         2    4[COMMON] unsigned int 
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  2    0[COMMON] unsigned int 
 12487 ;; Registers used:
 12488 ;;		wreg, status,2, status,0
 12489 ;; Tracked objects:
 12490 ;;		On entry : 0/0
 12491 ;;		On exit  : 0/0
 12492 ;;		Unchanged: 0/0
 12493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12498 ;;Total ram usage:        6 bytes
 12499 ;; Hardware stack levels used: 1
 12500 ;; This function calls:
 12501 ;;		Nothing
 12502 ;; This function is called by:
 12503 ;;		_ISR
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507     17E1                     ___wmul:	
 12508                           ;psect for function ___wmul
 12509                           
 12510     17E1                     i1l4973:	
 12511                           ;incstack = 0
 12512                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12513                           
 12514     17E1  01F4               	clrf	___wmul@product
 12515     17E2  01F5               	clrf	___wmul@product+1
 12516     17E3                     i1l4975:
 12517     17E3  1C70               	btfss	___wmul@multiplier,0
 12518     17E4  2FE6               	goto	u356_21
 12519     17E5  2FE7               	goto	u356_20
 12520     17E6                     u356_21:
 12521     17E6  2FEB               	goto	i1l1094
 12522     17E7                     u356_20:
 12523     17E7                     i1l4977:
 12524     17E7  0872               	movf	___wmul@multiplicand,w
 12525     17E8  07F4               	addwf	___wmul@product,f
 12526     17E9  0873               	movf	___wmul@multiplicand+1,w
 12527     17EA  3DF5               	addwfc	___wmul@product+1,f
 12528     17EB                     i1l1094:
 12529     17EB  3001               	movlw	1
 12530     17EC                     u357_25:
 12531     17EC  35F2               	lslf	___wmul@multiplicand,f
 12532     17ED  0DF3               	rlf	___wmul@multiplicand+1,f
 12533     17EE  0B89               	decfsz	9,f
 12534     17EF  2FEC               	goto	u357_25
 12535     17F0                     i1l4979:
 12536     17F0  3001               	movlw	1
 12537     17F1                     u358_25:
 12538     17F1  36F1               	lsrf	___wmul@multiplier+1,f
 12539     17F2  0CF0               	rrf	___wmul@multiplier,f
 12540     17F3  0B89               	decfsz	9,f
 12541     17F4  2FF1               	goto	u358_25
 12542     17F5                     i1l4981:
 12543     17F5  0870               	movf	___wmul@multiplier,w
 12544     17F6  0471               	iorwf	___wmul@multiplier+1,w
 12545     17F7  1D03               	btfss	3,2
 12546     17F8  2FFA               	goto	u359_21
 12547     17F9  2FFB               	goto	u359_20
 12548     17FA                     u359_21:
 12549     17FA  2FE3               	goto	i1l4975
 12550     17FB                     u359_20:
 12551     17FB                     i1l4983:
 12552     17FB  0875               	movf	___wmul@product+1,w
 12553     17FC  00F1               	movwf	?___wmul+1
 12554     17FD  0874               	movf	___wmul@product,w
 12555     17FE  00F0               	movwf	?___wmul
 12556     17FF                     i1l1096:
 12557     17FF  0008               	return
 12558     1800                     __end_of___wmul:
 12559                           
 12560                           	psect	text42
 12561     16DE                     __ptext42:	
 12562 ;; *************** function _NVM_ISR *****************
 12563 ;; Defined at:
 12564 ;;		line 287 in file "mcc_generated_files/nvm/src/nvm.c"
 12565 ;; Parameters:    Size  Location     Type
 12566 ;;		None
 12567 ;; Auto vars:     Size  Location     Type
 12568 ;;		None
 12569 ;; Return value:  Size  Location     Type
 12570 ;;                  1    wreg      void 
 12571 ;; Registers used:
 12572 ;;		None
 12573 ;; Tracked objects:
 12574 ;;		On entry : 0/0
 12575 ;;		On exit  : 0/0
 12576 ;;		Unchanged: 0/0
 12577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12582 ;;Total ram usage:        0 bytes
 12583 ;; Hardware stack levels used: 1
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_ISR
 12588 ;; This function uses a non-reentrant model
 12589 ;;
 12590                           
 12591     16DE                     _NVM_ISR:	
 12592                           ;psect for function _NVM_ISR
 12593                           
 12594     16DE                     i1l4785:	
 12595                           ;incstack = 0
 12596                           ; Regs used in _NVM_ISR: []
 12597                           
 12598                           
 12599                           ;mcc_generated_files/nvm/src/nvm.c: 290:     PIR7bits.NVMIF = 0;
 12600     16DE  014E               	movlb	14	; select bank14
 12601     16DF  1293               	bcf	19,5	;volatile
 12602     16E0                     i1l90:
 12603     16E0  0008               	return
 12604     16E1                     __end_of_NVM_ISR:
 12605                           
 12606                           	psect	text43
 12607     17A8                     __ptext43:	
 12608 ;; *************** function _EUSART1_TransmitISR *****************
 12609 ;; Defined at:
 12610 ;;		line 369 in file "mcc_generated_files/uart/src/eusart1.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;		None
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;  tempTxTail      1    0[COMMON] unsigned char 
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      void 
 12617 ;; Registers used:
 12618 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12628 ;;Total ram usage:        1 bytes
 12629 ;; Hardware stack levels used: 1
 12630 ;; This function calls:
 12631 ;;		Nothing
 12632 ;; This function is called by:
 12633 ;;		_EUSART1_Initialize
 12634 ;;		_ISR
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638     17A8                     _EUSART1_TransmitISR:	
 12639                           ;psect for function _EUSART1_TransmitISR
 12640                           
 12641     17A8                     i1l4855:	
 12642                           ;incstack = 0
 12643                           ; Regs used in _EUSART1_TransmitISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 12644                           
 12645                           
 12646                           ;mcc_generated_files/uart/src/eusart1.c: 371:     uint8_t tempTxTail;;mcc_generated_file
      +                          s/uart/src/eusart1.c: 373:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRemaining)
 12647     17A8  3008               	movlw	8
 12648     17A9  0140               	movlb	0	; select bank0
 12649     17AA  0265               	subwf	_eusart1TxBufferRemaining,w	;volatile
 12650     17AB  1803               	skipnc
 12651     17AC  2FAE               	goto	u342_21
 12652     17AD  2FAF               	goto	u342_20
 12653     17AE                     u342_21:
 12654     17AE  2FC0               	goto	i1l437
 12655     17AF                     u342_20:
 12656     17AF                     i1l4857:
 12657                           
 12658                           ;mcc_generated_files/uart/src/eusart1.c: 374:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 375:        TX1REG = eusart1TxBuffer[eusart1TxTail];
 12659     17AF  0866               	movf	_eusart1TxTail,w
 12660     17B0  3EA0               	addlw	(low (_eusart1TxBuffer| 0))& (0+255)
 12661     17B1  0086               	movwf	6
 12662     17B2  0187               	clrf	7
 12663     17B3  0801               	movf	1,w
 12664     17B4  0142               	movlb	2	; select bank2
 12665     17B5  009A               	movwf	26	;volatile
 12666     17B6                     i1l4859:
 12667                           
 12668                           ;mcc_generated_files/uart/src/eusart1.c: 376:        tempTxTail = (eusart1TxTail + 1U) &
      +                           ((8U) - 1U);
 12669     17B6  0140               	movlb	0	; select bank0
 12670     17B7  0866               	movf	_eusart1TxTail,w	;volatile
 12671     17B8  3E01               	addlw	1
 12672     17B9  3907               	andlw	7
 12673     17BA  00F0               	movwf	EUSART1_TransmitISR@tempTxTail
 12674     17BB                     i1l4861:
 12675                           
 12676                           ;mcc_generated_files/uart/src/eusart1.c: 378:        eusart1TxTail = tempTxTail;
 12677     17BB  0870               	movf	EUSART1_TransmitISR@tempTxTail,w
 12678     17BC  00E6               	movwf	_eusart1TxTail	;volatile
 12679     17BD                     i1l4863:
 12680                           
 12681                           ;mcc_generated_files/uart/src/eusart1.c: 379:        eusart1TxBufferRemaining++;
 12682     17BD  3001               	movlw	1
 12683     17BE  07E5               	addwf	_eusart1TxBufferRemaining,f	;volatile
 12684                           
 12685                           ;mcc_generated_files/uart/src/eusart1.c: 380:     }
 12686     17BF  2FC2               	goto	i1l440
 12687     17C0                     i1l437:	
 12688                           ;mcc_generated_files/uart/src/eusart1.c: 381:     else
 12689                           
 12690                           
 12691                           ;mcc_generated_files/uart/src/eusart1.c: 382:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 383:         PIE3bits.TX1IE = 0;
 12692     17C0  014E               	movlb	14	; select bank14
 12693     17C1  1219               	bcf	25,4	;volatile
 12694     17C2                     i1l440:
 12695     17C2  0008               	return
 12696     17C3                     __end_of_EUSART1_TransmitISR:
 12697                           
 12698                           	psect	text44
 12699     0AD7                     __ptext44:	
 12700 ;; *************** function _EUSART1_ReceiveISR *****************
 12701 ;; Defined at:
 12702 ;;		line 300 in file "mcc_generated_files/uart/src/eusart1.c"
 12703 ;; Parameters:    Size  Location     Type
 12704 ;;		None
 12705 ;; Auto vars:     Size  Location     Type
 12706 ;;  tempRxHead      1    1[COMMON] unsigned char 
 12707 ;;  regValue        1    0[COMMON] unsigned char 
 12708 ;; Return value:  Size  Location     Type
 12709 ;;                  1    wreg      void 
 12710 ;; Registers used:
 12711 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12712 ;; Tracked objects:
 12713 ;;		On entry : 0/0
 12714 ;;		On exit  : 0/0
 12715 ;;		Unchanged: 0/0
 12716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12721 ;;Total ram usage:        2 bytes
 12722 ;; Hardware stack levels used: 1
 12723 ;; Hardware stack levels required when called: 1
 12724 ;; This function calls:
 12725 ;;		NULL
 12726 ;;		_EUSART1_DefaultFramingErrorCallback
 12727 ;;		_EUSART1_DefaultOverrunErrorCallback
 12728 ;; This function is called by:
 12729 ;;		_EUSART1_Initialize
 12730 ;;		_ISR
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734     0AD7                     _EUSART1_ReceiveISR:	
 12735                           ;psect for function _EUSART1_ReceiveISR
 12736                           
 12737     0AD7                     i1l4821:	
 12738                           ;incstack = 0
 12739                           ; Regs used in _EUSART1_ReceiveISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12740                           
 12741                           
 12742                           ;mcc_generated_files/uart/src/eusart1.c: 302:     uint8_t regValue;;mcc_generated_files/
      +                          uart/src/eusart1.c: 303:  uint8_t tempRxHead;;mcc_generated_files/uart/src/eusart1.c: 30
      +                          6:     eusart1RxStatusBuffer[eusart1RxHead].status = 0;
 12743     0AD7  0140               	movlb	0	; select bank0
 12744     0AD8  3564               	lslf	_eusart1RxHead,w	;volatile
 12745     0AD9  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12746     0ADA  0086               	movwf	6
 12747     0ADB  3001               	movlw	1	; select bank2/3
 12748     0ADC  0087               	movwf	7
 12749     0ADD  3000               	movlw	0
 12750     0ADE  3FC0               	movwi [0]fsr1
 12751     0ADF  3FC1               	movwi [1]fsr1
 12752     0AE0                     i1l4823:
 12753                           
 12754                           ;mcc_generated_files/uart/src/eusart1.c: 308:     if(1 == RC1STAbits.OERR)
 12755     0AE0  0142               	movlb	2	; select bank2
 12756     0AE1  1C9D               	btfss	29,1	;volatile
 12757     0AE2  2AE4               	goto	u337_21
 12758     0AE3  2AE5               	goto	u337_20
 12759     0AE4                     u337_21:
 12760     0AE4  2AF8               	goto	i1l4831
 12761     0AE5                     u337_20:
 12762     0AE5                     i1l4825:
 12763                           
 12764                           ;mcc_generated_files/uart/src/eusart1.c: 309:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 310:         eusart1RxStatusBuffer[eusart1RxHead].oerr = 1;
 12765     0AE5  0140               	movlb	0	; select bank0
 12766     0AE6  3564               	lslf	_eusart1RxHead,w	;volatile
 12767     0AE7  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12768     0AE8  0086               	movwf	6
 12769     0AE9  3001               	movlw	1	; select bank2/3
 12770     0AEA  0087               	movwf	7
 12771     0AEB  1501               	bsf	1,2
 12772     0AEC                     i1l4827:
 12773                           
 12774                           ;mcc_generated_files/uart/src/eusart1.c: 311:         if(((void*)0) != EUSART1_OverrunEr
      +                          rorHandler)
 12775     0AEC  0141               	movlb	1	; select bank1
 12776     0AED  0846               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 12777     0AEE  0447               	iorwf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 12778     0AEF  1903               	btfsc	3,2
 12779     0AF0  2AF2               	goto	u338_21
 12780     0AF1  2AF3               	goto	u338_20
 12781     0AF2                     u338_21:
 12782     0AF2  2AF8               	goto	i1l4831
 12783     0AF3                     u338_20:
 12784     0AF3                     i1l4829:
 12785                           
 12786                           ;mcc_generated_files/uart/src/eusart1.c: 312:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 313:             EUSART1_OverrunErrorHandler();
 12787     0AF3  0847               	movf	(_EUSART1_OverrunErrorHandler+1)^(0+128),w
 12788     0AF4  008A               	movwf	10
 12789     0AF5  0846               	movf	_EUSART1_OverrunErrorHandler^(0+128),w
 12790     0AF6  000A               	callw
 12791     0AF7  318A               	pagesel	$
 12792     0AF8                     i1l4831:
 12793                           
 12794                           ;mcc_generated_files/uart/src/eusart1.c: 316:     if(1 == RC1STAbits.FERR)
 12795     0AF8  0142               	movlb	2	; select bank2
 12796     0AF9  1D1D               	btfss	29,2	;volatile
 12797     0AFA  2AFC               	goto	u339_21
 12798     0AFB  2AFD               	goto	u339_20
 12799     0AFC                     u339_21:
 12800     0AFC  2B10               	goto	i1l4839
 12801     0AFD                     u339_20:
 12802     0AFD                     i1l4833:
 12803                           
 12804                           ;mcc_generated_files/uart/src/eusart1.c: 317:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 318:         eusart1RxStatusBuffer[eusart1RxHead].ferr = 1;
 12805     0AFD  0140               	movlb	0	; select bank0
 12806     0AFE  3564               	lslf	_eusart1RxHead,w	;volatile
 12807     0AFF  3E20               	addlw	(low (_eusart1RxStatusBuffer| (0+256)))& (0+255)
 12808     0B00  0086               	movwf	6
 12809     0B01  3001               	movlw	1	; select bank2/3
 12810     0B02  0087               	movwf	7
 12811     0B03  1481               	bsf	1,1
 12812     0B04                     i1l4835:
 12813                           
 12814                           ;mcc_generated_files/uart/src/eusart1.c: 319:         if(((void*)0) != EUSART1_FramingEr
      +                          rorHandler)
 12815     0B04  0141               	movlb	1	; select bank1
 12816     0B05  0848               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 12817     0B06  0449               	iorwf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 12818     0B07  1903               	btfsc	3,2
 12819     0B08  2B0A               	goto	u340_21
 12820     0B09  2B0B               	goto	u340_20
 12821     0B0A                     u340_21:
 12822     0B0A  2B10               	goto	i1l4839
 12823     0B0B                     u340_20:
 12824     0B0B                     i1l4837:
 12825                           
 12826                           ;mcc_generated_files/uart/src/eusart1.c: 320:         {;mcc_generated_files/uart/src/eus
      +                          art1.c: 321:             EUSART1_FramingErrorHandler();
 12827     0B0B  0849               	movf	(_EUSART1_FramingErrorHandler+1)^(0+128),w
 12828     0B0C  008A               	movwf	10
 12829     0B0D  0848               	movf	_EUSART1_FramingErrorHandler^(0+128),w
 12830     0B0E  000A               	callw
 12831     0B0F  318A               	pagesel	$
 12832     0B10                     i1l4839:
 12833                           
 12834                           ;mcc_generated_files/uart/src/eusart1.c: 325:     regValue = RC1REG;
 12835     0B10  0142               	movlb	2	; select bank2
 12836     0B11  0819               	movf	25,w	;volatile
 12837     0B12  00F0               	movwf	EUSART1_ReceiveISR@regValue
 12838     0B13                     i1l4841:
 12839                           
 12840                           ;mcc_generated_files/uart/src/eusart1.c: 327:     tempRxHead = (eusart1RxHead + 1U) & ((
      +                          8U) - 1U);
 12841     0B13  0140               	movlb	0	; select bank0
 12842     0B14  0864               	movf	_eusart1RxHead,w	;volatile
 12843     0B15  3E01               	addlw	1
 12844     0B16  3907               	andlw	7
 12845     0B17  00F1               	movwf	EUSART1_ReceiveISR@tempRxHead
 12846     0B18                     i1l4843:
 12847                           
 12848                           ;mcc_generated_files/uart/src/eusart1.c: 328:     if (tempRxHead == eusart1RxTail)
 12849     0B18  0871               	movf	EUSART1_ReceiveISR@tempRxHead,w
 12850     0B19  0663               	xorwf	_eusart1RxTail,w	;volatile
 12851     0B1A  1D03               	skipz
 12852     0B1B  2B1D               	goto	u341_21
 12853     0B1C  2B1E               	goto	u341_20
 12854     0B1D                     u341_21:
 12855     0B1D  2B1F               	goto	i1l4847
 12856     0B1E                     u341_20:
 12857     0B1E  2B2A               	goto	i1l427
 12858     0B1F                     i1l4847:
 12859                           
 12860                           ;mcc_generated_files/uart/src/eusart1.c: 333:     {;mcc_generated_files/uart/src/eusart1
      +                          .c: 334:         eusart1RxBuffer[eusart1RxHead] = regValue;
 12861     0B1F  0864               	movf	_eusart1RxHead,w
 12862     0B20  3EE6               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
 12863     0B21  0086               	movwf	6
 12864     0B22  3001               	movlw	1	; select bank3/4
 12865     0B23  0087               	movwf	7
 12866     0B24  0870               	movf	EUSART1_ReceiveISR@regValue,w
 12867     0B25  0081               	movwf	1
 12868     0B26                     i1l4849:
 12869                           
 12870                           ;mcc_generated_files/uart/src/eusart1.c: 335:   eusart1RxHead = tempRxHead;
 12871     0B26  0871               	movf	EUSART1_ReceiveISR@tempRxHead,w
 12872     0B27  00E4               	movwf	_eusart1RxHead	;volatile
 12873     0B28                     i1l4851:
 12874                           
 12875                           ;mcc_generated_files/uart/src/eusart1.c: 336:   eusart1RxCount++;
 12876     0B28  3001               	movlw	1
 12877     0B29  07E2               	addwf	_eusart1RxCount,f	;volatile
 12878     0B2A                     i1l427:
 12879     0B2A  0008               	return
 12880     0B2B                     __end_of_EUSART1_ReceiveISR:
 12881                           
 12882                           	psect	text45
 12883     16E7                     __ptext45:	
 12884 ;; *************** function _EUSART1_DefaultOverrunErrorCallback *****************
 12885 ;; Defined at:
 12886 ;;		line 415 in file "mcc_generated_files/uart/src/eusart1.c"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;		None
 12889 ;; Auto vars:     Size  Location     Type
 12890 ;;		None
 12891 ;; Return value:  Size  Location     Type
 12892 ;;                  1    wreg      void 
 12893 ;; Registers used:
 12894 ;;		None
 12895 ;; Tracked objects:
 12896 ;;		On entry : 0/0
 12897 ;;		On exit  : 0/0
 12898 ;;		Unchanged: 0/0
 12899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12904 ;;Total ram usage:        0 bytes
 12905 ;; Hardware stack levels used: 1
 12906 ;; This function calls:
 12907 ;;		Nothing
 12908 ;; This function is called by:
 12909 ;;		_EUSART1_Initialize
 12910 ;;		_EUSART1_ReceiveISR
 12911 ;; This function uses a non-reentrant model
 12912 ;;
 12913                           
 12914     16E7                     _EUSART1_DefaultOverrunErrorCallback:	
 12915                           ;psect for function _EUSART1_DefaultOverrunErrorCallback
 12916                           
 12917     16E7                     i1l4651:	
 12918                           ;incstack = 0
 12919                           ; Regs used in _EUSART1_DefaultOverrunErrorCallback: []
 12920                           
 12921                           
 12922                           ;mcc_generated_files/uart/src/eusart1.c: 418:     RC1STAbits.CREN = 0;
 12923     16E7  0142               	movlb	2	; select bank2
 12924     16E8  121D               	bcf	29,4	;volatile
 12925                           
 12926                           ;mcc_generated_files/uart/src/eusart1.c: 419:     RC1STAbits.CREN = 1;
 12927     16E9  161D               	bsf	29,4	;volatile
 12928     16EA                     i1l458:
 12929     16EA  0008               	return
 12930     16EB                     __end_of_EUSART1_DefaultOverrunErrorCallback:
 12931                           
 12932                           	psect	text46
 12933     0003                     __ptext46:	
 12934 ;; *************** function _EUSART1_DefaultFramingErrorCallback *****************
 12935 ;; Defined at:
 12936 ;;		line 410 in file "mcc_generated_files/uart/src/eusart1.c"
 12937 ;; Parameters:    Size  Location     Type
 12938 ;;		None
 12939 ;; Auto vars:     Size  Location     Type
 12940 ;;		None
 12941 ;; Return value:  Size  Location     Type
 12942 ;;                  1    wreg      void 
 12943 ;; Registers used:
 12944 ;;		None
 12945 ;; Tracked objects:
 12946 ;;		On entry : 0/0
 12947 ;;		On exit  : 0/0
 12948 ;;		Unchanged: 0/0
 12949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12954 ;;Total ram usage:        0 bytes
 12955 ;; Hardware stack levels used: 1
 12956 ;; This function calls:
 12957 ;;		Nothing
 12958 ;; This function is called by:
 12959 ;;		_EUSART1_Initialize
 12960 ;;		_EUSART1_ReceiveISR
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964     0003                     _EUSART1_DefaultFramingErrorCallback:	
 12965                           ;psect for function _EUSART1_DefaultFramingErrorCallback
 12966                           
 12967     0003                     i1l455:	
 12968                           ;incstack = 0
 12969                           ; Regs used in _EUSART1_DefaultFramingErrorCallback: []
 12970                           
 12971     0003  0008               	return
 12972     0004                     __end_of_EUSART1_DefaultFramingErrorCallback:
 12973     0003                     ___latbits      equ	3
 12974     007E                     btemp           set	126	;btemp
 12975     007E                     int$flags       set	126
 12976     007E                     wtemp0          set	126
 12977     2728                     __pbssBIGRAM    equ	10024
 12978                           
 12979                           	psect	config
 12980                           
 12981                           ;Config register CONFIG1 @ 0x8007
 12982                           ;	External Oscillator mode selection bits
 12983                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
 12984                           ;	Power-up default value for COSC bits
 12985                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
 12986                           ;	Clock Out Enable bit
 12987                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 12988                           ;	Clock Switch Enable bit
 12989                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 12990                           ;	Fail-Safe Clock Monitor Enable bit
 12991                           ;	FCMEN = ON, FSCM timer enabled
 12992     8007                     	org	32775
 12993     8007  3F8F               	dw	16271
 12994                           
 12995                           ;Config register CONFIG2 @ 0x8008
 12996                           ;	Master Clear Enable bit
 12997                           ;	MCLRE = ON, MCLR pin is Master Clear function
 12998                           ;	Power-up Timer Enable bit
 12999                           ;	PWRTE = 0x1, unprogrammed default
 13000                           ;	Low-Power BOR enable bit
 13001                           ;	LPBOREN = OFF, ULPBOR disabled
 13002                           ;	Brown-out reset enable bits
 13003                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 13004                           ;	Brown-out Reset Voltage Selection
 13005                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 13006                           ;	Zero-cross detect disable
 13007                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 13008                           ;	Peripheral Pin Select one-way control
 13009                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 13010                           ;	Stack Overflow/Underflow Reset Enable bit
 13011                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 13012     8008                     	org	32776
 13013     8008  3FFF               	dw	16383
 13014                           
 13015                           ;Config register CONFIG3 @ 0x8009
 13016                           ;	WDT Period Select bits
 13017                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13018                           ;	WDT operating mode
 13019                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 13020                           ;	WDT Window Select bits
 13021                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13022                           ;	WDT input clock selector
 13023                           ;	WDTCCS = SC, Software Control
 13024     8009                     	org	32777
 13025     8009  3F9F               	dw	16287
 13026                           
 13027                           ;Config register CONFIG4 @ 0x800A
 13028                           ;	Boot Block Size Selection bits
 13029                           ;	BBSIZE = BB512, 512 words boot block size
 13030                           ;	Boot Block Enable bit
 13031                           ;	BBEN = OFF, Boot Block disabled
 13032                           ;	SAF Enable bit
 13033                           ;	SAFEN = OFF, SAF disabled
 13034                           ;	Application Block Write Protection bit
 13035                           ;	WRTAPP = OFF, Application Block not write protected
 13036                           ;	Boot Block Write Protection bit
 13037                           ;	WRTB = OFF, Boot Block not write protected
 13038                           ;	Configuration Register Write Protection bit
 13039                           ;	WRTC = OFF, Configuration Register not write protected
 13040                           ;	Storage Area Flash Write Protection bit
 13041                           ;	WRTSAF = OFF, SAF not write protected
 13042                           ;	Low Voltage Programming Enable bit
 13043                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 13044     800A                     	org	32778
 13045     800A  3FFF               	dw	16383
 13046                           
 13047                           ;Config register CONFIG5 @ 0x800B
 13048                           ;	UserNVM Program memory code protection bit
 13049                           ;	CP = OFF, UserNVM code protection disabled
 13050     800B                     	org	32779
 13051     800B  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    84
    Data        11
    BSS         381
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     51      80
    BANK1            80      2      79
    BANK2            80      0      80
    BANK3            80      0      78
    BANK4            80      0      66
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           72      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    EUSART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), NULL(), 

    EUSART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), NULL(), 

    EUSART1_RxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_ReceiveISR(), NULL(), 

    EUSART1_TxCompleteInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitISR(), NULL(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BIGRAM[200]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BIGRAM[200]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), NULL(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    NVM_Callback	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2089$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BIGRAM[200]), 

    S2089$source	PTR const unsigned char  size(2) Largest target is 0

    S326$17$0	PTR FTN()void  size(2) Largest target is 0

    S326$18$0	PTR FTN()void  size(2) Largest target is 0

    S326$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorCallback(), 

    S326$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorCallback(), 

    S326$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S326$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    S326$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    S326$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S326$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S326$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S326$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S326$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    S326$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    S326$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S326$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    S326$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    S326$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    S326$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    S326$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    S326$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    S326$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S326$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    S326$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    S326$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    S326$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    S326$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S326$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_TxCompleteCallbackRegister(), 

    S326$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BIGRAM[200]), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> EUSART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> EUSART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_RxCompleteCallbackRegister(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART1_TxCompleteCallbackRegister(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART1_Write(), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BIGRAM[200]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _control_led_and_7segment_FOR_MODE_VOLTAGE->___awmod
    _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER->_EUSART1_Write
    _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY->___awmod
    ___awmod->___awdiv
    ___awdiv->___wmul
    _control_led_and_7segment_FOR_MODE_ON_DELAY->___lwmod
    _control_led_and_7segment_FOR_MODE_OFF_DELAY->___lwmod
    _control_led_and_7segment_FOR_MODE_FREQUENCY->___lwmod
    _vfpfcnvrt->___lwmod
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    ___lwmod->___lwdiv
    _UART_Write_Text->_EUSART1_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_updateMode
    _updateMode->_updateLEDs
    _updateLEDs->_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
    _control_led_and_7segment_FOR_MODE_VOLTAGE->___awmod
    _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY->___awmod
    ___awmod->___awdiv
    _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK1

    _INTERRUPT_Initialize->_INT_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_FramingErrorCallbackRegister
    _EUSART1_Initialize->_EUSART1_OverrunErrorCallbackRegister

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     203
                           _ADC_Init
                 _EUSART1_Initialize
                  _SYSTEM_Initialize
                       _setup_timer0
 ---------------------------------------------------------------------------------
 (1) _setup_timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     113
                   _CLOCK_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0      23
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      23
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0      90
_EUSART1_FramingErrorCallbackRegiste
_EUSART1_OverrunErrorCallbackRegiste
 ---------------------------------------------------------------------------------
 (3) _EUSART1_OverrunErrorCallbackRegister                 2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_FramingErrorCallbackRegister                 2     0      2      45
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0    5176
                                             47 BANK0      4     4      0
                                NULL *
                 _EUSART1_ReceiveISR *
                _EUSART1_TransmitISR *
                            _NVM_ISR
                            ___awdiv
                             ___wmul
                         _updateMode
 ---------------------------------------------------------------------------------
 (5) _updateMode                                           2     2      0    4669
                                             45 BANK0      2     2      0
                         _updateLEDs
 ---------------------------------------------------------------------------------
 (6) _updateLEDs                                           2     2      0    4669
                                             43 BANK0      2     2      0
_control_led_and_7segment_FOR_MODE_C
_control_led_and_7segment_FOR_MODE_C
_control_led_and_7segment_FOR_MODE_F
_control_led_and_7segment_FOR_MODE_N
_control_led_and_7segment_FOR_MODE_O
_control_led_and_7segment_FOR_MODE_O
_control_led_and_7segment_FOR_MODE_P
_control_led_and_7segment_FOR_MODE_S
_control_led_and_7segment_FOR_MODE_S
_control_led_and_7segment_FOR_MODE_S
_control_led_and_7segment_FOR_MODE_S
_control_led_and_7segment_FOR_MODE_S
_control_led_and_7segment_FOR_MODE_V
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_VOLTAGE            2     2      0     728
                                              8 BANK0      2     2      0
                      _EUSART1_Write
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER    1     1      0      94
                                              2 COMMON     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_SPEED_CONTROL      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_SPEED_A_B          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY   2     2      0     728
                                              8 BANK0      2     2      0
                      _EUSART1_Write
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     316
                                             10 COMMON     2     2      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     318
                                              6 COMMON     4     0      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_SENSOR_II          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_PHOTO_SENSOR       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_ON_DELAY           1     1      0     463
                                              0 BANK0      1     1      0
                      _EUSART1_Write
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_OFF_DELAY          1     1      0     463
                                              0 BANK0      1     1      0
                      _EUSART1_Write
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_NPN_SENSOR_I       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_FREQUENCY          1     1      0     463
                                              0 BANK0      1     1      0
                      _EUSART1_Write
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT     2     2      0    1730
                                             41 BANK0      2     2      0
                      _EUSART1_Write
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (8) _sprintf                                             20    14      6    1496
                                             23 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (9) _vfprintf                                             8     3      5    1295
                                             15 BANK0      8     3      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (10) _vfpfcnvrt                                          16    12      4    1170
                                              0 BANK0     15    11      4
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (11) _fputc                                               9     5      4     353
                                              3 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (12) _putch                                               1     1      0     123
                                              2 COMMON     1     1      0
                  _EUSART1_IsTxReady
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (13) _EUSART1_IsTxReady                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              5     1      4     189
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              7     3      4     180
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (8) _UART_Write_Text                                      2     0      2     140
                                              2 COMMON     2     0      2
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (8) _EUSART1_Write                                        2     1      1      94
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4      98
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _NVM_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_TransmitISR                                  1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_ReceiveISR                                   2     2      0      68
                                              0 COMMON     2     2      0
                                NULL *
_EUSART1_DefaultFramingErrorCallback *
_EUSART1_DefaultOverrunErrorCallback *
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorCallback                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _EUSART1_Initialize
     _EUSART1_FramingErrorCallbackRegister
     _EUSART1_OverrunErrorCallbackRegister
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _EUSART1_Initialize
     _INTERRUPT_Initialize
       _INT_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
   _setup_timer0

 _ISR (ROOT)
   NULL(Fake) *
   _EUSART1_ReceiveISR *
     NULL(Fake) *
     _EUSART1_DefaultFramingErrorCallback *
     _EUSART1_DefaultOverrunErrorCallback *
   _EUSART1_TransmitISR *
   _NVM_ISR *
   ___awdiv *
     ___wmul (ARG)
   ___wmul *
   _updateMode *
     _updateLEDs
       _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT
         _EUSART1_Write
         _UART_Write_Text
           _EUSART1_Write
         _sprintf
           _vfprintf
             _vfpfcnvrt
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               _fputc
                 _putch
                   _EUSART1_IsTxReady
                   _EUSART1_Write
       _control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT
       _control_led_and_7segment_FOR_MODE_FREQUENCY
         _EUSART1_Write
         ___lwdiv
         ___lwmod
       _control_led_and_7segment_FOR_MODE_NPN_SENSOR_I
       _control_led_and_7segment_FOR_MODE_OFF_DELAY
         _EUSART1_Write
         ___lwdiv
         ___lwmod
       _control_led_and_7segment_FOR_MODE_ON_DELAY
         _EUSART1_Write
         ___lwdiv
         ___lwmod
       _control_led_and_7segment_FOR_MODE_PHOTO_SENSOR
       _control_led_and_7segment_FOR_MODE_SENSOR_II
       _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY
         _EUSART1_Write
         ___awdiv
         ___awmod
           ___awdiv (ARG)
       _control_led_and_7segment_FOR_MODE_SPEED_A_B
       _control_led_and_7segment_FOR_MODE_SPEED_CONTROL
       _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER
         _EUSART1_Write
       _control_led_and_7segment_FOR_MODE_VOLTAGE
         _EUSART1_Write
         ___awdiv
         ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            80      0       0      0.0%
BITBANK5            80      0       0      0.0%
BITBANK6            80      0       0      0.0%
BITBANK7            80      0       0      0.0%
BITBANK8            80      0       0      0.0%
BITBANK9            80      0       0      0.0%
BITBANK10           80      0       0      0.0%
BITBANK11           80      0       0      0.0%
BITBANK12           80      0       0      0.0%
BITBANK13           80      0       0      0.0%
BITBANK14           80      0       0      0.0%
BITBANK15           80      0       0      0.0%
BITBANK16           80      0       0      0.0%
BITBANK17           80      0       0      0.0%
BITBANK18           80      0       0      0.0%
BITBANK19           80      0       0      0.0%
BITBANK20           80      0       0      0.0%
BITBANK21           80      0       0      0.0%
BITBANK22           80      0       0      0.0%
BITBANK23           80      0       0      0.0%
BITBANK24           80      0       0      0.0%
BITBANK25           32      0       0      0.0%
BIGRAM            2032      0       0      0.0%
COMMON              14     12      14    100.0%
BANK0               80     51      80    100.0%
BANK1               80      2      79     98.8%
BANK2               80      0      80    100.0%
BANK3               80      0      78     97.5%
BANK4               80      0      66     82.5%
BANK5               80      0      64     80.0%
BANK6               80      0       0      0.0%
BANK7               80      0       0      0.0%
BANK8               80      0       0      0.0%
BANK9               80      0       0      0.0%
BANK10              80      0       0      0.0%
BANK11              80      0       0      0.0%
BANK12              80      0       0      0.0%
BANK13              80      0       0      0.0%
BANK14              80      0       0      0.0%
BANK15              80      0       0      0.0%
BANK16              80      0       0      0.0%
BANK17              80      0       0      0.0%
BANK18              80      0       0      0.0%
BANK19              80      0       0      0.0%
BANK20              80      0       0      0.0%
BANK21              80      0       0      0.0%
BANK22              72      0       0      0.0%
BANK23               0      0       0      0.0%
BANK24               0      0       0      0.0%
BANK25               0      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     461      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Jun 27 13:55:18 2025

                                  _eusart1TxBufferRemaining 0065  
                                                        l42 16E3  
                                                        l29 0806  
                                              ___awdiv@sign 0021  
                                       _SoftStart_Completed 0060  
                                       ___wmul@multiplicand 0072  
                                  _soft_start_step_interval 006E  
                                                       l106 174C  
                                                       l119 1715  
                                                       l145 170A  
                                                       l129 16F0  
                                                       l246 09E3  
                                                       l348 095D  
                                                       l462 1721  
                                                       l466 172D  
                                                       l745 1776  
                                                       l748 1760  
                                                       _RE1 0081  
                                                       _RB7 006F  
                                                       _ISR 0004  
                                              ___awmod@sign 007B  
                                                       wreg 0009  
                                              _BAUD1CONbits 011F  
                                                      ?_ISR 0070  
                                                      l1023 0CA5  
                                                      l1024 0CA5  
                                                      l4601 09CB  
                                                      l5401 0C61  
                                                      l4611 0928  
                                                      l4603 09CD  
                                                      l5411 0C68  
                                                      l5403 0C62  
                                                      l4621 093A  
                                                      l4613 092A  
                                                      l4605 09CF  
                                                      l5421 0C70  
                                                      l5413 0C6A  
                                                      l5405 0C64  
                                                      l4631 0950  
                                                      l4623 093C  
                                                      l4615 092F  
                                                      l3911 16EB  
                                                      l4607 09D1  
                                                      l5431 0C77  
                                                      l5423 0C72  
                                                      l5415 0C6C  
                                                      l5407 0C65  
                                                      l4561 1705  
                                                      l3913 1716  
                                                      l4641 0959  
                                                      l4633 0953  
                                                      l4625 093E  
                                                      l4617 0936  
                                                      l4553 0800  
                                                      l4609 09D4  
                                                      l5441 0C7F  
                                                      l5433 0C78  
                                                      l5425 0C73  
                                                      l5417 0C6D  
                                                      l5409 0C67  
                                                      l4563 1707  
                                                      l3915 171D  
                                                      l4643 095A  
                                                      l4635 0955  
                                                      l4627 0940  
                                                      l4619 0938  
                                                      l4555 0803  
                                                      l4571 09A2  
                                                      l5451 0C87  
                                                      l5443 0C80  
                                                      l5435 0C7A  
                                                      l5427 0C75  
                                                      l5419 0C6F  
                                                      l5371 0C4D  
                                                      l5363 0C44  
                                                      l3917 1722  
                                                      l4645 095B  
                                                      l4637 0956  
                                                      l4629 0948  
                                                      l3909 16E1  
                                                      l4557 0805  
                                                      l4581 09AD  
                                                      l4573 09A4  
                                                      l4565 0998  
                                                      l5461 0C8F  
                                                      l5453 0C89  
                                                      l5445 0C82  
                                                      l5437 0C7B  
                                                      l5429 0C76  
                                                      l5381 0C55  
                                                      l5373 0C4F  
                                                      l5365 0C4A  
                                                      l4559 1702  
                                                      l3919 1729  
                                                      l4639 0958  
                                                      l4647 170B  
                                                      l4591 09C1  
                                                      l4583 09AF  
                                                      l4575 09A6  
                                                      l4567 099E  
                                                      l5471 0C96  
                                                      l5463 0C90  
                                                      l5455 0C8A  
                                                      l5447 0C84  
                                                      l5439 0C7D  
                                                      l5391 0C5B  
                                                      l5383 0C57  
                                                      l5375 0C50  
                                                      l5367 0C4B  
                                                      l4649 170D  
                                                      l4593 09C3  
                                                      l4585 09B1  
                                                      l4577 09A8  
                                                      l4569 09A0  
                                                      l5481 0C9C  
                                                      l5473 0C98  
                                                      l5465 0C92  
                                                      l5457 0C8C  
                                                      l5449 0C85  
                                                      l5393 0C5C  
                                                      l5385 0C58  
                                                      l5377 0C51  
                                                      l5369 0C4C  
                                                      l4595 09C5  
                                                      l4587 09BD  
                                                      l4579 09AB  
                                                      l5483 0C9D  
                                                      l5475 0C99  
                                                      l5467 0C93  
                                                      l5459 0C8D  
                                                      l5395 0C5D  
                                                      l5387 0C59  
                                                      l5379 0C52  
                                                      l4597 09C7  
                                                      l4589 09BF  
                                                      l5485 0C9E  
                                                      l5477 0C9A  
                                                      l5469 0C95  
                                                      l5397 0C5E  
                                                      l5389 0C5A  
                                                      l4599 09C9  
                                                      l4791 1743  
                                                      l4871 176D  
                                                      l5479 0C9B  
                                                      l5399 0C5F  
                                                      l4793 1746  
                                                      l4881 1774  
                                                      l4873 176E  
                                                      l4883 1775  
                                                      l4875 1770  
                                                      l4867 1761  
                                                      l4885 174D  
                                                      l4789 173D  
                                                      l4877 1771  
                                                      l4869 1763  
                                                      l4887 1757  
                                                      l4879 1773  
                                                      _ADON 04E8  
                                                      STR_1 1800  
                                                      _LATA 0018  
                                                      _LATB 0019  
                                                      _LATC 001A  
                                                      _LATD 001B  
                                                      _LATE 001C  
                                                      u2680 171D  
                                                      u2681 171C  
                                                      u2690 1729  
                                                      u2691 1728  
                                                      u4357 175B  
                                                      i1l90 16E0  
                                        _shortPressDetected 00DA  
                                                      _WPUA 1F39  
                                                      _WPUB 1F44  
                                                      _WPUC 1F4F  
                                                      _WPUD 1F5A  
                                                      _WPUE 1F65  
                                       _EUSART1_TransmitISR 17A8  
                                             _EUSART1_Write 0807  
                                   __end_of_NVM_StatusClear 16E4  
                                                      _dbuf 0220  
                                                      _flag 0055  
                                           __end_of_NVM_ISR 16E1  
                                                      _main 0C44  
                                                      _prec 00AA  
                                                      fsr0h 0005  
                                                      fsr1h 0007  
                                                      indf0 0000  
                                                      fsr0l 0004  
                                                      indf1 0001  
                                                      fsr1l 0006  
                                              _TMR_On_Delay 00BA  
                                                      btemp 007E  
                                          __end_of_ADC_Init 1761  
                                              _unlockKeyLow 007D  
                               _INT_DefaultInterruptHandler 0000  
                                                      start 03DF  
                           __end_of_INT_SetInterruptHandler 16F1  
                                           _Output_VTG_Stop 00E8  
                                   __end_of_UART_Write_Text 178F  
                                                     ??_ISR 004F  
                                           _Stop_Controller 00DE  
                                      ?_EUSART1_TransmitISR 0070  
                                     _eusart1RxStatusBuffer 0120  
                                                     ?_main 0070  
                                           __end_of___awdiv 0BE3  
                                           __end_of___awmod 0AD7  
                        _EUSART1_TxCompleteCallbackRegister 0000  
                                           ___awdiv@divisor 0076  
                             EUSART1_TransmitISR@tempTxTail 0070  
                                                     _IOCAF 1F3F  
                                                     _IOCBF 1F4A  
                                                     _IOCCF 1F55  
                                                     _IOCAN 1F3E  
                                                     _IOCEF 1F6B  
                                                     _IOCAP 1F3D  
                                                     _IOCBN 1F49  
                                                     _IOCBP 1F48  
                                                     _IOCCN 1F54  
                                                     _IOCCP 1F53  
                                                     _IOCEN 1F6A  
                                                     _IOCEP 1F69  
                                           __end_of___lwdiv 0998  
                                                     i1l431 0827  
                                                     i1l407 1701  
                                                     i1l440 17C2  
                                           __end_of___lwmod 0928  
                                                     i1l434 0829  
                                                     i1l427 0B2A  
                                                     i1l452 173C  
                                                     i1l437 17C0  
                                                     i1l455 0003  
                                                     i1l458 16EA  
                                                     i1l811 0877  
                                                     i1l820 0893  
                                                     i1l805 0749  
                                                     i1l822 089F  
                                                     i1l814 08BB  
                                                     i1l830 0C22  
                                                     i1l911 02C5  
                                                     i1l808 086B  
                                                     i1l832 0C43  
                                                     i1l920 0330  
                                                     i1l841 17A7  
                                                     i1l817 08C7  
                                                     i1l825 08F5  
                                                     i1l913 02D2  
                                                     i1l905 02B1  
                                                     i1l930 038F  
                                                     i1l922 033D  
                                                     i1l914 02DF  
                                                     i1l923 034A  
                                                     i1l915 03A4  
                                                     i1l828 0BFE  
                                                     i1l924 0357  
                                                     i1l860 00DA  
                                                     i1l852 006E  
                                                     i1l845 0A84  
                                                     i1l765 0E45  
                                                     i1l757 0DF7  
                                                     i1l925 0364  
                                                     i1l838 0A33  
                                                     i1l934 03CE  
                                                     i1l775 0568  
                                                     i1l935 03DD  
                                                     i1l960 05F9  
                                                     i1l928 0382  
                                                     i1l785 0FFF  
                                                     i1l970 0629  
                                                     i1l938 03DD  
                                                     i1l795 0F22  
                                                     i1l971 062D  
                                                     i1l956 05F0  
                                                     i1l981 075F  
                                                     i1l965 0619  
                                                     i1l974 065A  
                                                     i1l958 05F3  
                                                     i1l983 0768  
                                                     i1l967 061D  
                                                     i1l959 05F6  
                                                     i1l984 0771  
                                                     i1l968 0621  
                                                     i1l888 0230  
                                                     i1l985 077A  
                                                     i1l969 0625  
                                                     i1l994 07B8  
                                                     i1l986 0783  
                                                     i1l987 07F3  
                                                     i1l995 07C1  
                                                     i1l998 07F3  
                                           ___awdiv@counter 0020  
                                                     _OSCEN 0891  
                                                     _UART1 1000  
                                              vfpfcnvrt@fmt 0022  
                                                     _TMR0L 059C  
                                                     _PORTD 000F  
                                                     _TRISA 0012  
                                                     _TRISB 0013  
                                                     _TRISC 0014  
                                                     _TRISD 0015  
                                                     _TRISE 0016  
              __end_of_EUSART1_FramingErrorCallbackRegister 1722  
                    ??_EUSART1_FramingErrorCallbackRegister 00EF  
                     ?_EUSART1_FramingErrorCallbackRegister 00ED  
                      _EUSART1_FramingErrorCallbackRegister 1716  
                                                     _flags 00D4  
                                             _TMR_Off_Delay 00B8  
                                                     _fputc 0B2B  
                                                     _width 00A8  
                                                     _putch 172E  
                             _longPressDetectedSimultaneous 00DB  
                                            ?_EUSART1_Write 0070  
                                             _unlockKeyHigh 007C  
                                                     pclath 000A  
                                     _EUSART1_AutoBaudQuery 0000  
                                                     status 0003  
                                                     wtemp0 007E  
                                           __end_of_sprintf 0850  
                                   EUSART1_Write@tempTxHead 0071  
                                           __initialization 03E1  
                                __end_of_EUSART1_Initialize 095E  
                                              __end_of_main 0CA8  
                        _EUSART1_RxCompleteInterruptHandler 00CA  
                                     ??_EUSART1_TransmitISR 0070  
                                __end_of_EUSART1_ReceiveISR 0B2B  
                                             _TMR_SoftDelay 00C0  
                                                    ??_main 00EF  
       EUSART1_OverrunErrorCallbackRegister@callbackHandler 00ED  
       EUSART1_FramingErrorCallbackRegister@callbackHandler 00ED  
                            _longPressDetectedSettingSwitch 00DC  
                                                    _ADCON0 009D  
                                                    _ADCON1 009E  
                                                 ??_NVM_ISR 0070  
                                                    ?_fputc 0073  
                                                    _ADRESH 009C  
                                                    _ADRESL 009B  
                                          ___awdiv@dividend 0078  
                                                    _ANSELA 1F38  
                                                    ?_putch 0070  
                                                    _ANSELB 1F43  
                                                    _ANSELC 1F4E  
                                                    _ANSELD 1F59  
                                                    _ANSELE 1F64  
                                                    _RC1REG 0119  
                                                    _RC1STA 011D  
                                                    i1l1004 178E  
                                                    i1l1260 0AD6  
                                                    i1l1094 17EB  
                                                    i1l1247 0BE2  
                                                    i1l1096 17FF  
                                                    i1l1601 17E0  
                                                    i1l4001 0461  
                                                    _ODCONA 1F3A  
                                                    _ODCONB 1F45  
                                                    i1l4003 0467  
                                                    i1l4011 0478  
                                                    _ODCONC 1F50  
                                                    _ODCOND 1F5B  
                                                    i1l1613 0B86  
                                                    i1l4013 047B  
                                                    i1l4005 0470  
                                                    i1l4021 04C6  
                                                    i1l4101 0F83  
                                                    _ODCONE 1F66  
                                                    i1l1374 0997  
                                                    i1l4031 04E1  
                                                    i1l4023 04CB  
                                                    i1l4015 047D  
                                                    i1l4007 0474  
                                                    i1l4111 0F98  
                                                    i1l4103 0F86  
                                                    i1l1384 0927  
                                                    i1l4041 04EE  
                                                    i1l4033 04E5  
                                                    i1l4025 04CF  
                                                    i1l4017 0499  
                                                    i1l4009 0476  
                                                    i1l4201 0EF3  
                                                    i1l4121 0FBD  
                                                    i1l4105 0F8C  
                                                    i1l4113 0F9A  
                                                    i1l4051 053A  
                                                    i1l4043 050A  
                                                    i1l4035 04E7  
                                                    i1l4027 04D2  
                                                    i1l4019 04B5  
                                                    i1l4211 0F05  
                                                    i1l4203 0EF4  
                                                    i1l4131 0FDC  
                                                    i1l4115 0F9D  
                                                    i1l4107 0F92  
                                                    i1l4123 0FCE  
                                                    _RC7PPS 1F27  
                                                    i1l1557 084F  
                                                    i1l4061 054C  
                                                    i1l4053 0543  
                                                    i1l4045 0526  
                                                    i1l4029 04D8  
                                                    i1l4037 04E9  
                                                    i1l4301 0853  
                                                    i1l4213 0F06  
                                                    i1l4221 0F1D  
                                                    i1l4205 0EFD  
                                                    i1l4141 0FEE  
                                                    i1l4133 0FDD  
                                                    i1l4125 0FD0  
                                                    i1l4117 0F9F  
                                                    i1l4109 0F96  
                                                    i1l5101 0121  
                                                    i1l5021 0010  
                                                    i1l4063 0551  
                                                    i1l4055 0545  
                                                    i1l4039 04EC  
                                                    i1l4047 0537  
                                                    i1l4311 0868  
                                                    i1l4303 0857  
                                                    i1l4215 0F0B  
                                                    i1l4207 0EFF  
                                                    i1l4151 0E4F  
                                                    i1l4143 0FF4  
                                                    i1l4135 0FE2  
                                                    i1l4127 0FD1  
                                                    i1l4119 0FA1  
                                                    i1l4071 0F23  
                                                    i1l4231 066D  
                                                    i1l4223 065B  
                                                    i1l5111 0142  
                                                    i1l5103 0124  
                                                    i1l5031 003A  
                                                    i1l5023 0016  
                                                    i1l4065 0557  
                                                    i1l4057 0546  
                                                    i1l4049 0539  
                                                    i1l4313 086F  
                                                    i1l4305 085B  
                                                    i1l4217 0F11  
                                                    i1l4209 0F00  
                                                    i1l4161 0E67  
                                                    i1l4153 0E52  
                                                    i1l4137 0FE3  
                                                    i1l4145 0FFA  
                                                    i1l4129 0FDA  
                                                    i1l4081 0F3E  
                                                    i1l4073 0F28  
                                                    i1l4321 08A7  
                                                    i1l4241 067C  
                                                    i1l4233 0673  
                                                    i1l4225 0660  
                                                    i1l4401 0BF6  
                                                    i1l5201 028B  
                                                    i1l5121 0153  
                                                    i1l5105 0129  
                                                    i1l5113 0144  
                                                    i1l5033 0042  
                                                    i1l5025 001B  
                                                    i1l5041 006E  
                                                    i1l5017 0006  
                                                    i1l1594 0D75  
                                                    i1l1586 0CF7  
                                                    i1l4067 055D  
                                                    i1l4059 054B  
                                                    i1l4315 0872  
                                                    i1l4307 085F  
                                                    i1l4219 0F17  
                                                    i1l4171 0E8C  
                                                    i1l4155 0E58  
                                                    i1l4163 0E69  
                                                    i1l4147 0E46  
                                                    i1l4139 0FE8  
                                                    i1l4091 0F4B  
                                                    i1l4083 0F42  
                                                    i1l4075 0F2C  
                                                    i1l4331 08BF  
                                                    i1l4323 08AB  
                                                    i1l4251 06BF  
                                                    i1l4243 067E  
                                                    i1l4235 0675  
                                                    i1l4227 0664  
                                                    i1l4411 0C08  
                                                    i1l4403 0BFB  
                                                    i1l5211 02A9  
                                                    i1l5203 0292  
                                                    i1l5131 0176  
                                                    i1l5123 015D  
                                                    i1l5115 0149  
                                                    i1l5107 0137  
                                                    i1l5051 009B  
                                                    i1l5043 0074  
                                                    i1l5035 0047  
                                                    i1l5027 0020  
                                                    i1l5019 000B  
                                                    i1l3701 0974  
                                                    i1l4501 1796  
                                                    i1l4069 0563  
                                                    i1l4309 0863  
                                                    i1l4181 0EAF  
                                                    i1l4165 0E6C  
                                                    i1l4157 0E61  
                                                    i1l4149 0E4B  
                                                    i1l4173 0E9D  
                                                    i1l4093 0F4D  
                                                    i1l4085 0F44  
                                                    i1l4077 0F2F  
                                                    i1l4341 0883  
                                                    i1l4333 08C2  
                                                    i1l4325 08AF  
                                                    i1l4317 08A0  
                                                    i1l4261 06D3  
                                                    i1l4253 06C3  
                                                    i1l4245 0680  
                                                    i1l4237 0677  
                                                    i1l4229 0667  
                                                    i1l4421 0C14  
                                                    i1l4413 0C09  
                                                    i1l4405 0C03  
                                                    i1l5301 03B7  
                                                    i1l5221 02BE  
                                                    i1l5213 02AB  
                                                    i1l5205 029A  
                                                    i1l5141 0194  
                                                    i1l5133 0179  
                                                    i1l5117 014D  
                                                    i1l5125 0161  
                                                    i1l5109 0140  
                                                    i1l5061 00AD  
                                                    i1l5053 009D  
                                                    i1l5045 007A  
                                                    i1l5037 0066  
                                                    i1l5029 0037  
                                                    i1l3703 0983  
                                                    i1l3711 0993  
                                                    i1l4503 179A  
                                                    i1l4191 0EC0  
                                                    i1l4183 0EB5  
                                                    i1l4175 0EA2  
                                                    i1l4167 0E6E  
                                                    i1l4159 0E65  
                                                    i1l4095 0F69  
                                                    i1l4079 0F35  
                                                    i1l4087 0F46  
                                                    i1l4351 089A  
                                                    i1l4343 0887  
                                                    i1l4335 0878  
                                                    i1l4327 08B3  
                                                    i1l4319 08A3  
                                                    i1l4271 06DE  
                                                    i1l4263 06D5  
                                                    i1l4255 06C6  
                                                    i1l4247 06A3  
                                                    i1l4239 0679  
                                                    i1l4431 0C1A  
                                                    i1l4423 0C16  
                                                    i1l4415 0C0A  
                                                    i1l4407 0C05  
                                                    i1l4511 0A37  
                                                    i1l5311 03D2  
                                                    i1l5303 03BB  
                                                    i1l5231 02E0  
                                                    i1l5223 02C6  
                                                    i1l5215 02AF  
                                                    i1l5207 02A1  
                                                    i1l5151 01BC  
                                                    i1l5143 0197  
                                                    i1l5127 016A  
                                                    i1l5135 017D  
                                                    i1l5119 0151  
                                                    i1l5063 00C2  
                                                    i1l5071 00DF  
                                                    i1l5047 0080  
                                                    i1l5055 009F  
                                                    i1l5039 006B  
                                                    i1l3705 0987  
                                                    i1l3721 0904  
                                                    i1l3801 17D4  
                                                    i1l4505 179E  
                                                    i1l4193 0EC2  
                                                    i1l4185 0EB9  
                                                    i1l4177 0EA6  
                                                    i1l4169 0E70  
                                                    i1l4089 0F49  
                                                    i1l4097 0F7A  
                                                    i1l4345 088B  
                                                    i1l4337 087B  
                                                    i1l4329 08B8  
                                                    i1l4281 0724  
                                                    i1l4273 0701  
                                                    i1l4257 06CC  
                                                    i1l4265 06D7  
                                                    i1l4249 06BA  
                                                    i1l4441 0C2B  
                                                    i1l4425 0C17  
                                                    i1l4417 0C0B  
                                                    i1l4409 0C07  
                                                    i1l4433 0C1B  
                                                    i1l4361 08D7  
                                                    i1l4353 08C8  
                                                    i1l4521 0A4D  
                                                    i1l4513 0A3B  
                                                    i1l5313 03D6  
                                                    i1l5305 03BE  
                                                    i1l5241 02FE  
                                                    i1l5233 02E9  
                                                    i1l5225 02CF  
                                                    i1l5217 02B2  
                                                    i1l5161 01F0  
                                                    i1l5153 01CF  
                                                    i1l5209 02A8  
                                                    i1l5145 019B  
                                                    i1l5137 0182  
                                                    i1l5129 0173  
                                                    i1l5081 00F2  
                                                    i1l5073 00E2  
                                                    i1l5065 00C4  
                                                    i1l5057 00A5  
                                                    i1l5049 0084  
                                                    i1l3707 0988  
                                                    i1l3731 091D  
                                                    i1l3723 0906  
                                                    i1l3715 08F6  
                                                    i1l3803 17DE  
                                                    i1l3811 0833  
                                                    i1l4507 17A2  
                                                    i1l4195 0EC4  
                                                    i1l4187 0EBB  
                                                    i1l4179 0EA9  
                                                    i1l4099 0F7F  
                                                    i1l4347 0890  
                                                    i1l4339 087F  
                                                    i1l4291 0732  
                                                    i1l4283 0726  
                                                    i1l4267 06DA  
                                                    i1l4259 06D1  
                                                    i1l4275 0718  
                                                    i1l4451 0C30  
                                                    i1l4443 0C2C  
                                                    i1l4435 0C1F  
                                                    i1l4427 0C18  
                                                    i1l4419 0C0C  
                                                    i1l4371 08E0  
                                                    i1l4363 08DB  
                                                    i1l4355 08CB  
                                                    i1l4531 0A52  
                                                    i1l4523 0A4E  
                                                    i1l4515 0A3F  
                                                    i1l5307 03C3  
                                                    i1l5251 0321  
                                                    i1l5243 0305  
                                                    i1l5227 02D3  
                                                    i1l5219 02B5  
                                                    i1l5171 0217  
                                                    i1l5163 01F7  
                                                    i1l5155 01D6  
                                                    i1l5147 01A2  
                                                    i1l5139 0186  
                                                    i1l5091 010C  
                                                    i1l5083 00FA  
                                                    i1l5075 00E8  
                                                    i1l5067 00D5  
                                                    i1l5059 00AA  
                                                    i1l3821 1778  
                                                    i1l3709 098D  
                                                    i1l3725 090A  
                                                    i1l3717 08FC  
                                                    i1l3733 0923  
                                                    i1l3661 16F9  
                                                    i1l3741 0B37  
                                                    i1l3813 0835  
                                                    i1l4197 0EE0  
                                                    i1l4189 0EBD  
                                                    i1l4349 0898  
                                                    i1l3901 0AC8  
                                                    i1l4293 0738  
                                                    i1l4285 0727  
                                                    i1l4277 071A  
                                                    i1l4269 06DC  
                                                    i1l4461 0C3D  
                                                    i1l4453 0C38  
                                                    i1l4445 0C2D  
                                                    i1l4437 0C27  
                                                    i1l4429 0C19  
                                                    i1l4381 08ED  
                                                    i1l4373 08E1  
                                                    i1l4365 08DD  
                                                    i1l4357 08CF  
                                                    i1l4541 0A67  
                                                    i1l4533 0A53  
                                                    i1l4525 0A4F  
                                                    i1l4517 0A43  
                                                    i1l4509 0A34  
                                                    i1l5309 03C7  
                                                    i1l5261 0347  
                                                    i1l5253 0328  
                                                    i1l5245 030C  
                                                    i1l5229 02DC  
                                                    i1l5237 02EC  
                                                    i1l5181 0240  
                                                    i1l5173 0229  
                                                    i1l5165 0209  
                                                    i1l5157 01E8  
                                                    i1l5149 01B5  
                                                    i1l5093 010F  
                                                    i1l5085 00FD  
                                                    i1l5077 00EB  
                                                    i1l5069 00DD  
                                                    i1l3671 0816  
                                                    i1l3823 1781  
                                                    i1l3727 0914  
                                                    i1l3719 08FF  
                                                    i1l3743 0B3C  
                                                    i1l3815 0842  
                                                    i1l3807 082A  
                                                    i1l4471 09EB  
                                                    i1l4199 0EF1  
                                                    i1l3831 0B8D  
                                                    i1l3903 0ACD  
                                                    i1l4295 073E  
                                                    i1l4287 072C  
                                                    i1l4279 071B  
                                                    i1l4463 0C3E  
                                                    i1l4455 0C3A  
                                                    i1l4447 0C2E  
                                                    i1l4439 0C29  
                                                    i1l4391 0BE3  
                                                    i1l4383 08EE  
                                                    i1l4375 08E2  
                                                    i1l4367 08DE  
                                                    i1l4359 08D3  
                                                    i1l4543 0A68  
                                                    i1l4551 0A7F  
                                                    i1l4535 0A5B  
                                                    i1l4527 0A50  
                                                    i1l4519 0A47  
                                                    i1l5271 0365  
                                                    i1l5263 034B  
                                                    i1l5255 0331  
                                                    i1l5247 0313  
                                                    i1l5239 02F7  
                                                    i1l5191 0265  
                                                    i1l5183 0247  
                                                    i1l5159 01EE  
                                                    i1l5095 0111  
                                                    i1l5087 00FF  
                                                    i1l5079 00ED  
                                                    u220_20 1700  
                                                    u300_20 0E61  
                                                    i1l3673 081C  
                                                    i1l3665 0807  
                                                    i1l3825 1785  
                                                    i1l3729 0918  
                                                    u220_21 16FE  
                                                    i1l3681 172F  
                                                    i1l3745 0B47  
                                                    i1l3737 0B2B  
                                                    i1l3761 0CCB  
                                                    i1l3753 0CA8  
                                                    i1l3809 0831  
                                                    i1l4481 09FE  
                                                    i1l4473 09EF  
                                                    u300_21 0E60  
                                                    i1l3841 0B9F  
                                                    i1l3833 0B92  
                                                    i1l3905 0AD2  
                                                    i1l4289 072D  
                                                    i1l4297 0744  
                                                    i1l4457 0C3B  
                                                    i1l4449 0C2F  
                                                    i1l4465 0C3F  
                                                    i1l4393 0BE6  
                                                    i1l4385 08EF  
                                                    i1l4377 08EA  
                                                    i1l4369 08DF  
                                                    i1l4545 0A6D  
                                                    i1l4537 0A61  
                                                    i1l4529 0A51  
                                                    i1l3921 0D76  
                                                    i1l5281 038C  
                                                    i1l5273 036E  
                                                    i1l5265 0354  
                                                    i1l5257 033A  
                                                    i1l5249 031A  
                                                    i1l5193 026D  
                                                    i1l5185 024F  
                                                    i1l5177 0231  
                                                    i1l5169 0210  
                                                    i1l5097 0115  
                                                    i1l5089 0104  
                                                    i1l4651 16E7  
                                                    i1l3675 0820  
                                                    i1l3667 080C  
                                                    i1l3819 1777  
                                                    i1l3691 0960  
                                                    i1l3683 172F  
                                                    i1l3747 0B67  
                                                    i1l3739 0B31  
                                                    i1l3771 0D0E  
                                                    i1l3763 0CD3  
                                                    i1l3755 0CBA  
                                                    i1l4491 0A12  
                                                    i1l4483 0A03  
                                                    i1l4475 09F3  
                                                    i1l4467 09E4  
                                                    i1l4299 0850  
                                                    i1l3851 0BB1  
                                                    i1l3843 0BA1  
                                                    i1l3835 0B94  
                                                    i1l3827 0B87  
                                                    i1l4459 0C3C  
                                                    i1l4395 0BEA  
                                                    i1l4387 08F0  
                                                    i1l4379 08EC  
                                                    i1l4547 0A73  
                                                    i1l4539 0A62  
                                                    i1l3931 0D8E  
                                                    i1l3923 0D7B  
                                                    i1l5291 03A5  
                                                    i1l5283 0390  
                                                    i1l5267 0358  
                                                    i1l5259 033E  
                                                    i1l5195 0274  
                                                    i1l5187 0256  
                                                    i1l5179 0238  
                                                    i1l5099 011E  
                                                    i1l4821 0AD7  
                                                    i1l3677 0822  
                                                    i1l3669 0810  
                                                    i1l3693 0966  
                                                    i1l3685 1737  
                                                    i1l3749 0B7C  
                                                    i1l3781 0D41  
                                                    i1l3773 0D1F  
                                                    i1l3765 0CDD  
                                                    i1l3757 0CC2  
                                                    i1l4493 0A27  
                                                    i1l4485 0A06  
                                                    i1l4477 09F7  
                                                    i1l4469 09E7  
                                                    i1l3861 0BCE  
                                                    i1l3853 0BB5  
                                                    i1l3845 0BA7  
                                                    i1l3837 0B98  
                                                    i1l3829 0B89  
                                                    i1l4397 0BEE  
                                                    i1l4389 08F1  
                                                    i1l4549 0A79  
                                                    i1l3941 0D99  
                                                    i1l3933 0D90  
                                                    i1l3925 0D7F  
                                                    i1l4653 074A  
                                                    i1l5293 03A7  
                                                    i1l5285 0399  
                                                    i1l5269 0361  
                                                    i1l5277 0371  
                                                    i1l5197 027C  
                                                    i1l5189 025E  
                                                    i1l4831 0AF8  
                                                    i1l4823 0AE0  
                                                    i1l3679 0824  
                                                    i1l3695 0969  
                                                    i1l3775 0D25  
                                                    i1l3767 0CE9  
                                                    i1l3759 0CC7  
                                                    i1l3791 0D5B  
                                                    i1l4487 0A0C  
                                                    i1l4495 0A2E  
                                                    i1l4479 09FC  
                                                    i1l3855 0BC4  
                                                    i1l3847 0BAA  
                                                    i1l3863 0BD4  
                                                    i1l3839 0B9D  
                                                    i1l3871 0A85  
                                                    i1l4399 0BF2  
                                                    i1l3951 0E02  
                                                    i1l3943 0DBC  
                                                    i1l3935 0D92  
                                                    i1l3927 0D82  
                                                    i1l4671 0788  
                                                    i1l4663 0764  
                                                    i1l4655 0750  
                                                    i1l4911 059F  
                                                    i1l4903 058B  
                                                    i1l5295 03AD  
                                                    i1l5279 0383  
                                                    i1l5199 0283  
                                                    u221_20 1701  
                                                    u301_20 0EA2  
                                                    i1l4841 0B13  
                                                    i1l4833 0AFD  
                                                    i1l4825 0AE5  
                                                    i1l3697 096E  
                                                    i1l3689 095E  
                                                    i1l3777 0D2B  
                                                    i1l3769 0CF9  
                                                    i1l3785 0D48  
                                                    i1l4489 0A0D  
                                                    i1l4497 178F  
                                                    u301_21 0EA1  
                                                    i1l3865 0BD9  
                                                    i1l3857 0BC8  
                                                    i1l3849 0BAF  
                                                    i1l3881 0A96  
                                                    i1l3873 0A86  
                                                    i1l3953 0E08  
                                                    i1l3945 0DDF  
                                                    i1l3929 0D88  
                                                    i1l3937 0D94  
                                                    i1l4681 07AC  
                                                    i1l4665 076D  
                                                    i1l4657 0755  
                                                    i1l4921 05AD  
                                                    i1l4913 05A1  
                                                    i1l4905 058D  
                                                    i1l5289 039C  
                                                    i1l5297 03AE  
                                                    i1l4851 0B28  
                                                    i1l4843 0B18  
                                                    i1l4835 0B04  
                                                    i1l4827 0AEC  
                                                    i1l3699 0970  
                                                    i1l3779 0D3E  
                                                    i1l3787 0D51  
                                                    i1l4499 1792  
                                                    i1l3867 0BDE  
                                                    i1l3859 0BC9  
                                                    i1l3891 0AAB  
                                                    i1l3883 0A9B  
                                                    i1l3875 0A8B  
                                                    i1l3955 0E0D  
                                                    i1l3947 0DFB  
                                                    i1l3971 0E14  
                                                    i1l3939 0D97  
                                                    i1l4691 07CA  
                                                    i1l4683 07B0  
                                                    i1l5571 0794  
                                                    i1l4667 0776  
                                                    i1l4675 078C  
                                                    i1l4659 0759  
                                                    i1l4931 05CC  
                                                    i1l4923 05BA  
                                                    i1l4915 05A4  
                                                    i1l4907 0593  
                                                    i1l5299 03B2  
                                                    i1l4837 0B0B  
                                                    i1l4829 0AF3  
                                                    i1l4861 17BB  
                                                    i1l3797 17C3  
                                                    i1l3893 0AAF  
                                                    i1l3885 0AA1  
                                                    i1l3877 0A90  
                                                    i1l3981 0E23  
                                                    i1l3973 0E16  
                                                    i1l3957 0E0F  
                                                    i1l3949 0DFF  
                                                    i1l5573 07DC  
                                                    i1l4693 07CE  
                                                    i1l4685 07B4  
                                                    i1l4669 077F  
                                                    i1l4677 07A5  
                                                    i1l4933 05CF  
                                                    i1l4941 05E4  
                                                    i1l4917 05AA  
                                                    i1l4909 0599  
                                                    i1l4925 05BC  
                                                    i1l4847 0B1F  
                                                    i1l4839 0B10  
                                                    i1l4863 17BD  
                                                    i1l4855 17A8  
                                                    i1l3799 17C9  
                                                    i1l3895 0AB9  
                                                    i1l3887 0AA4  
                                                    i1l3879 0A92  
                                                    i1l3991 0E3A  
                                                    i1l3983 0E28  
                                                    i1l3975 0E17  
                                                    i1l3959 0E11  
                                                    i1l4687 07BD  
                                                    i1l5567 0604  
                                                    i1l4951 0612  
                                                    i1l4943 05E9  
                                                    i1l4935 05D4  
                                                    i1l4927 05C1  
                                                    i1l4919 05AC  
                                                    u222_20 080C  
                                                    u302_20 0EA6  
                                                    u310_20 06BF  
                                                    i1l4849 0B26  
                                                    i1l4857 17AF  
                                                    i1l4785 16DE  
                                                    u222_21 080B  
                                                    u302_21 0EA5  
                                                    i1l3897 0ABD  
                                                    i1l3889 0AA9  
                                                    u310_21 06BE  
                                                    i1l3985 0E29  
                                                    i1l3993 0E40  
                                                    i1l3977 0E20  
                                                    i1l4689 07C6  
                                                    i1l4697 07D2  
                                                    i1l5569 063E  
                                                    i1l4961 0655  
                                                    i1l4937 05D5  
                                                    i1l4929 05C7  
                                                    i1l4859 17B6  
                                                    i1l3995 0455  
                                                    i1l3899 0AC2  
                                                    i1l3987 0E2E  
                                                    i1l3979 0E22  
                                                    i1l4955 0631  
                                                    i1l4939 05E2  
                                                    i1l4963 0657  
                                                    i1l4891 056F  
                                                    i1l4981 17F5  
                                                    i1l4973 17E1  
                                                    u230_25 0989  
                                                    i1l3997 045A  
                                                    i1l3989 0E34  
                                                    i1l4949 05FC  
                                                    i1l4893 0575  
                                                    i1l4983 17FB  
                                                    i1l4975 17E3  
                                                    i1l3999 045E  
                                                    i1l4959 0634  
                                                    i1l4895 0579  
                                                    u223_20 0816  
                                                    u231_20 0993  
                                                    u303_20 0EAF  
                                                    u311_20 06C3  
                                                    i1l4977 17E7  
                                                    u223_21 0815  
                                                    u231_21 0992  
                                                    u303_21 0EAE  
                                                    u311_21 06C2  
                                                    i1l4897 057A  
                                                    i1l4889 0569  
                                                    i1l4979 17F0  
                                                    i1l4899 0588  
                                                    u232_20 08FC  
                                                    u224_20 1737  
                                                    u240_20 0B47  
                                                    u304_20 0EB5  
                                                    u320_20 0898  
                                                    u312_20 06CC  
                                                    u400_20 020F  
                                                    u232_21 08FB  
                                                    u224_21 1736  
                                                    u240_21 0B46  
                                                    u304_21 0EB4  
                                                    u320_21 0897  
                                                    u312_21 06CB  
                                                    u400_21 020E  
                                                    _INLVLA 1F3C  
                                                    _INLVLB 1F47  
                                                    _INLVLC 1F52  
                                                    _INLVLD 1F5D  
                                                    _INLVLE 1F68  
                                                    u225_20 0966  
                                                    u241_20 0B67  
                                                    u305_20 0F05  
                                                    u313_20 06D1  
                                                    u321_20 0BFB  
                                                    u401_20 0217  
                                                    u225_21 0965  
                                                    u241_21 0B66  
                                                    u305_21 0F04  
                                                    u313_21 06D0  
                                                    u321_21 0BFA  
                                                    u401_21 0216  
                                                    u233_25 0900  
                                                    u241_25 0B63  
                                                    u234_20 090A  
                                                    u242_20 0CBA  
                                                    u250_20 0B98  
                                                    u314_20 072C  
                                                    u306_20 0660  
                                                    u322_20 0C03  
                                                    u330_20 075E  
                                                    u410_20 02A1  
                                                    u402_20 022F  
                                                    u234_21 0909  
                                                    u242_21 0CB9  
                                                    u250_21 0B97  
                                                    u314_21 072B  
                                                    u306_21 065F  
                                                    u322_21 0C02  
                                                    u330_21 075D  
                                                    u410_21 02A0  
                                                    u402_21 022E  
                                                    u226_25 096A  
                                                    u227_20 0974  
                                                    u235_20 0914  
                                                    u243_20 0CDD  
                                                    u315_20 0868  
                                                    u251_20 0BA7  
                                                    u307_20 0664  
                                                    u323_20 0C1F  
                                                    u331_20 07AB  
                                                    u411_20 02AF  
                                                    u403_20 0238  
                                                    u227_21 0973  
                                                    u235_21 0913  
                                                    u243_21 0CDC  
                                                    u315_21 0867  
                                                    u251_21 0BA6  
                                                    u307_21 0663  
                                                    u323_21 0C1E  
                                                    u331_21 07AA  
                                                    u411_21 02AE  
                                                    u403_21 0237  
                                                    u235_25 0910  
                                                    u340_20 0B0B  
                                                    u244_20 0D25  
                                                    u316_20 086F  
                                                    u260_20 0A96  
                                                    u308_20 066D  
                                                    u324_20 0C27  
                                                    u420_20 0328  
                                                    u412_20 02BE  
                                                    u404_20 0247  
                                                    u340_21 0B0A  
                                                    u244_21 0D24  
                                                    u316_21 086E  
                                                    u260_21 0A95  
                                                    u308_21 066C  
                                                    u324_21 0C26  
                                                    u420_21 0327  
                                                    u412_21 02BD  
                                                    u404_21 0246  
                                                    u228_25 0975  
                                                    u236_25 0919  
                                                    u252_25 0BAB  
                                                    u341_20 0B1E  
                                                    u229_20 0983  
                                                    u237_20 0923  
                                                    u245_20 0D2A  
                                                    u325_20 09FC  
                                                    u317_20 08B8  
                                                    u253_20 0BB5  
                                                    u261_20 0AA1  
                                                    u309_20 0673  
                                                    u421_20 032F  
                                                    u413_20 02C4  
                                                    u405_20 0256  
                                                    u341_21 0B1D  
                                                    u229_21 0982  
                                                    u237_21 0922  
                                                    u245_21 0D29  
                                                    u325_21 09FB  
                                                    u317_21 08B7  
                                                    u253_21 0BB4  
                                                    u261_21 0AA0  
                                                    u309_21 0672  
                                                    u421_21 032E  
                                                    u413_21 02C3  
                                                    u405_21 0255  
                                                    u229_25 097F  
                                                    u342_20 17AF  
                                                    u238_20 0B31  
                                                    u246_20 0D47  
                                                    u326_20 0A03  
                                                    u318_20 08BF  
                                                    u270_20 0D7B  
                                                    u350_20 05C7  
                                                    u422_20 03AD  
                                                    u414_20 02FE  
                                                    u406_20 0265  
                                                    u342_21 17AE  
                                                    u238_21 0B30  
                                                    u246_21 0D46  
                                                    u326_21 0A02  
                                                    u318_21 08BE  
                                                    u270_21 0D7A  
                                                    u350_21 05C6  
                                                    u422_21 03AC  
                                                    u414_21 02FD  
                                                    u406_21 0264  
                                                    u254_25 0BB6  
                                                    u262_25 0AA5  
                                                    u239_20 0B37  
                                                    u247_20 17DE  
                                                    u327_20 0A0C  
                                                    u319_20 0890  
                                                    u255_20 0BC4  
                                                    u263_20 0AAF  
                                                    u271_20 0D7F  
                                                    u351_20 05CC  
                                                    u343_20 056F  
                                                    u423_20 03B2  
                                                    u415_20 0305  
                                                    u407_20 0274  
                                                    u239_21 0B36  
                                                    u247_21 17DD  
                                                    u327_21 0A0B  
                                                    u319_21 088F  
                                                    u255_21 0BC3  
                                                    u263_21 0AAE  
                                                    u271_21 0D7E  
                                                    u351_21 05CB  
                                                    u343_21 056E  
                                                    u423_21 03B1  
                                                    u415_21 0304  
                                                    u407_21 0273  
                                                    u255_25 0BC0  
                                                    u248_20 178E  
                                                    u280_20 045E  
                                                    u264_20 0AB9  
                                                    u328_20 0A67  
                                                    u272_20 0D88  
                                                    u352_20 05D4  
                                                    u344_20 0575  
                                                    u424_20 03B7  
                                                    u416_20 030C  
                                                    u408_20 0283  
                                                    u248_21 178D  
                                                    u280_21 045D  
                                                    u264_21 0AB8  
                                                    u328_21 0A66  
                                                    u272_21 0D87  
                                                    u352_21 05D3  
                                                    u344_21 0574  
                                                    u424_21 03B6  
                                                    u416_21 030B  
                                                    u408_21 0282  
                                                    u256_25 0BCA  
                                                    u264_25 0AB5  
                                                    u440_27 0342  
                                                    u337_20 0AE5  
                                                    u281_20 0467  
                                                    u257_20 0BD4  
                                                    u249_20 0B8D  
                                                    u273_20 0D8E  
                                                    u329_20 0750  
                                                    u353_20 05E9  
                                                    u345_20 0593  
                                                    u425_20 03BB  
                                                    u417_20 0313  
                                                    u409_20 0292  
                                                    u337_21 0AE4  
                                                    u281_21 0466  
                                                    u257_21 0BD3  
                                                    u249_21 0B8C  
                                                    u273_21 0D8D  
                                                    u329_21 074F  
                                                    u353_21 05E8  
                                                    u345_21 0592  
                                                    u425_21 03BA  
                                                    u417_21 0312  
                                                    u409_21 0291  
                                                    u265_25 0ABE  
                                                    u441_27 034F  
                                                    u338_20 0AF3  
                                                    u282_20 0470  
                                                    u290_20 0F35  
                                                    u258_20 0BD9  
                                                    u266_20 0AC8  
                                                    u274_20 0DFB  
                                                    u354_20 05EF  
                                                    u346_20 0599  
                                                    u426_20 03C3  
                                                    u418_20 031A  
                                                    u370_20 0074  
                                                    u338_21 0AF2  
                                                    u282_21 046F  
                                                    u290_21 0F34  
                                                    u258_21 0BD8  
                                                    u266_21 0AC7  
                                                    u274_21 0DFA  
                                                    u354_21 05EE  
                                                    u346_21 0598  
                                                    u426_21 03C2  
                                                    u418_21 0319  
                                                    u370_21 0073  
                                                    u450_27 0A56  
                                                    u442_27 035C  
                                                    u339_20 0AFD  
                                                    u283_20 04CB  
                                                    u291_20 0F3E  
                                                    u267_20 0ACD  
                                                    u259_20 0A8B  
                                                    u275_20 0DFF  
                                                    u355_20 0618  
                                                    u347_20 059F  
                                                    u427_20 03C7  
                                                    u419_20 0321  
                                                    u371_20 007A  
                                                    u339_21 0AFC  
                                                    u283_21 04CA  
                                                    u291_21 0F3D  
                                                    u267_21 0ACC  
                                                    u259_21 0A8A  
                                                    u275_21 0DFE  
                                                    u355_21 0617  
                                                    u347_21 059E  
                                                    u427_21 03C6  
                                                    u419_21 0320  
                                                    u371_21 0079  
                                                    u451_27 08E5  
                                                    u443_27 0369  
                                                    u356_20 17E7  
                                                    u284_20 04CF  
                                                    u292_20 0F7F  
                                                    u276_20 0E08  
                                                    u348_20 05AA  
                                                    u428_20 03D2  
                                                    u380_20 00FA  
                                                    u372_20 0080  
                                                    u364_20 000B  
                                                    u356_21 17E6  
                                                    u284_21 04CE  
                                                    u292_21 0F7E  
                                                    u276_21 0E07  
                                                    u348_21 05A9  
                                                    u428_21 03D1  
                                                    u380_21 00F9  
                                                    u372_21 007F  
                                                    u364_21 000A  
                                                    u452_27 0C0F  
                                                    u444_27 0387  
                                                    u436_27 02CA  
                                                    u285_20 04D8  
                                                    u293_20 0F83  
                                                    u277_20 0E0D  
                                                    u349_20 05C1  
                                                    u429_20 03D6  
                                                    u381_20 0104  
                                                    u373_20 009B  
                                                    u365_20 0016  
                                                    u285_21 04D7  
                                                    u293_21 0F82  
                                                    u277_21 0E0C  
                                                    u349_21 05C0  
                                                    u429_21 03D5  
                                                    u381_21 0103  
                                                    u373_21 009A  
                                                    u365_21 0015  
                                                    u357_25 17EC  
                                                    u373_25 0097  
                                                    u453_27 0C33  
                                                    u445_27 0394  
                                                    u437_27 02D7  
                                                    u286_20 04E1  
                                                    u294_20 0F8C  
                                                    u278_20 0E28  
                                                    u390_20 016A  
                                                    u382_20 010C  
                                                    u374_20 00A5  
                                                    u366_20 001B  
                                                    u286_21 04E0  
                                                    u294_21 0F8B  
                                                    u278_21 0E27  
                                                    u390_21 0169  
                                                    u382_21 010B  
                                                    u374_21 00A4  
                                                    u366_21 001A  
                                                    u358_25 17F1  
                                                    u454_27 071F  
                                                    u446_27 0580  
                                                    u438_27 02E4  
                                                    u359_20 17FB  
                                                    u287_20 054B  
                                                    u279_20 045A  
                                                    u295_20 0F92  
                                                    u391_20 0173  
                                                    u383_20 011E  
                                                    u375_20 00AA  
                                                    u367_20 0037  
                                                    u359_21 17FA  
                                                    u287_21 054A  
                                                    u279_21 0459  
                                                    u295_21 0F91  
                                                    u391_21 0172  
                                                    u383_21 011D  
                                                    u375_21 00A9  
                                                    u367_21 0036  
                                                    u367_25 0033  
                                                    u455_27 0FD5  
                                                    u447_27 05B3  
                                                    u439_27 0335  
                                                    u296_20 0FE2  
                                                    u288_20 0F28  
                                                    u392_20 0182  
                                                    u384_20 0129  
                                                    u376_20 00C2  
                                                    u368_20 0047  
                                                    u296_21 0FE1  
                                                    u288_21 0F27  
                                                    u392_21 0181  
                                                    u384_21 0128  
                                                    u376_21 00C1  
                                                    u368_21 0046  
                                                    u376_25 00BE  
                                                    u456_27 0EF8  
                                                    u448_27 05DB  
                                                    u297_20 0E4B  
                                                    u289_20 0F2C  
                                                    u393_20 0186  
                                                    u385_20 0137  
                                                    u377_20 00D5  
                                                    u369_20 006B  
                                                    u297_21 0E4A  
                                                    u289_21 0F2B  
                                                    u393_21 0185  
                                                    u385_21 0136  
                                                    u377_21 00D4  
                                                    u369_21 006A  
                                                    u377_25 00D1  
                                                    u457_27 053E  
                                                    u449_27 0E1B  
                                                    u298_20 0E4F  
                                                    u394_20 0194  
                                                    u386_20 0140  
                                                    u378_20 00E8  
                                                    u298_21 0E4E  
                                                    u394_21 0193  
                                                    u386_21 013F  
                                                    u378_21 00E7  
                                                    u299_20 0E58  
                                                    u395_20 01A2  
                                                    u387_20 0149  
                                                    u379_20 00F2  
                                                    u299_21 0E57  
                                                    u395_21 01A1  
                                                    u387_21 0148  
                                                    u379_21 00F1  
                                                    u396_20 01BC  
                                                    u388_20 014D  
                                                    u396_21 01BB  
                                                    u388_21 014C  
                                                    _OSCFRQ 0893  
                                                    u397_20 01D6  
                                                    u389_20 015D  
                                                    u397_21 01D5  
                                                    u389_21 015C  
                                                    u398_20 01EE  
                                                    u398_21 01ED  
                                                    u399_20 01F7  
                                                    u399_21 01F6  
                                                    _TX1REG 011A  
                                                    _TX1STA 011E  
                                          ?_NVM_StatusClear 0070  
                                                    _TRISA3 0093  
                                                    _TRISA5 0095  
                                                    _TRISE0 00B0  
                                SaveSystemDataToFlash@F8423 02A0  
                                              vfprintf@cfmt 0035  
                                                    ___wmul 17E1  
                                                 ??___awdiv 007A  
                                                 ??___awmod 007A  
                                          ?_UART_Write_Text 0072  
                                                 ??___lwdiv 0074  
                                                 ??___lwmod 007B  
                                                    _buffer 2728  
                                          ___awdiv@quotient 0022  
                                           ___awmod@divisor 0024  
                                           ___awmod@counter 007A  
                                         ?_CLOCK_Initialize 0070  
                                                    fputc@c 0073  
                                        ??_CLOCK_Initialize 00ED  
                                                 ?_ADC_Init 0070  
                                                _Step_Count 00B4  
                              EUSART1_ReceiveISR@tempRxHead 0071  
              __end_of_EUSART1_OverrunErrorCallbackRegister 172E  
                    ??_EUSART1_OverrunErrorCallbackRegister 00EF  
                     ?_EUSART1_OverrunErrorCallbackRegister 00ED  
                      _EUSART1_OverrunErrorCallbackRegister 1722  
                                          __end_of_vfprintf 17E1  
                                           ??_EUSART1_Write 0071  
                   INT_SetInterruptHandler@InterruptHandler 00ED  
                                                 ??_sprintf 007C  
                                           _eusart1RxBuffer 01E6  
                                           _eusart1TxBuffer 00A0  
                                          ??_NVM_Initialize 00ED  
                                         _SYSTEM_Initialize 173D  
                                   __end_of__initialization 0451  
                                        ?_SYSTEM_Initialize 0070  
                                          _PhotoSensor_Flag 00E5  
                                             __end_of_UART1 1030  
                                _EUSART1_TxInterruptHandler 016E  
                                            __pcstackCOMMON 0070  
                                           _current_voltage 00E9  
                                              __pidataBANK0 16F1  
                                              __pidataBANK1 16E4  
                                       ??_SYSTEM_Initialize 00EF  
                                             __end_of_fputc 0B87  
                                             __end_of_putch 173D  
                                               _Current_Out 00E1  
                                   _DebounceDelay_Decrement 00D8  
                                           _UpdateModeDelay 00DD  
                                                ??_ADC_Init 00ED  
                                                   ??_fputc 0077  
                                 __end_of_SYSTEM_Initialize 174D  
                                                   ??_putch 0072  
                                             _eusart1RxHead 0064  
                                             _eusart1TxHead 0067  
                                             _current_digit 005D  
                                             _eusart1RxTail 0063  
                                                __pbssBANK0 0053  
                                                __pbssBANK1 00A0  
                                                __pbssBANK2 0120  
                                                __pbssBANK3 01A0  
                                                __pbssBANK4 0220  
                                                __pbssBANK5 02A0  
                                             _eusart1TxTail 0066  
                                _pressDurationSettingSwitch 0053  
                               _DebounceCompleted_Decrement 0058  
                                                __pmaintext 0C44  
                                                   ?___wmul 0070  
                                                __pintentry 0004  
                                          _EUSART1_IsTxDone 0000  
                                          _EUSART1_ErrorGet 0000  
                                                   _SP1BRGH 011C  
                                                   _SP1BRGL 011B  
                                                   _OSCCON1 088D  
                                                   _OSCCON3 088F  
                                                   _NVMADRH 081B  
                                                   _NVMADRL 081A  
                                                   _NVMDATH 081D  
                                                   _OSCTUNE 0892  
                                                   _NVMDATL 081C  
                                                   _NVMCON2 081F  
                                                   _SLRCONA 1F3B  
                                                   _SLRCONB 1F46  
                                                   _SLRCONC 1F51  
                                                   _SLRCOND 1F5C  
                                                   _SLRCONE 1F67  
                                                   _NVM_ISR 16DE  
                                                   _VOLTAGE 0061  
                                            _binary_pattern 1030  
                                      _EUSART1_Deinitialize 0000  
                                    _EUSART1_TransmitEnable 0000  
                                EUSART1_ReceiveISR@regValue 0070  
                                                   _Speed_A 00E4  
                                                   _Speed_B 00E3  
                                                   ___awdiv 0B87  
                                                   ___awmod 0A85  
                                          _SOFT_START_Delay 006F  
                                                   ___lwdiv 095E  
                                                   ___lwmod 08F6  
                                                 ?_vfprintf 002F  
                                             _DebounceDelay 00D9  
                                                   __ptext1 1761  
                                                   __ptext2 173D  
                                                   __ptext3 0998  
                                                   __ptext4 0800  
                                                   __ptext5 16E1  
                                                   __ptext6 170B  
                                                   __ptext7 16EB  
                                                   __ptext8 0928  
                                                   __ptext9 1722  
  __end_of_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT 0A34  
        ??_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT 0049  
         ?_control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT 0070  
          _control_led_and_7segment_FOR_MODE_CONTROL_OUTPUT 09E4  
                                          ___awmod@dividend 0026  
                                        _EUSART1_Initialize 0928  
                                  ??_PIN_MANAGER_Initialize 00ED  
                                                 _FREQUENCY 006C  
                                   _INT_SetInterruptHandler 16EB  
                             _shortPressDetectedPowerSwitch 00D5  
                                                   _sprintf 082A  
                                                   clrloop0 07F5  
                                        _EUSART1_ReceiveISR 0AD7  
                                    __end_of_binary_pattern 1054  
                                      end_of_initialization 0451  
                                       ?_EUSART1_Initialize 0070  
                                                   fputc@fp 0075  
                               _EUSART1_OverrunErrorHandler 00C6  
                                                 _OFF_Delay 0068  
                                       ?_EUSART1_ReceiveISR 0070  
                               __end_of_EUSART1_TransmitISR 17C3  
                                         __end_of_vfpfcnvrt 0D76  
 __end_of_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER 0A85  
       ??_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER 0072  
        ?_control_led_and_7segment_FOR_MODE_STOP_CONTROLLER 0070  
         _control_led_and_7segment_FOR_MODE_STOP_CONTROLLER 0A34  
                                          vfpfcnvrt@convarg 002A  
                                                ??_vfprintf 0034  
                                      ??_EUSART1_Initialize 00EF  
                                                 _PORTAbits 000C  
                                                 _PORTBbits 000D  
                                                 _PORTCbits 000E  
                                                 _PORTEbits 0010  
                                      ??_EUSART1_ReceiveISR 0070  
                                                _updateLEDs 074A  
__end_of_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY 074A  
      ??_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY 0028  
       ?_control_led_and_7segment_FOR_MODE_SOFT_START_DELAY 0070  
        _control_led_and_7segment_FOR_MODE_SOFT_START_DELAY 065B  
                                             ?_setup_timer0 0070  
                                                 _TRISAbits 0012  
                                                _updateMode 0569  
                                                 _TRISBbits 0013  
                                                 _TRISCbits 0014  
                                                 _TRISDbits 0015  
                                                 _TRISEbits 0016  
                                                 _STOP_FREQ 00C4  
   __end_of_control_led_and_7segment_FOR_MODE_SPEED_CONTROL 08F6  
         ??_control_led_and_7segment_FOR_MODE_SPEED_CONTROL 0070  
          ?_control_led_and_7segment_FOR_MODE_SPEED_CONTROL 0070  
           _control_led_and_7segment_FOR_MODE_SPEED_CONTROL 08C8  
                                       EUSART1_Write@txData 0070  
                        _EUSART1_TxCompleteInterruptHandler 00CC  
                                           _segment_pattern 005E  
                                              _EUSART1_Read 0000  
                              __end_of_INTERRUPT_Initialize 1716  
                                               vfpfcnvrt@ap 0023  
                                               vfpfcnvrt@cp 0028  
                                               vfpfcnvrt@fp 0020  
                                            __end_of___wmul 1800  
                                 ??_INT_SetInterruptHandler 00EF  
        __end_of_control_led_and_7segment_FOR_MODE_ON_DELAY 1000  
              ??_control_led_and_7segment_FOR_MODE_ON_DELAY 0020  
               ?_control_led_and_7segment_FOR_MODE_ON_DELAY 0070  
                _control_led_and_7segment_FOR_MODE_ON_DELAY 0F23  
                                            ??_setup_timer0 00ED  
                                       start_initialization 03E1  
                                                _systemData 0254  
                                               __end_of_ISR 03DF  
                                               putch@txData 0072  
                                     __end_of_EUSART1_Write 082A  
                                            _OFF_Delay_Flag 00DF  
                                               vfprintf@fmt 0031  
                                                  ??___wmul 0074  
                                               __pdataBANK0 0068  
                                               __pdataBANK1 00EA  
                                                 _Step_Size 00B6  
                                            _eusart1RxCount 0062  
                                               __pbssBIGRAM 2728  
                                               ?_updateLEDs 0070  
                                               __pbssCOMMON 007C  
                                                 ___latbits 0003  
                                               ?_updateMode 0070  
                                             __pcstackBANK0 0020  
                                             __pcstackBANK1 00ED  
                                                  ?_NVM_ISR 0070  
                                             _UARTFlagDelay 00AC  
                                  _pressDurationPowerSwitch 00AE  
                                              _currentStage 005C  
       __end_of_control_led_and_7segment_FOR_MODE_FREQUENCY 0569  
             ??_control_led_and_7segment_FOR_MODE_FREQUENCY 0020  
              ?_control_led_and_7segment_FOR_MODE_FREQUENCY 0070  
               _control_led_and_7segment_FOR_MODE_FREQUENCY 0455  
                                                 __pnvBANK2 016C  
                                          ___lwdiv@dividend 0072  
                                    _PIN_MANAGER_Initialize 0998  
                                                 _digits_10 01BE  
                                                 _digits_11 01B4  
                                                 _digits_12 01AA  
                                                 _digits_13 024A  
                                                 _digits_14 0240  
                                                 _digits_15 01A0  
       __end_of_control_led_and_7segment_FOR_MODE_OFF_DELAY 0F23  
             ??_control_led_and_7segment_FOR_MODE_OFF_DELAY 0020  
              ?_control_led_and_7segment_FOR_MODE_OFF_DELAY 0070  
               _control_led_and_7segment_FOR_MODE_OFF_DELAY 0E46  
                                                  ?___awdiv 0076  
                                                  ?___awmod 0024  
                                                  ?___lwdiv 0070  
                                                  ?___lwmod 0077  
                         _StartDebounceDelayTimer_Decrement 00D6  
                                                  _BAUD1CON 011F  
                                         ??_NVM_StatusClear 00ED  
    __end_of_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR 08A0  
          ??_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR 0070  
           ?_control_led_and_7segment_FOR_MODE_PHOTO_SENSOR 0070  
            _control_led_and_7segment_FOR_MODE_PHOTO_SENSOR 0878  
       __end_of_control_led_and_7segment_FOR_MODE_SENSOR_II 08C8  
             ??_control_led_and_7segment_FOR_MODE_SENSOR_II 0070  
              ?_control_led_and_7segment_FOR_MODE_SENSOR_II 0070  
               _control_led_and_7segment_FOR_MODE_SENSOR_II 08A0  
                                                  _ADC_Init 174D  
       __end_of_control_led_and_7segment_FOR_MODE_SPEED_A_B 0C44  
             ??_control_led_and_7segment_FOR_MODE_SPEED_A_B 0070  
              ?_control_led_and_7segment_FOR_MODE_SPEED_A_B 0070  
               _control_led_and_7segment_FOR_MODE_SPEED_A_B 0BE3  
                                         _EUSART1_IsRxReady 0000  
                                         _EUSART1_IsTxReady 16F9  
                                          ___lwdiv@quotient 0074  
                                                  ?_sprintf 0037  
                                        ?_EUSART1_IsTxReady 0070  
                                         ??_UART_Write_Text 0074  
                                      _INTERRUPT_Initialize 170B  
                                          _CLOCK_Initialize 1702  
                                         _DebounceCompleted 0059  
                                            ___wmul@product 0074  
                                                  _LATBbits 0019  
                                                  _LATCbits 001A  
                                                  _LATDbits 001B  
                                                  _LATEbits 001C  
                        _EUSART1_RxCompleteCallbackRegister 0000  
                                       ??_EUSART1_IsTxReady 0070  
                                                 clear_ram0 07F4  
                                                  _PIE0bits 0716  
                                                  _PIE3bits 0719  
                                                  _PIE7bits 071D  
                                         _Potentiometer_VTG 00C2  
                                      __end_of_setup_timer0 1777  
                                                  _PIR0bits 070C  
                                                  _PIR3bits 070F  
                                                  _PIR7bits 0713  
                                                  _RX1DTPPS 1ECB  
                                                  _UARTFlag 0057  
                                                  _ON_Delay 006A  
                                                 _vfpfcnvrt 0CA8  
                                                _ADCON0bits 009D  
                                         ___wmul@multiplier 0070  
                                 __end_of_EUSART1_IsTxReady 1702  
                                                  _WPUAbits 1F39  
                                                  _WPUBbits 1F44  
                                                  _WPUCbits 1F4F  
                                                  _WPUEbits 1F65  
                                                vfpfcnvrt@c 002E  
                                     ?_INTERRUPT_Initialize 0070  
                                       _EUSART1_AutoBaudSet 0000  
    __end_of_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I 0878  
          ??_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I 0070  
           ?_control_led_and_7segment_FOR_MODE_NPN_SENSOR_I 0070  
            _control_led_and_7segment_FOR_MODE_NPN_SENSOR_I 0850  
                                   _EUSART1_TransmitDisable 0000  
                                                vfprintf@ap 0033  
                                                vfprintf@fp 002F  
                                   _StartDebounceDelayTimer 00D7  
                                                ?_vfpfcnvrt 0020  
                                            _StartSoftDelay 00E0  
                                                _ANSELAbits 1F38  
                                                _ANSELBbits 1F43  
                                                _ANSELCbits 1F4E  
                                                _ANSELEbits 1F64  
                                               _currentMode 005B  
                                                sprintf@fmt 0039  
               __end_of_EUSART1_DefaultFramingErrorCallback 0004  
                     ??_EUSART1_DefaultFramingErrorCallback 0070  
                      ?_EUSART1_DefaultFramingErrorCallback 0070  
                       _EUSART1_DefaultFramingErrorCallback 0003  
                                                _T0CON0bits 059E  
                                                _T0CON1bits 059F  
  __end_of_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT 17A8  
        ??_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT 0070  
         ?_control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT 0070  
          _control_led_and_7segment_FOR_MODE_CURRENT_OUTPUT 178F  
                                           ___lwdiv@divisor 0070  
                                                  _digits_1 0162  
                                                  _digits_2 0158  
                                                  _digits_3 014E  
                                                  _digits_4 0144  
                                                  _digits_5 013A  
                                                  _digits_6 0130  
                                                  _digits_7 01DC  
                                                  _digits_8 01D2  
                                                  _digits_9 01C8  
                                           ___lwdiv@counter 0076  
                                                  __ptext10 1716  
                                                  __ptext11 1702  
                                                  __ptext20 065B  
                                                  __ptext12 174D  
                                                  __ptext21 0A85  
                                                  __ptext30 09E4  
                                                  __ptext22 0B87  
                                                  __ptext14 0569  
                                                  __ptext31 082A  
                                                  __ptext23 08A0  
                                                  __ptext15 074A  
                                                  __ptext40 0807  
                                                  __ptext32 17C3  
                                                  __ptext24 0878  
                                                  __ptext16 0D76  
                                                  __ptext41 17E1  
                                                  __ptext33 0CA8  
                                                  __ptext25 0F23  
                                                  __ptext17 0A34  
                                                  __ptext42 16DE  
                                                  __ptext34 0B2B  
                                                  __ptext26 0E46  
                                                  __ptext18 08C8  
                                                  __ptext43 17A8  
                                                  __ptext35 172E  
                                                  __ptext27 0850  
                                                  __ptext19 0BE3  
                                                  __ptext44 0AD7  
                                                  __ptext36 16F9  
                                                  __ptext28 0455  
                                                  __ptext45 16E7  
                                                  __ptext37 08F6  
                                                  __ptext29 178F  
                                                  __ptext46 0003  
                                                  __ptext38 095E  
                                                  __ptext39 1777  
                                       UART_Write_Text@text 0072  
                                                _RC1STAbits 011D  
                                            _NVM_Initialize 0800  
                                            _Control_Output 00E2  
                                                  int$flags 007E  
                                                  _vfprintf 17C3  
                               _EUSART1_FramingErrorHandler 00C8  
                                              _NPN_Sensor_1 00E7  
                                              _NPN_Sensor_2 00E6  
                                 _pressDurationSimultaneous 00B2  
                                        _soft_start_voltage 00BE  
                                              ??_updateLEDs 004B  
                                                _INTCONbits 000B  
                                               _NVMCON1bits 081E  
                                              ??_updateMode 004D  
                                      _INT_InterruptHandler 00D0  
                                    ??_INTERRUPT_Initialize 00EF  
                                              _temp_voltage 00BC  
                                         _currentStage1Mode 005A  
                                             _uartsendcount 00B0  
                                         _currentStage2Mode 00EB  
                                             _ON_Delay_Flag 005F  
                                                  intlevel1 0000  
                                                 sprintf@ap 003D  
                                          ___lwmod@dividend 0079  
                                   ?_PIN_MANAGER_Initialize 0070  
                                     _settingSwitchReleased 00EA  
                                    __end_of_NVM_Initialize 0807  
                                _EUSART1_RxInterruptHandler 016C  
                                           _NVM_StatusClear 16E1  
                                        __end_of_updateLEDs 07F4  
                                              _NVM_Callback 00D2  
                                        __end_of_updateMode 065B  
                                  ?_INT_SetInterruptHandler 00ED  
                                               ??_vfpfcnvrt 0024  
                                        _eusart1RxLastError 00CE  
                                  __end_of_CLOCK_Initialize 170B  
                                             __pstringtext1 1000  
                                             __pstringtext2 1030  
                                             __pstringtext3 1800  
                                             __pstringtext4 0000  
                                           _UART_Write_Text 1777  
                                                  sprintf@f 003E  
                                                  sprintf@s 0037  
                                            _display_digits 00EC  
                                           ___lwmod@divisor 0077  
                                           ___lwmod@counter 007B  
               __end_of_EUSART1_DefaultOverrunErrorCallback 16EB  
                     ??_EUSART1_DefaultOverrunErrorCallback 0070  
                      ?_EUSART1_DefaultOverrunErrorCallback 0070  
                       _EUSART1_DefaultOverrunErrorCallback 16E7  
                                              _setup_timer0 1761  
                                                _TX1STAbits 011E  
                            __end_of_PIN_MANAGER_Initialize 09E4  
         __end_of_control_led_and_7segment_FOR_MODE_VOLTAGE 0E46  
               ??_control_led_and_7segment_FOR_MODE_VOLTAGE 0028  
                ?_control_led_and_7segment_FOR_MODE_VOLTAGE 0070  
                 _control_led_and_7segment_FOR_MODE_VOLTAGE 0D76  
                                           ?_NVM_Initialize 0070  
